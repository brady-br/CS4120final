<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T01:57+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Just-In-Time Analytics on Large File Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Howie</forename><surname>Huang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">George Washington University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nan</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">George Washington University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">George Washington University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gautam</forename><surname>Das</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University of Texas</orgName>
								<address>
									<settlement>Arlington</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><forename type="middle">S</forename><surname>Szalay</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Johns Hopkins University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Just-In-Time Analytics on Large File Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>As file systems reach the petabytes scale, users and administrators are increasingly interested in acquiring high-level analytical information for file management and analysis. Two particularly important tasks are the processing of aggregate and top-k queries which, unfortunately , cannot be quickly answered by hierarchical file systems such as ext3 and NTFS. Existing pre-processing based solutions, e.g., file system crawling and index building, consume a significant amount of time and space (for generating and maintaining the indexes) which in many cases cannot be justified by the infrequent usage of such solutions. In this paper, we advocate that user interests can often be sufficiently satisfied by approximate-i.e., statistically accurate-answers. We develop Glance, a just-in-time sampling-based system which, after consuming a small number of disk accesses, is capable of producing extremely accurate answers for a broad class of aggregate and top-k queries over a file system without the requirement of any prior knowledge. We use a number of real-world file systems to demonstrate the efficiency , accuracy and scalability of Glance.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Today a file system with billions of files, millions of directories and petabytes of storage is no longer an exception <ref type="bibr" target="#b28">[29]</ref>. As file systems grow, users and administrators are increasingly keen to perform complex queries <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b45">47]</ref>, such as "How many files have been updated since ten days ago?", and "Which are the top five largest files that belong to John?". The first is an example of aggregate queries which provide a high-level summary of all or part of the file system, while the second is topk queries which locate the k files and/or directories that have the highest score according to a scoring function. Fast processing of aggregate and top-k queries are often needed by applications that require just-in-time analytics over large file systems, such as data management, archiving, enterprise surveillance, etc. The just-in-time requirement is defined by two properties: (1) file-system analytics must be completed within a short amount of time, and (2) the analyzer holds no prior knowledge (e.g., pre-processing results) of the file system being analyzed. For example, in order for a librarian to determine how to build an image archive from an external storage media (e.g., a Blue-ray disc), he/she may have to first estimate the total size of picture files stored on the external media -the librarian needs to complete data analytics quickly, over an alien file system that has never been seen before.</p><p>Unfortunately, hierarchical file systems (e.g., ext3 and NTFS) are not well equipped for the task of just-in-time analytics <ref type="bibr" target="#b41">[43]</ref>. The deficiency is in general due to the lack of a global view (i.e., high-level statistics) of metadata information (e.g., size, creation, access and modification time). For efficiency concerns, a hierarchical file system is usually designed to limit the update of metadata information to individual files and/or the immediately preceding directories, leading to localized views. For example, while the last modification time of an individual file is easily retrievable, the last modification time of files that belong to user John is difficult to obtain because such metadata information is not available at the global level.</p><p>Currently, there are two approaches for generating high-level statistics from a hierarchical file system, and thereby answering aggregate and top-k queries: (1) scanning the file system upon the arrival of each query, e.g., the find command in Linux, which is inefficient for large file systems. While storage capacity increases ∼60% per year, storage throughput and latency have much slower improvements, thus the amount of time required to scan an off-the-shelf hard drive or external storage media has increased significantly over time to become infeasible for just-in-time analytics. The above-mentioned imagearchiving application is a typical example, as it is usually impossible to completely scan an alien Blue-ray disc within a short amount of time. (2) utilizing pre-built indexes which are regularly updated <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b39">40]</ref>. Many desktop search products, e.g., Google Desktop <ref type="bibr" target="#b22">[23]</ref> and Beagle <ref type="bibr" target="#b4">[5]</ref>, belong to this category. While this approach is capable of fast query processing once the (slow) index building process is complete, it may not be suitable or applicable to many just-in-time applications:</p><p>• Index building can be unrealistic for many applications that require just-in-time analytics over an alien file system. An example is enterprise surveillance <ref type="bibr" target="#b34">[35]</ref>, where portable machines and storage devices must be quickly examined before being allowed to join the enterprise network.</p><p>• Even if index can be built up-front, its significant cost may not be justifiable if the index is not frequently used afterwards. Unfortunately, this is common for some large file systems, e.g., storage archives or scratch data for scientific applications rarely require the global search function offered by the index, and may only need analytical queries to be answered infrequently (e.g., once every few days). In this case, building and updating an index is often an overkill given the high amortized cost.</p><p>• There are also other limitations of maintaining an index. For example, prior work <ref type="bibr" target="#b44">[46]</ref> has shown that even after a file has been completely removed (from both the file system and the index), the (former) existence of this file can still be inferred from the index structure. Thus, a file system owner may choose to avoid building an index for privacy concerns.</p><p>To enable just-in-time analytics, one must be able to perform an on-the-fly processing of analytical queries, over traditional file systems that normally have insufficient metadata to support such complex queries. We achieve this goal by striking a balance between query answer accuracy and cost -providing approximate (i.e., statistically accurate) answers which, with a high confidence level, reside within a close distance from the precise answer. For example, when a user wants to count the number of files in a directory (and all of its subdirectories), an approximate answer of 105, 000 or 95, 000, compared with the real answer of 100, 000, makes little difference to the high-level knowledge desired by the user. In general, the higher cost a user is willing to pay for answering a query, more accurate the answer can be.</p><p>To this end, we design and develop Glance, a just-intime query processing system which produces accurate query answers based on a small number of samples (files or folders) that can be collected from a very large file system with a few disk accesses. Glance is file-system agnostic, i.e., it can be applied instantly over any new file system and work seamlessly with the tree structure of the system. Glance removes the need of disk crawling and index building, providing just-in-time analytics without a priori knowledge or pre-processing of the file systems. This is desirable in situations when the metadata indexes are not available, a query is not supported by the index, or query processing is only scarcely needed.</p><p>Using sampling for processing analytical queries is by no means new. Studies on sampling flat files, hashed files, and files generated by a relational database system (e.g., a B+-tree file) started more than 20 years ago -see survey [39] -and were followed by a myriad of work on database sampling for approximate query processing in decision support systems -see tutorials <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b21">22]</ref>. A wide variety of sampling techniques, e.g., simple random sampling <ref type="bibr" target="#b37">[38]</ref>, stratified <ref type="bibr" target="#b9">[10]</ref>, reservoir <ref type="bibr" target="#b46">[48]</ref> and cluster sampling <ref type="bibr" target="#b10">[11]</ref>, have been used. Nonetheless, to the best of our knowledge, there has been no existing work on using sampling to support efficient aggregate and top-k query processing over a large hierarchical file system, i.e., one with numerous files organized in a complex folder structure (tree-like or directed acyclic graph).</p><p>Our main contributions are two-fold: (1) Glance consists of two algorithms, FS Agg and FS TopK, for the approximate processing of aggregate and top-k queries, respectively. For just-in-time analytics over very large file systems, we develop a random descent technique for unbiased aggregate estimations and a pruning-based technique for top-k query processing. (2) We study the specific characteristics of real-world file systems and derive the corresponding enhancements to our proposed techniques. In particular, according to the distribution of files in real-world file systems, we propose a high-level crawling technique to significantly reduce the error of query processing. Based on an analysis of accuracy and efficiency for the descent process, we propose a breadthfirst implementation to reduce both error and overhead. We evaluate Glance over both real-world (e.g., NTFS, NFS, Plan 9) and synthetic file systems and find very promising results -e.g., 90% accuracy at 20% cost. Furthermore, we demonstrate that Glance is scalable to one billion of files and millions of directories.</p><p>We would like to note, however, that Glance also has its limitations -there are certain ill-formed file systems that malicious users could potentially construct so that Glance cannot effectively handle. While we plan to address security applications in future work, our argument of Glance being a practical system for just-in-time analytics is based upon the fact that these systems rarely exist in practice. For example, Glance cannot accurately answer aggregate queries if a large number of folders are hundreds of levels below root. Nonetheless, realworld file systems would have far smaller depth, making such a scenario unlikely to occur. Similarly, Glance cannot efficiently handle cases where all files have extremely close scores. This, however, is contradicted by the heavy-tailed distribution observed on most meta-data attributes in real-world file systems <ref type="bibr" target="#b1">[2]</ref>.</p><p>The rest of the paper is organized as follows. Section 2 presents the problem definition. In Section 3 and 4, we describe FS Agg and FS TopK for processing aggregate and top-k queries, respectively. The evaluation results are shown in Section 5. Section 6 reviews the related work, followed by the conclusion in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Statement</head><p>We now define the analytical queries, i.e., aggregate and top-k ones, which we focus on in this paper. The examples we list below will be used in the experimental evaluation for testing the performance of Glance.</p><p>Aggregate Queries: In general, aggregate queries are of the form SELECT AGGR(T) FROM D WHERE Selection Condition, where D is a file system or storage device, T is the target piece of information, which may be a metadata attribute (e.g., size, timestamp) of a file or a directory, AGGR is the aggregate function (e.g., COUNT, SUM, AVG), and Selection Condition specifies which files and/or directories are of interest. First, consider a system administrator who is interested in the total number of files in the system. In this case, the aggregate query that the administrator would like to issue can be expressed as:</p><formula xml:id="formula_0">Q1: SELECT COUNT(files) FROM filesystem;</formula><p>Further, the administrator may be interested in knowing the total size of various types of document files, e.g., If the administrator wants to compute the average size of all exe files from user John, the query becomes: Aggregate queries can also be more complex -the following example shows a nested aggregate query for scientific computing applications. Suppose that each directory is corresponding to a sensor and contains a number of files corresponding to the sensor readings received at different time. A physicist may want to count the number of sensors that has received at least one reading during the last 12 hours, i.e., Another example is to find the ten most recently created directories that were modified yesterday, i.e., Q6: SELECT TOP 10 directories FROM filesystem WHERE directory.mtime BETWEEN (now − 24 hours) AND now ORDER BY directory.ctime DESCENDING;</p><p>We note that, to approximately answer a top-k query, one shall return a list of k items that share a large percentage of common ones with the precise top-k list.</p><p>Current operating systems and storage devices do not provide APIs which directly support the above-defined aggregate and top-k queries. The objective of just-intime analytics can be stated as follows.</p><p>Problem Statement (Objective of Just-In-Time Analytics over File Systems): To enable the efficient approximate processing of aggregate and top-k queries over a file system by using the file/directory access APIs provided by the operating system.</p><p>To complete the problem statement, we need to determine how to measure the efficiency and accuracy of query processing. For the purpose of this paper, we measure the query efficiency in two metrics: 1) query time, i.e., the runtime of query processing, and 2) query cost, i.e., the ratio of the number of directories visited by Glance to that of crawling the file system (i.e., the total number of directories in the system). We assume that one disk access is required for reading a new directory. Thus, the query cost approximates the number of disk accesses required by Glance. The two metrics, query time and cost, are positively correlated -the higher the query cost is, more directories the algorithm has to sample, leading to a longer runtime.</p><p>While the efficiency measures are generic to both aggregate and top-k query processing, the measures for query accuracy are different. For aggregate queries, we define the query accuracy as the relative error of the approximate answer apx compared with the precise one ans -i.e., |apx − ans|/|ans|. For top-k queries, we define the accuracy as the percentage of items that are common in the approximate and precise top-k lists. The accuracy level required for approximate query processing depends on the intended application. For example, while scientific computing usually requires a small error, the above-mentioned surveillance application may simply need a ball-park figure to determine whether there is a significant amount of sensitive files in the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Aggregate Query Processing</head><p>In this section, we develop FS Agg, our algorithm for processing aggregate queries. We first describe FS Agg Basic, a vanilla algorithm which illustrates our main idea of aggregate estimation without bias through a random descent process within a file system. Then, we describe two ideas to make the vanilla algorithm practical over very large file systems: high-level crawling leverages the special properties of a file system to reduce the standard error of estimation, and breadth-first implementation improves both accuracy and efficiency of query processing. Finally, we combine all three techniques to produce FS Agg.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">FS Agg Basic</head><p>A Random Descent Process: In general, the folder organization of a file system can be considered as a tree or a directed acyclic graph (DAG), depending on whether the file system allows hard links to the same file. The random descent process we are about to discuss can be applied to both cases with little change. For the ease of understanding, we first focus on the case of tree-like folder structure, and then discuss a simple extension to DAG at the end of this subsection. <ref type="figure">Figure 1</ref>: Random descents on a tree-like structure <ref type="figure">Figure 1</ref> depicts a tree structure with root corresponding to the root directory of a file system, which we shall use as a running example throughout the paper. One can see from the figure that there are two types of nodes in the tree: folders (directories) and files. A file is always a leaf node. The children of a folder consist of all subfolders and files in the folder. We refer to the branches coming out of a folder node as subfolder-branches and file-branches, respectively, according to their destination type. We refer to a folder with no subfolder-branches as a leaf-folder. Note that this differs from a leaf in the tree, which can be either a file or a folder containing neither subfolder nor file. The random descent process starts from the root and ends at a leaf-folder. At each node, we choose a subfolder branch of the node uniformly at random for further exploration. During the descent process, we evaluate all file branches encountered at each node along the path, and generate an aggregate estimation based on these file branches.</p><p>To make the idea more concrete, consider an example of estimating the COUNT of all files in the system. At the beginning of random descent, we access the root to obtain the number of its file-and subfolder-branches f 0 and s 0 , respectively, and record them as our evaluation for the root. Then, we randomly choose a subfolderbranch for further descent, and repeat this process until we arrive at a folder with no subfolder. Suppose that the numbers we recorded during such a descent process are f 0 , s 0 , f 1 , s 1 , . . . , f h , s h , where s h = 0 because each descent ends at a leaf-folder. We estimate the COUNT of all files asñ</p><formula xml:id="formula_1">as˜asñ = h i=0   f i · i−1 j=0 s j   ,<label>(1)</label></formula><p>where i−1 j=0 s j is assumed to be 1 when i = 0. Two examples of such a random descent process are marked in <ref type="figure">Figure 1</ref> as red solid and blue dotted lines, respectively. The solid descent produces f 0 , f 1 , f 2 = 2, 2, 2 and s 0 , s 1 , s 2 = 4, 1, 0, leading to an estimation of 2 + 8 + 8 = 18. The dotted one produces f 0 , f 1 , f 2 = 2, 0, 1 and s 0 , s 1 , s 2 = 4, 2, 0, leading to an estimation of 2 + 0 + 8 = 10. The random descent process can be repeated multiple times (by restarting from the root) to produce a more accurate result (by taking the average of estimations generated by all descents). Unbiasedness: Somewhat surprisingly, the estimation produced by each random descent process is completely unbiased -i.e., the expected value of the estimation is exactly equal to the total number of files in the system. To understand why, consider the total number of files at the i-th level (with root being Level 0) of the tree (e.g., Files 1 and 2 in <ref type="figure">Figure 1</ref> are at Level 3), denoted by F i . According to the definition of a tree, each i-level file belongs to one and only one folder at Level i − 1. For each (i − 1)-level folder v i−1 , let |v i−1 | and p(v i−1 ) be the number of (i-level) files in v i−1 and the probability for v i−1 to be reached in the random descent process, respectively. One can see that</p><formula xml:id="formula_2">|v i−1 |/p(v i−1 ) is an unbi- ased estimation for F (i) because E |v i−1 | p(v i−1 ) = vi−1 p(v i−1 ) · |v i−1 | p(v i−1 ) = F i . (2)</formula><p>With our design of the random descent process, the prob-</p><formula xml:id="formula_3">ability p(v i−1 ) is p(v i−1 ) = i−2 j=0 1 s j (v i−1 ) ,<label>(3)</label></formula><p>where s j (v i−1 ) is the number of subfolder-branches for each node encountered on the path from the root to v i−1 . Our estimation in <ref type="formula" target="#formula_1">(1)</ref> is essentially the sum of the unbiased estimations in (2) for all i ∈ <ref type="bibr">[1, m]</ref>, where m is the maximum depth of a file. Thus, the estimation generated by the random descent is unbiased.</p><p>Processing of Aggregate Queries: While the above example is for estimating the COUNT of all files, the same random descent process can be used to process queries with other aggregate functions (e.g., SUM, AVG), with selection conditions (e.g., COUNT all files with extension '.JPG'), and in file systems with a DAG instead of tree structure. We now discuss these extensions. In particular, we shall show the only change required for all these extensions is on the computation of f i . SUM: For the COUNT query, we set f i to the number of files in a folder. To process a SUM query over a file metadata attribute (e.g., file size), we simply set f i as the SUM of such an attribute over all files in the folder (e.g., total size of all files). In the running example, consider the estimation of SUM of numbers shown on all files in <ref type="figure">Figure 1</ref>. The solid and dotted random walks will return f 0 , f 1 , f 2 = 15, 7, 3 and 15, 0, 5, respectively, leading to the same estimation of 55. The unbiasedness of such an estimation follows in analogy from the COUNT case.</p><p>AVG: A simple way to process an AVG query is to estimate the corresponding SUM and COUNT respectively, and then compute AVG as SUM/COUNT. Note, however, that such an estimation is no longer unbiased, because the division of two unbiased estimations is not necessarily unbiased. While an unbiased AVG estimation may indeed be desired for certain applications, we have proved a negative result that it is impossible to answer an AVG query without bias unless one accesses the file system for almost as many as times as crawling the file system. We omit the detailed proof here due to the space limitation. Nonetheless, for practical purposes, estimating AVG as SUM/COUNT is in general very accurate, as we shall show in the experimental results.</p><p>Selection Conditions: To process a query with selection conditions, the only change required is, again, on the computation of f i . Instead of evaluating f i over all file branches of a folder, to answer a conditional query, we only evaluate f i over the files that satisfy the selection conditions. For example, to answer a query SELECT COUNT(*) FROM Files WHERE file.extension = 'JPG', we should set f i as the number of files under the current folder with extension JPG. Similarly, to answer "SUM(f ile size) WHERE owner = John", we should set f i to the SUM of sizes for all files (under the current folder) which belong to John. Due to the computation of f i for conditional queries, the descent process may be terminated early to further reduce the cost of sampling.</p><p>Again consider the query condition of (owner = John). If the random descent reaches a folder which cannot be accessed by John, then it can terminate immediately because any deeper descent can only return f i = 0, leading to no change in the estimation. Extension to DAG Structure: Finally, for a file system featuring a DAG (instead of tree) structure, we again only need to change the computation of f i . Almost all DAGenabled file systems (e.g., ext2, ext3, NTFS) provide a reference count for each file which indicates the number of links in the DAG that point to the file 1 . For a file with r links, if we use the original algorithm discussed above, then the file will be counted r times in the estimation. Thus, we should discount its impact on each estimation with a factor of 1/r. For example, if the query being processed is the COUNT of all files, then we should compute</p><formula xml:id="formula_4">f i = f ∈F (1/r(f )),</formula><p>where F is the set of files under the current folder, and r(f ) is the number of links to each file f . Similarly, to estimate the SUM of all file sizes, we should compute</p><formula xml:id="formula_5">f i = f ∈F (size(f )/r(f ))</formula><p>, where size(f ) is the file size of file f . One can see that with this discount factor, we maintain an unbiased estimation over a DAG file system structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Disadvantages of FS Agg Basic</head><p>While the estimations generated by FS Agg Basic is unbiased for SUM and COUNT queries, it is important to understand that the error of an estimation comes from not only bias but also variance (i.e., standard error). A problem of FS Agg Basic is that it may produce a high estimation variance for file systems with an undesired distribution of files, as illustrated by the following theorem: Theorem 1. The variance of estimation produced by a random descent on the number of h-level files F h is</p><formula xml:id="formula_6">σ(h) 2 =   v∈L h−1 (|v| 2 · h−2 j=0 s j (v))   − F 2 h .<label>(4)</label></formula><p>where L h−1 is the set of all folders at Level h − 1, |v| is the number of files in a folder v, and s j (v) is the number of subfolders for the Level-j node on the path from the root to v.</p><p>Proof. Consider an (h − 1)-level folder v. If the random descent reaches v, then the estimation it produces for the number of h-level files is |v|/p(v), where p(v) is the probability for the random descent to reach v. Let δ(h) be the probability that a random descent terminates early before reaching a Level-(h − 1) folder. Since each random descent reaches at most one Level-(h−1) folder, the estimation variance for F h is</p><formula xml:id="formula_7">σ(h) 2 = δ(h) · F 2 h + v∈L h−1 p(v) · ( |v| p(v) − F h ) 2 (5) = δ(h) · F 2 h + v∈L h−1 |v| 2 p(v) − 2|v|F h + p(v) · F 2 h ) (6) =   v∈L h−1 |v| 2 p(v)   − F 2 h<label>(7)</label></formula><p>Since p(v) = 1/ h−2 j=0 s j (v), the theorem is proved.</p><p>One can see from the theorem that the existence of two types of folders may lead to an extremely high estimation variance: One type is high-level leaf-folders (i.e., "shallow" folders with no subfolders). Folder c in <ref type="figure">Fig- ure 1</ref> is an example. To understand why such folders lead to a high variance, consider <ref type="formula" target="#formula_7">(7)</ref> in the proof of Theorem 1. Note that for a large h, a high-level leaf-folder (above Level-(h − 1)) reduces v∈L h−1 p(v) because once a random descent reaches such a folder, it will not continue to retrieve any file in Level-h (e.g., Folder c in <ref type="figure">Figure 1</ref> stops further descents for h = 3 or 4). As a result, the first item in (7) becomes higher, increasing the estimation variance. For example, after removing Folder c from <ref type="figure">Figure 1</ref>, the estimation variance for the number of files on Level 3 can be reduced from 24 to 9.</p><p>The other type of "ill-conditioned" folders are those deep-level folders which reside at much lower levels than others (i.e., with an extremely large h). An example is Folder j in <ref type="figure">Figure 1</ref>. The key problem arising from such a folder is that the probability for it to selected is usually extremely small, leading to an estimation much larger than the real value if the folder happens to be selected. As shown in Theorem 1, a larger h leads to a higher s j (v), which in turn leads to a higher variance. For example, Folder j in <ref type="figure">Figure 1</ref> has s j (v) = 4 × 2 × 3 × 3 = 72, leading to a estimation variance of 72 − 1 = 71 for the number of files on Level 5 (which has a real value of 1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">FS Agg</head><p>To reduce the estimation variance, we propose high-level crawling and breadth-first descent to address the two above-described problems on estimation variance, highlevel leaf-folders and deep-level folders, respectively. Also, we shall discuss how the variance generated by FS Agg can be estimated in practice, effectively producing a confidence interval for the aggregate query answer.</p><p>High-Level Crawling is designed to eliminate the negative impact of high-level leaf-folders on estimation variance. The main idea of high-level crawling is to access all folders in the highest i levels of the tree -by following all subfolder-branches of folders accessed on or above Level-(i − 1). Then, the final estimation becomes an aggregate of two components: the precise value over the highest i levels and the estimated value (produced by random descents) over files below Level-i. One can see from the design of high-level crawling that now leaf-folders in the first i levels no longer reduce p(v) for folders v below Level-i (and therefore no longer adversely affect the estimation variance). Formally, we have the following theorem 2 which demonstrates the effectiveness of highlevel crawling on reducing the estimation variance:</p><p>Theorem 2. If r 0 out of r folders crawled from the first i levels are leaf-folders, then the estimation variance produced by a random descent for the number of Level-h files F h satisfies</p><formula xml:id="formula_8">σ HLC (h) 2 ≤ (r − r 0 ) · σ 2 h − r 0 · F 2 h r .<label>(8)</label></formula><p>According to this theorem, if we apply high-level crawling over the first level in <ref type="figure">Figure 1</ref>, then the estimation variance for the number of files on Level 3 is at most (3 · 24 − 1 · 36)/4 = 9. Recall from Section 4.2 that the variance of estimation after removing Folder c (the only leaf-folder at the first level) is exactly 9. Thus, the bound in Theorem 2 is tight in this case.</p><p>Breadth-First Descent is designed to bring two advantages over FS Agg Basic: variance reduction and runtime improvement, which we shall explain as follows. Variance Reduction: breadth-first descent starts from the root of the tree. Then, at any level of the tree, it generates a set of folders to access at the next level by randomly selecting from subfolders of all folders it accesses at the currently level. Note that any random selection process would work -as long as we know the probability for a folder to be selected, we can answer aggregate queries without bias in the same way as the original random descent process. For example, to COUNT the number of all files in the system, an unbiased estimation of the total number of files at Level i is the SUM of |v i−1 |/p(v i−1 ) for all Level-(i−1) folders v i−1 accessed by the breadthfirst implementation, where |v i−1 | and p(v i−1 ) are the number of file-branches and the probability of selection for v i−1 , respectively.</p><p>We use the following random selection process in Glance: Consider a folder accessed at the current level which has n 0 subfolders. From these n 0 subfolders, we sample without replacement min(n 0 , max(p sel · n 0 , s min )) ones for access at the next level. Here p sel ∈ (0, 1] (where sel stands for selection) represents the probability of which a subfolder will be selected for sampling, and s min ≥ 1 states the minimum number of subfolders that will be sampled. Both p sel and s min are user-defined parameters, the settings for which we shall further discuss in the experiments section based on characteristics of real-world file systems.</p><p>Compared with the original random descent design, this breadth-first random selection process significantly increases the selection probability for a deep folder. Recall that with the original design, while drilling down one level down the tree, the selection probability can decrease rapidly by a factor of the fan-out (i.e., the number of subfolders) of the current folder. With breadth-first descent, on the other hand, the decrease is limited to at most a factor of 1/p sel , which can be much smaller than the fanout when p sel is reasonably high (e.g., =0.5 as we shall suggest in the experiments section). As a result, the estimation generated by a deep folder becomes much smaller. Formally, we have the following theorem.</p><p>Theorem 3. With breadth-first descent, the variance of estimation on the number of h-level files F h satisfies</p><formula xml:id="formula_9">σ BFS (h) 2 ≤   v∈L h−1 |v| 2 p h−1 sel   − F 2 h .<label>(9)</label></formula><p>One can see from a comparison with Theorem 1 that the factor of s j (v) in the original variance, which can grow to an extremely large value, is now replaced by 1/p h−1 sel which can be better controlled by the Glance system to remain at a low level even when h is large. Runtime Improvement: In the original design of FS Agg Basic, random descent has to be performed multiple times to reduce the estimation variance. Such multiple descents are very likely to access the same folders, especially the high-level ones. While one can leverage the history of hard-drive accesses by caching all historic accesses in memory, such repeated accesses can still take significant CPU time for in-memory look up. The breadth-first design, on the other hand, ensures that each folder is accessed at most once, reducing the runtime overhead of the Glance system.</p><p>Variance Produced by FS Agg: An important issue for applying FS Agg in practice is how one can estimate the error of approximate query answers it produces. Since FS Agg generates unbiased answers for SUM and COUNT queries, the key enabling factor for error estimation here is an accurate computation of the variance. One can see from Theorem 3 that variance depends on the specific structure of the file system, in particular the distribution of selection probability p sel for different folders. Since our sampling-based algorithm does not have a global view of the hierarchical structure, it cannot precisely compute the variance.</p><p>Fortunately, the variance can still be accurately approximated in practice. To understand how, consider first the depth-first descents used in FS Agg Basic. Each descent returns an independent aggregate estimation, while the average for multiple descents becomes the final approximate query answer. Let˜qLet˜ Let˜q 1 , . . . , ˜ q h be the independent estimations and˜qand˜ and˜q = ( ˜ q i )/h be the final answer. A simple method of variance approximation is to compute var(˜ q 1 , . . . , ˜ q h )/h, where var(·) is the variance of independent estimations returned by the descents. Note that if we consider a population consisting of estimations generated by all possible descents, theñ q 1 , . . . , ˜ q h form a sample of the population. As such, the variance computation is approximating the population variance by sample variance, which are asymptotically equal (for an increasing number of descents).</p><p>We conducted extensive experiments described in Section 5 to verify the accuracy of such an approximation. <ref type="figure">Figure 2</ref> shows two examples for counting the total number of files in an NTFS and a Plan 9 file system, respectively. Observe from the figure that the real variance oscillates in the beginning of descents. For example, we observe at least one spike on each file system within the first 100 descents. Such a spike occurs when one descent happens to end with a deep-level file which returns an extremely large estimation, and is very likely to happen with our sampling-based technique. Nonetheless, note that the real variance converges to a small value when the number of descents is sufficiently large (e.g., &gt; 400). Also note that for two file systems after a small number of descents (about 50), the sample variance var(˜ q 1 , . . . , ˜ q h )/h becomes an extremely accurate approximation for the real (population) variance (overlapping shown in <ref type="figure">Figure 2</ref>), even during the spikes. One can thereby derive an accurate confidence interval for the query answer produced by FS Agg Basic. Figure 2: Variance approximation for (a) an NTFS file system and (b) a Plan 9 system. Real and sample variances are overlapped when the number of descents is sufficiently large.</p><p>While FS Agg no longer performs individual depthfirst descents, the idea of using sample variance to ap-proximate population variance still applies. In particular, note that for any given level, say Level-i, of the tree structure, each folder randomly chosen by FS Agg at Level-(i − 1) produces an independent, unbiased, estimation for SUM or COUNT aggregate over all files in Level-i. Thus, the variance for an aggregate query answer over Level-i can be approximated based on the variance of estimations generated by the individual folders. The variance of final SUM or COUNT query answer (over the entire file system) can then be approximated by the SUM of variances for all levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Top-k Query Processing</head><p>Recall that for a given file system, a top-k query is defined by two elements: the scoring function and the selection conditions. Without loss of generality, we consider a top-k query which selects k files (directories) with the highest scores. For the sake of simplicity, we focus on top-k queries without selection conditions, and consider a tree-like structure of the file system. The extensions to top-k queries with selection conditions and file systems with DAG structures follow in analogy from the same extensions for FS Agg.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Main Idea</head><p>A simple way to answer a top-k query is to access every directory to find the k files with the highest scores. The objective of FS TopK is to generate an approximate top-k list with far fewer hard-drive accesses. To do so, FS TopK consists of the following three steps. We shall describe the details of these steps in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">A Lower-Bound Estimation:</head><p>The first step uses a random descent similar to FS Agg to generate an approximate lower bound on the k-th highest score over the entire file system (i.e., among files that satisfy the selection conditions specified in the query). 2. Highest-Score Estimations and Tree Pruning: In the second step, we prune the tree structure of the file system according to the lower bound generated in Step 1. In particular, for each subtree, we use the results of descents to generate an upper-bound estimate on the highest score of all files in the subtree. If the estimation is smaller than the lower bound from Step 1, we remove the subtree from search space because it is unlikely to contain a top-k file.</p><p>Note that in order for such a pruning process to have a low false negative rate -i.e., not to falsely remove a large number of real top-k files, a key assumption we are making here is the "locality" of scores -i.e., files with similar scores are likely to co-locate in the same directory or close by in the tree structure. Intuitively, the files in a directory are likely to have similar creation and update times. In some cases (e.g., images in the "My Pictures" directory, and outputs from a simulation program), the files will likely have similar sizes too. Note that the strength of this locality is heavily dependent on the type of the query and the semantics of the file system on which the query is running. We plan to investigate this issue as part of the future work. 3. Crawling of the Selected Tree: Finally, we crawl the remaining search space -i.e., the selected tree -by accessing every folder in it to locate the top-k files as the query answer. Such an answer is approximate because some real top-k files might exist in the selected subtrees, albeit with a small probability, as we shall show in the experimental results.</p><p>In the running example, consider a query for the top-3 files with the highest numbers shown in <ref type="figure">Figure 1</ref>. Suppose that Step 1 generates a (conservative) lower bound of 8, and the highest scores estimated in Step 2 for subtrees with roots a, c, d, and m are 5, -1 (i.e., no file), 7, and 15, respectively -the details of these estimations will be discussed shortly. Then, the pruning step will remove the subtrees with roots a, c, and d, because their estimated highest scores are lower than the lower bound of 8. Thus, the final crawling step only needs to access the subtree with root of a. In this example, the algorithm would return the files identified as 8, 9, and 10, locating two top-3 files while crawling only a small fraction of the tree. Note that the file with the highest number 11 could not be located here because the pruning step removes the subtree with root of d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Detailed Design</head><p>The design of FS TopK is built upon a hypothesis that the highest scores estimated in Step 2, when compared with the lower bound estimated in Step 1, can prune a large portion of the tree, significantly reducing the overhead of crawling in Step 3. In the following, we first describe the estimations of the lower bound and the highest scores in Steps 1 and 2, and then discuss the validity of the hypothesis for various types of scoring functions.</p><p>Both estimations in the two steps can be made from the order statistics <ref type="bibr" target="#b19">[20]</ref> of files retrieved by the random descent process in FS Agg. The reason is that both estimations are essentially on the order statistics of the population (i.e., all files in the system) -The lower bound in</p><p>Step 1 is the k-th largest order statistics of all files, while the highest scores are on the largest order statistics of the subtrees. We refer readers to <ref type="bibr" target="#b19">[20]</ref> for details of how the order statistics of a sample can be used to estimate that of the population and how accurate such an estimation is.</p><p>While sampling for order statistics is a problem of its own right, for the purpose of this paper, we consider the following simple approach which, according to our experiments over real-world file systems, suffices for answering top-k queries accurately and efficiently over almost all tested systems: For the lower-bound estimation in Step 1, we use the sample quantile as an estimation of the population quantile. For example, to estimate the 100-th largest score of a system with 10, 000 files, we use the largest score of a 100-file sample as an estimation. Our tests show that for many practical scoring functions (which usually have a positive skew, as we shall discuss below), the result serves as a conservative lower bound desired by FS TopK. For the highest-score estimation in Step 2, we simply compute γ · max(sample scores), where γ is a constant correction parameter. The setting of γ captures a tradeoff between the crawling cost and the chances of finding top-k files -when a larger γ is selected, less number of the subtrees are likely be removed.</p><p>We now discuss when the hypothesis of heavy pruning is valid and when it is not. Ideally, two conditions should be satisfied for the hypothesis to hold: (1) If a subtree includes a top-k file, then it should include a (relatively) large number of highly scored files, in order for the sampling process (in Step 2) to capture one (and to thereby produce a highest-score estimation that surpasses the lower bound) with a small query cost. And (2) on the other hand, most subtrees (which do not include a topk file) should have a maximum score significantly lower than the k-th highest score. This way, a large number of subtrees can be pruned to improve the efficiency of top-k query processing. In general, one can easily construct a scoring function that satisfy both or neither of the above two conditions. We focus on a special class of scoring functions: those following a heavy-tailed distributions (i.e., its cumulative distribution function F (·) satisfies lim x→∞ e λx (1 − F (x)) = ∞ for all λ &gt; 0). Existing studies on real-world file system traces showed that many file/directory metadata attributes, which are commonly used as scoring functions, belong to this category <ref type="bibr" target="#b1">[2]</ref>. For example, the distributions of file size, last modified time, creation time, etc., in the entire file system or in a particular subtree are likely to have a heavy tail on one or both extremes of the distribution.</p><p>A key intuition here is that scoring functions defined as such attribute values (e.g., finding the top-k files with the maximum sizes or the latest modified time) usually satisfy both conditions: First, because of the long tail, a subtree which includes a top-k scored file is likely to include many other highly scored files as well. Second, since the vast majority of subtrees have their maximum scores significantly smaller than the top-k lower bound, the pruning process is likely to be effective with such a scoring function.</p><p>We would also like to point out an "opposite" class of scoring functions for which the pruning process is not effective: the inverse of the above scoring functions -e.g., the top-k files with the smallest sizes. Such a scoring function, when used in a top-k query, selects k files from the "crowded" light-tailed side of the distribution. The pruning is less likely to be effective because many other folders may have files with similar scores, violating the second condition stated above. Fortunately, asking for top-k smallest files is not particularly useful in practice, also because of the fact that it selects from the crowded side -e.g., the answer is likely to be a large number of empty files.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Implementation and Evaluation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Implementation</head><p>We implemented Glance, including all three algorithms (FS Agg Basic, FS Agg and FS TopK) in 1,600 lines of C code in Linux. We also built and used a simulator in Matlab to complete a large number of tests within a short period of time. While the implementation was built upon the ext3 file system, the algorithms are generic to any hierarchical file system and the current implementation can be easily ported to other platforms, e.g., Windows and Mac OS. FS Agg Basic has only one parameter: the number of descents. FS Agg has three parameters: the selection probability p sel , the minimum number of selections s min and the number of (highest) levels for crawling h. Our default parameter settings are p sel = 50%, s min = 3, and h = 4. We also tested with other combinations of parameter settings. FS TopK has one additional parameter, the (estimation) enlargement ratio γ. The setting of γ depends on the query to be answered, which shall be explained later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Experiment Setup</head><p>Test Platform: We ran all experiments on Linux machines with Intel Core 2 Duo processor, 4GB RAM, and 1TB Samsung 7200RPM hard drive. Unless otherwise specified, we ran each experiment for five times and reported the averages. Windows File Systems: The Microsoft traces <ref type="bibr" target="#b1">[2]</ref> includes the snapshots of around 63,000 file systems, 80% of which are NTFS and the rest are FAT. To test Glance over file systems with a wide range of sizes, we first selected from the traces two file systems, m100K and m1M (the first 'm' stands for Microsoft trace), which are the largest file systems with less than 100K and 1M files, respectively. Specifically, m100K has 99,985 files and 16,013 directories, and m1M has 998,472 files and 106,892 directories. We also tested the largest system in the trace, m10M , which has the maximum number of files (9,496,510) and directories <ref type="bibr">(789,</ref><ref type="bibr">097)</ref>. We put together the largest 33 file systems in the trace to obtain m100M that contains over 100M files and 7M directories. In order to evaluate next-generation billion-level file systems for which there are no available traces, we chose to replicate m100M for 10 times to create m1B with over 1 billion files and 70M directories. While a similar scale-up approach has been used in the literature <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b47">49]</ref>, we would like to note that the duplication-filled system may exhibit different properties from a real system with 100M or 1B files. As part of future work, we shall evaluate our techniques in real-world billion-level file systems. Plan 9 File Systems: Plan 9 is a distributed file system developed and used at the Bell Labs <ref type="bibr" target="#b40">[41,</ref><ref type="bibr">42]</ref>. We replayed the trace data collected on two central file servers bootes and emelie, to obtain two file systems, pb (for bootes) and pe (for emelie), each of which has over 2M files and 70-80K directories. NFS: Here we used the Harvard trace <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b43">45]</ref> that consists of workloads on NFS servers. The replay of oneday trace created about 1,500 directories and 20K files. Again, we scaled up the one-day system to a larger file system nfs (2.3M files and 137K folders), using the above-mentioned approach. Synthetic File Systems: To conduct a more comprehensive set of experiments on file systems with different file and directory counts, we used Impressions <ref type="bibr" target="#b0">[1]</ref> to generate a set of synthetic file systems. By adjusting the file count and the (expected) number of files per directory, we used Impressions to generate three file systems, i10K, i100K, and i1M (here 'i' stands for Impressions), with file counts 10K, 100K, and 1M, and directory counts 1K, 10K, and 100K, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Aggregate Queries</head><p>We first considered Q1 discussed in Section 2, i.e., the total number of files in the system. To provide a more intuitive understanding of query accuracy (than the arguably abstract measure of relative error), we used the Matlab simulator (for quick simulation) to generate a box plot <ref type="figure" target="#fig_4">(Figure 3(a)</ref>) of estimations and overhead produced by Glance on Q1 over five file systems, m100K to m10M, pb and pe. Remember as defined in Section 2, the query cost (in <ref type="figure" target="#fig_4">Figure 3(b)</ref> and the following figures) is the ratio between the number of directories visited by Glance and that by file-system crawling. One can see that Glance consistently generates accurate query answers, e.g., for m10M, sampling 30% of directories produces an answer with 2% average error. While there are outliers, the number of outliers is small and their errors never exceed 7%.</p><p>We also evaluated Glance with other file systems and varied the input parameter settings. This test was con- were the following tests on aggregate queries. In this test, we varied the minimum number of selections s min from 3 to 6, the number of crawled levels h from 3 to 5, and set the selection probability as p sel = 50% (i.e., half of the subfolders will be selected if the amount is more than s min ). <ref type="figure" target="#fig_6">Figure 4</ref> shows the query accuracy and cost on the eleven file systems we tested. For all file systems, Glance was able to produce very accurate answers (with &lt;10% relative error) when crawling four or more levels (i.e., h ≥ 4). Also note from <ref type="figure" target="#fig_6">Figure 4</ref> that the performance of Glance is less dependent on the type of the file system than its size -it achieves over 90% accuracy for NFS, Plan 9, and NTFS (m10M to m1B). Depending on the individual file systems, the cost ranges from less than 12% of crawling for large systems with 1B files and 80% for the small 100K system. The algorithm scales very well to large file systems e.g., m100M and m1B -the relative error is only 1-3% when Glance accesses only 10-20% of all directories. For m1B, the combination of p sel = 50%, s min = 3 and h = 4 produces 99% accuracy with very little cost (12%). Figure 5 illustrates the runtimes (in seconds) for aggregate queries. The absolute runtime depends heavily on the size of the file system, e.g., seconds for m100K, several minutes for nfs (2.3M files), and 1.2 hours for m100M (not shown in the <ref type="figure">figure)</ref>. Note that in this paper we only used a single hard drive; parallel IO to multiple hard drives (e.g., RAID) will be able to utilize the aggregate bandwidth to further improve the performance. As the value of h increases, the query runs slightly longer  We also considered other aggregate queries with various aggregate functions and with/without selection conditions. <ref type="figure" target="#fig_7">Figure 6</ref>(a) presents the accuracy and cost of evaluating the SUM and AVG of file sizes for all files in the system, while <ref type="figure" target="#fig_7">Figure 6</ref>(b) depicts the same for exe files. We included in both figures the accuracy of COUNT because AVG is calculated as SUM/COUNT. Both SUM and AVG queries receive very accurate answers, e.g., only 2% relative error for m10M with or without the selection condition of '.exe'. The query costs are moderate for large systems -30% for m1M and m10M (higher for the small system m100K). We also tested SUM and AVG queries with other selection conditions (e.g., file type = '.dll ') and found similar results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Top-k Queries</head><p>To evaluate the performance of FS TopK, we considered both Q5 and Q6 discussed in Section 2. For Q5, i.e., the k largest files, we tested Glance over five file systems, with k being 50 or 100. One can see from the results depicted in <ref type="figure">Figure 7</ref> that, in all but one case (m1M), Glance is capable of locating at least 50% of all top-k files (for pb, more than 95% are located). Meanwhile, the cost is as little as 4% of crawling (for m10M). <ref type="figure">Figure 8</ref> presents the runtimes of the top-k queries, where one can see that similar to aggregate queries, the runtime is correlated to the size of the file system -the queries take only a few seconds for small file systems, and up to ten minutes for large systems (e.g., m10M). larger portion of the file system. Fortunately, a moderate γ of 5 and 10 presents a good tradeoff point -achieving a reasonable accuracy without incurring too much cost. We also tested Q6, i.e., the k most recently modified files over m100K, m1M, and pb. The results are shown in <ref type="figure">Figure 10</ref>. One can see that Glance is capable of locating more than 90% of top-k files for pb, and about 60% for m100K and m1M. The cost, meanwhile, is 28% of crawling for m100K, 1% for m1M, and 36% for pb. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Metadata query on file systems: Prior research on filesystem metadata query <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b31">32]</ref> has extensively focused on databases, which utilizes indexes on file metadata. However, the results <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b31">32]</ref> reviewed the inefficiency of this paradigm due to metadata locality and distribution skewness in large file systems. To solve this problem, Spyglass <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b31">32]</ref>, SmartStore <ref type="bibr" target="#b25">[26]</ref>, and Magellan <ref type="bibr" target="#b30">[31]</ref> utilize multi-demensional structures (e.g., K-D trees and R-trees) to build indexes upon subtree partitions or semantic groups. SmartStore attempts to reorganize the files based on their metadata semantics. Conversely, Glance avoids any file-specific optimizations, aiming instead to maintain file system agnosticism. It works seamlessly with the tree structure of a file system and avoids the time and space overheads from building and maintaining the metadata indexes.</p><p>Comparison with Database Sampling: Traditionally database sampling has been used to reduce the cost of retrieving data from a DBMS. Random sampling mechanisms have been extensively studied <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b33">34]</ref>. Applications of random sampling include estimation methodologies for histograms and approximate query processing (see tutorial in <ref type="bibr" target="#b14">[15]</ref>). However, these techniques do not apply when there is no direct random access to all elements of interest -e.g., in a file system, where there is no complete list of all files/directories. Another particularly relevant topic is the sampling of hidden web databases <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b27">28]</ref>, for which a random descent process has been used to construct queries issued over the web interfaces of these databases <ref type="bibr" target="#b15">[16]</ref><ref type="bibr" target="#b16">[17]</ref><ref type="bibr" target="#b17">[18]</ref><ref type="bibr" target="#b18">[19]</ref>. While both these techniques and Glance use random descents, a unique challenge for sampling a file system is its much more complex distribution of files. If we consider a hidden database in the context of a file system, then all files (i.e., tuples) appear under folders with no subfolders. Thus, the complex distribution of files in a file system calls for a different sampling technique which we present in the paper .</p><p>Top-k Query Processing: Top-k query processing has been extensively studied over both databases (e.g., see a recent survey <ref type="bibr" target="#b26">[27]</ref>) and file systems <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b31">32]</ref>. For file systems, a popular application is to locate the top-k most frequent (or space-consuming) files/blocks for redundancy detection and removal. For example, Lillibridge et al. <ref type="bibr" target="#b32">[33]</ref> proposed the construction of an in-memory sparse index to compare an incoming block against a few (most similar) previously stored blocks for duplicate detections (which can be understood as a top-k query with a scoring function of similarity). Top-k query processing has also been discussed in other index-building techniques, e.g., in Spyglass <ref type="bibr" target="#b31">[32]</ref> and SmartStore <ref type="bibr" target="#b25">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Discussion</head><p>At present, Glance takes several pre-defined parameters as the inputs and needs to complete the execution in whole. That is, Glance is not an any-time algorithm and cannot be stopped in the middle of the execution, because our current approach relies on a complete sample to reduce query variance and achieve high accuracy. One limitation of this approach is that its runtime over an alien file system is unknown in advance, making it unsuitable for the applications with absolute time constraints. For example, a border patrol agent may need to count the amount of encrypted files in a traveler's hard drive, in order to determine whether the traveler could be transporting sensitive documents across the border <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b42">44]</ref>. In this case, the agent must make a fast decision as the amount of time each traveler can be detained for is extremely limited. We envision that in the future Glance shall offer a time-out knob that a user can use to decide the query time over a file system. This calls for new algorithms that allow Glance get smarter -be predictive about the run-time and self-adjust the work flow based on the real-time requirements.</p><p>Glance currently employs a "static" strategy over file systems and queries, i.e., it does not modify its techniques and traversals for a query. A dynamic approach is attractive because in that case Glance would be able to adjust the algorithms and parameters depending on the current query and file system. New sampling techniques, e.g., stratified and weighted sampling, shall be investigated to further improve query accuracy on large file systems. The semantic knowledge of a file system can also help in this approach. For example, most images can be found in a special directory, e.g. "/User/Pictures/" in MacOS X, or "\Documents and Settings\User\My Documents\My Pictures\" in Windows XP.</p><p>Glance shall also leverage the results from the previous queries to significantly expedite the future ones, which is beneficial in situations when the workload is a set of queries that are executed very infrequently. The basic idea is to store the previous estimations over parts (e.g., subtrees) of the file system, and utilize the history to limit the search space to the previously unexplored part of the file system, unless it determines that the history is obsolete (e.g., according to a pre-defined validity period). Note that the history shall be continuously updated to include newly discovered directories and to update the existing estimations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>In this paper we have initiated an investigation of justin-time analytics over a large-scale file system through its tree-or DAG-like structure. We proposed a random descent technique to produce unbiased estimations for SUM and COUNT queries and accurate estimations for other aggregate queries, and a pruning-based technique for the approximate processing of top-k queries. We proposed two improvements, high-level crawling and breadth-first descent, and described a comprehensive set of experiments which demonstrate the effectiveness of our approach over real-world file systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Q2: SELECT SUM(file.size) FROM filesystem WHERE file.extension IN { 'txt', 'doc'};</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Q3: SELECT AVG(file.size) FROM filesystem WHERE file.extension = 'exe' AND file.owner = 'John';</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Q4: SELECT COUNT(directories) FROM filesystem WHERE EXISTS (SELECT * FROM filesystem WHERE file.dirname = directory.name AND file.mtime BE- TWEEN (now − 12 hours) AND now); Top-k Queries: In this paper, we also consider top- k queries of the form SELECT TOP k FROM D WHERE Selection Condition ORDER BY T DESCEND- ING/ASCENDING, where T is the scoring function based on which the top-k files or directories are selected. For example, a system administrator may want to select the 100 largest files, i.e., Q5: SELECT TOP 100 files FROM filesystem ORDER BY file.size DESCENDING;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Box plots of accuracy and cost of 100 trials ducted on the Linux and ext3 implementation, and so were the following tests on aggregate queries. In this test, we varied the minimum number of selections s min from 3 to 6, the number of crawled levels h from 3 to 5, and set the selection probability as p sel = 50% (i.e., half of the subfolders will be selected if the amount is more than s min ). Figure 4 shows the query accuracy and cost on the eleven file systems we tested. For all file systems, Glance was able to produce very accurate answers (with &lt;10% relative error) when crawling four or more levels (i.e., h ≥ 4). Also note from Figure 4 that the performance of Glance is less dependent on the type of the file system than its size -it achieves over 90% accuracy for NFS, Plan 9, and NTFS (m10M to m1B). Depending on the individual file systems, the cost ranges from less than 12% of crawling for large systems with 1B files and 80% for the small 100K system. The algorithm scales very well to large file systems e.g., m100M and m1B -the relative error is only 1-3% when Glance accesses only 10-20% of all directories. For m1B, the combination of p sel = 50%, s min = 3 and h = 4 produces 99% accuracy with very little cost (12%).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Query accuracy vs. run time in seconds. Three points of each line (from left to right) represent h of 3, 4, and 5, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Accuracy and cost of aggregate queries under different settings of the input parameters. Label 3-3 stands for h of 3 and s min of 3, 3-6 for h of 3 and s min of 6, etc., while p sel is 50% for all cases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Accuracy and cost of queries</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>Figure 7: Accuracy and cost of Top-k queries on file size Figure 9 presents the query accuracy and cost for Topk queries on file size, when γ varies from 1, 5, 10, to 100,000. The trend is clear -the query cost increases as γ does, because a higher value of γ is to scale the highestscore estimation up to a larger degree, that is, to crawl a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Figure 9: Query accuracy and cost when varying γ</figDesc></figure>

			<note place="foot" n="1"> In ext2 and ext3, for example, the system provides the number of hard links for each file. Note that for soft links, we can simply ignore them during the descent process. Thus, they bear no impact on the final estimation.</note>

			<note place="foot" n="2"> In the rest part of the paper, we do not include the proof of theorems due to the space limitation.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Acknowledgments</head><p>We thank the anonymous reviewers and our shepherd John Bent for their excellent comments that helped improve the quality of this paper. We also thank Hong Jiang and Yifeng Zhu for their help on replaying the NFS trace, and Ron Chiang for his help on the artwork. This work was supported by the NSF grants OCI-0937875, OCI-0937947, IIS-0845644, CCF-0852674, CNS-0852673, and CNS-0915834.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Generating realistic impressions for file-system benchmarking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Agrawal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Arpaci-Dusseau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arpaci-Dusseau</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Storage (TOS)</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1" to="30" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A five-year study of file-system metadata</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Agrawal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Bolosky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Douceur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lorch</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 5th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="31" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Design and implementation of a metadata-rich file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ames</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gokhale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maltzahn</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<idno>UCSC- SOE-10-07</idno>
		<imprint>
			<date type="published" when="2010" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The New Jersey data reduction report</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barbara</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dumouchel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ioannidis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jagadish</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Poosala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Data Eng. Bull</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="3" to="45" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<ptr target="http://beagle-project.org/" />
	</analytic>
	<monogr>
		<title level="j">BEAGLE</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Sample allocation in multivariate surveys</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bethel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Survey methodology</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="47" to="57" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fusing data management services with file systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brandt</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Maltzahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Polyzotis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W.-C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th Annual Workshop on Petascale Data Storage (PDSW &apos;09)</title>
		<meeting>the 4th Annual Workshop on Petascale Data Storage (PDSW &apos;09)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="42" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Query-based sampling of text databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Callan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Connell</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="97" to="130" />
			<date type="published" when="2001-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Computational aspects of optimal allocation in multivariate stratified sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Causey</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">322</biblScope>
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Optimized stratified sampling for approximate query processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaudhuri</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Narasayya</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems (TODS)</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page">9</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Effective use of block-level sampling in statistics estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaudhuri</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Srivastava</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 ACM SIGMOD international conference on Management of data</title>
		<meeting>the 2004 ACM SIGMOD international conference on Management of data</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page">298</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Design optimization with multiple objectives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chromy</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings on the Research Methods of the American Statistical Association</title>
		<meeting>on the Research Methods of the American Statistical Association</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="194" to="199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Security guide to customs-proofing your laptop</title>
		<imprint/>
		<respStmt>
			<orgName>CNET</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Sampling technique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cochran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<publisher>John Willey &amp; Sons</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Survey of approximate query processing techniques (tutorial)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Das</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Scientific and Statistical Database Management (SSDBM &apos;03</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A random walk approach to sampling hidden databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dasgupta</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mannila</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 ACM SIGMOD international conference on Management of data (SIGMOD &apos;07</title>
		<meeting>the 2007 ACM SIGMOD international conference on Management of data (SIGMOD &apos;07</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="629" to="640" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Unbiased estimation of size and other aggregates over hidden web databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dasgupta</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jewell</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Das</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 international conference on Management of data (SIGMOD) (2010)</title>
		<meeting>the 2010 international conference on Management of data (SIGMOD) (2010)</meeting>
		<imprint>
			<biblScope unit="page" from="855" to="866" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Leveraging count information in sampling hidden databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dasgupta</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Das</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 IEEE International Conference on Data Engineering</title>
		<meeting>the 2009 IEEE International Conference on Data Engineering</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="329" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Privacy preservation of aggregates in hidden databases: why and how?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dasgupta</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaudhuri</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 35th SIGMOD international conference on Management of data</title>
		<meeting>the 35th SIGMOD international conference on Management of data</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="153" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nagaraja</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
		<title level="m">Order Statistics</title>
		<meeting><address><addrLine>New Jersey</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>3rd Edition</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Passive nfs tracing of email and research workloads</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ellard</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ledlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Malkani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seltzer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd USENIX Conference on File and Storage Technologies (FAST &apos;03)</title>
		<meeting>the 2nd USENIX Conference on File and Storage Technologies (FAST &apos;03)<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="203" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Approximate query processing: Taming the terabytes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Garofalakis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gibbon</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th International Conference on Very Large Data Bases (VLDB)</title>
		<meeting>the 27th International Conference on Very Large Data Bases (VLDB)</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Google</forename><surname>Google</surname></persName>
		</author>
		<ptr target="http://desktop.google.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A two-phase sampling technique for information extraction from hidden web databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hedley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">L</forename><surname>Younas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanderson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th annual ACM international workshop on Web information and data management (WIDM &apos;04</title>
		<meeting>the 6th annual ACM international workshop on Web information and data management (WIDM &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Sampling, information extraction and summarisation of hidden web databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hedley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-L</forename><surname>Younas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sander-Son</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data and Knowledge Engineering</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="213" to="230" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">SmartStore: a new metadata organization paradigm with semanticawareness for next-generation file systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hua</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tian</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on High Performance Computing Networking, Storage and Analysis</title>
		<meeting>the Conference on High Performance Computing Networking, Storage and Analysis</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A survey of top-k query processing techniques in relational database systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilyas</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">F</forename><surname>Beskales</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Soliman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="1" to="58" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Distributed search over the hidden web: hierarchical database sampling and selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ipeirotis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gravano</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 28th international conference on Very Large Data Bases (VLDB &apos;02</title>
		<meeting>the 28th international conference on Very Large Data Bases (VLDB &apos;02</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="394" to="405" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Exascale computing study: technology challenges in achieving exascale systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kogge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bergman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Borkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dally</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Denneau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Franzon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Harrod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">DARPA Information Processing Techniques Office</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Organizing, indexing, and searching large-scale file systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<idno>UCSC-SSRC-09-09</idno>
		<imprint>
			<date type="published" when="2009-12" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Magellan: a searchable metadata architecture for large-scale file systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>And Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
		<idno>UCSC-SSRC-09-07</idno>
		<imprint>
			<date type="published" when="2009-11" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Spyglass: fast, scalable metadata search for large-scale storage systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Shao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bisson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Pasupathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proccedings of the 7th conference on File and Storage Technologies (FAST)</title>
		<meeting>cedings of the 7th conference on File and Storage Technologies (FAST)<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="153" to="166" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Sparse indexing: large scale, inline deduplication using sampling and locality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillibridge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eshghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Deolalikar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Trezise</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Camble</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proccedings of the 7th conference on File and Storage Technologies (FAST)</title>
		<meeting>cedings of the 7th conference on File and Storage Technologies (FAST)<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="111" to="123" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Sampling: design and analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lohr</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Pacific Grove</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Defending a new domain: the pentagon&apos;s cyberstrategy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lynn</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Foreign Affairs</title>
		<imprint>
			<date type="published" when="2010-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">The design and implementation of the database file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Murphy</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Tonkelowitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vernal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<ptr target="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.11.8068" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">High end computing file system and IO R&amp;D gaps roadmap</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nunez</forename></persName>
			<affiliation>
				<orgName type="collaboration">HEC FSIO R&amp;D Conference</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
			<affiliation>
				<orgName type="collaboration">HEC FSIO R&amp;D Conference</orgName>
			</affiliation>
		</author>
		<imprint>
			<date type="published" when="2008-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Simple random sampling from relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olken</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rotem</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th International Conference on Very Large Data Bases</title>
		<meeting>the 12th International Conference on Very Large Data Bases</meeting>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="160" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Random sampling from database files: a survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olken</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rotem</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the fifth international conference on Statistical and scientific database management</title>
		<meeting>the fifth international conference on Statistical and scientific database management</meeting>
		<imprint>
			<publisher>Springer-Verlag New York, Inc</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="92" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">The design and implementation of the Inversion file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Olson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Winter 1993 USENIX Technical Conference</title>
		<meeting>the Winter 1993 USENIX Technical Conference</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="205" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Plan 9 from bell labs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pike</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Presotto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dorward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Flandrena</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Trickey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Winterbottom</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing systems</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="221" to="254" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Hierarchical file systems are dead</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seltzer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Murphy</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th conference on Hot topics in Operating Systems (HotOS &apos;09</title>
		<meeting>the 12th conference on Hot topics in Operating Systems (HotOS &apos;09</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Laptops can be searched at the border</title>
		<imprint/>
		<respStmt>
			<orgName>SLASHDOT</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Snia</forename></persName>
		</author>
		<ptr target="http://iotta.snia.org/traces/list/NFS" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Threats to privacy in the forensic analysis of database systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stahlberg</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Miklau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Levine</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 ACM SIGMOD international conference on Management of data (SIGMOD &apos;07)</title>
		<meeting>the 2007 ACM SIGMOD international conference on Management of data (SIGMOD &apos;07)<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="91" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">New challenges in petascale scientific databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Szalay</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th international conference on Scientific and Statistical Database Management (SSDBM &apos;08)</title>
		<meeting>the 20th international conference on Scientific and Statistical Database Management (SSDBM &apos;08)<address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="1" />
		</imprint>
	</monogr>
<note type="report_type">Heidelberg</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Random sampling with a reservoir</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vitter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Mathematical Software (TOMS)</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">57</biblScope>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">HBA: Distributed Metadata Management for Large Cluster-Based Storage Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xian</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Parallel and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="750" to="763" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
