<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:28+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Swipe Your Fingerprints! How Biometric Authentication Simplifies Payment, Access and Identity Fraud</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julian</forename><surname>Fietkau</surname></persName>
							<email>jfietkau@sect.tu-berlin.destarbug</email>
							<affiliation key="aff0">
								<orgName type="institution">Technische Universität Berlin</orgName>
								<address>
									<settlement>jpseifert@sect.tu-berlin.de Security in Telecommunications</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean-Pierre</forename><surname>Seifert</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Technische Universität Berlin</orgName>
								<address>
									<settlement>jpseifert@sect.tu-berlin.de Security in Telecommunications</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Swipe Your Fingerprints! How Biometric Authentication Simplifies Payment, Access and Identity Fraud</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Biometric authentication is a trending topic in securing modern devices. Examples of this can be found in many widely deployed systems such as Apple&apos;s Touch ID or Microsoft&apos;s Windows Hello face recognition. Miniatur-ization and increased processing power are thereby leading to new applications not imaginable a couple of years ago. Such a solution is the new fingerprint smart card built by a Norwegian company that must not be named. Their biometric match-on-card platform is designed to provide a convenient solution for access, identity, and payment applications and aims to replace PIN authenti-cation for the next generation of payment cards by VISA and Mastercard. In this paper, we are going to analyze how this company has implemented their already available demo kit for access control in hardware and software. We will point out critical weaknesses in its architecture and algorithm and show how these could be misused for payment, access and identity fraud by attackers able to steal or clone the device. Thereby, we combine software and hardware hacking techniques as well as extraction methods, to acquire fingerprints from photos and latent prints, to successfully spoof the system in various ways. This works in particular without the error-prone creation of physical dummies due to the exploitation of the insecure on-device communication. The attacks presented require little effort and low-cost equipment that can be already refinanced by abusing a single card at all. Finally, we will discuss countermeasures and ideas to improve the security of this and future implementations for match-on-card fingerprint authentication.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Biometric authentication is evolving to one of the most used authentication schemes for mobile applications. That's why, several research groups and companies try to find new ways to make use of characteristics in users iris, fingerprints or heartbeat. Based on this, they want to provide a convenient authentication scheme to protect private and sensitive data, stored for instance on mobile devices. Despite the fact that no sufficient secure and reliable method has been developed for low-cost biometric authentication, large manufacturers yet integrate these solutions into devices and promote them as an improvement in security and comfort. A good example of this is a Norwegian company that must not be named. They try to integrate their fingerprint match-on-card platform into several devices to simplify payment, access and identity applications. So far, only the first version of access control cards is available, but they already announced to integrate their platform into the next generation of payment and ID cards. According to <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b23">24]</ref>, the first payment card, build in cooperation with VISA and Mastercard, is already under test.</p><p>In contrast to these efforts, many publications like <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref>, clearly show that biometric authentication mechanisms can be levered, manipulated and circumvented in various ways. The reasons for this are many and varied. On the one hand, developers choose weak acceptance rates to offer users a convenient and reliable solution. On the other hand, mechanisms for liveness-or spoof detection are often dispensed with, because they are expensive, immature or inadequate. Another major problem is in fact that biometric features are unique and cannot be revoked or replaced like PINs and passwords. Moreover, biometric features do not even represent good secrets at all, because users tend to spread sensitive information on every object touched or copy them unintentionally by creating image and video data containing fingerprints and iris <ref type="bibr" target="#b21">[22]</ref>.</p><p>Taking all this into account, one can not simply trust this technology; instead these systems need to be scrutinized to identify the accompanying threats and risks. For this reason, we analyzed this new match-on-card device to explore its foundation and answer the question of whether this approach is a security improvement or not.</p><p>Our Contribution is the proposal of a low-cost attack against a biometric authentication device based on a new match-on-card platform. The attack uses a small hardware modification and some information gathering to bypass the authentication entirely and as often as needed. Related to that, we explore what kind of weaknesses in hardware and software can be abused to make this happen. To evaluate our findings, we provide all data and knowledge acquired during exploration of this fingerprint matching device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>In the following, we provide the required background of biometric authentication and fingerprint matching. We then describe what kind of attacks are known to circumvent fingerprint matching systems and how to create a physical dummy for traditional spoofing attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Biometric Authentication</head><p>The term biometric is derived from the two Greek words bios and metron meaning measurement of life and describes the identification of people based on features of their bodies. Those features can be divided into static (like fingerprint or face) and behavioral (like a persons voice or signature). According to <ref type="bibr" target="#b13">[14]</ref>, all biometric features have to satisfy the following requirements:</p><p>• Universality: All people possess the feature.</p><p>• Uniqueness: The feature is different for people so the system can distinguish between them.</p><p>• Permanence: The feature only varies slightly over time.</p><p>• Measurability: The system can acquire and process the feature in an efficient way.</p><p>• Safe against circumvention: The system can distinguish between the real feature and a dummy.</p><p>Any biometric system requires thereby three main components: A sensor that captures the feature, a biometric application to compute and compare features, and a database to store a template <ref type="bibr" target="#b13">[14]</ref>. A template is a mathematical description of the biometric feature. It is generated during the enrollment, the first stage of every biometric process in which a user is introduced to the system. During the later use, the live taken template will be compared against the stored template. Biometric comparisons, other than passwords, do not result in a clear right or wrong answer but in a probability of a matching score. Depending on the determined thresholds this matching score will lead to an accept or reject. Usually, biometric systems apply this in two modus operandi <ref type="bibr" target="#b13">[14]</ref>:</p><p>• Verification: During verification or 1:1 match the user provides its template bound ID to the system. The system then compares the live taken feature to that template. If the threshold is matched, the user is authenticated successfully.</p><p>• Identification: Identification or the 1:n match compares the live taken feature against all the templates stored in the database. As a result, the template with the highest match score is selected, and if the threshold is exceeded, a successful match is indicated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Fingerprint Authentication</head><p>Fingerprint authentication is the process of matching fingers based on the structure of the upper skin. During the prenatal development of a human being, the skin of hands and feet fold in a random process leading to ridges and valleys. Those end or bifurcate at certain points called minutiae. Although some genetic influence, the position, orientation and type of these minutiae points are unique for each human and even each finger. To recognize someone based on that, we first of all need to acquire the features. As summarized by <ref type="bibr" target="#b13">[14]</ref>, various technologies have been used to sample the fingerprint. Today, the most popular ones are the optical and capacitive sensors.</p><p>• Optical: Optical sensors use the effect of frustrated total reflection. Light is shined on a prism and the reflections are collected by a camera. Depending on whether a ridge or valley is touching the prism, the light is either reflected or scattered creating an image of the fingerprint.</p><p>• Capacitive: An array of single capacitor plates are exposed to the sensor surface. The capacitance of each plate depends on the material above. This way, one can distinguish between the skin of the ridges and the air in the valleys of a fingerprint.</p><p>• Ultrasonic: Ultrasonic waves are sent into the finger, get reflected on deeper layers of the skin and will be collected by the sensor. This even works well for dirty fingers and dry skin.</p><p>• Thermal: Thermal sensors measure the heat distribution and derive the fingerprint image from the different thermal properties of valleys and ridges.</p><p>• Pressure: Pressure based fingerprint acquisition works with an array of small sensors able to measure the pressure of ridges contacting it.</p><p>After sampling a fingerprint, the created image will usually be graphically preprocessed to reduce noise and errors, for example by thinning the ridges to a width of one pixel. Following that, a mathematical description will be derived from this intermediate image to make it comparable and easy to store. The most popular matching techniques are based on image correlation, phase matching, skeleton matching or minutiae matching <ref type="bibr" target="#b12">[13]</ref>. Due to its storage efficiency and accuracy, the minutiae-based matching is the most popular approach and has long since proven itself in criminal investigations and forensic applications.</p><p>To extract minutiae points, an algorithm travels along all ridges until these end or bifurcate. For those points, their relative position, orientation, and minutiae type will be stored. This can be done by creating a template using a standard format as defined in ISO/IEC 19794-2 <ref type="bibr" target="#b11">[12]</ref>. When verifying the user, the algorithm applies the same method to the live captured fingerprint and compares this data with the stored template created during enrollment.</p><p>This matching process is generally a sophisticated pattern-recognition problem, because of the large intraclass variations due to pressure, rotation, translation and many physiologic conditions like skin dryness or cuts <ref type="bibr" target="#b12">[13]</ref>. Additionally, there is a large interclass similarity between fingerprint images from different fingers, because there are only three types of major fingerprint patterns in particular: arch, loop, and whorl <ref type="bibr" target="#b12">[13]</ref>. Within this error space, we have to carefully align both templates to initiate the verification. One basic approach is to align the fingerprints based on some random local minutiae structures and then consolidate the local matching on a global scale. This procedure usually involves four steps, as described in <ref type="bibr" target="#b12">[13]</ref>:</p><p>1. Compute pairwise similarity between minutiae of two fingerprints by comparing the invariant minutiae descriptors.</p><p>2. Both fingerprints are being aligned according to the most similar pair of minutiae.</p><p>3. Search for minutiae pairs that are close enough in position and direction to be matching pairs.</p><p>4. Calculate the similarity score between both fingerprints based on the number of matching pairs, consistency of ridge count in between, et cetera.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Known Attacks and Related Work</head><p>As stated in <ref type="bibr" target="#b10">[11]</ref>, the main threat to any assets protected by a biometric system is that of an impostor impersonating another person who is enrolled and gaining access to the protected assets. When successful, the authentication mechanism is considered broken. A structured overview covering a threat model and risk evaluation for fingerprint matching systems is discussed in <ref type="bibr" target="#b10">[11]</ref> and <ref type="bibr" target="#b25">[26]</ref>. The threats discussed by <ref type="bibr" target="#b10">[11]</ref>, include four major scenarios to attack a matching system, namely: use of a dummy, use of latent prints, use of a biometric lookalike and use of the real finger of the victim. Much more practical research results can be found in <ref type="bibr" target="#b21">[22]</ref> and <ref type="bibr" target="#b5">[6]</ref>. The author presents and analyzes real methods to spoof and trick specific implementations of fingerprint matching algorithms. A very prominent way to do this is to collect and physically clone the biometric features with fingerprint fuming or by extracting the features from photos of the victim. We will describe these techniques in more detail in Section 2.3.1.</p><p>Another attack scheme, based on a mathematic analysis of a large number of fingerprints, is presented in <ref type="bibr" target="#b0">[1]</ref>. This work shows that so-called "MasterPrints" can be synthesized based on similarities in different fingerprints, which can impersonate users with a given probability. This technique works best for systems using multiple partial fingerprints of a user to enroll, which is quite common today. While this attack was shown in theory and validated using a commercial fingerprint verification software (Verifinger 6.1), no real authentication system was bypassed. Moreover, the "MasterPrints" are intended to impose a subset of users with a given probability and do not allow to target a specific person. The MasterPrints are not published and can not be tested.</p><p>More related work is presented in <ref type="bibr" target="#b3">[4]</ref>. The authors point out the risk of known template attacks for minutiaebased matching algorithms. The overall problem is that sensitive data, stored on the device or in large databases, might be leaked in one way or another. Related to this, the paper presents a method to create sophisticated and natural-looking fingerprints only from the numerical template data. They successfully evaluate this approach against a number of undisclosed state-of-the-art algorithms and the NIST Fingerprint Image Software <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Circumvention with Physical Dummies</head><p>The circumvention of fingerprint systems with dummies consists of two parts, the collection of a high-quality image of the finger and the creation of the dummy itself. Since the skin is producing sweat and grease, we consistently leave latent prints on all surfaces we touch. Those prints are an exact copy of the ridges and valleys that form our fingerprint. When making these residues visible, they can be used to produce a dummy. There are different techniques known from police work to enhance latent prints on different surfaces. For glossy surfaces, like displays, latent prints are visible and can be digitalized easily using a scanner or camera <ref type="bibr" target="#b22">[23]</ref>. To increase the contrast, the light of a specific wavelength and different angles can be projected onto the print or colored powder can be applied. On physical contact, there is always a chance of damaging the print. That's why the contactless technique using cyanoacrylate vapor is often used nowadays. Cyanoacrylate, the main ingredient of super glue, is put into a small chamber covering the area of the print. The vapor reacts with the grease leaving a solid white fingerprint. The grease from the print will not only stick onto glossy surfaces but also will be absorbed by the paper. To make use of this an amino acid indicator like Ninhydrin can be applied. This reacts with the amino acids in the latent print turning it purple. The result can be digitalized using a scanner or a camera and enhanced with an image editing application to reduce noise and scale it properly. Depending on the application the image must be inverted and/or mirrored. The final result is then transferred to a photodefinable PCB that acts as a mold. The dummy material, e.g. wood glue, is then poured into the mold and cured. To enhance the electrical properties graphite spray can be applied. After some time, the dummy finger can then be used to fool the sensor. As long as there are no fake detection mechanisms in place, the system will not be able to distinguish between the dummy and a living finger. <ref type="bibr" target="#b5">[6]</ref> 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analysis and Weaknesses</head><p>In this section, we describe how the access control card is used and how it is implemented. We also present the findings gathered by exploring the device components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Implementation Overview</head><p>First of all, we will have a look at how the card works. As documented in <ref type="bibr" target="#b27">[28]</ref>, the system implements the principles from Section 2.2 in a straightforward way. First of all, the card owner needs to enroll to the card in a trusted environment. During this step, the fingerprint is captured 10 times and the extracted minutiae data is stored on the card according to the ISO/IEC 19794-2 standard <ref type="bibr" target="#b11">[12]</ref>. Afterward, the activated card can be used like any other smart card. The owner inserts the card into the terminal or near the NFC field and has to identify himself to authorize the desired action. Without entering a PIN, the user places his finger on the built-in sensor to prove its identity. Then the system extracts the minutiae points from the finger and compares it with the stored template. When successful, the RFID functionality of the card will be enabled, authorizing the card to communicate with the reader and execute the following steps. In addition, the smart card will also support 3-factor authentication.</p><p>When enabled, the user needs to provide the card, his fingerprint, and the PIN.</p><p>To perform all these functions the card integrates various hardware components. For RFID capabilities they offer multiple card versions with NFC Transponders like Mifare Classic, DESFire EV1, and others. These are compatible with most contactless ISO14443 RF readers and feature RF-field energy harvesting. The most innovative part is the integrated FPC1020 Touch Fingerprint Sensor manufactured by Fingerprints <ref type="bibr" target="#b7">[8]</ref>. It is build using a capacitive array, has a size of 11×11mm and a spatial dot density of 508dpi. This way it can generate 8bit grayscale images with a dimension of 192x192 pixel. Moreover, there are two LEDs on the card to indicate the systems state and the result of enrollment and verification attempts. Sensor, LEDs and the RFID-subsystem are connected to an Atmel SAM4S microcontroller, which is based on a 32-bit ARM Cortex-M4 processor. This microcontroller executes a proprietary matching algorithm and supports procedures for enrollment and verification. The algorithm is optimized for embedded devices and can process a single evaluation in round about 500 to 550µs. The biometric template is stored on the internal memory of the microcontroller and will be encrypted. To protect confidential data and firmware the SAM4S prevents memory access by using security and lock bits to denial access via ICE and Flash programming interfaces. According to the SAM4S manual, the external bus interface is scrambled and memory integrity checks are implemented as well <ref type="bibr" target="#b7">[8]</ref>. The announced payment and ID cards will be produced in ISO/IEC 7810 ID-1 card for-mat. The access control card is slightly larger, packed in a plastic cover and requires an extra battery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">A Closer Look</head><p>To analyze the card we, first of all, removed the plastic cover revealing a two-layer PCB with all the components mounted on the upper side. After identifying the responsible pins, we initially confirmed the correct configuration of the SAM4S security bits using a JTAG debugger. We then started to analyze the application specific components of the device. As one can see in <ref type="figure" target="#fig_0">Figure 1</ref> and 2, the fingerprint sensor and the microcontroller are connected with six wires, routed on both sides of the card. To sniff the communication between sensor and microcontroller we tapped the connection using a logic analyzer and soldering enameled wires to the VIAs. We have used the Saleae logic analyzer <ref type="bibr" target="#b19">[20]</ref> and their software suite for a total of $109. After evaluating several recorded tracks, we were able to identify the implemented communication bus: A Serial Peripheral Interface (SPI) configured with a 12 MHz clock signal and transfer Mode 0. SPI is based on a master-slave architecture. In this case, the microcontroller represents the master and the fingerprint sensor the slave. This way the CPU can request data from the sensor that can be selected by sending special commands to the sensor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Communication Protocol</head><p>Using the recorded tracks, we have started to get a better understanding of the intercepted protocol payload. In fact, we were able to identify several values and prominent communication flow patterns, which are clearly related to the matching algorithm. In <ref type="figure">Figure 3</ref>, we present a listing of the most interesting sections we have identified. To understand the data, we have visualized it as a grayscale image using one pixel per byte. After some manual alignments, we could identify the raw image of the evaluated fingerprint. This demonstrates that the SPI communication observed is not encrypted and all data transmitted can be intercepted, recorded and analyzed.</p><p>In further detail, the tracks we have recorded are composed of the following elements: Initially, the CPU sends a 0xFC command that is responded with the byte sequence 0x020A by the sensor. Afterward, the CPU will initialize the sensor using some values and commands we do not fully understand. In the following, the device goes into a short sleep cycle and will wake up repeatedly every 27ms to poll the sensors actual state. When activity is detected the sensor will signal this by sending a 0x81 byte. Following that, the CPU requests the overall image size and subsequently gather 12 small samples of the finger covering only partial sections of it (each with </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Proof Of Concept</head><p>In this section, we describe the technical details on how we interfaced the card and evaluated the overall performance of the device against various attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Setup</head><p>Since we know that the communication between sensor and CPU is not confidential, we designed a man-inthe-middle attack that allows us to scrutinize more indepth features of the device. Therefore, we prepared the backside of the card by carefully cutting the MISO wire disconnecting the sensor from the CPU. Afterward, we rerouted this signal through an FPGA by soldering two wires at both ends and connect them to the GPIO pins of the FPGA. Additionally, we tapped the SPICLK to be able to process the data transmitted. Based on this configuration, we created an FPGA design capable of reading and spoofing the communication stream. This application features two use-cases: A pass-through mode, reconnecting the origin wire signals and an injection mode overwriting the original data stream with a modified one stored in the FPGAs memory. To upload this data, we have added a UART communication interface connecting the FPGA with a host computer via USB UART/FIFO IC. For this implementation, we have used a DE0-Nano board containing an Altera Cyclone IV FPGA with 32 MB SDRAM (Comparable solutions available for $42). Certainly, the FPGA features only 3.3V inputs, while the card requires 1.8V, hence we added a level conversion solution in between. Clearly, this solution is for experimental use and can not be used inconspicuously in front of other people. However, due to its NFC capabilities, this logic can be easily built on a small daughterboard attached on the backside of the device. Hereby the front side of the card will remain untouched and does not look suspicious at all. Based on this setup, we created a number of experiments to scrutinize the internal functions of the biometric smart card. The experiments are based on an enrolled fingerprint of a real test person. We used the implemented enrollment procedure of the card and instructed the test person with the user guide published by the vendor <ref type="bibr" target="#b27">[28]</ref>. The data and tools to repeat the experiments can be found in our repository <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Replay Attack</head><p>First of all, we tested how the system responds to a replay of a valid verification we have recorded. Using our implementation, we simply configured the FPGA that any data sent by the sensor will be discarded and replaced with the previously recorded one that is stored in the FPGA memory. On the first try, the replayed fingerprint was immediately accepted, and the attack could be repeated multiple times. From this simple experiment, we have already determined two major facts:</p><p>• No replay and no liveness detection was triggered</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• No tamper protection was violated by our hardware modification</head><p>Furthermore, this shows that the recorded payload covers all the configuration and data required to perform a valid authentication. By modifying and replaying this payload, we are now able to scrutinize the in-depth functionality of the device that was difficult to access beforehand.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Fuzzing the Protocol</head><p>In the following, we started to manipulate single messages of the replay data to spot additional attack vectors. The recorded communication data has a size of round about 37 Kilobyte, but may vary depending on the number of wrong attempts and wait time during the recording. As described in Section 3.3, the protocol contains a preview function that sends 12 small samples (8x8 pixel) before the full image is transmitted. These samples have a fixed position and are distributed equally on the sensor at several points. According to the documentation, this feature is intended to decrease the response time and improve the overall performance <ref type="bibr" target="#b7">[8]</ref>. However, the preview is not even evaluated by the card and can be replaced with arbitrary data. Furthermore, we modified several configuration fields received by the microcontroller from the sensor. We tried to manipulate the Hardware ID, vary the capture size and inject interesting corner cases for other parameters, to cause side-effects like out-of-bound read/write or downgrading of sensor capabilities. Based on our observation, the modification of these values was not effective. A succeeding read of these values returned their original configuration or did not yield any interesting change. Most probably, these values are hard-coded in the application, at least for this product version.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Fingerprint Extraction Attacks</head><p>In the following, we started to manipulate the image data that is sent to the CPU, as shown in <ref type="figure">Figure 3</ref>. We created a tool to replace the data in the recorded sample with arbitrary image data. Furthermore, we have taken related research into account that shows how the biometric data of a victim can be collected <ref type="bibr" target="#b21">[22]</ref>. As described there, fingerprints can be extracted from photos or copied from touched objects like coffee cups, keyboards, and other things. To test the device against this threat, we have developed two more experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1">Latent Fingerprints on the Device</head><p>With regard to the manufacturer's promise that "fingerprint data cannot be extracted from the card", it was the most obvious idea to recover a latent fingerprint from the device itself. In everyday life, the card owners will touch the cards surface and its components and hence spread biometric data all over the device. To imitate this, the test person was requested to touch a similar smart card at several points intentionally. Afterward, the card was evaluated to spot latent prints and recover the biometric data from its surface. <ref type="figure" target="#fig_1">Figure 4</ref> shows that multiple fingerprints are visible on the device, especially when it is illuminated and aligned in the right way (90 • between the point of view and the light source). To copy the fingerprint residues we made several pictures using a standard iPhone 5 camera. We reviewed the pictures taken and selected the most promising one in terms of image quality. Afterward, we extracted a suitable fingerprint dummy using the following steps:</p><p>1. Crop the image area covering the whole fingerprint 2. Apply grayscale conversion, then color inversion 3. Crop and scale the relevant fingerprint area with respect to the physical and digital sensor size, e.g. 11×11mm, 192×192 pixel, 508dpi</p><p>4. Improve brightness, contrast, and gamma.</p><p>Using our tools, we embedded the extracted fingerprint dummy into the recorded communication payload and uploaded this to the FPGA. When activating the card, the FPGA injected the custom fingerprint created from the latent prints on the card. This way, we have successfully bypassed the authentication in a repeatable fashion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2">Fingerprints on Digital Images</head><p>Another, more passive way to extract the biometric data can be done by using pictures of the actual user covering his fingerprints. These pictures can be created by the attacker from a distance or can be found on the web as discussed in <ref type="bibr" target="#b21">[22]</ref>. To evaluate this scenario, we created multiple pictures covering the test person while showing his fingers. We set up an increasing target distance respectively to 3, 4, 5, 6 and 7 meters. The pictures were taken using a Canon EOS-D1 X with a 200mm lens in an outdoor daylight setting. After taking the pictures, we started the extraction process similar to the previous one. The main difference is in fact that we had to flip the image horizontally and further scale the area depending on the target distance. In <ref type="table">Table 1</ref> we are describing this relation and the final upscale factor we have used. <ref type="figure" target="#fig_2">Figure 5</ref> shows the pictures taken and the extracted dummies. Again, we injected the obtained fingerprints into the recorded communication payload. We defined a maximum amount of 3 attempts per image, which has given us the freedom to slightly improve the image gamma, brightness, and contrast. Under these constraints, 3 out of 5 dummies caused a valid authentication and could successfully bypass the matching algorithm.  <ref type="table">Table 1</ref>: Results for dummies created from pictures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Algorithmic Weaknesses</head><p>The previously shown attacks are not only resulting from design issues and the lack of security measures. One of the major reasons for this are various algorithmic weaknesses that undermine the attack resistance of this device. First of all, we discovered that just 50% of the fingerprint image is sufficient to authenticate a user successfully. This means, with respect to the attacks shown, we don't even need to extract an ideal fingerprint snippet. Single parts of poor quality can easily be removed to improve the attack, as shown in <ref type="figure">Figure 6</ref>. Furthermore, we figured out that ridges without minutiae can be removed from a fingerprint, as long as they got replaced with some arbitrary ridges. In practice, we have simply created some circle-like elements which will be traced by the matching algorithm but do not yield any minutiae data. Combining these findings, we could gradually remove most parts of one fingerprint, until we had a minimal version to authenticate. Such a fingerprint dummy is shown in <ref type="figure" target="#fig_3">Figure 7</ref>.</p><p>The most concerning weakness we have identified is related to the required amount of matching minutiae. According to ISO/IEC 19794-2, this is the most important parameter for any minutiae-based matching system. The recommended minimum amount for enrollment is 16 and for verification is 12. Lowering these numbers will have a huge impact on the attack resistance of the system <ref type="bibr" target="#b11">[12]</ref>. With this in mind, we tested the device for standard compliance. First of all, we tested how many minutiae points are actually required for enrollment. We created several fingerprint images, similar to the examples in <ref type="figure" target="#fig_4">Figure 8</ref>, which we have each enrolled and verified on the device.</p><p>In conclusion, as long as enough ridges are contained, we could enroll even extremely simplistic fingerprints with less than 5 minutiae and verify them with success.</p><p>Secondly, we started to remove single minutiae from a previously enrolled fingerprint to determine the min-  imum threshold for verification. For our baseline template, containing 18 minutiae points overall, we have reduced the number to less than 10 points and were still able to authenticate. Indeed, the concrete threshold depends on the amount of perceived and stored minutiae, image quality, and the applied scoring system. Since these factors cannot be reviewed for the proprietary algorithm, further investigation is not meaningful. Nevertheless, from these examples, we can already conclude that this device is not compliant with ISO/IEC 19794-2 and several corner cases can be exploited to make attacks more reliable. More examples can be found in <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Known Template Attack</head><p>Due to the poor performance of the algorithm, it becomes clear on how frighteningly little data is needed to trick this device. That's why we evaluated a more general threat for biometric devices related to the work from <ref type="bibr" target="#b3">[4]</ref>. Biometric data is stored and used on multiple devices like smartphones, smart cards, and ID cards. Furthermore, it is known that the integrated memory in these devices is not fully secure. A large number of attacks have been published in the past to read sensitive data from different kinds of memory without authorization, like <ref type="bibr" target="#b20">[21]</ref>. Additionally, software bugs and side-channels will further augment the attack surface of systems storing and processing biometric data. A very close example is given by <ref type="bibr" target="#b6">[7]</ref>. They demonstrate how non-invasive sidechannel attacks can be used to extract the template data from matching algorithms during processing. In the end, the leaked data can be used to create artificial fingerprints with similar features like the original <ref type="bibr" target="#b3">[4]</ref>.</p><p>To take up this work, we have tested how resistant this particular system is against the reuse of template data. Therefore, we extracted the corresponding template from the fingerprint of the enrolled test person, including minutiae coordinates, types and orientations. Based on this information only, we started to create several artificial fingerprints. We placed the correct type of minutiae at their relative locations and successively added some arbitrary ridges by applying the findings of our previous analysis. The resulting fingerprint images can be seen in <ref type="figure" target="#fig_4">Figure 8</ref>. Obviously, any human can recognize that these fingerprints are clearly counterfeit, but the implemented algorithm accept them without complaining. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">Limitations</head><p>In the following, we discuss the limitations, obstacles, and assumptions we have made for the attacks. First of all, all attacks shown suffer from the fact that the attacker needs to guess which finger is enrolled. Starting from 10 fingers, we can halve this number by figuring out if a person is right or left-handed. In addition to that, most users will deliberately use the thumb or index finger, due to the way how a smart card is held with a single hand. Additionally, the cropped fingerprint section needs to be part of the enrolled template, although it is unknown to the attacker. However, the device manual, like most fingerprint matching systems, advises the user to increase coverage as much as possible during enrollment <ref type="bibr" target="#b27">[28]</ref>. This increases the usability as much as the chances of a successful attack. At least, the central part of the fingerprint might always be covered. Additionally, some attacks require that the selected fingerprint section need to physically and digitally fit the size of the sensor (e.g. 11×11 mm, 192×192 pixel). Having a physical copy of the fingerprint the relevant area can easily be measured. Other cases, such as picture extraction as shown in <ref type="figure" target="#fig_2">Figure 5</ref>, require a special scaling ratio related to the target distance. For similar setups, these values could be derived from <ref type="table">Table 1</ref>. To determine the limits of this technique, we have evaluated how the system responds when different zoom levels will be applied. Starting from an ideal section with a size of 192×192, we incrementally selected a smaller/larger area of the fingerprint and cropped it again to the size of 192×192 pixel. This transition relates to the error made during the extraction of the fingerprint by estimating the distance and dimension of the finger. As shown in <ref type="table" target="#tab_3">Table 2</ref>, an error of ± 30 pixel can still result in a valid authentication.</p><p>When a promising image region has been selected and scaled, any irregularities need to be compensated. The easiest way is to use image editing tools to change the contrast, brightness or gamma values of the image. In this context, analysis tools for fingerprints such as vFinger <ref type="bibr" target="#b17">[18]</ref> can be used to measure if changes have improved or degraded the overall quality. For us, a subjective review was always sufficient. In addition, enrollment  algorithms like <ref type="bibr" target="#b17">[18]</ref> will also help to compose decent fingerprints out of multiple photos from different parts of the fingerprint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>In the final section, we discuss open questions and conclude our findings. We also describe countermeasures and ideas to make this and similar devices more secure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Countermeasures</head><p>Our research has shown that, besides ARM memory protection, no further active or passive countermeasures in hard-or software is used on the evaluated system. In the following section, we want to summarize what techniques can be applied to mitigate fraud. The shown attacks generally benefit from the missing replay and liveness detection. On embedded devices, replay detection can be done by using rolling or fuzzy hashes of alreadyseen fingerprints. These hash methods are able to identify bit-identical samples, as well as slightly modified ones. An introduction to this and additional information can be found in <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b9">[10]</ref>. For live detection capabilities, the device might process multiple samples instead of single ones or integrate more sophisticated sensors able to evaluate the physical characteristics of the test object. To protect the on-device communication, data bus encryption can be used to mitigate wiretapping attacks. In addition, session identifiers, nonces or timestamps can be used to detect replay attacks of encrypted content. Hardware countermeasures like logic duplication and mesh detectors are able to detect physical modification of the device <ref type="bibr" target="#b16">[17]</ref>. To prevent side-channels, as shown in <ref type="bibr" target="#b6">[7]</ref>, dummy instructions or side channel free algorithms must be used. Overall, it will be important to improve and modify the internal thresholds and decrease the false match rate. In particular, the guideline and parameters for matching and decision from ISO/IEC 19794-2 should be taken into account <ref type="bibr" target="#b11">[12]</ref>. For users, we highly recommend making use of the optional 3-factor authentication which requires a valid card, PIN, and the fingerprint. In the end, most countermeasures will affect the product's performance, cost and user acceptance, but will strengthen trust and confidence. Even when other attacks remain possible, it will increase the effort, costs, and skills to attack such a device in a meaningful way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Conclusion</head><p>In this paper, we presented the fundamentals of biometric fingerprint authentication based on the example of a new match-on-card device created by a company who must not be named. We have analyzed the already available demo card for access control of their match-on-card platform, which is going to be integrated into upcoming payment and identity cards <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b15">16]</ref>. The final product version could not be evaluated because it is not released and due to legal and ethical issues. However, this work is intended to help developers and responsible parties to improve this and similar systems before deployment and point out the risks to the customers beforehand. In summary, we have shown how software and hardware hacking techniques can be used to bypass the match-on-card device. The underlying threat model requires to steal or copy the card and extract some biometric data of the user. Using these ingredients, an attacker can exploit several design flaws to spoof the communication between the CPU and sensor. Due to this issue, it is possible to pass arbitrary data to the biometric matching algorithm, and this way inject digital fingerprint dummies to bypass the authentication mechanism. The required biometric data will be unintentionally spread by a user touching the card or any other object. This data can be copied and collected using various techniques. To demonstrate this, we have evaluated how latent fingerprints can be photographed from surfaces like the card itself. In addition to that, we have tested how sufficient fingerprint dummies can be created from pictures showing the palms of a victim. During this step, the attacker normally needs to create a physical dummy, which is an elaborate and error-prone task, as shown in <ref type="bibr" target="#b5">[6]</ref>. In contrast, our attack can make use of digital dummies that vastly increase the quality, ease of use and reusability of the dummy. Furthermore, we have demonstrated the practical impact of leaked fingerprint templates on a real device. In comparison to <ref type="bibr" target="#b3">[4]</ref>, this is possible even without the effort of creating natural-looking fingerprints from the template. In fact, we created obviously counterfeit fingerprints that nevertheless could be used to bypass the matching algorithm successfully.</p><p>In conclusion and with respect to the threats discussed in <ref type="bibr" target="#b10">[11]</ref> and <ref type="bibr" target="#b25">[26]</ref>, this device is suffering from several kinds of attacks: the use of dummies (no liveness or replay detection), the use of latent prints (reuse of fingerprint residues) and the use of biometric lookalikes (known template attack). The main reasons for this are the weak matching algorithm, badly chosen thresholds and the lack of software and hardware countermeasures. As a consequence, an impostor can easily impersonate another person who is enrolled and gain access to the protected assets. For this reason and with respect to <ref type="bibr" target="#b10">[11]</ref>, the evaluated architecture cannot be considered secure. Compared to a PIN-protected card, nobody can prevent that the secret key will be unconsciously leaked by touching the device, taking pictures or in various other ways. A PIN-protected card provides way more protection because the attacker needs to guess, extort or find the written PIN, which is at least under the control of the user. To improve the idea of match-on-card fingerprint authentication, we provide several countermeasures for the responsible people. To evaluate our test cases on this or similar platforms, we publish our tools and examples in a public repository <ref type="bibr" target="#b8">[9]</ref>.</p><p>Disclosure Note. The results have been disclosed to the company before publication on July 3rd, 2018. The company requested to remove all of their brands from the report. The company also wants to state that the analyzed product, a version of the company's access card, was discontinued and represents technology that is severely outdated from a hardware, firmware and security feature perspective. Additionally, there are fundamental architecture and technology differences between the company's access control and the payment and ID offerings. The technology and findings of the report are not relevant for the company's payment and ID products, and the findings relate in no way to the current state of the company's technology offering. The authors want to state that there is no legal agreement with the company. The analyzed cards have been ordered from the company's online shop, and the device is still available there. We don't know whether and how the architectural and technological differences impair the attacks on other devices.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Frontside of the uncased access control card.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Step-wise extraction process: 1. Initial photo of a smart cards surface with latent prints (w/o modification); 2. Remove irrelevant parts of the image; 3. Grayscale and color inversion; 4. Crop a final digital fingerprint dummy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Original finger images (cropped by 450×450 pixel) and obtained fingerprint dummies for 3-7m distance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Replace irrelevant ridges with circle structures to evaluate the corner cases of the matching algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Hand-crafted fingerprint dummies only based on template data, with minutiae locations and directions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Evaluation of zoom thresholds. 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">MasterPrint: Exploring the Vulnerability of Partial Fingerprint-Based Authentication Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aditi</forename><surname>Roy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2013" to="2025" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Atmel Corporation</title>
		<ptr target="http://www.atmel.com/products/microcontrollers/arm/sam4s.aspx" />
	</analytic>
	<monogr>
		<title level="m">SAM4S ARM Cortex-M4 Microcontroller Manual</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Security evaluation of biometric authentication systems under real spoofing attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Biggio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Battista</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IET biometrics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="11" to="24" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>goo</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fingerprint image reconstruction from standard templates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raffaele</forename><surname>Cappelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on pattern analysis and machine intelligence</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">29</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
				<ptr target="https://www.ccc.de/en/updates/2017/iriden" />
		<title level="m">Chaos Computer Club breaks iris recognition system of the Samsung Galaxy S8</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
		<respStmt>
			<orgName>Chaos Computer Club</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Chaos Computer Club breaks Apple TouchID</title>
		<ptr target="https://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid" />
		<imprint>
			<date type="published" when="2013" />
		</imprint>
		<respStmt>
			<orgName>Chaos Computer Club</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Side-Channel Attacks on Fingerprint Matching Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oswald</forename><surname>Dürmuth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pastewka</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International Workshop on Trustworthy Embedded Devices</title>
		<meeting>the 6th International Workshop on Trustworthy Embedded Devices</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Product Specification FPC1020</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fingerprints</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Github</forename><surname>Repository</surname></persName>
		</author>
		<ptr target="https://github.com/julieeen/swipe" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Security analysis for fingerprint fuzzy vaults</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jesse</forename><surname>Hartloff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">8712</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Internation Biometric Performance Testing Conference (IBPC)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scheuermann</forename><surname>Henniger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kniess</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>On security evaluation of fingerprint recognition systems</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">ISO/IEC 19794-2:2011: Information technology -Biometric data interchange formats -Part 2: Finger minutiae data</title>
		<imprint>
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
	<note>International Organization for Standardization</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anil</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianjiang</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karthik</forename><surname>Nandakumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
<note type="report_type">Fingerprint matching</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Handbook of biometrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anil</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Flynn</surname></persName>
		</author>
		<editor>Arun A. Ross</editor>
		<imprint>
			<date type="published" when="2007" />
			<publisher>Springer Science &amp; Business Media</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A fuzzy vault scheme</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ari</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Madhu</forename><surname>Sudan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Designs, Codes and Cryptography</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="237" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Thumbs Up: Mastercard Unveils Next Generation Biometric Card</title>
		<ptr target="https://newsroom.mastercard.com/press-releases/thumbs-up-mastercard-unveils-next-generation-biometric-card/" />
		<imprint>
			<date type="published" when="2017-04-20" />
			<publisher>Mastercard Inc., Press Releases</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Hardware security: Design, threats, and safeguards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Debdeep</forename><surname>Mukhopadhyay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rajat Subhra</forename><surname>Chakraborty</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Biometric Technology Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Neurotechnology</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">White paper: Understanding Biometric Performance Evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Precise</forename><surname>Biometrics</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">B</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2014-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Saleae Logic. The logic analyzer you&apos;ll love to use</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Inc</forename><surname>Saleae</surname></persName>
		</author>
		<ptr target="https://www.saleae.com/" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On a new way to read data from memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Samyde</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Skorobogatov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quisquater</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings -1st International IEEE Security in Storage Workshop</title>
		<meeting>-1st International IEEE Security in Storage Workshop</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="65" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Ich sehe, also bin ich ... du&quot;, Talk at 31C3</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Starbug</surname></persName>
		</author>
		<ptr target="https://events.ccc.de/congress/2014/Fahrplan/events/6450.html" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Security Impact of High Resolution Smartphone Cameras</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Fiebig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Krissler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronny</forename><surname>Hänsch</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Visa Inc</surname></persName>
		</author>
		<ptr target="https://usa.visa.com/about-visa/newsroom/press-releases.releaseId.15401.html" />
		<title level="m">Press Here! Visa Begins Pilots of New Biometric Payment Card</title>
		<imprint>
			<date type="published" when="2018-01-14" />
		</imprint>
	</monogr>
	<note>Press Releases</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">NIST Fingerprint Image Software 2 (NFIS2)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Garris</forename><surname>Watson</surname></persName>
		</author>
		<ptr target="http://fingerprint.nist.gov/NFIS" />
	</analytic>
	<monogr>
		<title level="j">National Inst. of Standards and Technology</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Fingerprint authentication and security risks in smart devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rehman</forename><surname>Zafar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automation and Computing (ICAC), 2016 22nd International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">A Norwegian biometric smart card company. Product Overview and Product Sheets</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A Norwegian biometric smart card company. Access Card Product Manual</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
