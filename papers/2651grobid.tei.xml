<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:49+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Case for System Testing with Swift Hierarchical VM Fork</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junji</forename><surname>Zhi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Toronto</orgName>
								<orgName type="institution" key="instit2">University of Toronto</orgName>
								<orgName type="institution" key="instit3">University of Toronto</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sahil</forename><surname>Suneja</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Toronto</orgName>
								<orgName type="institution" key="instit2">University of Toronto</orgName>
								<orgName type="institution" key="instit3">University of Toronto</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eyal</forename><surname>De Lara</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Toronto</orgName>
								<orgName type="institution" key="instit2">University of Toronto</orgName>
								<orgName type="institution" key="instit3">University of Toronto</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">The Case for System Testing with Swift Hierarchical VM Fork</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>System testing is an essential part of software development. Unfortunately, comprehensive testing of large systems is often resource intensive and time-consuming. In this paper, we explore the possibility of leveraging hierarchical virtual machine (VM) fork to optimize system testing in the cloud. Testing using VM fork has the potential to save system configuration effort, obviate the need to run redundant common steps, and reduce disk and memory requirements by sharing resources across test cases. A preliminary experiment that uses VM fork to run a subset of MySQL database test suite shows that the technique reduces VM run time to complete all test cases by 60%.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>System testing is an essential part of software development which aims to guard systems against bugs and ensure quality <ref type="bibr" target="#b5">[5]</ref>. Yet testing large systems is often difficult. One difficulty lies in configuring a system environment for test <ref type="bibr" target="#b18">[19]</ref>. Testers may need to prepare hardware, certain versions of drivers, libraries, packages, or set the applications to certain state. Some non-functional tests, e.g., stress or performance tests, may even require more specialized configurations that are difficult to replicate <ref type="bibr" target="#b9">[10]</ref>. In addition, system testing can be timeconsuming. For example, "large tests" in MySQL <ref type="bibr" target="#b15">[16]</ref> and Ballista <ref type="bibr" target="#b6">[7]</ref> test suites require up to eight hours and 24 hours to execute, respectively.</p><p>Cloud computing creates new opportunities for system testing <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b8">9]</ref>. By configuring a virtual machine (VM) image with the appropriate testing environment, developers can boot multiple instances that leverage the power of the cloud to run a large number of test cases in parallel. This approach leverages the strong isolation properties provided by the VM to formulate testing as an embarrassingly parallel task, where VMs run fully independent test case. However, we observe that this approach requires redundant execution of common test steps, and does not take advantage of the resource sharing opportunities that exists across VMs running different tests.</p><p>In this paper, we propose to use hierarchical VM fork to optimize system testing on the cloud. VM fork <ref type="bibr" target="#b13">[14]</ref> mimics the semantics of UNIX process fork at VM level. It enables the cloning of a VM into multiple child VMs on the same host or across a cluster. Child VMs inherit the state from their parent including its memory and disk. Since most of the relevant data, executables and configurations needed by a clone are already loaded in its memory by the time of creation, a child VM can readily participate in ongoing tasks such as SIMD computations <ref type="bibr" target="#b1">[2]</ref>.</p><p>The proposed approach has the potential to reduce testing cost on the cloud by eliminating the redundant test steps and expensive clean-up actions. With VM fork, common test steps only get executed once as intermediate state is automatically replicated from parent to child VM(s). Similarly, because different test cases run in isolation, a VM can be simply terminated when a test case completes. In addition, a test framework built on top of VM fork reduces resource requirements by enabling efficient memory and disk sharing between concurrently executing test cases.</p><p>To determine the potential benefits of the proposed approach, we conducted a preliminary experiment with a subset of the MySQL test suite. Because the current VM fork implementation does not support hierarchical forking, we used the QEMU snapshots <ref type="bibr" target="#b20">[21]</ref> to emulate this functionality. Even in this non-ideal setting (booting a new VM out of a snapshot is slow and VMs do not share memory, only disk), our approach (1) takes 60% less time to complete than an alternative setup that executes test cases sequentially and (2) requires 29% and 70% less CPU cycles and disk space, respectively, than a naive approach that runs test cases in parallel but does not leverage the state sharing opportunities between test cases.</p><p>The rest of this paper is organized as follows: Section 2 discusses the related work in system testing on the cloud. Section 3 introduces our approach and Section 4 discusses the challenges and limitations. Then we present the case study and discuss the preliminary outcome in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System Testing on the Cloud</head><p>System testing is essential for ensuring software system quality <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b7">8]</ref>. It generally consists of three phases: system deployment and configuration, test suite execution, and functional verification or non-functional property measurement. System testing can consume a large portion of software development costs <ref type="bibr" target="#b24">[25]</ref>.</p><p>Each system test case (TC) consists of sequential steps. <ref type="table" target="#tab_0">Table 1</ref> lists some example TC sequences. For TC#1, the sequence is A0-B1-C1. The rest TCs are likewise. A TC is considered successful if, after the execution of all its steps, the system behavior conforms to the Functional Requirement Specification(s) <ref type="bibr" target="#b5">[5]</ref>.</p><p>Software testing is starting to migrate to the cloud <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b14">15]</ref>. System testing on the cloud generally has two execution models: (1) End users request service providers to prepare a pre-configured environment, including OS, web server, database, compiler, testing tools, etc. and submit their systems or applications and the corresponding test tasks. Such model is also named Testingas-a-service (TaaS) <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b23">24]</ref>, which exposes services like test case auto-generation, and test auto-execution on the cloud, to which end users subscribe; (2) Service providers (e.g., Amazon EC2) provide infrastructure support that allows end users to create independent VMs and optimize the resource consumption for testing activities. One example is D-Cloud <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>We summarize the benefits of porting software testing to the cloud <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b8">9]</ref>: (1) cost savings by renting testing infrastructure, (2) accelerated overall testsuite execution in parallel, with each VM packaged with the entire operational environment and encapsulating all dependencies for testing and (3) realistic performance and scalability testing using large cloud infrastructure as compared to limited internal infrastructure. Simple VM checkpointing has also been used for debugging and software testing <ref type="bibr" target="#b22">[23,</ref><ref type="bibr">17,</ref><ref type="bibr">6,</ref><ref type="bibr" target="#b19">20]</ref>; however, these previous efforts provide limited sharing between VMs and do not address redundant step execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Our approach</head><p>We make the following observations: (1) There exist many commonalities or overlapping steps (e.g., system configuration and test data loading) among TCs. For example, the four TCs in <ref type="table" target="#tab_0">Table 1</ref> all share the same step A0. (2) TCs share the same code base.</p><p>To take advantage of the above observations, we propose to use VM fork as a building block to improve system testing efficiency. VM fork is a new abstraction in virtualization-based cloud computing <ref type="bibr" target="#b13">[14]</ref>. VM allows rapidly cloning a VM into dozens of replicas running in the same or different hosts. These replicas share the initial state of their parent and thus are stateful workers ready to accept tasks.</p><p>According to Observation 1 and 2, since there exist commonalities in test steps and code base, TCs share certain run-time state, including CPU, disk or memory state. VM fork can be leveraged to enable spawning multiple child VMs from a parent on the fly. Each child VM inherits all the ready state of its parent and thus is able to participate in the ongoing testing tasks.</p><p>With our approach, TC execution flow changes in two ways: (1) The common steps only execute once and then its resulting state is replicated from parent to child VM(s); (2) VM fork can eliminate the need to execute clean-up steps by simply recollecting or destroying the VMs after the TC execution. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates a workflow instance of executing the TCs in <ref type="table" target="#tab_0">Table 1</ref> with VM fork. Each arrow edge denotes a test step and each cube represents a VM instance. Also, the arrows are tagged with test steps that map to the TCs that we consider in the case study (Section 5).</p><p>The workflow begins when the tester configures the VM which hosts the System under Test(SUT). Since all TCs share the common step A0, the base VM is forked into multiple child VMs after executing A0. Similarly, since TC#1 and TC#2 share the common step B1, the VM forks into two instances for these two TCs. To re-use the common steps, a multi-level VM fork mechanism is needed which enables forking a VM multiple times during its lifecycle and thus re-using any sequence of common steps. The more efficient the process of spawning a child VM is, the finer granularity of test step re-use we can achieve. The end result is that VM workers form a hierarchical structure. This is in contrast to starting each VM from scratch and re-doing each configuration or setup step from the beginning. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Challenges and Limitations</head><p>To achieve the benefits of a testing framework based on hierarchical VM fork, we need to find an efficient and practical solution to each of the following challenges:</p><p>• Latency and space: The latency of forking VMs is important. We would like to minimize the overhead of forking a new VM so that it does not become a dominant factor in test execution. To do so, a potential approach to optimize VM fork is to implement the memory and disk copy-on-write. Snowflock <ref type="bibr" target="#b13">[14]</ref> has shown that fast VM cloning is possible, yet it only implements single-level fork.</p><p>In terms of space, since VMs are large entities with Gigabytes of footprint, forking multiple VMs can be space-consuming if not done properly. Similar to the strategy that we discussed to reduce latency, disk copy-on-write can be used to reduce space consumption.</p><p>• When to fork: The decision of when to fork depends on whether the cost of forking is lower than the benefit of not having to execute the common steps. A run-time profiling may be needed to analyze the cost of each test step.</p><p>• Where to fork: Forking locally allows the local memory and storage to be efficiently shared among VMs. However, the increasing number of VMs causes pressure on the local host. When the resource needs exceed the local capacity, it is probably wise to spawn a new VM in a remote host, which achieves scalability and elasticity at the same time. In the latter case, fork latency is influenced by the network bandwidth. The decision of where to fork needs to consider how much forking will happen down the line. Potentially early forks can be used to spread the workload across a large number of hosts and the subsequent ones can be used to leverage the multiple CPUs on each host.</p><p>• VM fork transparency: Requiring test engineers to rewrite their test suites to leverage VM fork is unrealistic. Instead, we observe that automatic test suites tend to be written using well-structured test scripts (e.g., Listing 1). We hypothesize that it is possible to leverage static analysis techniques to identify the re-usable common steps and partition test execution automatically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1"># T e s t 2 drop t a b l e i f e x i s t s t ; 3 c r e a t e t a b l e t ; # c o n f i g s t e p 4 i n s e r t i n t o t SOME ROWS; 5 d e l e t e from t where CRITERIA; 6 i n s e r t i n t o t DELETED ROWS ; 7 drop t a b l e t ; # c l e a n −up s t e p 8 9 # T e s t 2 10 drop t a b l e i f e x i s t s t ; 1c r e a t e t a b l e t ; # c o n f i g s t e p 12 i n s e r t i n t o t SOME ROWS; 13 d e l e t e from t where CRITERIA; 14 a l t e r t a l b e t add column C; 15 drop t a b l e t ;</head><p># c l e a n −up s t e p Listing 1: Psuedo-SQL code for two MySQL tests</p><p>• Fork side effects: For example, child VMs need to be re-configured so as to avoid IP conflicts with the parent or each other. For VMs that use remote resources (e.g., file systems, or databases), they have to reset their IP connections.</p><p>A test framework based on VM-fork is not without some limitations:</p><p>• We assume that there exist re-usable overlapping steps among TCs. We anticipate little or no savings if such steps do not exist.</p><p>• Hosting an SUT in a VM has an impact on the SUT performance. For some non-functional testing types, such as load testing <ref type="bibr" target="#b0">[1]</ref> that requires precise performance measurement, the existence of the virtualization layer may introduce undesired overheads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">A Case Study: Testing MySQL</head><p>We conducted a preliminary case study to provide evidence of the potential benefits of the proposed approach. Because we do not have a working system that supports hierarchical VM fork, we leverage the existing QEMU snapshot functionality <ref type="bibr" target="#b20">[21]</ref> to emulate VM fork. The forking procedure is as follows: For an interim VM (i.e., base VM) that needs to fork into two separate instances, we use KVM to create one snapshot that is identical to the base VM. We then boot another VM (i.e. VM2) based on that snapshot. Since the snapshot uses Redirecton-Write <ref type="bibr" target="#b10">[11]</ref>, all the disk changes by VM2 will be preserved in the snapshot delta file (e.g., files with ".qcow" extension) instead of being committed to the base VM image. We can execute a TC in VM2 and then discard the snapshot to prevent that TC from polluting the base VM. This approach, however, has two limitations: (1) booting a new VM out of a snapshot is slow and (2) VMs do not share memory, only disk. Therefore, our results are conservative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">System under Test</head><p>We experiment with the MySQL(v5.5) "large tests" suite, which executes the common database operations on a set of large tables with 274 trillion rows. For simplicity, we use a smaller test table (with 1.1 trillion rows) in our study. Nevertheless, constructing such a large test table for each TC is expensive in time and space. Whereas the complete test suite includes tens of TCs, we focus our effort on a small subset of 4 representative TCs that exercise database insert, update, delete, alter, select and update functions. The TCs are shown in <ref type="table" target="#tab_1">Table 2</ref>. Construct a large table, delete a large number of rows which conform to a certain criteria, and then inserting the deleted rows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>Construct a large table, delete a large number of rows which conform to a certain criteria, and then add a new column to the table.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>Construct a large table, select a large number of rows which conform to a certain criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head><p>Construct a large table, update a large number of rows which conform to a certain criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Experiment</head><p>We run the four TCs in three configurations. The baseline runs each TC in sequential order in a single host (Config. I), which is the existing approach of executing the MySQL TCs. In Config. II, we run each TC in a separate VM concurrently. In Config. III, we run TCs with the emulated VM fork. In order to re-use the test steps, we first identify one common step among four TCs, i.e., <ref type="table">constructing a large table (insert table)</ref>, and a common step (i.e., delete table) between TC#1 and TC#2. Therefore, forking a VM after these common steps is our way to re-use the steps. <ref type="figure" target="#fig_0">Figure 1</ref> presents the test suite execution workflow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Hardware Setup</head><p>Our , a VM management user interface utility, in our experiments. The host OS runs on a physical machine with a 64-bit 4-Core AMD A10-5700 APU processor, 12GB RAM and a 2TB hard drive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Experiment Outcome</head><p>We run the experiment three times and average the statistics. In <ref type="figure" target="#fig_2">Figure 2</ref>, the first bar presents the outcome of running in Config. I and the rest four bars denote Config. II.</p><p>Since each TC shares the first step (i.e., insert table), all bars share a segment of almost the same length (coloured blue in <ref type="figure" target="#fig_2">Figure 2</ref>). The blue segment also repeats itself at the first bar since other three TCs needs to re-execute this step again. <ref type="figure" target="#fig_3">Figure 3</ref> presents the outcome for Config. III. Compared with Config. I and II, there are two additional types of cost incurred by the emulated VM fork: the overhead of creating VM snapshots and booting a new VM from a snapshot. During the execution of TC#1, its host VM is checkpointed twice to create two snapshots which are reused for other TCs. The checkpointing costs are denoted by two tiny green segments at the bottom bar in <ref type="figure" target="#fig_3">Figure 3</ref>. The cost of booting VMs from snapshot is denoted by the brown segments of the other three bars.</p><p>We also measure the VM snapshot size for each TC and compare them with the base VM size in Config. I and II. The result is shown in <ref type="figure" target="#fig_4">Figure 4</ref>.</p><p>We make the following observations:</p><p>1. Running TCs in parallel with the emulated VM fork reduces execution time and its performance is only limited by the longest TC (i.e., the bottleneck) in the test suite. More concretely, the bottleneck in Con- <ref type="figure">fig. III</ref>   no need to execute the common steps (i.e., blue segments in VM #2, #3 and #4 and orange segments in VM #2) in Config. III. Also, the cost of creating snapshots in TC#1 is negligible. As a result, testers do not have to pay for the run time associated with re-executing these test steps. This is shown in the cumulative execution time of TCs: Config. III takes 690s in total while Config. II consumes 971s (29% savings).</p><p>3. Creating a snapshot of the base VM for a TC consumes less than 5% disk space of the base VM image( <ref type="figure" target="#fig_4">Figure 4)</ref>. Therefore, Config. III requires only one base VM image and four snapshots while Config. II requires four base VMs (70%+ saving).</p><p>4. The cost of the test environment configuration step, which is not shown in the figures, are saved in Config. III, since any child VMs forked from a parent VM will automatically inherit all its state. Although the process can be automated (e.g., by Shell scripts) to prepare each VM for test in Config. II, it requires some engineering efforts to compose and manage such automation tools or scripts, which is not needed with VM fork.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we propose to leverage the technique of hierarchical VM fork to optimize system testing in a virtualization-based cloud. Testing on the cloud can yield the advantage of speeding up TCs by running in parallel. The proposed approach reduces the cost of running system tests on the cloud by eliminating the redundant steps among TCs and by allowing VMs to share memory and disk. Our preliminary experiment uses an emulated hierarchical VM fork implementation to execute a small por-  Even in this limited setup, our technique reduces the test completion time by 60% compared to the serial execution, and lowers the CPU and disk space usage by 29% and 70%, respectively, compared to a naive approach that runs TCs in parallel but does not leverage the state sharing opportunities between TCs.</p><p>For future work, we plan to implement the discussed hierarchical VM fork. We envision a test framework which incorporates VM fork and facilitates system testing on the cloud.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: An Example of Testing Workflow with VM Fork</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>hardware setup is as follow: the MySQL (v5.5) SUT is hosted in a 64-bit Ubuntu 12.04 (Kernel v3.2.0) VM. The size of VM image is 21GB. The KVM hypervi- sor (v3.8.0) [13] operates on an Ubuntu 12.04 (Kernel v3.8.0) host OS and a QEMU emulator (v1.0). We also use libvirt(v1.0.4)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Serial (Config. I) and Naive Parallel (Config. II) Runtime.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Hierarchical VM Fork (Config. III) Runtime.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Disk Usage of Snapshots tion of the MySQL test suite. Even in this limited setup, our technique reduces the test completion time by 60% compared to the serial execution, and lowers the CPU and disk space usage by 29% and 70%, respectively, compared to a naive approach that runs TCs in parallel but does not leverage the state sharing opportunities between TCs. For future work, we plan to implement the discussed hierarchical VM fork. We envision a test framework which incorporates VM fork and facilitates system testing on the cloud.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Test Sequences 
TC# S1 S2 S3 
1 
A0 B1 C1 
2 
A0 B1 C2 
3 
A0 B2 C3 
4 
A0 B3 C4 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>MySQL Test Cases 
TC# Description 

1 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Generating test suites for software load testing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avritzer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weyuker</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis</title>
		<meeting>the 1994 ACM SIGSOFT international symposium on Software testing and analysis</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="44" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multi-processor reconfigurable in single instruction multiple data (simd) and multiple instruction multiple data (mimd) modes and method of operation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balmer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Gove</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Guttag</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><surname>Ing-Simmons</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">US Patent</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">777</biblScope>
			<date type="published" when="1993-05-18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Design of a software testing environment for reliable distributed systems using cloud computing technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Banzai</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Koizumi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kanbayashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Imada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hanawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>D-Cloud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the</title>
		<meeting>the</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<title level="m">IEEE/ACM International Conference on Cluster, Cloud and Grid Computing</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="631" to="636" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bergmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Phpunit</surname></persName>
		</author>
		<idno>Online; Ac- cessed: 2014-05-23</idno>
		<ptr target="http://phpunit.de/manual/current/en/fixtures.html" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A uml-based approach to system testing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Briand</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Labiche</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ł UML 2001The Unified Modeling Language. Modeling Languages, Concepts, and Tools</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="194" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Ballista os robustness test suite</title>
		<idno>Accessed: 2014-02-10</idno>
		<ptr target="http://users.ece.cmu.edu/~koopman/ballista/ostest/ostest_download.html" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
		<respStmt>
			<orgName>CMU</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A survey of software testing practices in canada</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Garousi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Systems and Software</title>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="1354" to="1376" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Large-scale software testing environment using cloud computing technology for dependable parallel and distributed systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanawa</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Banzai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Koizumi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kanbayashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Imada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="428" to="433" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Parallel file system testing for the lunatic fringe: The care and feeding of restless i/o power users</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hedges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Loewe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mclarty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Morrone</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mass Storage Systems and Technologies, 2005. Proceedings. 22nd IEEE/13th NASA Goddard Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ibm</forename><surname>Ibm</surname></persName>
		</author>
		<idno>Accessed: 2014-02-10</idno>
		<ptr target="http://www.ibm.com/developerworks/tivoli/library/t-snaptsm1/index.html" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A survey of software testing in the cloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Inç</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ari</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sozer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Security and Reliability Companion</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="18" to="23" />
		</imprint>
	</monogr>
	<note>2012 IEEE Sixth International Conference on</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">kvm: the linux virtual machine monitor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kivity</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kamay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Laor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lublin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liguori</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Linux Symposium</title>
		<meeting>the Linux Symposium</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="225" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Snowflock: rapid virtual machine cloning for cloud computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lagar-Cavilla</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>Whitney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Scannell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Patchin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rumble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>De</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lara</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Brudno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Satyanarayanan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th ACM European conference on Computer systems</title>
		<meeting>the 4th ACM European conference on Computer systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Remote network labs: An on-demand network cloud for configuration testing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Orban</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="83" to="91" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mysql</forename><surname>Mysql5</surname></persName>
		</author>
		<ptr target="https://dev.mysql.com/doc/refman/5.5/en/mysql-test-suite.html" />
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="volume">5</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Accessed</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2014" to="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Software testing: A research travelogue</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Orso</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rothermel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">36th International Conference on Software Engineering (ICSE&apos;14)</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Future of Software Engineering Session (FOSE&apos;14</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">When to migrate software testing to the cloud?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Parveen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tilley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="424" to="427" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Caste: a cloud-based automatic software test environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peng</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">World Academy of Science, Engineering and Technology</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qemu</forename><surname>Qemu</surname></persName>
		</author>
		<idno>Online; Accessed: 2014-02-25</idno>
		<ptr target="http://wiki.qemu-project.org/Documentation/CreateSnapshot" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Testing in the cloud: Exploring the practice. Software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Riungu-Kalliosaari</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Taipale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Smolander</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="46" to="51" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vmware</forename><surname>Vmware Support</surname></persName>
		</author>
		<idno>On- line; Accessed: 2014-03-01</idno>
		<ptr target="https://www.vmware.com/support/ws55/doc/ws_clone_overview.html" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Testing tasks management in testing cloud environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Software and Applications Conference (COMPSAC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="76" to="85" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Testing as a service over cloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W.-T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fifth IEEE International Symposium on</title>
		<imprint>
			<publisher>Ieee</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="181" to="188" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
