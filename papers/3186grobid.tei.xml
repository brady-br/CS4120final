<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T03:03+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Challenges to Error Diagnosis in Hadoop Ecosystems USENIX Association 27th Large Installation System Administration Conference 145 Challenges to Error Diagnosis in Hadoop Ecosystems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>November 3-8, 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">â€¢</forename><surname>Washington</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>USA</roleName><forename type="first">D</forename><forename type="middle">C</forename></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><forename type="middle">(</forename><surname>Zhanwen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">)</forename><surname>Li</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>He, Citibank;</roleName><forename type="first">Nicta</forename><forename type="middle">;</forename><surname>Siyuan</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liming</forename><surname>Zhu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">South</forename><surname>Wales</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>NICTA</roleName><forename type="first">Xiwei</forename><surname>Xu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Fu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">South</forename><surname>Wales</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Len</forename><surname>Bass</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anna</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhanwen</forename><surname>Li</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">NICTA</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Siyuan</forename><surname>He</surname></persName>
							<affiliation key="aff2">
								<address>
									<settlement>Citibank, Toronto</settlement>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liming</forename><surname>Zhu</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">NICTA</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">University of New South Wales</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiwei</forename><surname>Xu</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">NICTA</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Fu</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">University of New South Wales</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Len</forename><surname>Bass</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">NICTA</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">University of New South Wales</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anna</forename><surname>Liu</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">NICTA</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">University of New South Wales</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">An</forename><forename type="middle">Binh</forename><surname>Tran</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science and Engineering</orgName>
								<orgName type="institution">University of New South Wales</orgName>
								<address>
									<settlement>Sydney</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">NICTA and University of New South Wales; An Binh Tran</orgName>
								<orgName type="institution" key="instit1">NICTA and University of New</orgName>
								<orgName type="institution" key="instit2">University of New</orgName>
								<orgName type="institution" key="instit3">University of New</orgName>
								<address>
									<country>South Wales</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Challenges to Error Diagnosis in Hadoop Ecosystems USENIX Association 27th Large Installation System Administration Conference 145 Challenges to Error Diagnosis in Hadoop Ecosystems</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published">November 3-8, 2013</date>
						</imprint>
					</monogr>
					<note>This paper is included in the Proceedings of the 27th Large Installation System Administration Conference (LISA &apos;13). Open access to the Proceedings of the 27th Large Installation System Administration Conference (LISA &apos;13) is sponsored by USENIX. 1</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Deploying a large-scale distributed ecosystem such as HBase/Hadoop in the cloud is complicated and error-prone. Multiple layers of largely independently evolving software are deployed across distributed nodes on third party infrastructures. In addition to software incompatibility and typical misconfiguration within each layer, many subtle and hard to diagnose errors happen due to misconfigurations across layers and nodes. These errors are difficult to diagnose because of scattered log management and lack of ecosystem-awareness in many diagnosis tools and processes. We report on some failure experiences in a real world deployment of HBase/Hadoop and propose some initial ideas for better trouble-shooting during deployment. We identify the following types of subtle errors and the corresponding challenges in trouble-shooting: 1) dealing with inconsistency among distributed logs, 2) distinguishing useful information from noisy logging, and 3) probabilistic determination of root causes.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>With the maturing of cloud and Hadoop technologies, more and more organizations are deploying and using systems in the Hadoop ecosystem for various purposes. Hadoop is an ecosystem that consists of multiple layers of largely independently evolving software and its deployment is across distributed nodes and different layers.</p><p>Even for experienced operational professionals with limited experience with the Hadoop ecosystem, the deployment and use is highly error-prone and error diagnosis and root cause identification takes a significant amount of time.</p><p>Traditionally, logs and error messages are important sources of information for error diagnosis. In a distributed system, logs are generated from multiple sources with different granularities and different syntax and semantics. Sophisticated techniques have been proposed to produce better logs or analyze existing logs to improve error diagnosis. However, there are a number of limitations of the existing approaches for the situation outlined above.</p><p>Consider one of the error messages that we encountered in our experiments "java.net.ConnectException: Connection refused ". One existing approach is to correlate error messages with source code. Yet knowing where in the Java library this message was generated will not help determine the root cause. The cause of this error is, most likely, a misconfiguration but it is a misconfiguration that indicates inconsistency between multiple items in the ecosystem. Trouble shooting an error message such as this requires familiarity with the elements of the ecosystem and how they interact. This familiarity is primarily gained through experience, often painful. Furthermore, the messages leading up to this error message may be inconsistent or irrelevant. They are usually voluminous, however.</p><p>Providing assistance to non-expert installers of a complicated eco-system such as HBase/Hadoop is the goal of the work we report on here. In this paper, we report some failure experiences in real world deployments of HBase/Hadoop. Specifically, we focus on three key challenges: 1) dealing with inconsistency among distributed logs, 2) distinguishing useful information from noisy logging, and 3) probabilistic determination of root causes.</p><p>There are two assumptions about this work. First, it came out of observing and studying errors committed by nonexpert installers of Hadoop ecosystems. Our target is system administrators and non-experts in HBase/Hadoop. Second, we assume that the developers of such systems will not change the way they record logs significantly although we do hope they produce them with operators more in mind. Thus our initial solutions are around dealing with inconsistency and uncertainties with existing logs. The case studies are all based on an Hadoop/HBase <ref type="bibr" target="#b2">[3]</ref>[5] cluster running on AWS EC2s <ref type="bibr" target="#b1">[2]</ref>.</p><p>The contributions of this paper include:</p><p>1. Identification of different types of errors in Hadoop ecosystem deployment using real world cases and investigations into the root causes of these errors. The majority of errors can be classified into four types:</p><p>â€¢ Operational errors such as missing/incorrect operations and missing artifacts. Errors introduced during restarting/shutting down nodes, artifacts (files and directories) not created, created with the wrong permission or mistakenly moved and disallowed operations due to inconsistent security environment are the major ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="146">27th Large Installation System Administration Conference</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>USENIX Association 2</head><p>â€¢ Configuration errors include errors such as illegal, lexical, and syntax errors in standalone software systems and cross-systems/nodes inconsistency in an ecosystem.</p><p>â€¢ Software errors include compatibility issues among different parts of an ecosystem (e.g. HBase and HDFS compatibility issues) and bugs.</p><p>â€¢ Resource errors include resource unavailability or resource exhaustion, especially in cloud environment, that manifest themselves in highly uncertain ways and lead to system failures.</p><p>The diagnosis of these errors and locating the true causes is more difficult in an ecosystem setting, which leads to our second contribution.</p><p>2. Identified specific error diagnosis challenges in multilayer ecosystems deployed in distributed systems: 1) dealing with inconsistency among distributed logs, 2) distinguishing useful information from noisy logging, and 3) probabilistic determination of root causes. These highlighted the gaps in the current approaches and lead to our third contribution.</p><p>3. Introduced a new two-phase error diagnosis general framework for distributed software ecosystem from the operator (rather than the developer) perspective. This new approach attempts to remove some inconsistency and noise by combining phase-one local diagnosis with phase-two global diagnosis and produces a probability-ranked list of potential root causes. This simplifies the complexities of constructing correlations between logging information and root causes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related Works</head><p>In previous work, efforts have been placed into the improvement of logging mechanisms for providing more comprehensive system information to assist system management. For example, Apache Flume <ref type="bibr" target="#b1">[2]</ref> aims to offer a scalable service for efficiently collecting, aggregating, and moving large amounts of log data in large-scale distributed computing environments. Similar logging systems include Facebook Scribe <ref type="bibr" target="#b9">[9]</ref>, Netflix Edda <ref type="bibr" target="#b13">[13]</ref> and Chukwa <ref type="bibr" target="#b16">[16]</ref>, which are systems for aggregating real-time streams of log data from a large number of servers. These developments of logging systems provide a good basis for collecting up-to-date system information in complex distributed systems, but they do not have the capability to bridge the gap between logging information and error diagnosis.</p><p>Another focus of research of using logging information to assist troubleshooting is to explore effective machine learning approaches for mining critical messages associated with known problems. For example, Xu et. al. <ref type="bibr" target="#b21">[21]</ref> studied the correlation between logs and source code. In <ref type="bibr" target="#b12">[12]</ref>, Nagaraj et. al. troubleshoot performance problems by using machine learning to compare system logging behaviors to infer associations between components and performance. In <ref type="bibr" target="#b11">[11]</ref>, Narasimhan and her team members studied the correlation of OS metrics for failure detection in distributed systems. In <ref type="bibr" target="#b24">[24]</ref>[25] <ref type="bibr" target="#b26">[26]</ref>, Zhou's research group studied the trace of logging information in source codes, and introduced a new logging mechanism to locate the position of bugs with more efficiency. And in <ref type="bibr" target="#b15">[15]</ref>, Oliner et. al. studied the connections between heterogeneous logs and quantified the interaction between components using these logs. There is a general lack of ecosystem awareness in these tools and the ability to deal with log inconsistency and uncertainty as well as cross system incompatability.</p><p>Misconfigurations are another significant issues leading to software system errors. Zhou and her colleagues conducted an empirical study over different types of misconfigurations and their effects on systems by studying several open source projects, including MySQL, Tomcat and etc. <ref type="bibr" target="#b23">[23]</ref>. They focus on the misconfigurations of each individual system, while the correlation of configurations across systems, especially in a distributed environment, is ignored. Randy Katz and his colleagues <ref type="bibr" target="#b17">[17]</ref> studied the connection between configuration and software source code to improve misconfiguration detection but did not cover the connection between configurations and logs, which is critical to operators.</p><p>These existing works give a good basis for understanding some challenges in error diagnosis. But many studies are from the viewpoint of software developers rather than operators. They also did not consider issues around the connections among the logs and configurations at different layers and across different nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Case Study: HBase Cluster on Amazon EC2</head><p>Our case study comes from a real world privacy research project where the goal is to process large amounts of anonymised information using different approaches to see if one can still infer identity from the information. Several sub-projects want to share a HBase/Hadoop cluster which is deployed in Amazon EC2. The operators and users of the cluster are IT-savvy researchers and system admins but not Hadoop or distributed system experts. Although Amazon provides an Elastic Map Reduce (EMR) system with Hadoop pre-installed, the different requirements of the subprojects led to a fresh deployment on EC2 virtual machines.</p><p>An HBase/Hadoop cluster consists of Hadoop Distributed File System (HDFS) for distributed files storage, Zookeeper for distributed service coordination, and HBase for fast individual record lookups and updates in distributed files. Each node in an HBase cluster consists of multiple layers of software systems, shown as <ref type="figure" target="#fig_1">Figure 1</ref> (a). Every layer must perform in a correct manner to ensure the communication across layers/nodes and overall system availability, as shown in <ref type="figure" target="#fig_1">Figure 1</ref> (b).</p><p>The communication between nodes in a Hadoop ecosystem relies on SSH connections, so security, ports and protocols required by SSH must be available. Hadoop, Zookeeper and HBase rely on Java SDK. Updated versions of Java that are compatible are necessary. The Hadoop layer is the basis of an HBase cluster. This layer is controlled by HDFS and MapReduce <ref type="bibr" target="#b2">[3]</ref>. The configurations over the Namenode and all Datanodes <ref type="bibr" target="#b2">[3]</ref>   <ref type="bibr" target="#b5">[5]</ref> in the HBase layer. The full deployment and running of some of our small programs went through several false starts in a matter of weeks by different people independently. We asked the people to record their major errors, diagnosis experiences and root causes.</p><p>(a) (b) <ref type="figure" target="#fig_1">Figure 1</ref> Layers of software systems in Hadoop</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Logging Exceptions and Uncertainties in Determining Root Causes</head><p>In <ref type="table" target="#tab_1">Table 1</ref>, we list some key examples of logs and error messages collected in our Hadoop/HBase deployment process. The "Logging Exception" column records the error messages when the deployment process got interrupted. The "Possible Causes" column listed the possible causes and the relevant information that different operators mentally considered or physically examined during error diagnosis. For errors that are related to connection issues, we use Src and Dest to respectively represent the source and destination nodes. From the operator experiences in the project, locating a root cause from a logging exception is very difficult. A logging exception could result from multiple causes while the connections to these causes are not obvious from an error message.</p><p>For example, a logging "java.net.ConnectException: Connection refused", shown in <ref type="figure" target="#fig_0">Figure 2</ref>, has at least 10 possible causes. And exceptions on different software (in the ecosystem) or on different nodes are sometimes inconsistent but related in a direct and indirect manner. It is an extremely exhausting search process to locate a root cause in a large-scale domain with highly coupled information and many uncertainties.</p><p>In this study, we classify the error analysis into three layers: exception, source and cause. Exception is the error message returned in log files or console; source is defined as the component that originally leads to this exception message; and cause is the reason that the source got the exception. And we classify errors into four groups: operations, configurations, software and resources. We use these classifications in our proposed approach to organize local diagnosis and a global diagnosis. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Configuration errors</head><p>Misconfigurations include legal ones with unintended effects and illegal ones (e.g. lexical, and syntax errors) that are commonly seen in standalone software systems <ref type="bibr" target="#b23">[23]</ref>. We also include the cross-domain inconsistent configurations in such distributed ecosystems. The later one is more difficult to detect because all configurations must be taken as a whole for error examination. We give an example that caused issues in the project. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Operation errors:</head><p>Operation errors include missing operations and incorrect operations. Operation errors cause missing components and abnormal system behaviors, resulting in software failures. For example, HDFS initialization requires a newly formatted file system. Inconsistent File System State Exception shown below will return if this required operation was missing. The formatting is performed externally. The message is not obviously interpretable to lack of formatting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example 2:</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Software errors</head><p>Software errors came from software incompatibility and bugs. One instance is the incompatibility between Hadoop 0.20.x version and HBase 0.90.2, resulting in potential data loss <ref type="bibr" target="#b14">[14]</ref>. Another commonly seen failure due to system incompatibility is certain required Java libraries do not exist. Such case usually happens because of the incompatibility between Java and the OS, and so some required Java libraries are not installed. <ref type="bibr">Here</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Resource errors</head><p>Resource errors refer to resource unavailability occurring in the computing environment. For example, limitation of disk I/O (or failure of SAN disks) could result in significant performance degradation in some nodes, resulting in some exceptions of timeout. However, one key challenge is that many such resource errors are hidden in log files and not correlated with respective resource metrics. Only by looking at different logs from different layers of software in the ecosystem, can the root cause be identified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Discussion: Three Challenges to Troubleshoot Errors with Logs</head><p>Logs guide error diagnosis. There are three challenges that should be addressed for achieving more accurate and efficient error diagnosis in distributed ecosystem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Dealing with inconsistency among logs</head><p>Inconsistent loggings around states and events introduce significant issues to error diagnosis. Inconsistency may occur in a single log file, across multiple log files in different components. Inconsistency of logging information includes two types: inconsistent contexts and inconsistent timestamps.</p><p>Taking a Hadoop ecosystem as an example, an ecosystem consists of a large number of interacting heterogeneous components. Each component has logging mechanism for capturing specific states and events, what messages are put into log files is often determined by the requirements of component itself with no global coordinator for managing these logging messages across components. The decisions of what states and events are put into the log file under what context are not the same in different components. When taking these logging messages across components as a whole for error diagnosis, missing, redundant and contradictory information may introduce context inconsistency.</p><p>Another type of inconsistency comes from inconsistent timestamps in large-scale systems where network latency cannot be ignored. Information logging could be asynchronous as errors and other corresponding information are written into log files. This asynchronous logging contributes to risks of timing inconsistency, which may be misleading in error diagnosis and omit correlated events. Solutions to timing correlation problems exist such as NTP 1 and Google Spanner <ref type="bibr" target="#b8">[8]</ref> but these solutions are not currently implemented in our test stack. Again, we are attempting to deal with what is, rather than what should be.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Distinguishing useful information from noisy logging</head><p>Large-scale distributed systems are constantly producing a huge amount of logs for both developers and operators. Collecting all of them into a central system is often itself a significant challenges. Systems have emerged to create such centralized log collection, for example Scribe from Facebook, Flume from Apache, Logstash 2 and Chukwa <ref type="bibr" target="#b16">[16]</ref> .</p><p>Due to the large amount of information available, error diagnosis is often very time-consuming whether it is done by humans querying the centralized log system or through machine learning systems across all the logs. Traditional error analysis algorithms could encounter scalability issues dealing with a large number of logging messages. Some scalable clusters for logging analysis were developed for addressing this issue <ref type="bibr" target="#b21">[21]</ref> <ref type="bibr" target="#b22">[22]</ref>. But these solutions focus on offline analysis to identify source code bugs while operation issues often require online or nearline analysis putting significant challenge to the analysis infrastructure and algorithm. Thus, it is important to discard noise earlier and effectively for different types of errors at different times.</p><p>In many cases, such as performance issues and connection problems, additional tests and associated logs are required for analysis. They are often time consuming if planned and done reactively through human operators. These additional tests should be incorporated into the error diagnosis tools and logging infrastructure so they are automatically carried out at certain stage of the error diagnosis or proactively done, adding more useful signals to the error diagnosis process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Probabilistic determination of root causes dealing with uncertain correlations</head><p>In error diagnosis, correlation of logging events is critical for identifying the root causes. Many machine-learning techniques have been developed for exploring the correlated events in log files in order to construct more accurate and more comprehensive models for troubleshooting <ref type="bibr" target="#b11">[11]</ref>. However, uncertainties in logs introduce significant challenges in determining root causes Uncertainties in log files are often caused by missing logging messages, inconsistent information and ambiguity of logging language (lexical and syntax). We classify the uncertainties into four types:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Uncertainties Between Exceptions</head><p>In distributed systems, an error occurring in one place often triggers a sequence of responses across a number of connected components. These responses may or may not introduce further exceptions at different components. However, simply mining exception messages from these distributed log files may not detect the connections among these exceptions. Known communications between components should be considered in correlating exceptions and comparing different root causes diagnosis at each component or node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Uncertainties Between Component States</head><p>Accurate logging states and context help filter useless information and guides error diagnosis. They are important information for understanding component statuses and limiting the scope for searching the root cause to errors. Logging states could be fully coupled or fully independent, or with somehow indirect connections. But these dependent relationships among state logging are not described in log files. And missing and inconsistent states logging may further introduce uncertainties in the relationships between states. Dependencies in an ecosystem must be taken into consideration when analysing state logs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Uncertainties Between Events</head><p>In error diagnosis exploring the coherence of logging events is a critical task for tracking the change of system subject to errors, providing a basis for inferring the root cause from exceptions. A challenge for constructing event coherence is uncertainties lying in the relationships between logging events. These uncertainties destroy connections between information, losing data for modeling the sequence of system change subject to errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Uncertainties Between States And Events</head><p>In most cases, logging states and events must be considered at the same time for modeling the system behavior in terms of logging conditions. Ideally logging messages deliver details of events and of corresponding sates across this process. But this obviously is over optimistic. In most log files the connections between states and events contain uncertainties, which destroy the event-state mapping, creating a gap for finding the root causes from logging errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">A Two-Phase Error Diagnosis Framework</head><p>The above challenges are the consequence of current logging mechanisms and overall designs, which are often out of the control of the users. So error diagnosis requires an effective approach that is capable of figuring out the most possible root causes for errors despite of the inconsistency, noise and uncertainty in logs. To achieve this goal in a large-scale distributed computing environment, we are working on two ideas. The first idea is to treat the operations as a set of explicit processes interacting with each other. We model and analyze these processes and track the their progression at runtime. We use the processes to connect seemingly independent events and states scattered in various logs and introduce "process context" for error diagnosis <ref type="bibr" target="#b28">[27]</ref>. In this paper, we introduce the second idea, which proposes a two-phase error diagnosis framework for error diagnosis. The firstphase error diagnosis is conducted at each distributed node with agents for local troubleshooting, and a second-phase is performed on a centralized server for global error diagnosis to compare the various local diagnoses and deal with nodeto-node errors. Unlike existing solutions that have a centralized database aggregating all logging information, in our approach information is highly filtered for the secondphase diagnosis depending on the error types, environment and local diagnosis.</p><p>A framework of this design is shown in <ref type="figure" target="#fig_3">Figure 3</ref>. The key is to let each node or log-file propose a set of potential causes for the errors (if there are logging exceptions in the file) and gather the states of the relevant components, then send these likely causes and component states to a centralized second-phase diagnosis for probability-ranked list of causes using a gossip algorithm <ref type="bibr" target="#b19">[19]</ref>. The logging information that we consider in this framework includes log files from software components, e.g. Hadoop, Zookeeper and HBase, and historical information of resource components, which include records of resource (CPU/Memory) consumption, disk I/O, network throughput, and process states monitored by agent-based systems (e.g. JMX and Nagios in our environment). All of these are seen as log files of components in our approach. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">The first-phase error diagnosis</head><p>The first-phase error diagnosis is conducted with agents located at each distributed node for identifying the errors in the components in the node. This process is described with <ref type="figure" target="#fig_4">Figure 4</ref>. Inputs to an agent include log files of components and configuration files. An agent first summarizes each log file, which is a process to convert logging information into a standard format with consistent terms (lexical and syntax) for later identification. This operation is conducted in the stage of log simplification. For each summarized log file given by the log simplification, the agent uses a mapper, which is a small expert knowledge base responsible to deliver a set of likely causes in response to the logging exception. A mapper offers: a) a list of candidate causes that may contribute to the logging exceptions (which include ERROR and WARNING messages), denoted by , and b) the status of the component, denoted by C s , which includes the status of domain name, ports, accounts, security, tractable actions for software components, and utilization and performance for resource components. Each C e r is associated with a weight w, whose initial value is 1. We define a tuple [C e r , w] to indicate this relationship. These proposed causes and monitored component statuses are considered as a whole by a gossip algorithm, updating the weight w of each C e r with a rule: when a cause C e r conflicts to a component status C ' s , the associate weight w is reduced by 1; and when a cause C e r is supported by another log file, the weight w is then increased by 1. This strategy reduces the number of correlated features (across logging messages) that are less related to errors, creating potential for handling complex problems in a large-scale systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">An Example</head><p>The following is an example for troubleshooting crosssystem inconsistent configuration within an HBase cluster. Cross-system misconfiguration is hard to detect because it is difficult to trace exceptions across multiple systems. In an HBase node (with IP: 10.141.133.22, which is a master node in this cluster), it includes log files respectively from HBase, Hadoop, Zookeeper. When a log file from HBase returns an exception, shown as: <ref type="bibr">2013</ref> The cause to this "java.net.ConnectException" is limited to the availability of domain name of hbaseMaster:9000 (cause 2.a). Although this approach does not provide a 100% accurate error diagnosis, it shows the possibility of using limited information to sort out the most likely causes for a logging error in a complex computing environment with many connected systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">The second-phase error diagnosis</head><p>The second-phase error diagnosis offers troubleshooting for the exceptions that may be across multiple nodes. This process sorts out the possibility of causes that are delivered by the agents in the first-phase error diagnosis.</p><p>Each agent summaries the output of the first-phase error diagnosis into a message, which includes the likely causes with updated weights (if the weight is greater than zero), and the status of each component.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">An Example</head><p>For example, the agent in the above node will deliver the second-phases error diagnosis a message with the information of: is updated to <ref type="bibr">[C e_ZK hbaseSlave3:3888 :2]</ref> in the second-phase error diagnosis with the gossip protocol to find out the most likely cause to guide troubleshooting. It locates the issue on the zookeeper quorum on <ref type="bibr" target="#b10">10</ref> This simple example shows that the 2-phase error diagnosis can use existing limited information to determine a list of ranked possible causes to logging errors dealing with uncertainty challenges we identified earlier. And the strategy is simple to implement as it uses an existing gossip algorithm to compare local diagnosis, which could be in turn based on past work and ad-hoc knowledge database, and it can handle cross-layer and cross-node errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions and Future Works</head><p>Using a real world case study, we identified some difficultto-diagnosis errors committed by non-expert Hadoop/HBase users. We classified errors and documented the difficulties in error diagnosis, which led to three key challenges in ecosystem error diagnosis. We proposed a simple and scalable two-phased error diagnosis framework that only communicates the absolute necessary information for global diagnosis after local diagnosis.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2</head><label>2</label><figDesc>Figure 2 Three layers of error diagnosis: exception-sourcecause</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Example 1 .</head><label>1</label><figDesc>HDFS directory used in HBase must be consistent with the Hadoop file system default name. In HBase, hbase-site.xml, the setting of hbase.rootdir: must be consistent with the setting of fs.default.name in Hadoop core-site.xml Mismatch of these configurations results in failures of HBase startup. For an enterprise HBase cluster deployment, such as CDH4, there are hundreds of options requiring customizable configurations in 20+ sub-systems [7][17]. These configurations are inter-correlated, but misconfigurations are hard to detect.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>1</head><label></label><figDesc>http://en.wikipedia.org/wiki/Network_Time_Protocol 2 http://logstash.net/ Error msg: "java[13417:1203] Unable to load realm info from SCDynamicStore" when running any HDFS command JMX enabled by default Using config: /home/ubuntu/zookeeper3.4.5/bin/../conf/zoo.cfg Error contacting service. It is probably not running.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Architecture of the 2-phase error diagnosis</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: The process of error diagnosis in the first-phase</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>C e r , standing for a cause r that may lead to an exception e in component C. Each cause may include a set of sub- causes C e' r'</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 1 : Logging Exceptions and Potential CausesOS JAVA SDK Hadoop HBase Zookeeper Network security Node Node HDFS ZooKeeper HBase HDFS ZooKeeper HBase 148 27th Large Installation System Administration Conference USENIX Association 4 /app/hadoop/tmp/dfs/name is in an inconsistent state: storage directory does not exist or is not accessible." â€¢ Missing/Incorrect operations on HDFS: hdfs format â€¢ Directory misconfiguration: core-Â­-site.xml 6app/hadoop/tmp/dfs/data:" In the problematic NameNode and DataNode: â€¢ Misconfigurations on the hadoop: scan the name space setting in hadoop â€¢ File System duplication: scan the hdfs file system â€¢ Other nodes with the same name started: scan configurations and hostfiles 7HBase â€¢ The OS/Network problem on the nodes: the ssh connection and the compatibility between JAVA, HBase and OS â€¢ Zookeeper configurations: the Zookeeper availability â€¢ Cross-Â­-layer configuration consistency: the ports, quorum and authority setup USENIX Association</head><label>1</label><figDesc></figDesc><table>Source 
Logging Exception 
Possible Causes: Required Information for Examination 

1 
HBase/Had 
oop 
"org.apache.hadoop.hdfs.server.datanode.DataNod 
e: DataNode is shutting down: 
org.apache.hadoop.ipc.RemoteException: 
org.apache.hadoop.hdfs.protocol.UnregisteredData 
nodeException" 

In the problematic DataNodes: 

â€¢ Instance is down: ping, ssh connection 
â€¢ Access permission: check authentication keys, check ssh connection 
â€¢ HDFS configuration: conf/slaves 
â€¢ HDFS missing components: check the datanode setting and directories in hdfs 
2 
Zookeeper 
"java.net.UnknownHostException at 
org.apache.zookeeper.ZooKeeper.&lt;init&gt;(ZooKeepe 
r.java:445)" 

In Src and Dest nodes: 
â€¢ DSN: DSN configuration and testing 
â€¢ Network connection: ssh testing 
â€¢ Zookeeper connection: JPS and logging messages in zoo.out 
â€¢ Zookeeper configuration: zoo.cfg 
â€¢ Zookeeper status: processes (PID and JPS) 
â€¢ Cross-Â­-node configuration consistency 
3 
HDFS/ 
MapReduce 
/ 
HBase/ 
Zookeeper 

"java.net.ConnectException: Connection refused " 
In Src and Dest: 
â€¢ Network connection: ping IPs, ping hostnames and check ssh connection 
â€¢ Security setting: check ssh connection and check authentication keys 
â€¢ Hostname/IP/Ports configuration: check configuration files, netstat and lsof 
â€¢ Software status: check processes 
â€¢ Software compatibility: detect and check system and library versions 
â€¢ Cross-Â­-layer configuration consistency 
â€¢ Cross-Â­-node configuration consistency 
4 
HBase/Had 
oop 
"org.apache.hadoop.hdfs.server.namenode.NameN 
ode: java.lang.IllegalArgumentExcepti 
on: Does not contain a valid host:port authority: 
file" 

In Src and Dest: 
â€¢ Missing configuration files: hostfile, hadoop configuraitons 
â€¢ Security file missing or incorrect: connection permission, host/port permission 
â€¢ Host and Port setting in HDFS: core-Â­-site.xml, hdfs-Â­-site.xml 
â€¢ Host and Port settings in DNS 
â€¢ Network host and port settings: netstat, lsof etc 
â€¢ Cross-Â­-node configuration consistency 
5 
HBase/Had 
oop 
"org.apache.hadoop.hdfs.server.common.Inconsiste 
ntFSStateException: Directory 
In the problematic nodes: 
â€¢ Missing files in HDFS file system: look for directory in hdfs 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>: JAVA problem in Hadoop: Example 4: JAVA problem in ZooKeeper:</head><label></label><figDesc>are two examples of logging errors returned by Hadoop and Zookeeper installation in the project. However, both messages are not at all clear about the root causes and can lead operators to the wrong places. But after examining related logs in other layers, the root cause was located.</figDesc><table>&lt;property&gt; 
&lt;name&gt;hbase.rootdir&lt;/name&gt; 
&lt;value&gt;hdfs://hbaseMaster:54310/hbase&lt;/value&gt; 
&lt;/property&gt; 

&lt;property&gt; 
&lt;name&gt;fs.default.name&lt;/name&gt; 
&lt;value&gt;hdfs://hbaseMaster: 54310/value&gt; 
&lt;/property&gt; 

org.apache.hadoop.hdfs.server.common.InconsistentFSStateEx 
ception: Directory /app/hadoop/tmp/dfs/name is in an 
inconsistent state: storage directory does not exist or is not 
accessible. 

150 27th Large Installation System Administration Conference 

USENIX Association 
6 

Example 3</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>) b.[C e_HD act :0] (C e_HD act =false conflicts C s_HD act =true ) c.[C e_HD sec :0] (C e_HD sec =false conflicts C s_HD sec =true )</head><label></label><figDesc></figDesc><table>-03-08 09:31:44,934 INFO org.apache.hadoop.ipc.Client: 
Retrying connect to server: hbaseMaster/10.141.133.22:9000. 

Already tried 9 time(s). 

2013-03-08 09:31:44,938 FATAL 
org.apache.hadoop.hbase.master.HMaster: Unhandled exception. 
Starting shutdown. 

java.net.ConnectException: Call to 
hbaseMaster/10.141.133.22:9000 failed on connection exception: 
java.net.ConnectException: Connection refused 

â€¦ 

ERROR org.apache.hadoop.hbase.master.HMasterCommandLine: 
Failed to start master 

,where hbaseMaster is a domain name defined in the 
configuration file. In the phase-one error diagnosis, this 
logging information is summarized as: 

HBaseMaster:9000 failed 

connection exception: hbaseMaster/10.141.133.22:9000 
The mapper takes this as input and returns a set of likely 
causes to the exception and gives the states of the 
component: 

1. Hadoop server: unavailable (Ce_HD avail : 1) 
2. Hadoop server: not accessible (Ce_HD access :1), whose 
prerequisite: Cs_HD avail =true, and with sub causes: 
a. domain name is unavailable (Ce_HD hbaseMaster:9000 :1) 
b. user account is unavailable (Ce_HD act :1) 
c. security setting is unavailable (Ce_HD sec :1) 

status: HBase HMaster: failed (C s_HBseHMaster 

avail 

= false). 

In the same node, the log file from Hadoop NameNode 
gives the information 

2013-03-08 09:23:02,362 INFO 
org.apache.hadoop.hdfs.server.namenode.FSNamesystem: Roll 
FSImage from 10.141.133.22 

2013-03-08 09:23:02,362 INFO 
org.apache.hadoop.hdfs.server.namenode.FSNamesystem: 
Number of transactions: 0 Total time for transactions(ms): 
0Number of transactions batched in Syncs: 0 Number of syncs: 1 
SyncTimes(ms): 8 

Because there are no logging exceptions, no causes are 
proposed from this Hadoop log file. So it can give: 

C s_HD 

avail 

=true. And since no configurations regarding 
account and security are found in the configuration files, it 
gives C s_HD 
act =true and C s_HD 
sec =true. And it can be achieved 
from 
the 
summary 
of 
Hadoop 
log 
that: 

C s_HD 

hbaseMaste:54310 

=true, where hbaseMaste:54310 is the 
domain name of Hadoop. 

A combination of this information given by Mappers is 
used in the Gossip protocol for updating the weight 
associated with each proposed cause. Output is shown as 
below. The reasons are described in the bracket in the right-
hand side. 

1. [C e_HD 

avail : 0] (C e_HD 
avail =false conflicts C s_HD 

avail 

=true ) 

2. [C e_HD 
access : 1] (C s_HD 

avail 

=true, and no information directly 
related to C e_HD 
access ) 

a.[C e_HD 

hbaseMaster:9000 : 1] (no information directly related to 

* 

Configuration 

Log 
Simplification 

Log File of 
a 
Component 

causes to 
exception 

component 
status 

gossip protocol 
causes with 
updated weights 
Mapper 

USENIX Association 

27th Large Installation System Administration Conference 153 

9 

C e_HD 
hbaseMaster:9000 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>3888 :1] Agent ID: 10.151.97.82, where locate the problematic zookeeper quorum hbaseSlave3:3888 Because the Zookeeper status is found in the Agent ID: 10.151.97.82, the weight of C e_ZK hbaseSlave3:3888</head><label></label><figDesc></figDesc><table>Agent ID: 10.141.133.22 
HBase Log: 

[C e_HD 

access : 1] 

[C e_HD 

Ã§ :1] 
C s_HBseHMaster 

avail 

= false, C s_HBseHMaster 
act =true, C s_HBseHMaster 

sec 

=true 
Hadoop Log: 
C s_HD 

avail 

=true, C s_HD 

hbaseMaste:54310 

=true, C s_HD 
act =true, C s_HD 

sec 

=true 

Zookeeper Log: 
[C e_ZK 

hbaseSlave3:3888 :1] 

C s_ZK 

avail 

=true, C s_ZK 

myID:1 

=follower, C s_ZK 
act =true, C s_ZK 

sec 

=true 

This message includes the information of Zookeeper. 
Because there is a WARN message given in the Zookeeper 
log file, shown as: 

Cannot 
open 
channel 
to 
4 
at 
election 
address 
hbaseSlave3/10.151.97.82:3888 

and the Zookeeper status has shown that this Zookeeper 
quorum is performing follower, a possible cause with 
weight is shown as [C e_ZK 
hbaseSlave3:3888 :1]. This warning error 
message is related to anther Zookeeper quorum on: 
hbaseSlave3:3888. It is handled by the second-phase error 
diagnosis. 

For this troubleshooting, input information regarding this 
error for the second-phase error diagnosis includes: 

Agent ID: 10.141.133.22, prose error [C e_ZK 
hbaseSlave3:3888 :1] 

Agent ID: 10.36.33.18, where the zookeeper quorum is selected as 
leader, propose error [C e_ZK 
hbaseSlave3:</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Acknowledgement</head><p>NICTA is funded by the Australian Government as represented by the Department of Broadband, Communications and the Digital Economy and the Australian Research Council through the ICT Centre of Excellence program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.">References</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aws</forename><surname>Ec2</surname></persName>
		</author>
		<ptr target="http://aws.amazon.com/ec2/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Apache</forename><surname>Flume</surname></persName>
		</author>
		<ptr target="http://flume.apache.org/2013" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Apache</forename><surname>Hadoop</surname></persName>
		</author>
		<ptr target="http://hadoop.apache.org/2013" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Apapche</forename><surname>Hadoop</surname></persName>
		</author>
		<ptr target="http://hadoop.apache.org/docs/r2.0.3-alpha/hadoop-" />
		<title level="m">HDFS High Availability Using the Quorum Journal Manager</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Large Installation System Administration Conference USENIX Association</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Apache</forename><surname>Hbase</surname></persName>
		</author>
		<ptr target="http://hbase.apache.org/2013" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Apache</forename><surname>Zookeeper</surname></persName>
		</author>
		<ptr target="http://zookeeper.apache.org/2013" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">CDH4 Installation Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cloudera</surname></persName>
		</author>
		<ptr target="http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH4/latest/PDF/CDH4-Installation-Guide.pdf" />
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Google&apos;s Globally-Distributed Database</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Corbett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Processings OSDI &apos;12, Tenth Symposium on Operating System Design and Implementation</title>
		<meeting>essings OSDI &apos;12, Tenth Symposium on Operating System Design and Implementation<address><addrLine>Hollywood, Ca</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Facebook</forename><surname>Scribe</surname></persName>
		</author>
		<ptr target="https://github.com/facebook/scribe" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">HBase: The Definitive Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>George</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<pubPlace>Publisher: O&apos;Reilly Media</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Failure Diagnosis of Complex Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soila</forename><forename type="middle">P</forename><surname>Kavulya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaustubh</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felicita</forename><forename type="middle">Di</forename><surname>Giandomenico</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Priya</forename><surname>Narasimhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Journal of Resilience Assessment and Evaluation of Computing Systems</title>
		<imprint>
			<biblScope unit="page" from="239" to="261" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Structured Comparative Analysis of Systems Logs to Diagnose Performance Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karthik</forename><surname>Nagaraj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Killian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jennifer</forename><surname>Neville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of 9th USENIX Symposium on Networked Systems Design and Implementation (NSDI &apos;12)</title>
		<meeting><address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-04" />
			<biblScope unit="page" from="25" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Netflix</forename><surname>Edda</surname></persName>
		</author>
		<ptr target="https://github.com/Netflix/edda" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Building an Hadoop 0.20.x Version for HBase 0</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Noll</surname></persName>
		</author>
		<ptr target="http://www.michael-noll.com/blog/2011/04/14/building-an-hadoop-0-20-x-version-for-hbase-0-90-2/" />
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">90</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Using correlated surprise to infer shared influence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><forename type="middle">J</forename><surname>Oliner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashutosh</forename><forename type="middle">V</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Aiken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of Dependable Systems and Networks (DSN)</title>
		<imprint>
			<date type="published" when="2010-06-28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Chukwa: a system for reliable large-scale log collection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ariel</forename><surname>Rabkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Randy</forename><surname>Katz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th international conference on Large installation system administration (LISA 10)</title>
		<meeting>the 24th international conference on Large installation system administration (LISA 10)</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Using Program Analysis to Reduce Misconfiguration in Open Source Systems Software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ariel</forename><surname>Rabkin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>Ph.D thesis</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Pip: Detecting the Unexpected in Distributed Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Killian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Janet</forename><forename type="middle">L</forename><surname>Wiener</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><forename type="middle">C</forename><surname>Mogul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehul</forename><forename type="middle">A</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amin</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Networked Systems Design and Implementation</title>
		<meeting>Networked Systems Design and Implementation</meeting>
		<imprint>
			<date type="published" when="2006-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Devavrat</forename><surname>Shah</surname></persName>
		</author>
		<ptr target="http://web.mit.edu/devavrat/www/GossipBook.pdf" />
	</analytic>
	<monogr>
		<title level="m">Gossip Algorithm</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Hadoop: The Defintitive Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>White</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<pubPlace>O&apos;Reilly Media</pubPlace>
		</imprint>
	</monogr>
	<note>the second edition</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">System Problem Detection by Mining Console Logs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Eecs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Berkeley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010-08" />
		</imprint>
	</monogr>
	<note>Ph.D thesis,</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Large-scale system problem detection by mining console logs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ling</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Armando</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of the 22nd ACM Symposium on Operating Systems Principles (SOSP&apos; 09)</title>
		<meeting>eeding of the 22nd ACM Symposium on Operating Systems Principles (SOSP&apos; 09)<address><addrLine>Big Sky, MT</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An Empirical Study on Configuration Errors in Commercial and Open Source Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zuoning</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiao</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuanyuan</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lakshmi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shankar</forename><surname>Bairavasundaram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pasupathy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings Of The 23rd ACM Symposium On Operating Systems Principles (SOSP&apos;11)</title>
		<imprint>
			<date type="published" when="2011-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Characterising Logging Practices in Open-Source Software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ding</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soyeon</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuanyuan</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of the 34th International Conference on Software Engineering (ICSE&apos;12)</title>
		<meeting><address><addrLine>Zurich, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Improving Software Diagnosability via Log Enhancement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ding</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soyeon</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuanyuan</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Transactions on Computer Systems (TOCS)</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">30</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Be Conservative: Enhancing Failure Diagnosis with Proactive Logging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ding</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soyeon</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peng</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">M</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoming</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuanyuan</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of the 9th</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
				<title level="m">ACM/USENIX Symposium on Operating Systems Design and Implementation (OSDI&apos;12)</title>
		<meeting><address><addrLine>Hollywood, CA</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Modeling and Analysing Operation Processes for Dependability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), Fast Abstract</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
