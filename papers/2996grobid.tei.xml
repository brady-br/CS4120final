<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:56+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Caching or Not: Rethinking Virtual File System for Non-Volatile Main Memory</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ying</forename><surname>Wang</surname></persName>
							<email>wangying01@ict.ac.cn</email>
							<affiliation key="aff0">
								<orgName type="department">SKL Computer Architecture</orgName>
								<orgName type="institution" key="instit1">ICT</orgName>
								<orgName type="institution" key="instit2">CAS University of Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dejun</forename><surname>Jiang</surname></persName>
							<email>jiangdejun@ict.ac.cn</email>
							<affiliation key="aff0">
								<orgName type="department">SKL Computer Architecture</orgName>
								<orgName type="institution" key="instit1">ICT</orgName>
								<orgName type="institution" key="instit2">CAS University of Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename><surname>Xiong</surname></persName>
							<email>xiongjin@ict.ac.cn</email>
							<affiliation key="aff0">
								<orgName type="department">SKL Computer Architecture</orgName>
								<orgName type="institution" key="instit1">ICT</orgName>
								<orgName type="institution" key="instit2">CAS University of Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Caching or Not: Rethinking Virtual File System for Non-Volatile Main Memory</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Virtual File System (VFS) conventionally provides an abstraction for multiple instances of underlying physical file systems as well as metadata caching, concurrency control and permission check, which benefits disk based file systems. However, in this paper we find VFS brings extra overhead when interacting with persistent memory (PM) file systems. We explore the opportunity of shortening VFS stack for PM file systems. We present ByVFS, an optimization of VFS to directly access meta-data in PM file systems bypassing VFS caching layer. The results show ByVFS outperforms conventional VFS with cold cache and provides comparable performance against conventional VFS with warm cache. We also present potential issues when reducing VFS overhead.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Emerging Non-Volatile Memory (NVM) technologies, such as PCM <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b18">19]</ref>, ReRAM <ref type="bibr" target="#b2">[3]</ref>, STT-RAM <ref type="bibr" target="#b10">[11]</ref>, and recent 3D XPoint <ref type="bibr" target="#b8">[9]</ref> , allow to store persistent data in main memory. This motivates a number of efforts to build file systems on persistent memory (PM), which focus on minimizing software overhead <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b21">22]</ref>, providing strong consistency with low overhead <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b24">25]</ref>, supporting snapshot and fault tolerance <ref type="bibr" target="#b25">[26]</ref> , and optimizing slow writes <ref type="bibr" target="#b16">[17]</ref>.</p><p>Compared to block-based devices, byte-addressable non-volatile memory is naturally suitable for small reads/writes. Accessing metadata is an important source of small reads/writes. For example, a major part of file references are dominated by metadata operations <ref type="bibr" target="#b29">[29]</ref>. Metadata operations include accessing properties of individual files as well as whole file system (e.g. statfs, stat, rename).</p><p>Virtual File System (VFS) is a software abstraction layer that was first introduced to address the problem of accessing local file system and remote Network File System files transparently <ref type="bibr" target="#b11">[12]</ref>. During the past decades, VFS is evolved not only to support multiple file systems, but also provide metadata caching, concurrency control, and permission check. Existing kernel based PM file systems <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b25">26]</ref> are also attached under VFS for handling metadata. However, since NVMs provide sub-microsecond access latency, we find VFS brings extra overhead when operating metadata for PM file systems. <ref type="figure" target="#fig_0">Figure 1</ref> shows the percentages of execution times of path lookup spent in VFS and physical file system respectively. We run several command-line applications on two file systems: NOVA file system (a state-of-the-art PM file system <ref type="bibr" target="#b24">[25]</ref>) and traditional disk-based file system ext4 1 . As shown in <ref type="figure" target="#fig_0">Figure 1</ref>, since NVM is faster than hard disk, the total application execution times on NOVA are reduced by from 28.4% to 73.4% compared to ext4. However, the percentages of execution times of  path lookup spent in VFS on NOVA increase by from 16.5% to 459.6%. This indicates that when serving PM file systems, VFS brings extra performance overhead.</p><p>In this paper, we argue that instead of using VFS caching for metadata, one can directly access metadata in physical file systems. We take path lookup as a case study, which is a critical step for many system calls (e.g. 10%-20% of system calls involve path lookup <ref type="bibr" target="#b7">[8]</ref>.). We remove VFS metadata caching for PM file systems and discuss the arising issues, such as supporting specific system calls, concurrency control, and compatibility with conventional VFS abstraction. We implement ByVFS, an optimization of VFS by removing dentry metadata caching in VFS. We use NOVA as the underlying PM file system. We evaluate ByVFS against conventional VFS using both micro-benchmarks and command-line applications. The results show that ByVFS improves path lookup performance by 7.1%-47.9% for system calls compared to conventional VFS with cold cache. Meanwhile ByVFS performs comparably to conventional VFS with warm cache. For certain command-line applications, ByVFS reduces application execution time by up to 26.9%. We also present potential issues when shortening VFS stack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background and Motivation</head><p>Virtual File System (VFS) was originally designed to support accessing local file system and remote network file system transparently. Currently, VFS not only provides an abstraction for interacting with multiple instances of physical file systems, but also provides caching, concurrency control, and permission check when accessing files.</p><p>VFS mainly caches three types of metadata, including superblock, dentry, and inode. A dentry metadata (named as dcache in this paper) mainly contains file name and corresponding inode number, while an inode metadata (named as icache in this paper) mainly contains file properties (e.g. inode number and file size).</p><p>Path lookup is a critical process involved in many file system operations.</p><p>We take the system call stat as an example to illustrate the path lookup process as shown in <ref type="figure" target="#fig_2">Figure 2</ref>(a).</p><p>When serving stat("/home/wy/example.txt"), VFS first directly obtains the icache of the root directory ("/") as it is loaded into VFS when system starts. Then VFS looks up the dcache of the next path component ("home" here) in VFS (step 1). If the dcahe is found, VFS executes operations such as permission check and symlink processing on the directory (step 6). Otherwise, one needs to look up the dentry in physical file systems (step 2). After step 2, VFS further looks up its corresponding icache in VFS (step 3). Note that, step 3 is executed intending to check whether there already exists icache for the path component. If there is no icache in VFS, one needs to look up the inode in physical file systems (step 4). Once the inode is found in either VFS or physical file systems, one can continue step 6. VFS caches the dentry or the inode found in step 2 or step 4 by creating and initializing its structure in VFS (step 5). After step 6, VFS checks whether it reaches the end of the whole path (step 7). Here, the final file "example.txt" has not been looked up yet. Thus VFS iterates such process until it reaches the end of path. Then stat returns the information about the file "example.txt".</p><p>From the above example, caching both dentry and inode metadata in VFS helps improving path lookup performance for disk-based file systems by avoiding frequently accessing slow disk. However, since NVMs have read latency similar to DRAM <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b15">16]</ref>, accessing DRAM cache bring performance overhead compared to directly reading NVMs. We are thus motivated to explore the potential opportunity of directly accessing metadata in PM file systems while bypassing VFS caching.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ByVFS</head><p>In this section, we present the design issues of ByVFS, an optimization of Virtual File System for non-volatile memory. The key idea of ByVFS is to bypass the metadata caching layer in VFS and directly access metadata in physical file systems. <ref type="figure" target="#fig_2">Figure 2(b)</ref> shows the reduced stack of path lookup in ByVFS. ByVFS looks up dentry metadata for a path component directly in PM file systems. Once found, one can obtain the related inode metadata. ByVFS remains to cache inode to hide the long NVM write latency for frequent metadata updates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Handling dentry cache</head><p>In ByVFS, the dentry metadata is no longer cached. One directly looks up the dentry metadata of a path component in physical file systems (e.g. NOVA file system in this paper). One issue after removing dcache is the capability to support the system call getcwd (returns the full path of current working directory), since it is frequently used to obtain the name of parent directories. Conventionally, any dcache has a pointer referring to its parent directory. VFS can iterate dcache of all path components to obtain the full path. However, in ByVFS, dcache is removed, while the dentry metadata in physical file systems does not include pointers referring to the parent directory. Thus, we instead provide another iterating lookup approach by traversing the whole directory hierarchy to serve getcwd. For illustration purpose, we assume a process calls getcwd under the directory "/home/wy". The kernel holds a pointer referring to the inode of the current working directory for each process. Thus, one can first obtain the inode (inode current ) of the current working directory ("wy" directory here). Then, one can obtain the inode (inode parent ) of the parent directory ("home" directory here) through the dotdot hard link in current directory. By searching the inode number of inode current across sub-directory entries in the parent directory file, one can obtain the corresponding directory name (name is "wy" here). Meanwhile, as inode parent (for "home" directory here) is already obtained, the above process can be repeated until the root directory is reached. Finally, the system call getcwd returns the full path of working directory. We leave optimizing the efficiency of such iterating lookup as the future work.</p><p>On the other hand, dcache is conventionally used to ensure the correctness of concurrent access, and existing PM file systems, such as PMFS <ref type="bibr" target="#b6">[7]</ref> and NOVA <ref type="bibr" target="#b24">[25]</ref>, rely on VFS for concurrency control. Since ByVFS removes dcache, the physical file systems are required to provide such guarantee, which is to be done in our future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Handling inode cache</head><p>Unlike removing dcache in VFS, ByVFS retains to cache inode metadata (icache) in VFS. This is because icache contains commonly-used file properties, such as file size and access time. These file properties are updated frequently. Considering NVM usually has long write latency <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b15">16]</ref>, persisting inode metadata through lowlevel file systems directly on NVM once inode metadata is modified degrades the whole system performance.</p><p>Conventionally, the dcache in VFS maintains a pointer to the icache of itself. VFS can access the icache once the dcache is found. However, in ByVFS, we need to record the memory location of icache as dcache is removed. Thus, we modify the low-level file system to add a non-volatile pointer in the inode structure, which points to icache. The pointer is created when ByVFS caches inode metadata. The pointer is set to NULL when the corresponding icache is released (e.g. evicted from VFS cache or system shutdowns normally). Note that, the pointer is non-volatile, and it becomes meaningless as long as system crashes as the pointed icache does not exist any more. We use version number to figure out meaningless pointers. We add a version number in both superblock and inode metadata of files. The version number in the superblock increases by one upon each mount. When ByVFS creates a icache for an inode, the version number in the inode is updated to the one in superblock. For each file lookup, the physical file system compares version numbers in both inode and superblock. The nonvolatile pointer is considered to be meaningful if the two versions are the same. Otherwise, the physical file system re-creates a icache, and lets the pointer in the inode metadata point to the newly created icache. The physical file system updates the version number in the inode to the one currently in superblock.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Supporting multiple file systems</head><p>VFS is conventionally designed to provide abstraction for supporting physical file systems. To maintain the compatibility, we let the low-level PM file systems hold a flag S NVMFS ROOT. This flag is added into the inode of mounted directory once a PM file system is mounted. In such doing, once the flag is encountered when doing path lookup, the remaining lookup is performed in ByVFS. Otherwise, the conventional VFS lookup process is performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Experimental setup</head><p>We conduct all experiments on a server equipped with two Intel Xeon E5-2620 v3 processors. The memory size is 96 GB. We put 16 GB memory for DRAM and 80GB for emulating NVM. The OS is CentOS 7.0, Linux kernel 4.3.0. All experimental results are the average of at least 10 runs.</p><p>NVM emulation As real NVM are not available for us yet, we implement a hardware emulator based on the NUMA architecture with processors 0 and 1. Applications run on processor 0 but access remote memory attached to processor 1. The NUMA architecture introduces extra memory read latency (30-40 ns in our hardware) compared to accessing local memory. This is used to emulate NVM read latency which is similar to DRAM <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b15">16]</ref>. For NVM write, we use hardware performance monitoring module (PMU) <ref type="bibr" target="#b0">[1]</ref> to count the number of LLC write miss for processor 0. Periodically (e.g. every 100ms), we add stalls according to counted write misses to processor 0 to emulate long nvm write (each write incurs 600ns in this paper).</p><p>ByVFS implementation and comparison We implement ByVFS by modifying the VFS in Linux kernel 4.3.0. Currently ByVFS only implements optimization for path lookup by removing dcache in VFS. We choose the state-of-the-art NOVA <ref type="bibr" target="#b24">[25]</ref> as the low-level PM file system. To support maintaining cached inode metadata in ByVFS, we modify inode and superblock structures in NOVA. We compare ByVFS against the conventional VFS, while we use the originally open-sourced NOVA under the conventional VFS.</p><p>Benchmarks We use 6 system calls: open/stat/access/unlink/mkdir/rmdir as microbenchmarks. which all involve path lookup. Although ByVFS support multi-level directory hierarchy, we only show the results when running the micro-benchmarks in a single-level directory with 100,000 files due to the space limitation. Applications benefit from conventional VFS caching in case of metadata cache hit. VFS cache evicts metadata in case of deleting files or reduced available memory, which results in metadata cache miss. Thus, we evaluate system calls against both cold VFS cache (run the experiment once) and warm VFS cache (run the experiment twice and drop the first one) for the conventional VFS. In addition, we use 5 widely-used command-line applications in the Linux source directory to evaluate the end-to-end performance: find (searching for "test.c" file), du -s (showing whole directory size), ls -lR (recursively listing all file attributes), rm -rf (deleting all files), cp -r (copying whole directory from tmpfs to the test file system). <ref type="figure">Figure 3</ref> shows the execution times of tested system calls. Due to space limitation, we show the comparison between cold VFS cache and warm VFS cache only for access and unlink. When running with cold VFS cache, ByVFS outperforms conventional VFS for all system calls. ByVFS reduces execute times by 12.7%/48.1%/28.4%/50.8%/7.4%/18.4% for open/stat/access/unlink/mkdir/rmdir. Since ByVFS directly looks up metadata in underlying NOVA, the time VFS lookup is reduced a lot (black parts in histograms). The remaining VFS lookup is spent in conventional VFS for searching the upper-level directories on top of the mount point of NOVA. Besides, ByVFS reduced the dcache overhead in VFS others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Micro-benchmarks</head><p>When running with warm VFS cache, the execution time of unlink decreases by 38.1% in ByVFS. This is because unlink involves deleting files, which includes metadata operations in both VFS (e.g. deleting dcache and icache) and physical file systems (e.g. deleting dentry and reclaiming inode). In ByVFS, the metadata operations in VFS are greatly reduced (e.g. no dcache related operations), which helps to decrease the execution time. Moreover, ByVFS allows the underlying NOVA to refer to the cached inode directly using a non-volatile pointer (steps 2 in <ref type="figure" target="#fig_2">Figure 2(b)</ref>) . This makes lookup performance in ByVFS comparable to the conventional VFS with warm cache. This can also be seen from the result of the lookup-intensive operation access, in which ByVFS performs slightly worse. <ref type="figure" target="#fig_4">Figure 4</ref> shows the execution time of tested applications. ByVFS reduces the execution time by 26.9%/11.6%/21.4% for du/find/rm respectively. As shown in <ref type="figure" target="#fig_4">Figure 4</ref>, the lookup overhead for searching dentry metadata cache (time VFS lookup) is reduced a lot in ByVFS. However, for ls and cp, ByVFS performs slightly worse than conventional VFS, in which the execution times of ls and cp increase by 6.4% and 3.8% respectively. The two applications benefit from high VFS cache hit ratios under conventional VFS. For example, ls repeatedly calls stat, lstat and lgetxattr against files within a directory, which results in warm VFS cache. <ref type="table">Table 1</ref> shows the hit ratios of VFS metadata cache for all applications. The hit ratios of ls and cp reach 95%. Thanks to the design of the non-volatile pointer in ByVFS, ByVFS still provides comparable performance with warm VFS cache.   vices. A number of research work focus on addressing the issue through buffering directory tree <ref type="bibr" target="#b14">[15]</ref>, using object stores <ref type="bibr" target="#b17">[18]</ref>, and providing write-optimized index <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b27">28]</ref>. Path lookup is another source of performance degradation involving metadata operations. <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b20">21]</ref> add a cache on top of VFS to reduce the overhead of component-by-component translation. <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b27">28]</ref> implement full path lookup in physical file systems to improve access latency in case of VFS cache miss. This paper also targets to optimize metadata operation, but specifically focuses on the overhead for PM file systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Command-line applications</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>This paper presents ByVFS, an optimization of VFS by removing dentry caching to reduce extra overhead for PM file systems. Moreover, we figure out two potential optimization opportunities: the concurrency control originally guaranteed in VFS is now shifted to low-level file systems, which is not well supported in existing PM file systems. The other is efficiently and completely supporting various system calls, which may require designing highly efficient index structures in persistent memory. We leave both issues as our future work.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The percentage of time spent on path lookup with a cold cache. VFS: time of lookup spend in VFS. FS: time of lookup spend in physical file system. The numbers above the histograms are application total execution times in seconds.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>(</head><label></label><figDesc>b) The process of path lookup in ByVFS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: dcache: cached dentry metadata in VFS. icache: cached inode metadata in VFS.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Execution times of command-line applications with cold cache. The time division is the same as Figure 3. The numbers above the histograms are the application execution times in seconds.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>system call total execution time(us) � indicates NOVA � indicates ByVFS</head><label>system</label><figDesc></figDesc><table>VFS lookup 
VFS other 
FS 

13.8 

12.0 

3.09 
1.60 

7.80 

5.59 
6.67 

3.28 

12.3 
11.4 
10.1 

8.20 

0.79 
0.83 

4.54 

2.81 

Figure 3: Execution times of system calls. VFS lookup: 
the time of looking up dcache and icache in VFS. 
VFS others: the time of others operations during path 
lookup in VFS, such as parsing path name and check-
ing access permission. FS: the time spend in physical 
file system. The numbers above the histograms are to-
tal execution time of each system call in microseconds. 
access cache and unlink cache : refer to the execution with 
warm VFS cache. Others are performed with cold VFS 
cache. open refers to creating a new file. 

Table 1: VFS cache hit ratios in conventional VFS 

du 
find 
ls 
rm 
cp 
14.1% 
69.1% 
95.8% 
55.5% 
95.3% 

5 Related Works 

Persistent memory based file system. Recently, there is 
a number of research efforts to build file systems based 
on persistent memory. BPFS[4], Aerie[22], PMFS[7], 
SCMFS[24], and SIMFS[20] focus on minimizing soft-
ware overhead by bypassing block layer and buffer 
cache, optimizing index structure. Bypassing buffer 
cache is different from bypassing metadata cache in VFS 
in this paper, which only helps to reduce the software 
stack of data I/O instead of metadata. PMFS[7] and 
NOVA[25] provide strong consistency with low over-
head for PM file systems. NOVA-Fortis[26] further pro-
vides snapshot and fault tolerance for PM file systems. 
HinFS[17] focuses on hiding long NVM write latency 
by adding write buffer. ByVFS differs from these work 
by focusing on optimizing metadata operation for PM 
file systems. Aerie[22] also bypasses VFS by building 
user-level PM file system but focuses on providing flex-
ible architecture, allowing applications to optimize file 
system interfaces. ByVFS instead mainly reduces extra 
overheads of VFS caching for metadata operations. 
Optimizing metadata operations. Metadata oper-
ations in file systems usually result in small and ran-
dom writes, causing write amplification to block de-

</table></figure>

			<note place="foot" n="1"> The experiment setup for application running and NVM emulation is presented in Section 4.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgements</head><p>We would like to thank the anonymous reviewers for their feedback and guidance. This work is supported </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<ptr target="http://www.devel-oper.intel.com" />
		<title level="m">Intel 64 and ia-32 architectures software developers manual</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
	<note>System Programming Guide</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Onyx: A protoype phase change memory storage array</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Akel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">I</forename><surname>Mollov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><surname>Swan-Son</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd USENIX Conference on Hot Topics in Storage and File Systems, HotStorage&apos;11</title>
		<meeting>the 3rd USENIX Conference on Hot Topics in Storage and File Systems, HotStorage&apos;11<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="2" to="2" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Highly scalable nonvolatile resistive memory using simple binary oxide driven by asymmetric unipolar voltage pulses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Baek</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Suh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-S</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Electron Devices Meeting</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="587" to="590" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Bpfs:better I/O through byte-addressable, persistent memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Condit</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nightingale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">B</forename><surname>Frost</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ipek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Burger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Derrick</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles</title>
		<meeting>the ACM SIGOPS 22Nd Symposium on Operating Systems Principles</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="133" to="146" />
		</imprint>
	</monogr>
	<note>SOSP &apos;09, ACM</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Optimistic lookup of whole nfs paths in a single operation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Duchamp</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summer 1994 Technical Conference on USENIX Summer</title>
		<meeting>the USENIX Summer 1994 Technical Conference on USENIX Summer</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="10" to="10" />
		</imprint>
	</monogr>
	<note>USTC&apos;94, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Persistent memory file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dulloor</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Keshavamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lantz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sankaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jackson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<ptr target="https://github.com/linux-pmfs/pmfs" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">System software for persistent memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dulloor</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Keshavamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lantz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sankaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jackson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th European Conference on Computer Systems</title>
		<meeting>the 9th European Conference on Computer Systems</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page">15</biblScope>
		</imprint>
	</monogr>
	<note>EuroSys &apos;14, ACM</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A file is not a file: Understanding the i/o behavior of apple desktop applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dragga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Vaughn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Arpaci-Dusseau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arpaci-Dusseau</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles</title>
		<meeting>the Twenty-Third ACM Symposium on Operating Systems Principles</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="71" to="83" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<ptr target="https://newsroom.intel.com/news-releases/intel-and-micron-produce-breakthroughmemory-technology/ed" />
		<title level="m">INTEL. Intel and Micron produce breakthrough memory technology</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Betrfs: A right-optimized write-optimized file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jannen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Akshintala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Esmet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pandey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walsh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Farach-Colton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kusz-Maul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Porter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 13th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="301" to="315" />
		</imprint>
	</monogr>
	<note>FAST&apos;15, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scalable spin-transfer torque ram technology for normally-off computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kawahara</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Des. Test</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="52" to="63" />
			<date type="published" when="2011-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Vnodes: An architecture for multiple file system types in sun unix</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kleiman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Association: Summer Conference Proceedings</title>
		<meeting><address><addrLine>Atlanta</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Architecting phase change memory as a scalable dram alternative</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Ipek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Mutlu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burger</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th Annual International Symposium on Computer Architecture</title>
		<meeting>the 36th Annual International Symposium on Computer Architecture</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="2" to="13" />
		</imprint>
	</monogr>
	<note>ISCA &apos;09, ACM</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Direct lookup and hash-based metadata placement for local file systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lensing</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">H</forename><surname>Cortes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brinkmann</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International Systems and Storage Conference</title>
		<meeting>the 6th International Systems and Storage Conference</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">11</biblScope>
		</imprint>
	</monogr>
	<note>SYSTOR &apos;13, ACM</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Reconfs: A reconstructable file system on flash storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 12th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="75" to="88" />
		</imprint>
	</monogr>
	<note>FAST&apos;14, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">4 embedded 1mb reram in 28nm cmos with 0.27-to-1v read using swing-sample-and-couple sense amplifier and self-boost-write-termination scheme</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Chien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">C L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">C</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">F</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">D</forename><surname>Chih</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2014 IEEE International Solid-State Circuits Conference</title>
		<meeting>2014 IEEE International Solid-State Circuits Conference</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="332" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A high performance file system for non-volatile main memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eleventh European Conference on Computer Systems</title>
		<meeting>the Eleventh European Conference on Computer Systems</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page">16</biblScope>
		</imprint>
	</monogr>
	<note>EuroSys &apos;16, ACM</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">TABLEFS: Enhancing metadata efficiency in the local file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ren</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gibson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 USENIX Annual Technical Conference (USENIX ATC 13</title>
		<meeting>the 2013 USENIX Annual Technical Conference (USENIX ATC 13<address><addrLine>USENIX</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="145" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Phase-change random access memory: A scal-able technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Raoux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Burr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rettner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Salinga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">L L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lam</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Journal of Research and Development</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="465" to="479" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>4.5</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A new design of in-memory file system based on file virtual address framework</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sha</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhuge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="page" from="2959" to="2972" />
			<date type="published" when="2016-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">How to get more value from your file system directory cache</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tsai</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-C</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Porter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th Symposium on Operating Systems Principles</title>
		<meeting>the 25th Symposium on Operating Systems Principles</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="441" to="456" />
		</imprint>
	</monogr>
	<note>SOSP &apos;15, ACM</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Aerie: Flexible file-system interfaces to storage-class memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volos</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Nalli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Panneerselvam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Varadarajan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Saxena</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">M</forename><surname>Swift</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth European Conference on Computer Systems</title>
		<meeting>the Ninth European Conference on Computer Systems</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page">14</biblScope>
		</imprint>
	</monogr>
	<note>EuroSys &apos;14, ACM</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A comparison of three distributed file system architectures: Vnode, sprite, and plan 9. Sprite, and Plan 9</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Welch</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Systems</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="175" to="199" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Scmfs: A file system for storage class memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>And Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis</title>
		<meeting>2011 International Conference for High Performance Computing, Networking, Storage and Analysis</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page">11</biblScope>
		</imprint>
	</monogr>
	<note>SC &apos;11, ACM</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">NOVA: A log-structured file system for hybrid volatile/non-volatile main memories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Swanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 14th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="323" to="338" />
		</imprint>
	</monogr>
	<note>FAST&apos;16, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Nova-fortis: A fault-tolerant non-volatile main memory file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Memaripour</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gangadharaiah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Borase</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Da</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Silva</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">B</forename><surname>Swanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And Rud-Off</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Symposium on Operating Systems Principles</title>
		<meeting>the 26th Symposium on Operating Systems Principles</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="478" to="496" />
		</imprint>
	</monogr>
	<note>SOSP &apos;17, ACM</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Optimizing every operation in a write-optimized file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jannen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Pandey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Akshintala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Chandnani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Deo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kasheff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walsh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Farach-Colton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kusz-Maul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Porter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 14th USENIX Conference on File and Storage Technologies</title>
		<meeting>14th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
	<note>FAST&apos;16, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Conway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Knorr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Farach-Colton</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jannen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The full path to full-path indexing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Porter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 16th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="123" to="138" />
		</imprint>
	</monogr>
	<note>FAST&apos;18, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The composite-file file system: Decoupling the one-to-one mapping of files and metadata for better performance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Catanese</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A.-I</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 14th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="15" to="22" />
		</imprint>
	</monogr>
	<note>FAST&apos;16, USENIX Association</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
