<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:57+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">DREAM: Data Representation Aware of Damage to Extend the Lifetime of MLC NAND Flash Memory</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ting</forename><surname>Ye</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shenggang</forename><surname>Wan</surname></persName>
							<email>sgwan@hust.edu.cn</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xubin</forename><surname>He</surname></persName>
							<email>xubin.he@temple.edu</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer and Information Sciences</orgName>
								<orgName type="institution">Temple University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weijun</forename><surname>Xiao</surname></persName>
							<email>wxiao@vcu.edu</email>
							<affiliation key="aff3">
								<orgName type="institution">Virginia Commonwealth University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Changsheng</forename><surname>Xie</surname></persName>
							<email>csxie@hust.edu.cn</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">â€¡</forename><surname>Wuhan</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science and Technology</orgName>
								<orgName type="laboratory">National Laboratory for Optoelectronics</orgName>
								<orgName type="institution">Huazhong University of Sci. and Tech</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Huazhong University of Sci. and Tech</orgName>
								<address>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">DREAM: Data Representation Aware of Damage to Extend the Lifetime of MLC NAND Flash Memory</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>MLC NAND flash memory uses the voltages of the memory cells to represent bits. High voltages cause much more damage on the cells than low voltages. The free space that need not store bits is leveraged to reduce the usage of those high voltages and thus extend the lifetime of the MLC memory. However, limited by the conventional data representation rule that represents bits by the voltage of one single cell, the high voltages are still used in a high probability. To fully explore the potential of the free space on reducing the usage of high voltages, we propose a novel data representation aware of damage, named DREAM. DREAM uses the voltage combinations of multiple cells instead of the voltage of one single cell to represent bits. It enables to represent the same bits through flexibly replacing the high voltages in some cells with the low voltages in other cells when free space is available. Hence, high voltages which cause more damage are less used and the lifetime of the MLC memory is extended. Theoretical analysis results demonstrate the effectiveness and efficiency of DREAM.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>MLC (Multi-Level Cell, which stores two bits in one cell) NAND flash memory cells suffer from exponentially increasing damage with the growth of the voltage which they are charged to <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. The potential inside this phenomenon is not fully explored. Hence, a great opportunity to extend the poor lifetime of MLC memory, which is its serious drawback, is missed.</p><p>An MLC cell resembles an MOS transistor having two gates: a control gate, and a floating gate surrounded by a thin oxide layer <ref type="bibr" target="#b2">[3]</ref>. Isolated by the oxide layer, the floating gate can trap electrons. Four non-overlapped threshold voltage windows (denoted by V ML , which can * Corresponding author: sgwan@hust.edu.cn be V 11 , V 10 , V 00 , or V 01 from low to high voltage) are formed by the trapped electrons to represent two bits (a most significant bit (MSB) and a least significant bit (LSB)). All MSBs and LSBs in a wordline (a group of cells) form an MSB page and an LSB page, respectively.</p><p>Program operations charge cells to modify their voltages; while erase operations remove electrons from cells. The P/E (Program/Erase) operations can significantly damage the oxide layer, making it easier to lose electrons and finally leading to raw bit errors. Therefore, we use raw bit error rates (RBER) as an indicator to represent the damage on MLC cells in this paper.</p><p>Most of the damage is caused by high voltages <ref type="bibr" target="#b0">[1]</ref>, and previous research discovers the damage is cumulative <ref type="bibr" target="#b3">[4]</ref>. Hence, solutions are proposed to reduce the usage of high voltages by leveraging the free space that need not to store bits, and can be gained by data compression <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref> or found in the out-of-band (OOB) space <ref type="bibr" target="#b6">[7]</ref> of wordlines. Via distributing the free space in single cells, i.e., less bits are stored in those cells, the usage of high voltages is reduced and thus leading to an overall low damage.</p><p>However, according to our analysis, the potential inside the free space is not fully explored and thus losing a great opportunity to further reduce the overall damage. More specifically, in those conventional approaches, one bit of the free space is only used to eliminate the usage of high voltages in one single cell. Nevertheless, in the meanwhile, the remaining cells which store more bits still suffer from the high voltages. If one bit of the free space is shared by multiple cells, much more cells will not suffer from the high voltages, and thus further reducing the overall damage.</p><p>In essence, the key obstacle of sharing one bit of the free space among multiple cells is the conventional data representation rule that represents bits by the voltage of one single cell. By breaking this rule, i.e., using the voltage combinations of multiple cells to represent bits, the high voltages of some cells can be replaced with the Motivated by the above analysis, we propose a novel data representation aware of damage, called DREAM, to reduce the usage of high voltages in MLC memory via efficiently leveraging the free space. More specifically, in DREAM, bits are represented by the voltage combinations of multiple cells (a cell group) instead of the voltage of one single cell. Through distributing free space in each cell group, and using the lowest damage voltage combinations to represent the bits stored in those cell groups, the usage of high voltages and thus the overall damage can be reduced.</p><p>Our theoretical analysis demonstrates the effectiveness and efficiency of DREAM. By using DREAM, the lifetime of MLC memory is extended by 12.5% to 60.8% or 25.8% on average in terms of P/E cycles under various scenarios, compared to the state-of-the-art solution based on adjusting the data layout to extend the lifetime of MLC memory <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background and Motivation</head><p>P/E operations induce voltage dependent damage on NAND flash memory cells and thus cause raw bit errors. The relevance among the voltage, P/E cycles, and raw bit error rates has been heavily investigated by previous researches <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref>. These researches reveal that: (1) the P/E damage on a cell exponentially increases with the growth of the voltage levels the cell charged to as shown in <ref type="figure" target="#fig_0">Figure 1</ref>; and (2) the P/E damage is cumulative.</p><p>Assume all the voltages appear at the same probability. Most of the damage is caused by the high voltages. To clearly illustrate that, consider the following case. Assume the MSB and LSB in a cell are randomized, i.e., 50% chance being 0 or 1, and the normalized damages of V 11 , V 10 , V 00 , and V 01 are 1, 2.68, 7.34, and 18.2 (derived from the raw bit error rates at 8000 P/E cycles in <ref type="figure" target="#fig_0">Figure 1</ref>), respectively. The average damage on the cell is about 7.31. In addition, the high voltage V 01 is applied in a chance of 25%, which contributes 18.2Ã—0.25 <ref type="bibr">7.31</ref> or 62.2% of the average damage.</p><p>Intuitively, if the usage of high voltages, e.g., V 01 , can be reduced, the average damage will be significantly reduced. Fortunately, free space that need not to store bits are usually abundant in flash storage, e.g., can be gained by data compression, or found in the OOB space in a wordline. By distributing the free space among cells, the usage of high voltages is reduced and thus leading to less damage to the flash.</p><p>According to our analysis, the potential inside the free space has not been fully explored by those aforementioned solutions. Consider a simple case of storing only three bits in two MLC cells C 1 and C 2 , i.e., one bit is free and unused. Traditionally, the best storage layout to leverage that unused bit is to store two bits in C 1 , and one bit in C 2 as the LSB, respectively. Assume all those three bits are randomized. Because V 00 and V 01 are not applied in C 2 , the average damage on C 2 is (1+2.68)/2 = 1.85. Overall, the average damage on one cell is about (7.31 + 1.85)/2 = 4.58.</p><p>As shown in the above example, even in the best traditional storage layout, high voltages are still used in a high probability in some cells, e.g., in C 1 , V 01 with the highest damage would be applied in a chance of 25%, and thus still contribute about 18.2Ã—25% 2Ã—4.58 = 49.7% to the average damage; in the meanwhile, some low voltages are not used in other cells, e.g., in C 2 , V 00 , whose damage is lower than V 01 , is not applied. If V 01 in C 1 can be replaced by V 00 in C 2 to represent the same bits, the usage of V 01 can be further reduced.</p><p>According to our analysis, the main obstacle to do the replacement is that the unused bit can only be placed in C 1 or C 2 , but not both of them. The key constraint to prevent the unused bit being shared by C 1 and C 2 is the conventional data representation rule that represents bit by the voltage of one single cell. By breaking this rule, the replacement can be easily done, which motivates us to propose our DREAM. By applying proposed DREAM, we can reduce the average damage from 4.58 to 3.22. We will show the analysis in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Design of DREAM</head><p>To reduce the usage of high voltages and thus reduce the overall damage suffered by the MLC NAND flash memory, we propose a novel data representation aware of damage, called DREAM. The key idea of DREAM is using the voltage combinations of multiple cells instead of the voltage of one single cell to represent bits through breaking the conventional data representation rule. In such a manner, the high voltages in some cells can be replaced by the low voltages in other cells to represent the same bits when free space is gained, and thus further reduce the usage of high voltages compared to the conventional solutions.</p><p>The conventional approaches gain the free space using data compression. Two approaches are proposed to place the compression pages. One is putting two compressed pages in a wordline which is known as implicit compression and the other is putting as many compressed pages in a wordline as possible which is known as explicit compression. Compared to the latter approach, the first one usually suffers from much less FTL complexity which is very important to flash memory. Hence, we focus on applying DREAM into implicit compression in this paper, although DREAM can also work well on explicit compression.</p><p>To apply DREAM, at first, the content of write requests will be compressed to gain free space. Then, the compressed data and the metadata, e.g., ECC checksums, should be encoded to their damage-aware representation and additional metadata is generated for decoding. Those additional metadata, and DREAM-coded data and metadata are assembled to page pairs with dedicated layout. Finally, the page pair is stored in a wordline as the MSB and LSB pages, respectively. To read DREAM-coded data, both the MSB and LSB pages of its host wordline should be fetched. Then, DREAM-coded data and metadata are decoded by using the additional metadata. To reduce the modification on the hardware and firmware, we only consider to conduct the encoding and decoding operations on memory controllers in this paper. In the DREAM-enhanced memory, every m cells in a wordline form a group. All the m voltages of a group, which are denoted by an m-tuple (V 1 ,V 2 , ...,V j , ...,V m ) (V j is the voltage of the jth cell in the group, and can be V 11 , V 10 , V 00 , or V 01 ), together represent i bits. Because each cell has four choices on voltages, all m voltages form 4 m different m-voltage combinations, thus represent up to 4 m (or 2 2m ) states, i.e., a group can store up to 2m bits. The groups can be divided into 2m + 1 types, named with T i , where i is the number of bits they store. To make the representation damageaware, for the T i group, the 2 i lowest damage voltage combinations among 2 2m states are selected to represent those i bits. We record this DREAM deployment as DREAM-m, i.e., m cells form a cell group. In this paper, for demonstration purpose without loss of generality, we focus on DREAM-2 where 2 cells in a wordline form a group. <ref type="table" target="#tab_0">Table 1</ref> shows an example to represent different number of bits with DREAM-2 using two cells C 1 and C 2 . Two cells can store up to 4 bits. When storing 1, 2, or 3 bits, our DREAM always chooses the lowest voltage combinations. When storing 0 or 4 bits, DREAM uses the traditional mapping which is not shown in this table.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Data Representation Aware of Damage</head><p>Consider the same case of the example mentioned in Section 2 that three bits are stored in two cells (i.e., i = 3, m = 2). Those bits are represented by the voltage combinations of two cells C 1 and C 2 . As shown in <ref type="table" target="#tab_0">Table 1</ref> To store i bits in a group, we should first find their corresponding voltage combination (V 1 , ...,V j , ...,V m ). Then, each voltage V j is explained as two bits in the conventional way, i.e., an MSB and an LSB, e.g., if V j is V M j L j , the MSB and LSB will be M j and L j , respectively. At last, the m bits M 1 ...M m and m bits L 1 ...L m are stored in the group as the MSBs and LSBs. In DREAM, the conversion from original i bits to a pair of m bits is an encoding operation. And the reverse conversion is a decoding operation. The encoding and decoding operations can be implemented with either logic computation, or table looking-up. Our prototype on a commodity CPU shows that, the throughput of encoding ranges from 1.4 to 1.7 GB/s and that of decoding ranges from 1.8 to 2.2 GB/s. Because the FPGA-based decoder and encoder are typically much more powerful compared to that built upon CPU, the encoding and decoding operations would have negligible impact on the I/O performance in those DREAM-enhanced MLC memory.</p><p>When the voltage combinations are used to represent data, raw bit errors might be amplified. For example, if (V 10 , V 00 ) represents 110, and (V 10 , V 10 ) represents 000, two bit flips might occur when V 00 changes to V 10 due to electron leakage. To mitigate the amplification of raw bit errors, we come up the following solutions.</p><p>First, through generating the ECC checksum from the DREAM-coded data but not the original data, the error amplification will not happen to the data but only happen to the DREAM-coded metadata. Because the amount of the metadata is usually far less than the data (around 10%) <ref type="bibr" target="#b7">[8]</ref>, the probability of the error amplification will be dramatically reduced.</p><p>Second, the error amplification can be further reduced by carefully choosing a mapping between bits and their corresponding voltage combinations. Generally raw bit errors are induced by retention, program interference, read disturb, and insufficient erases and almost all the raw bit errors are caused by the first two factors <ref type="bibr" target="#b0">[1]</ref>. These raw bit errors demonstrate a strong statistic regularity: 90% of the retention errors are induced by the cell voltage state transition from V 01 to V 00 or from V 00 to V 10 due to electron leakage; and 70% of the program interference errors are induced by the cell voltage state transition from V 11 to V 10 by adding additional electrons to flash cells <ref type="bibr" target="#b0">[1]</ref>. The error amplification will be dramatically reduced if those voltage state transitions would only flip one bit in all original bits. For example, <ref type="figure" target="#fig_1">Figure 2</ref> demonstrates the voltage state transitions in the T 3 group of DREAM-2. We assume that only one voltage state in a 2-voltage combination will make a transition to other voltage states because there is less chance to happen for changing two voltage states at the same time. As shown in <ref type="figure" target="#fig_1">Figure 2</ref>, there are totally 10 possible transitions. Among these 10 transitions, only two transitions will induce two-bit data flips illustrated with dotted arrows in the figure. The rest of transitions do not cause any error amplification as traditional data representation. In this way, the amplification of bit error is limited to 1.2 (12 flipped bits after using DREAM v.s. 10 flipped bits under traditional representation).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Data Layout</head><p>In DREAM, for different types of groups, one certain voltage combination (V 1 , ...,V m ) might represent different bits, e.g., in DREAM-2, (V 11 , V 11 ) represents 11 in a T 2 group and 011 in a T 3 group. Hence, additional metadata should be added to identify the type of groups for correct decoding. Specifically, log 2 (2m + 1) bits are used to record the type of a group. To reduce the additional metadata, in a wordline, all the T i groups are placed together, and form zones (denoted by Z i ). Because the types of groups are usually very small, e.g., 2m + 1, the amount of metadata would not be large. The zones are placed in a sequence and there are no free cells between two adjacent zones. Hence, we only need to know the start address of the first zone Z 0 (a cell number), and the size of each zone (numbers of groups, can be 0), to identify the zones. It is worth noting that the starting address can be calculated from the P/E cycles of its host block <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref>. These additional metadata can be further reduced by aligning the size of zones, e.g., making them 2 s -cells aligned. In such a manner, the zone sizes can be further shortened, with the cost of a slightly increasing damage. Different types of groups suffer different damages. If the starting address of the first zone is fixed, there will be a huge wear unbalance among the cells in a wordline. To balance the damage among the cells in a wordline, that start address will be changed in every P/E cycle, e.g., cyclically added by 2 n (cells). This method also works on the imbalanced damage among the cells in a group.</p><p>For the DREAM-coded data, the size of zone Z i (denoted by S i , where 0 â‰¤ i â‰¤ 2m) is determined by the overall compression ratio r, the number of cells for storing data (user space) N d in a wordline, and the per P/E cycle average damage caused by the T i group is D i . S i should obey the following two constraints. <ref type="formula">(1)</ref> The total capacity of all the zones should be large enough to store all the data, as illustrated in Equation 1. <ref type="formula">(2)</ref> The total cells in all the zones should not exceed the cells of user space in a wordline, as illustrated in Equation 2. (3) Let p be the number of P/E cycles. The total damage after p P/E cycles on user space is calculated as Equation 3. Hence, S i can be solved to minimize the total damage through the simplex method <ref type="bibr" target="#b10">[11]</ref>.</p><formula xml:id="formula_0">âˆ‘ ( S i Ã— 2 s m Ã— i) â‰¥ 2 Ã— r Ã— N d (1) âˆ‘ (S i Ã— 2 s ) â‰¤ N d (2) total damage = âˆ‘ ( S i Ã—2 s m Ã—D i Ã— p) (3)</formula><p>in all the above three equations, i = 0, 1, 2, ..., 2m</p><p>DREAM is also applicable to the metadata, e.g., ECC checksums, because the metadata size is usually smaller than that of the out-of-band space in a wordline <ref type="bibr" target="#b11">[12]</ref>, i.e., additional free space is typically available. It is worth noting that, to speed up the decoding, the additional metadata for both the user space and OOB space is not represented in DREAM, and be placed after the last zone of metadata. We demonstrate the data layout of a wordline in <ref type="figure" target="#fig_2">Figure 3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head><p>We conduct a mathematical analysis to evaluate the efficiency of DREAM in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Analysis Methodology</head><p>In this work, we define the lifetime as the maximum P/E cycles before reaching the specified bit error rates (BER) under different compression ratios.</p><p>The maximum P/E cycles are related to the size of free space, which is determined by data compression ratio r and the size of metadata in OOB space. The maximum P/E cycles are estimated as follows. First, we calculate the zone sizes of user space under a certain data compression ratio according to the method described in Section 3.2. Then we calculate the zone sizes of OOB space under a certain metadata size S m . We figure out the total damage suffered by user space and OOB space (referred as D u and D o , respectively) derived from the Equation 3 and the per-cycle damage of each group type derived from the raw bit error rates at 8000 P/E cycles in <ref type="figure" target="#fig_0">Figure 1</ref>. Let S u and S o denote the size of user space and OOB space, respectively, the overall damage suffered by the page is calculated as</p><formula xml:id="formula_1">D u +D o S u +S o</formula><p>, which is related to the number of P/E cycles p. Finally, we gradually increase p until the overall damage reaches the specified bit error rates (BER), and the maximum P/E cycles under this r and S m is p. To calculate the maximum P/E cycles, we just need to change S m and r.</p><p>We assume that the OOB space is set as 20% of the page size and the raw bit error rate of the MLC memory at its end of life is 6.6 Ã— 10 âˆ’3 <ref type="bibr" target="#b3">[4]</ref>, which is the average raw bit error rates of the four different cell voltages at 8000 P/E cycles. The metadata size S m ranges from 5% to 15% of the page size and the data compression ratio r ranges from 0.1 to 0.9.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Results and Discussion</head><p>The maximum P/E cycles is chosen as the metrics for the comparison and the BDC <ref type="bibr" target="#b3">[4]</ref> is chosen as the baseline. <ref type="figure" target="#fig_3">Figure 4</ref> describes the lifetime of the MLC memory under the DREAM-2 which is normalized to that under the baseline. The results show that compared to the baseline, DREAM significantly improves the lifetime of the MLC memory. The improvement of DREAM ranges from 12.5% to 60.8%, and is 25.8% by geometric mean, compared to the baseline. DREAM demonstrates higher efficiency on improving the lifetime of MLC memory under the compression ratio from 0.6 to 0.8, because the high voltage V 01 is used in a high probability (at least 20%) under baseline but in a low probability (at most 10%) under DREAM-2 in such cases.</p><p>When the size of metadata increases from 5% to 15% of page size, the benefit of lifetime decreases. This is because the size of free space of OOB reduces when the metadata increases, less cells can be benefited.</p><p>We also evaluate the impact to system throughput and overall response time. When DREAM is used in storage system, the system overall response time increased by 6.4% and the throughput decreased by 5.0%. The impact to system performance can be further reduced if DREAM is only used in specified pages. Since logic pages are either read mostly or written mostly, and a few pages are read and written equally <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14]</ref>, we can separate the read-mostly pages and write-mostly pages, and only apply DREAM in the write-mostly pages.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The damage of four voltages under various P/E cycles. low voltages of other cells to represent the same bits, and thus further reducing the usage of the high voltages. Motivated by the above analysis, we propose a novel data representation aware of damage, called DREAM, to reduce the usage of high voltages in MLC memory via efficiently leveraging the free space. More specifically, in DREAM, bits are represented by the voltage combinations of multiple cells (a cell group) instead of the voltage of one single cell. Through distributing free space in each cell group, and using the lowest damage voltage combinations to represent the bits stored in those cell groups, the usage of high voltages and thus the overall damage can be reduced. Our theoretical analysis demonstrates the effectiveness and efficiency of DREAM. By using DREAM, the lifetime of MLC memory is extended by 12.5% to 60.8% or 25.8% on average in terms of P/E cycles under various scenarios, compared to the state-of-the-art solution based on adjusting the data layout to extend the lifetime of MLC memory [4].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Voltage state transitions in the T 3 group of DREAM-2. The solid arrow indicates voltage state transition with one-bit data flip. The dotted arrow indicates voltage state transition with two-bit data flip. x indicates adding additional electrons and y indicates electron leakage.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Data layout of a wordline. The DREAM-coded data and metadata are stored separately, and additional metadata are added for correct decoding.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Normalized lifetime increase of DREAM-2 under various compression ratios and metadata sizes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Bit value mapping while storing 1, 2, or 3 bits 
in 2 cells using DREAM where lowest voltage combina-
tions are used. V 1 and V 2 are the voltages of C 1 and C 2 , 
respectively. '-' means the corresponding combinations 
are not used. 

V 1 V 2 
#Bits 1 
2 
3 
V 1 V 2 
#Bits 1 2 
3 

V 11 V 11 
1 11 011 V 11 V 00 
-
-
111 
V 11 V 10 
0 10 010 V 00 V 11 
-
-
101 
V 10 V 11 
-
01 001 V 10 V 00 
-
-
110 
V 10 V 10 
-
00 000 V 00 V 10 
-
-
100 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head></head><label></label><figDesc>, the 2 3 lowest damage voltage combinations among 2 4 states are selected to represent these three bits. Based on this data representation, the average damage on a cell is reduced to 3.22 by applying normalized damages as the example in Section 2. In other words, the average damage is about 29.7% reduction compared to the best case in traditional representation. The reason for this damage reduction is that we do not use the highest voltage V 01 and apply DREAM to represent bits.</figDesc><table></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions and Future Work</head><p>In this paper, we present a data representation aware of damage, named DREAM, to reduce program/erase damage on MLC memory. The basic idea of DREAM is using the low-damage voltage combinations of multiple MLC cells instead of the voltage of one single MLC cell to represent bits, and discarding high-damage voltage combinations when free space are available. The benefits of this scheme is that flash cell damage is reduced and thus improving the lifetime of the MLC memory. Theoretical analysis results have demonstrated the effectiveness of DREAM in terms of improved P/E cycles compared to the state-of-the-art solution based on adjusting the data layout to extend the lifetime of MLC memory under the implicit compression strategy.</p><p>We consider reducing the read overhead induced by DREAM and combining DREAM with explicit compression strategy as our future work. This research is sponsored by National Natural Science Foundation of China Grants Nos. 61300046 and 61331010, and U.S. National Science Foundation Grants CCF-1717660, CNS-1702474 and CCF-1547804.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Error Patterns in MLC NAND Flash Memory: Measurement, Characterization, and Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erich</forename><forename type="middle">F</forename><surname>Haratsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Onur</forename><surname>Mutlu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Mai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Design, Automation and Test in Europe (DATE &apos;12)</title>
		<meeting>the Conference on Design, Automation and Test in Europe (DATE &apos;12)</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Bit error rate in NAND flash memories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Neal</forename><surname>Mielke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Todd</forename><surname>Marquart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ning</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeff</forename><surname>Kessenich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanmant</forename><surname>Belgal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Schares</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Falgun</forename><surname>Trivedi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Evan</forename><surname>Goodness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leland</forename><forename type="middle">R</forename><surname>Nevill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Reliability Physics Symposium (IRPS&apos;08)</title>
		<meeting>the IEEE International Reliability Physics Symposium (IRPS&apos;08)</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Inside NAND Flash Memories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rino</forename><surname>Micheloni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luca</forename><surname>Crippa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alessia</forename><surname>Marelli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">How Much Can Data Compressibility Help to Improve NAND Flash Memory Lifetime?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiangpeng</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xuebin</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jun</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tong</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Usenix Conference on File and Storage Technologies (FAST&apos;15)</title>
		<meeting>the Usenix Conference on File and Storage Technologies (FAST&apos;15)</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Adding aggressive error correction to a high-performance compressing flash file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yangwook</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ethan</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of theSeventhACMInternationalConferenceonEmbedded Software (EMSOFT 09)</title>
		<meeting>theSeventhACMInternationalConferenceonEmbedded Software (EMSOFT 09)</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">zFTL: power-efficient data compression support for NAND flash-based consumer electronics devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Consumer Electronics</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Extending the Lifetime of Flash-based Storage through Reducing Write Amplification from File Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Youyou</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiwu</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weimin</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Usenix Conference on File and Storage Technologies (FAST&apos;13)</title>
		<meeting>the Usenix Conference on File and Storage Technologies (FAST&apos;13)</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">LDPC-in-SSD: making advanced error correction codes work effectively in solid state drives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wenzhe</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongbin</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaodong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nanning</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Usenix Conference on File and Storage Technologies (FAST&apos;13)</title>
		<meeting>the Usenix Conference on File and Storage Technologies (FAST&apos;13)</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Algorithms and Data Structures for Flash Memories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eran</forename><surname>Gal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sivan</forename><surname>Toledo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Competitive Analysis of Flash Memory Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avraham</forename><surname>Ben</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-Aroya</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sivan</forename><surname>Toledo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Algorithms</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Application of the simplex method to a transportation problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>George B Dantzig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1951" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">SCM capacity and NAND over-provisioning requirements for SCM/NAND flash hybrid enterprise SSD</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Miyaji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Johguchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Takeuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013 5th IEEE International Memory Workshop (IMW&apos;13)</title>
		<meeting>the 2013 5th IEEE International Memory Workshop (IMW&apos;13)</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Write off-loading:Practical power management for enterprise storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dushyanth</forename><surname>Narayanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Austin</forename><surname>Donnelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antony</forename><surname>Rowstron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Storage</title>
		<imprint>
			<biblScope unit="page">8</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Access Characteristic Guided Read and Write Cost Regulation for Performance Improvement on Flash Memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiao</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liang</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chun</forename><forename type="middle">Jason</forename><surname>Xue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaijie</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheng</forename><surname>Ji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qingfeng</forename><surname>Zhuge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edwin H.-M</forename><surname>Sha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Usenix Conference on File and Storage Technologies (FAST&apos;16)</title>
		<meeting>the Usenix Conference on File and Storage Technologies (FAST&apos;16)</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
