<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:54+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Power and Performance Analysis of GPU-Accelerated Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuki</forename><surname>Abe</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratoire Bordelais de Recherche en Informatique Koji Inoue Kyushu University</orgName>
								<orgName type="institution" key="instit1">Kyushu University</orgName>
								<orgName type="institution" key="instit2">Kyushu University</orgName>
								<orgName type="institution" key="instit3">Kyushu University</orgName>
								<orgName type="institution" key="instit4">Nagoya University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hiroshi</forename><surname>Sasaki</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratoire Bordelais de Recherche en Informatique Koji Inoue Kyushu University</orgName>
								<orgName type="institution" key="instit1">Kyushu University</orgName>
								<orgName type="institution" key="instit2">Kyushu University</orgName>
								<orgName type="institution" key="instit3">Kyushu University</orgName>
								<orgName type="institution" key="instit4">Nagoya University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Peres</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratoire Bordelais de Recherche en Informatique Koji Inoue Kyushu University</orgName>
								<orgName type="institution" key="instit1">Kyushu University</orgName>
								<orgName type="institution" key="instit2">Kyushu University</orgName>
								<orgName type="institution" key="instit3">Kyushu University</orgName>
								<orgName type="institution" key="instit4">Nagoya University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kazuaki</forename><surname>Murakami</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratoire Bordelais de Recherche en Informatique Koji Inoue Kyushu University</orgName>
								<orgName type="institution" key="instit1">Kyushu University</orgName>
								<orgName type="institution" key="instit2">Kyushu University</orgName>
								<orgName type="institution" key="instit3">Kyushu University</orgName>
								<orgName type="institution" key="instit4">Nagoya University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shinpei</forename><surname>Kato</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Laboratoire Bordelais de Recherche en Informatique Koji Inoue Kyushu University</orgName>
								<orgName type="institution" key="instit1">Kyushu University</orgName>
								<orgName type="institution" key="instit2">Kyushu University</orgName>
								<orgName type="institution" key="instit3">Kyushu University</orgName>
								<orgName type="institution" key="instit4">Nagoya University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Power and Performance Analysis of GPU-Accelerated Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Graphics processing units (GPUs) provide significant improvements in performance and performance-per-watt as compared to traditional multicore CPUs. This energy-efficiency of GPUs has facilitated the use of GPUs in many application domains. Albeit energy efficient , GPUs consume non-trivial power independently of CPUs. Therefore, we need to analyze the power and performance characteristic of GPUs and their causal relation with CPUs in order to reduce the total energy consumption of the system while sustaining high performance. In this paper, we provide a power and performance analysis of GPU-accelerated systems for better understand-ings of these implications. Our analysis on a real system discloses that system energy can be reduced by 28% retaining a decrease in performance within 1% by controlling the voltage and frequency levels of GPUs. We show that energy savings can be achieved when GPU core and memory clock frequencies are appropriately scaled considering the workload characteristics. Another interesting finding is that voltage and frequency scaling of CPUs is trivial for total system energy reduction, and even should not be applied in state-of-the-art GPU-accelerated systems. We believe that these findings are useful to develop dynamic voltage and frequency scaling (DVFS) algorithms for GPU-accelerated systems.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Graphics processing units (GPUs) have been increasingly deployed in general-purpose application domains due to their significant improvements in performance and performance-per-watt. As depicted in <ref type="figure">Figure 1</ref>, the performance-per-watt of GPUs highly outperforms that of traditional multicore CPUs. Albeit energy efficient, GPUs consume non-trivial power during operation. However, commodity system software for GPUs is not well designed to control their power consumption while primarily tailored to accelerate computations. To the best of our knowledge, commodity system software does not employ any voltage and frequency scal- </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GFLOPS / Wa+</head><p>NVIDIA GPU Intel CPU <ref type="figure">Figure 1</ref>: Performance-per-watt trends on representative NVIDIA GPUs <ref type="bibr">[11]</ref> and Intel CPUs <ref type="bibr" target="#b4">[6]</ref>.</p><p>ing for GPUs, while most computational pieces of GPUaccelerated systems are offloaded on to GPUs. In order to develop energy-efficient GPU-accelerated systems, it is essential to identify the trade-off in power and performance of GPUs and its causal relation with CPUs.</p><p>Despite rapid growth of GPU technology, there has not been much understanding of power and performance implications of GPU-accelerated systems. According to vendor's specifications, thermal design power (TDP) of state-of-the-art GPUs is around 200W, while that of today's multicore CPUs is typically below 100W. Because TDP of GPUs is comparable to or even higher than that of CPUs, it is hard for system designers to optimize their energy savings by predicting the power and performance of GPU-accelerated systems without understandings of GPU power-performance characteristics. However, previous work <ref type="bibr" target="#b2">[4,</ref><ref type="bibr" target="#b1">3,</ref><ref type="bibr" target="#b5">7,</ref><ref type="bibr" target="#b7">9,</ref><ref type="bibr" target="#b8">10]</ref> on the power and performance analysis of GPU-accelerated systems are based on either simulation studies or limited hardware functionality. None of previous work has ever disclosed a fundamental approach to the power and</p><p>The contribution of this paper is to provide a power and performance analysis of GPU-accelerated systems using NVIDIA's Fermi architecture (GeForce GTX 480). Specifically, we identify when to scale the frequency and voltage of GPUs and CPUs in order to minimize overall system energy. Our analysis opens up important problems of dynamic voltage and frequency scaling (DVFS) algorithms for growing GPU-accelerated systems. We also provide an open method and tool to scale voltage  and frequency of GPUs. The black box feature of current GPU drivers and runtimes prevents researchers from tackling correlative power and performance optimization problems. We believe that sharing such a common method and tool with researchers would further facilitate the use of GPUs. The rest of this paper is organized as follows. Section 2 presents our system platform and Section 3 provides evaluation results and analyses. Section 4 discusses related work, and the paper is concluded in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System Platform</head><p>We use an NVIDIA GeForce GTX 480 graphics card and Intel Core i5 2400 processor with the Linux kernel 3.3.0. <ref type="table" target="#tab_1">Tables 1 and 2</ref> present their available performance levels, respectively. To perform the experiment, we use NVIDIA's proprietary software <ref type="bibr" target="#b10">[13]</ref> and Gdev <ref type="bibr" target="#b6">[8]</ref> on a case by case basis. NVIDIA's proprietary software does not provide a system interface to scale the performance level of the GPU. We hence provide the modified BIOS files for the GPU that force the binary driver to configure the GPU with the specified performance level when loaded. This method enables us to choose any set of the GPU core and memory clocks, but requires the driver to reload, and the configuration is static while the driver is running. On the other hand, Gdev allows the system to change the performance level of the GPU dynamically at runtime through the Linux "/proc" file system interface. However, it is available only for the GPU core clock at the moment, and the GPU memory clock is fixed at 135MHz. This is limited due to an open-source implementation of Linux, but is supposed to be removed in the future release.</p><p>The experimental workload executes the Rodinia benchmark suite 2.0.1 <ref type="bibr" target="#b0">[2]</ref> and our original microbenchmark programs of matrix computation. All input data for the Rodinia programs use the maximum feasible size, while the microbenchmark programs vary data size to conduct fine-grained measurements, all of which are written in CUDA. We use the NVIDIA CUDA Compiler (NVCC) 4.0 <ref type="bibr" target="#b9">[12]</ref> to compile the programs. Note that both NVIDIA's proprietary software and Gdev receive the same program binary.</p><p>The power and energy consumption of the system is measured by the Yokogawa Electric Corporation's WT1600 digital power meter <ref type="bibr">[1]</ref>. This instrument obtains the voltage and electric current every 50ms from the power plug of the machine. The power consumption is calculated by multiplying the voltage and current, while the energy consumption is derived by accumulation of power consumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Evaluation and Analysis</head><p>We first investigate the impact of GPU core and memory clocks on GPU-intensive workload executing 20,000 loops of 512 × 512 matrix addition. The voltage and frequency of the GPU is changed three times during the operation, while that of the CPU is fixed at the minimum level to focus on the behavior of the GPU. <ref type="figure" target="#fig_0">Fig- ure 2</ref> shows the power consumption of the system in this setup, where "c-*" and "m-*" stand for the GPU core and memory clocks, respectively, while "E*" represents the cumulative energy consumption of the corresponding duration. What is learned from this experiment is that it is important to cooperatively scale the GPU core and memory clocks to effectively reduce energy consumption. Lowering the memory clock to 135MHz successfully reduces energy consumption, but the downscaling of the core clock to 405MHz counter-increases energy consumption. This indeed implies DVFS algorithms dominate the power and performance of GPUaccelerated systems.</p><p>We next coordinate the GPU and the CPU using more realistic workload from the Rodinia benchmark suite. To simplify the setup, we consider only high and low core clocks, meaning that we evaluate four configurations of (GPU-L, CPU-L), (GPU-H, CPU-L), (GPU-L, CPU-H) and (GPU-H, CPU-H), where "*-L" and "*-H" represent the low and high core clocks. The GPU memory clock is fixed at 135MHz. In an idle state, however, the clocks are always down-scaled to the minimum level. We also add another configuration (all-H) that keeps at the maximum clocks even though the GPU is idle, in order to see the impact of elementary coordinated DVFS on GPU-accelerated systems. <ref type="figure" target="#fig_1">Figures 3 and 4</ref>    show the execution time and energy consumption of four representative programs of the Rodinia benchmark suite. Regarding the execution time, "all-H" always takes the shortest execution time, as it consistently keeps at the maximum performance level. Other configurations however depend on workload. For example, the execution time of heartwall -GPU-intensive workload -can be decreased by setting the high GPU clock, whereas that of hotspot is rather affected by the CPU clock. The characteristics of energy consumption is more complicated. For some workload, lowering the clock causes an increase in energy consumption, as the duration of execution is increased, consuming more cumulative power consumption. In other words, GPU-intensive workload should generally use the high GPU clock so that it completes operation as soon as possible to minimize energy. Apparently, "all-H" is not a good idea in terms of energy; the clock should be minimized when the device is not used.</p><formula xml:id="formula_0">respectively 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 CPU-­-L CPU-­-H CPU-­-L CPU-­-H CPU-­-L CPU-­-H CPU-­-L CPU-­-H 񮽙 backprop heartwall hotspot srad Normalized energy all -­-H all -­-H all -­-H all -­-H</formula><p>In the above experiments, we have never observed that energy consumption is reduced by lowering the CPU clock. This is because lowering the CPU clock causes the GPU to increase the duration of an idle state. Hence, energy is always wasted when the GPU is idle. We demonstrate how energy consumption is wasted in an idle state, when (i) the GPU is not present and (ii) is present with three levels of a set of voltage and frequency. <ref type="figure" target="#fig_3">Figure 5</ref> shows the average power consumption of those four cases obtained by running the system for 60 seconds without performing any computations (idle state). The CPU consumes no more than 38W on average, whereas the GPU-installed systems consume a different scale of power depending on the configured set of voltage and frequency. This observation encourages the system not to downscale the voltage and frequency of the CPU, unless the idle power consumption of future GPUs becomes small enough by hardware optimization techniques. The lesson learned from this experiment is that the power consumption of the GPU is significant even in an idle state, meaning that DVFS is strongly desired for the GPU with whatever overhead it has to pay for changing the performance level.</p><p>The preceding evaluation indicates that the CPU is a weak factor for energy savings of GPU-accelerated systems. Henceforth, we restrict our attention to the GPU. According to the traditional power modeling <ref type="bibr" target="#b3">[5]</ref>, lowering the core clock is often effective for memory-intensive workload. Our next evaluation verifies whether the same is true for the GPU. We use matrix addition and multiplication programs with varied sizes of data. A small size of data reduces memory accesses, while a large size of data makes the workload memory-intensive. <ref type="figure" target="#fig_4">Figures 6 and 7</ref> show the execution time and energy consumption of those matrix computations, where "s-*" represents the number of matrix row/column. A difference between "s-64" and "s-8192" in <ref type="figure" target="#fig_6">Figure 7</ref> shows that memory-clock scaling is more effective for such computations that use a smaller size of data. This is because the execution time of such computations is not affected by lowering the memory clock. Another observation is that energy cannot be saved by lowering the core clock, because these matrix computations are consistently compute-intensive. If the core clock is downscaled, their execution time is highly increased, which results in an increase in cumulative power consumption.</p><p>Seen from the above experiments, system energy could be reduced by about 28% retaining a decrease in performance within 1%. These experimental results encourage that DVFS algorithms for GPU-accelerated systems should be weighted on the GPU rather than the CPU, though their energy optimization is very challenging, given many factors of design knobs including CPU/GPU, core/memory, and workload characteristics.</p><p>Finally, we compare NVIDIA's proprietary software and Gdev. This is an important and practical investigation because NVIDIA's proprietary software does not expose a system interface to change the voltage and frequency of the GPU dynamically at runtime, and hence    the development of DVFS algorithms in future work will inevitably depend on Gdev. The basic performance of Gdev is competitive to NVIDIA's proprietary software <ref type="bibr" target="#b6">[8]</ref>, but we have to evince that Gdev is also reliable for power management. The test program exploits matrix addition with varied sizes of data. <ref type="figure" target="#fig_7">Figure 8</ref> shows the execution time and energy consumption of the matrix addition programs using different scales of GPU core clocks, where the GPU memory clock is fixed at 135MHz. In this experiment, "s-8192" benefits from lowering the core clock, because the workload is memory-bound due to a large size of matrix, and the execution time is not much affected by the core clock, while energy is effectively saved. The most remarkable observation is that NVIDIA's proprietary software and Gdev exhibit almost the same results on the execution time and energy consumption. This implies that the result of our on-going research using Gdev could be easily propagated to the real product, once energy management interfaces are employed by vendor's software. Note that tools and documentations for the power and performance management of the GPU may be downloaded from our website. 1</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Related Work</head><p>Nagasaka et al. conjectured energy consumption of GPUs based on hardware performance counters <ref type="bibr" target="#b8">[10]</ref>. Their model is not adequate in that we have seen that power consumption rises even in an idle state when voltage and frequency are scaled, though they do not consider it. Hence, this approach would require an additional model to precisely analyze the power consumption of GPUs.</p><p>Hong et al. studied energy savings of GPUs, assuming power gating available to limit the number of active cores <ref type="bibr" target="#b1">[3,</ref><ref type="bibr" target="#b2">4]</ref>. In particular, they analyze PTX code to model the power and performance of GPUs based on the number of instructions and memory accesses. We consider that an offline PTX analysis for power and performance prediction is a useful approach to the design of DVFS algorithms. What lacks in this approach, however, is a runtime analysis for input data. In this paper, we have analyzed the power and performance characteristics depending on the size of input data.</p><p>Lee et al. presented a method to apply DVFS algorithms to the GPU. They particularly aimed at maximizing performance under the given power constraint <ref type="bibr" target="#b7">[9]</ref>. A strong limitation of their work, however, is that the evaluation of power consumption is based on a conceptual model but not on real-world hardware. They also failed to discuss how to determine the voltage and frequency. In this paper, we have rather explored how to minimize the energy consumption of GPU-accelerated systems using the cutting-edge real-world hardware.</p><p>Jiao et al. evaluated the power and performance of an old NVIDIA GTX 280 GPU <ref type="bibr" target="#b5">[7]</ref>. They examined compute-intensive and memory-intensive programs. According to their analysis, energy consumption could often be reduced by lowering the core clock when workload is memory-intensive. This is exactly the same as what we have identified for an NVIDIA's GTX 480 GPU. Therefore, we conjecture that this observation and knowledge could be applied to future GPU architectures as well. In addition, we have disclosed that energy consumption could also be reduced by scaling the memory clock. This opens up a new insight into DVFS algorithms for GPU-accelerated systems.</p><p>Ying et al. analyzed the power and performance of an AMD HD 5870 GPU using a random forest method with the profile counter <ref type="bibr" target="#b11">[14]</ref>. They revealed that activating a fewer number of ALUs reduces power consumption. However, this approach incurs an increase in execution time, and does not successfully reduce energy consumption. This is attributed to the fact that they use only software management. Meanwhile, we have demonstrated that energy can be reduced by scaling the voltage and frequency of the GPU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion and Future Work</head><p>We have presented a power and performance analysis of GPU-accelerated systems based on the NVIDIA Fermi architecture. Our findings include that the CPU is a weak factor for energy savings of GPU-accelerated systems unless power gating is supported by the GPU. In contrast, voltage and frequency scaling of the GPU is significant to reduce energy consumption. Our experimental results demonstrated that system energy could be reduced by about 28% retaining a decrease in performance within 1%, if the performance level of the GPU can be scaled effectively.</p><p>In future work, we plan to develop DVFS algorithms for GPU-accelerated systems, using the characteristic identified in this paper. We basically consider such an approach that controls the GPU core clock for memoryintensive workload while controls the GPU memory clock for compute-intensive workload. To this end, we integrate PTX code analysis <ref type="bibr" target="#b1">[3,</ref><ref type="bibr" target="#b2">4]</ref> into DVFS algorithms so that energy optimization can be provided at runtime. We also consider a further dynamic scheme that scales the performance level of the GPU during the execution of GPU code, whereas we restricted a scaling point at the boundary of GPU code in this paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Power consumption and execution time of the 512 × 512 matrix addition program.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Energy consumption of the Rodinia programs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Power consumption in an idle state.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Execution time of the matrix addition and multiplication programs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Energy consumption of the matrix addition and multiplication programs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Comparison of the NVIDIA proprietary and the Gdev open-source runtimes and drivers.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 1 : Performance levels of GTX 480 (GPU)</head><label>1</label><figDesc></figDesc><table>Clock Domains Min [MHz] Low [MHz] High [MHz] 
Core 
50 
405 
700 
Memory 
135 
324 
1848 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Performance levels of Core i5 2400 (CPU) 

Platforms 
Min [MHz] Low [MHz] High [MHz] 
Core i5-2400 
1600 
2700 
3300.1 

</table></figure>

			<note place="foot" n="1"> http://sys.ertl.jp/gdev/</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A characterization of the Rodinia benchmark suite with comparison to contemporary CMP workloads</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Che</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sheaffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Boyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Szafaryn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Skadron</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IISWC &apos;10</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">An analytical model for a GPU architecture with memory-level and thread-level parallelism awareness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An integrated GPU power and performance model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISCA &apos;10</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Compiler-directed dynamic voltage/frequency scheduling for energy reduction in microprocessors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-H</forename><surname>Kremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsiao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISLPED &apos;01</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="275" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Intel</forename><surname>Corporation</surname></persName>
		</author>
		<ptr target="http://www.intel.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Power and performance characterization of computational kernels on the GPU</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Balaji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Feng</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GREENCOM-CPSCOM &apos;10</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Gdev: first-class GPU resource management in the operating system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kato</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mcthrow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Maltzahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brandt</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX ATC &apos;12</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improving throughput of power-constrained GPUs using dynamic voltage/frequency and core scaling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sathisha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Schulte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Compton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PACT &apos;11</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="111" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Statistical power modeling of GPU kernels using performance counters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nagasaka</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Maruyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Nukada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Endo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And Mat-Suoka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IGCC &apos;10</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nvidia</forename><surname>Cuda</surname></persName>
		</author>
		<idno>4.0</idno>
		<ptr target="http://developer.nvidia.com/cuda-toolkit-40" />
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nvidia</forename><surname>Linux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Driver</surname></persName>
		</author>
		<ptr target="http://www.nvidia.com/object/linux-display-amd64-295.59-driver.html" />
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Performance and power analysis of ATI GPU: a statistical approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peng</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NAS &apos;11</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="149" to="158" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
