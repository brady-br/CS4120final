<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:35+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">USENIX Association 11th USENIX Conference on File and Storage Technologies (FAST &apos;13) 175 File Recipe Compression in Data Deduplication Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dirk</forename><surname>Meister</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Johannes Gutenberg University Mainz</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">André</forename><surname>Brinkmann</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Johannes Gutenberg University Mainz</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Süß</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Johannes Gutenberg University Mainz</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">USENIX Association 11th USENIX Conference on File and Storage Technologies (FAST &apos;13) 175 File Recipe Compression in Data Deduplication Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Data deduplication systems discover and exploit redundancies between different data blocks. The most common approach divides data into chunks and identifies redundancies via fingerprints. The file content can be rebuilt by combining the chunk fingerprints which are stored sequentially in a file recipe. The corresponding file recipe data can occupy a significant fraction of the total disk space, especially if the deduplication ratio is very high. We propose a combination of efficient and scalable compression schemes to shrink the file recipes&apos; size. A trace-based simulation shows that these methods can compress file recipes by up to 93%.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The amount of data, which needs to be stored, increases permanently. Deduplication has proven to be a viable approach to reduce the resulting capacity demands, especially for backup workloads. Typically, deduplication systems divide files or blocks into chunks and identify redundant chunks by comparing their cryptographic fingerprints. Different indexes are used to manage the relations between files and chunks, which require additional capacities beside the deduplicated data.</p><p>The chunk index contains the fingerprints of the stored chunks <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b24">25]</ref>. Simply storing the chunk index on disk would lead to a disk bottleneck, as every write operation triggers multiple index lookups. Previous research focused on the chunk index and has been able to overcome the disk bottleneck <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b30">31]</ref>.</p><p>However, every deduplication system has an additional persistent index to store the information that is necessary to rebuild file content based on file recipes <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref><ref type="bibr" target="#b28">[29]</ref>, a term introduced by Tolia et al. <ref type="bibr" target="#b25">[26]</ref>. A file recipe contains a list of chunk identifiers. Each of these chunk identifiers is the cryptographic fingerprint for one specific chunk. These fingerprints point to data chunks on storage, similar to block pointers in standard file systems point to disk blocks. Using the file recipe, the original file contents (denoted as logical data) can be reconstructed by using the uniquely identifiable chunk data. To reconstruct the logical data the fingerprints are read sequentially and their associated data chunks are loaded and concatenated. <ref type="figure" target="#fig_0">Figure 1</ref> shows two exemplary file recipes.</p><p>One difference to the file system block pointers used in standard file systems is the size of pointer data type. Usually the pointer in a standard file system is stored in at most 64 bit. All data deduplication systems, where it is known how the mapping from a file to the deduplicated contents is stored, use file recipes that store cryptographic fingerprints. In these systems the used fingerprints have a size of at least 20 byte <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b26">[27]</ref><ref type="bibr" target="#b27">[28]</ref><ref type="bibr" target="#b28">[29]</ref>.</p><p>The research on data deduplication largely ignored the management of file recipes. The reason is that it is unlikely that file recipes are the performance bottleneck for the system throughput. However, the file recipes may occupy a significant portion of the overall storage in a backup deduplication system.</p><p>A file recipe stores 20 byte for each referenced chunk if SHA-1 is used. Therefore, the file recipes grow linearly with the size of the stored logical data. With an average chunk size of 8 KB, a TB of logical data requires 2.5 GB memory to store the corresponding file recipes. Assuming weekly full backups with a retention period of 52 weeks and a backup size of 20 TB, the file recipes have a size of at least 2.4 TB.</p><p>The physical capacity used to store the data on the other hand is only slowly growing over time. For example, Zhu et al. report a compression factor of 40.63 for daily backups by applying deduplication <ref type="bibr" target="#b30">[31]</ref>. Assuming an internal data deduplication ratio within a backup run of ir = 0.35, a temporal deduplication ratio between weekly full backups of tr = 0.95, and a data compression ratio of 0.5, the post-deduplication data for one year has an estimated size of 33.5 TB for a weekly backup size of 20 TB.</p><p>However, daily full backups and/or longer retention periods become more common. If daily backups with a retention period of a year are used, assuming a slightly higher temporal deduplication between the daily backups of tr = 0.99, the post-deduplicated data has an estimated size of 43 TB for a 20 TB backup. The file recipes' size grows from 2.4 TB for weekly full backups to an estimated size of 17.1 TB. Therefore, they already occupy about 40% of the disk space that the deduplicated data requires to be stored.</p><p>An approach to reduce the size of the file recipes has an important impact on the overall storage usage of a data deduplication system, especially when considering daily full backups in an environment with a high deduplication ratio.</p><p>One way to reduce the file recipes' size is to use larger chunk sizes, e.g., 16 KB instead of 8 KB. This reduces the number of fingerprints stored in file recipes and therefore also the overall size of the file recipes. However, previous studies have shown that increased chunk sizes decrease the deduplication ratio <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b27">28]</ref>. We therefore explore alternatives in this work.</p><p>We are comparing four compression approaches, using unique properties of data deduplication systems. These approaches reduce the size of the file recipes by up to 93% without having a significant impact on the system throughput.</p><p>The first, already established approach suppresses the fingerprint of the chunk filled with zeros (the so-called zero chunk). This idea has been proposed by Wei et al. <ref type="bibr" target="#b28">[29]</ref> and is described for completeness and comparison.</p><p>The other three approaches are novel contributions: The second approach assigns to each chunk fingerprint a shorter code word based on the number of stored fingerprints. It uses the chunk index to derive the code words, which form an alternative key for the chunk index entry. Thus, the code words can be used instead of the full fingerprints. The third approach uses the observation that the usage of fingerprints is highly skewed. Certain fingerprints are more likely than others. A small set of common fingerprints gets a short code word assigned using an explicit dictionary. Finally, the fourth approach uses the observation that it is possible to predict the next fingerprint in a backup data stream if the previous fingerprint is known. If the next fingerprint can be correctly predicted using the previous fingerprint as context, a special code word is stored as a flag instead of the original fingerprint.</p><p>The compression of file recipes is not the most pressing concern when designing a data deduplication system and developing an approach to achieve a good deduplication ratio with a high performance has been the focus of previous research. Nevertheless, file recipe compression allows to gain significant additional capacity savings.</p><p>All presented approaches are practical, efficient, and scalable for the usage in data deduplication systems. While they are not limited to a concrete deduplication system, the usability in practice may depend on the specifc system and its design decisions, e.g., the organization of the chunk index.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">File Recipe Compression</head><p>The idea of file recipe compression is to assign (small) code words to fingerprints. The code word is then stored instead of the fingerprint in the file recipe. Different approaches to select the code words are explored in this paper.</p><p>We use three different backup data sets in this section to motivate the approaches based on observations from the data sets. The same data sets will later be used for the evaluation in the next section.</p><p>All traces use Content-defined Chunking with an expected chunk size of 8 KB <ref type="bibr" target="#b13">[14]</ref>. The first data set, called HOME1, is based on the home directory file server of the University of Paderborn <ref type="bibr" target="#b15">[16]</ref>. It is a time series containing 15 weekly full backup traces of the same file system of 440 GB (6.6 TB total). With data deduplication, the data set size can be reduced by a factor of 1:20 to 369 GB. The second data set, called HOME2, contains traced data from the home directory file server at Johannes Gutenberg University Mainz. This data set consists of 5 weekly backups forming a total data set of 4.8 TB. Data deduplication compresses the backup data set to 779.9 GB (factor 1:6). The last data set, called ENG, contains fingerprints for files from a file server of an engineering department backed up over 21 weeks (319 GB total). Data deduplication is able to shrink the physical size of this data set by a factor of 1:40 to 8.0 GB.</p><p>We describe the compression approaches in this section, followed by the evaluation in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Zero-Chunk Suppression</head><p>Several authors have noted before that a few chunks are responsible for a high number of duplicates <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b28">29]</ref>. Especially noteworthy is the chunk completely filled with zeros ("zero chunk"). <ref type="bibr">Jin et al.</ref> show that zero chunks are common in VM disk images <ref type="bibr" target="#b9">[10]</ref>.</p><p>Several deduplication systems apply a special handling for this chunk <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b28">29]</ref>. It is easy to detect zero chunks and replace them with a special code word by pre-calculating the fingerprint of the chunk filled with zeros. Zero chunks are never looked up in the chunk index or stored on disk.</p><p>However, it can also be used to reduce the size of file recipes as, e.g., Wei et al. propose <ref type="bibr" target="#b28">[29]</ref>. If the special code word assigned is small, e.g., 1 byte, the size of the file recipe is reduced. Alternatively, it is possible to store a bit mask in the file recipe similar to the way missing values are handled in some databases <ref type="bibr" target="#b23">[24]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Chunk Index Page-oriented Approach</head><p>The second approach aims to assign a code word to all chunks that is not significantly longer than necessary to have a unique code word for each chunk in the system. The approach is called chunk index page-oriented because it uses chunk index's pages to assign code words. The approach assumes that the chunk index is implemented using a paged disk-based hash table and fingerprints are hashed to on-disk pages.</p><p>The code word consists of two parts: prefix and suffix. The suffix is chosen using the least number of bits possible, which are still unique within the page. The code word is aligned to byte boundaries allowing a faster processing. The prefix of the code word denotes the page number. The combination of suffix and prefix together uniquely identify the fingerprint (see <ref type="figure" target="#fig_1">Figure 2</ref>).</p><p>The code word is an alternative key for the full fingerprint in the chunk index. The prefix is used to identify the index on-disk page where the fingerprint is stored on. Given the page contents, the fingerprint and its chunk index entry data can be found by searching in the page for the fingerprint with the matching suffix. Therefore, it is possible to lookup the chunk index entry corresponding to the fingerprint without an additional index lookup.</p><p>Alternatively, the suffix can be used as an index within the page if the chunk index entries are of a fixed size.</p><p>This approach assigns code words when the fingerprint is stored in the system for the first time. The complete fingerprint/code pair is stored in the container to allow reading an item from a container using only the code word.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Statistical Approaches</head><p>The zero-chunk suppression assigns short fingerprints to certain well-known fingerprints, while the chunk index  page-oriented approach provides a basic code word for all fingerprints in the system. The statistical approaches presented in this section generalize the zero chunk suppression. They use statistics to assign shorter code words to fingerprints based on the probabilities of the chunk usages.</p><p>The first approach relies on the observation that the number of references to chunks is highly skewed <ref type="bibr" target="#b15">[16]</ref>. The assigned code words are stored in an additional (inmemory) dictionary to allow a lookup from the code word to the fingerprint.</p><p>The approach uses the fingerprint's order-0 statistic. This means the statistical model relies on a fingerprint's usage without looking at its context, e.g., at previous fingerprints in the data stream.</p><p>Information theory provides a lower bound on the code word length that would be achievable with this statistical model. The information content is the sum of the fingerprint entropies. The entropy of a fingerprint h is −log 2 ( usage count of h total chunk usage ). The higher the probability of a fingerprint, the lower is the entropy and the shorter the optimal code word length. This skew can be observed in all three data sets introduced before. <ref type="table" target="#tab_0">Table 1</ref> shows examples of the entropy statistics of the ENG data set. The average entropy (and therefore optimal average code word length) is 17.3 bits per chunk using this statistical model and an optimal compression scheme.</p><p>The approach is similar to classical text compression using Huffman codes <ref type="bibr" target="#b8">[9]</ref>. However, the compression of file recipes has unique properties that render it impossi- ble to use the classic compression approaches directly:</p><p>1. The size of the code alphabet is 2 160 instead of 2 8 . It is therefore not feasible to create full Huffman tree in memory.</p><p>2. Data deduplication has to support random accesses. Adaptive text compression decoders rely on parsing the full history of a compressed data stream to build up the same model as seen by the encoder. This is, e.g., the reason that .tar.gz files do not provide random access.</p><p>Since it is not practically possible to build a full huffman tree, we chose a relaxed way to use the skew of the chunks for file recipe compression: If the entropy of a chunk is below a certain threshold, a fixed size code word is assigned to the fingerprint. The check can either be performed in a background process or alternatively when a write command accesses a chunk. However, the entropy is not known in advance and can only be estimated after some data has been written. Therefore, we only assign code words after one or more backups. The first fingerprints have to be stored unmodified, as no code word is available.</p><p>Once a code word is assigned, it can never be revoked as long as a file recipe uses that code word. If at some point a chunk usage falls below a threshold, we declare the code word as inactive and all new appearances again use the full fingerprint. Older backup runs are eventually evicted for the backup storage system. If there is no longer a reference to the code word stored in any file recipe, the code word is garbage collected and the code word becomes free again, e.g. it is possible to maintain a separate code word usage counter in addition to the chunk usage counter in the chunk index.</p><p>For most of the chunks, the entropy is nearly identical to the length of the code word assigned by the pageoriented method. It is, therefore, not worthwhile to assign an entropy-based code word to more than a small fraction of the chunk.</p><p>One important assumption is that it is effectively possible to estimate the overall probability of a chunk. The number of references to a chunk (usage count) is often collected for garbage collection purposes. By putting this usage count in relation to the total number of references, the probability of a chunk can be easily calculated.</p><p>The statistical dictionary approach uses the probability that a chunk fingerprint is referenced without using context information (order-0 statistic) to build a code word based on that.</p><p>The order-1 statistic looks at the previous chunk and calculates the probability of the fingerprint based on that context information.</p><p>The entropy of the order-1 model again provides us a theoretical lower bound. In the ENG data set, the entropy using the order-1 statistical model is 0.13 bits. The statistics in the other data sets are similar (0.14 bits in HOME1, 0.21 bits in HOME2).</p><p>The low entropy using this statistical model in backup data streams has two main reasons: The redundant data found by the deduplication process is usually clustered together and forms larger sequences of redundant and unique chunks, called "runs". In the HOME1 data set's last backup the average run length of redundant chunks without a single unknown chunk breaking the series is 449.8. The average run length in the HOME2 data set is shorter (262.9), and it is larger in the ENG data set (901.5). In all cases, there is a significant clustering, which forms long runs of redundant chunks. The backup runs change only slightly from one backup run to another and usually the backup is written sequentially. This is one of the assumptions that empower the locality preserving caching approaches used by EMC Data Domain <ref type="bibr" target="#b27">[28]</ref>.</p><p>This shows that there is only little uncertainty about the next fingerprint if the previous fingerprint is known. Capturing this prediction in a practical compression scheme for the file recipes promises significant compression.</p><p>However, the information to store the order-1 model grows quadratic in the number of chunks and is therefore not usable in practical deduplication systems.</p><p>The approach presented here relaxes the order-1 model and reduces the information kept per chunk to a constant size. Considering the low entropy of the order-1 model in the backup data streams, even a relaxed approach should be able to predict fingerprints with high accuracy.</p><p>We use the data stream algorithm Misra-Gries to approximate the detection of frequent fingerprint pairs <ref type="bibr" target="#b18">[19]</ref>. We therefore store k fingerprints (or code words) in the chunk index entry. The parameter k denoting the number of possible frequent fingerprints is used to trade accuracy against memory overhead. We later compare different choices for k and also compare the relaxed approach with the full order-1 statistics.</p><p>When a file recipe is updated, the frequent item data structure of the previous fingerprint is updated with this fingerprint in the file recipe. Based on this, the data structure can be queried to receive the estimation for the fingerprint that most frequently followed the previous fingerprint. We select this fingerprint as the prediction candidate and assign a short 1 byte code word to it. Similar to the statistical dictionary approach a code word is not changed as long as a file recipe uses it. Instead, if eventually a different prediction candidate is chosen, another free code word is used. When data is written to the system, the prediction candidate based on the previous chunk is checked. If a fingerprint matches the prediction candidate based on the previous fingerprint, the code word is stored in the file recipe. <ref type="figure" target="#fig_3">Figure 4</ref> shows an example for this approach. Similarly to the zero chunk code word, a bit mask in the file recipe would be an alternative for an even tighter encoding.</p><p>Every b fingerprints in the file recipe, the full fingerprint (or a different kind of code word) is stored in the file recipe. This provides an anchor so that random accesses are possible. We (experimentally) found b = 32 to be a suitable value for a backup workload.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Evaluation</head><p>We evaluate the approaches using the following criteria:  The compression methods are first discussed individually. Later, we apply the methods together and present the combined compression ratios. <ref type="table" target="#tab_2">Table 2</ref> summarizes the properties 1-4. The compression ratios are shown in <ref type="table" target="#tab_3">Table 3</ref>.</p><p>The zero chunk suppression (ZC) method does not cause any additional IO operations nor does it increases the storage requirements. In contrast, it saves a significant amount of chunk index lookup operations if the backup stream contains a high amount of zero chunks and has therefore a positive performance impact.</p><p>The compression results depend on the data set: In the ENG data set, 14.9% of the chunks references the zero chunk. The zero chunk suppression reduces the file recipes by 11.8%. On the other hand, the HOME1 data set contains only 0.6% zero chunks and the HOME2 data set contains only 0.3%. Here, the file recipes shrink by 0.5%, resp. 0.26%.</p><p>The code word length using the page-oriented approach (PB) depends on the scale of the system. In an 8 TB configuration with 2 <ref type="bibr" target="#b23">24</ref> chunk index pages and a page size of 4 KB, each chunk index page will hold 64 chunks on average. The balls-into-bins theory <ref type="bibr" target="#b21">[22]</ref> shows that with high probability no page has to store more than 97 chunks. Therefore, a suffix length of 7 bits is sufficient to enumerate all chunks in a page and to assign a unique suffix to each of them. The prefix would account for 24 bits, so that the final code word has 31 bits or 4 bytes when aligned to full bytes. This 4 byte code word would not be sufficient for a large configuration with, e.g., 256 TB back end storage, where we have to account for 2 29 chunk index pages. Here, 5 byte would be sufficient.</p><p>The extra storage costs consist of the prefix that is stored in each chunk entry. With 4 byte code words, this method reduces the file recipes by 80% (75% with 5 byte). This method's advantage is that the savings are predictable and do not depend on the concrete data set.</p><p>When combined with other methods, the pageoriented approach provides a base compression for all fingerprints, while certain other approaches use even smaller code words.</p><p>Similar to the zero chunk approach, the savings of the statistical dictionary approach (SD) depend on the concrete data set. The higher the skew of the chunk usages, the better a dictionary compression performs.</p><p>We simulate this approach by assigning a 24-bit code word to each chunk with an entropy smaller than 85% of log 2 (n) where n denotes the number of chunks. Once a code word is assigned in the simulation, it is never deactivated or revoked.</p><p>Using this method, 0.36% of the chunks in the ENG data set have an assigned code word after 20 backup runs. The file recipe index size is reduced by 14.2%. In the HOME1 data set, 0.25% of the chunks have a code word assigned by this method resulting in a compression ratio of 9.0%. In the HOME2, 0.07% of the chunks have a code word, which compresses the file recipes by 3.6%.</p><p>We need to store an additional index to resolve the code word back to its fingerprint. The index needs to store the code word and the corresponding 20 byte fingerprint. Assuming that 0.4% (≈ 2 −8 ) of the fingerprints are shortened, the reverse index can be stored in main memory. For a 8 TB configuration with around 2 30 chunks, 4 million chunks get a code word assigned. Therefore, the code word index has a size of approximately 128 MB if full fingerprints are used or 32 MB if this approach is combined with the page-based approach.</p><p>The statistical prediction approach (SP) is simulated by assigning predictions after each backup run. Once a prediction is assigned, it is not changed. The compression ratios with k = 2 fields for the Misra-Gries algorithms are promising, the approach alone leads to a compression between 69.2% (HOME2) and 82.2% (ENG).</p><p>Increasing the Misra-Gries parameter k results in a better estimation of the most frequent following fingerprint and therefore in better predictions for the compression. With k = 4, the compression improves slightly: to 82.5% (ENG), 77.6% (HOME1), and 69.3% <ref type="figure" target="#fig_1">(HOME2)</ref>. Larger values for k do not increase the compression substantially. Even if the full order-1 statistic is maintained (instead of using the Misra-Gries estimation) the compression only increases to 82.6%, 77.6%, and 69.5%.</p><p>The statistical prediction approach stores additional data in each chunk index entry: The k fingerprints/counter pairs for the Misra-Gries algorithm and a selected prediction fingerprint. Therefore, around 68 bytes need to be added for k = 2. This overhead can be reduced to ≈ 20 bytes if combined with the pageoriented approach.</p><p>The statistical approaches can be sensitive to longterm aging effects where, e.g., a fingerprint is no longer used in new backups and its entropy is increasing so that is would not get a code word assigned. This aging effects usually arise slowly. For the vast majority of the fingerprints, the dictionary and the predictions remain constant for a long time. In the HOME1 data set, covering 15 weeks, on average 0.7% of the dictionary code words are deactivated per backup run, assuming that a code word is deactivated immediately after it crosses the entropy threshold. If the prediction is changed as soon as a different fingerprint is estimated as more common successor, on average 0.04% of the chunks change their prediction per week. A full evaluation of the aging effects is beyond the scope of this paper. None of the approaches causes any additional IO operations or require extensive locking in the critical path. The computations are fast and could be parallelized. It is unlikely that the computations are a bottleneck for the system throughput.performance impact. All approaches except the zero-chunk suppression have to store additional information, e.g., in the chunk index. This overhead, which grows with the physical storage capacity, is amortized by the compression savings.</p><p>The approaches can be combined: A fingerprint is always replaced by its shortest code word and, thus, can achieve the highest compression. If all approaches are applied, the file recipes of all data sets are compressed by more than 90%. Most savings are created by the statistical prediction and the page-oriented approach. These two combined achieve a compression that is within 0.3% of the compression if all four approaches are combined. The already established approach of zero chunk suppression has only a small effect if it is used in combination with other compression methods. Similarly, the method with significant main memory overhead, the statistical dictionary approach, does not provide a substantial additional compression if it is used in combination.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Limitations</head><p>The approaches are designed to fit into the system architecture of the dedupv1 data deduplication system <ref type="bibr" target="#b16">[17]</ref>.</p><p>They are not limited to this system environment, but are not applicable in all cases. Without specific knowledge of internal design decisions, it is impossible to claim that the approaches work for a specific alternative system.</p><p>In this section, we discuss some of the limitations of the compression approaches. First, all approaches assume a chunking/fingerprinting based data deduplication system. Furthermore, the main focus are backup environments. All approaches, except the statistical prediction approach, work in other environments, too. E.g., Jin and Miller observed a significant fraction of zerochunks in virtual machine disk images <ref type="bibr" target="#b9">[10]</ref>. However, the file recipe overhead is only getting large for full backups with a high deduplication ratio. Recipe compression may not be important in non-backup systems.</p><p>Also, the statistical approaches assume the usage of a full chunk index. Deduplication approaches that avoid requesting the chunk index for most of the chunks cannot use the approaches directly.</p><p>On the other hand, the approaches might be tweaked. One such tweak is avoiding the file recipe compression when new data is written. Instead a background process may rewrite recently written file recipes. One property of the statistical compressions is that most of the compression is preserved even if the statistical model is a bit outdated.</p><p>It is an open problem how these compression approaches can be conceptually combined with approaches as the container-locality caching approach by Zhu et al. <ref type="bibr" target="#b30">[31]</ref>. Another open problem are long-term aging effects. The current data indicates that the long-term effects can be handled using the deactivation approaches sketched above, but a deeper investigation of aging effects would be worthwhile.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>Compression techniques are used by most deduplication systems to reduce the size of chunks after the duplication identification step <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b30">31]</ref>.</p><p>Multiple ways to reduce the size of the chunk index have been proposed. Sparse indexing reduces the size of the chunk index by only storing there a subset of the chunks <ref type="bibr" target="#b11">[12]</ref>. Another approach is to store only short fingerprints in an in-memory chunk index and to additionally compare the chunk data byte-by-byte to be safe from (in this setting likely) hash collisions <ref type="bibr" target="#b1">[2]</ref>.</p><p>Balachandran and Constantinescu propose to use runs of hashes for file recipe compression <ref type="bibr" target="#b2">[3]</ref>. If a run of hashes occurs twice in a data stream, they replace it with the fingerprint of the first chunk and the length of the repeated sequence. Constantinescu et al. propose to combine repeated sequences of adjacent chunks to superchunks <ref type="bibr" target="#b4">[5]</ref>. Any chunk is then either merged into a super chunk or it is not repeated. However, both works do not describe how to find the runs or super chunks in an efficient manner.</p><p>JumboStore reduces the size of file recipes by chunking them into indirection nodes <ref type="bibr" target="#b5">[6]</ref>. These nodes can be reused for identical and similar files.</p><p>The skew in the chunk usage distribution and the popularity of the zero chunk have been noted before <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b28">29]</ref>. Wei et al. replace the zero chunk with a buildin codeword <ref type="bibr" target="#b28">[29]</ref>.</p><p>Patterson proposed using two separate index structures: One mapping from the fingerprint to a sequentially increased code word and one from the code word to the on-disk location <ref type="bibr" target="#b19">[20]</ref>. The code word length is in the order of the logarithm of the number of stored chunks. Therefore, it produces code words of similar length than the page-based approach.</p><p>Also, the page-based approach is similar to dictionary encoding in databases (see, e.g., Abadi et al. <ref type="bibr" target="#b0">[1]</ref>). However, database dictionary encoding is usually only applied to columns with a limited, fixed cardinality and it uses a separate lookup index. Our approach works for billions of chunks without additional index lookups.</p><p>The statistical dictionary approach are related to classical Huffman codes <ref type="bibr" target="#b8">[9]</ref> in that both aim to reduce the code word size based on the order-0 statistic of the data. The statistical dictionary approach differs in the way the code words are assigned. Furthermore, it relaxes the compression for the usage as file recipe compression.</p><p>Compression of index data structures is state-of-theart in areas like databases (e.g., <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7]</ref>) or information retrieval (e.g., <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b29">30]</ref>). The techniques used there, e.g., page-local compression, run-length encoding, and deltacompression within pages, are not directly applicable in data deduplication.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>We presented new compression approaches for file recipes in deduplication systems. A combination of these approaches allows shrinking the file recipes by up to 93%. Since file recipes can be responsible for a significant fraction of the physical disk usage of deduplication systems, these results enable significant overall savings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgments</head><p>We would like to thank our shepherd and our reviewers for their helpful feedback. This work was partially supported by the German Federal Ministry of Economics and Technology (BMWi) under project grant SIMBA and by the EU commission within the SCALUS early researchers graduate school.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Illustration of file recipes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Illustration of the page-oriented approach. A fingerprint is hashed to an index page. A page-unique code word prefix is assigned to each fingerprint. The complete code word is 17001||9.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Illustration of the statistical dictionary approach. The chunk with the fingerprint 0x04F90E... has, based on its high usage count, a short code word.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Illustration of the statistical prediction approach. If the fingerprint 0x6B4D0A... occurs after 0x04F90E..., the fingerprint is replaced by the code word 0x01.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Order-0 statistic for the ENG data set after 3 backups.</head><label>1</label><figDesc></figDesc><table>Fingerprint 
Usage count 
Probability Entropy 
0x518843... 
380,508 
0.108765 
3.2 
0x04F90E... 
7,227 
0.002066 
8.9 
... 
... 
... 
... 
0x435123... 
1000 
0.001 
10.0 
... 
... 
... 
... 
0x6B4D0A... 
3 
≈ 0 
20.1 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>1 .</head><label>1</label><figDesc></figDesc><table>Storage: Additional information that is stored per 
chunk in the chunk index or other indexes. 
2. Memory: Amount of main memory per chunk used 
for compression. The memory cost does not include 
temporarily used memory, e.g., for paging on-disk 
data. 
3. Assignment: Time when code word is assigned. 
4. Background Processing: Is an additional back-
ground processing, e.g., in idle times, necessary. 
5. Recipe Compression: Compression ratio of the file 
recipes, evaluated based on the trace data sets pre-
sented before. The size of the original file recipes, 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 : Overview of recipe compression's properties and results. Numeric values in bytes per chunk.</head><label>2</label><figDesc></figDesc><table>Storage 
Memory Assignm. Backgr. 
Zero-Chunks (ZC) 
None 
None 
Direct 
No 
Page-based (PB) 
≈ 1 
None 
Direct 
No 
Directory (SD) 
≈ 0.24 
≈ 0.24 
Delayed 
Yes 
Prediction (SP) ≈ 20-68 
None 
Delayed 
No 

assuming 20 byte per chunk reference, is compared 
to the size after compression. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><head>Table 3 : Compression ratios (for all combinations)</head><label>3</label><figDesc></figDesc><table>ZC 
PB 
SD 
SP 
HOME1 HOME2 
ENG 
Yes 
5.4% 
2.6% 
12.6% 
Yes 
80.0% 
80.0% 
80.0% 
Yes 
9.0% 
3.6% 
14.2% 
Yes 
77.3% 
69.2% 
82.2% 
Yes 
Yes 
80.1% 
80.0% 
80.2% 
Yes 
Yes 
9.1% 
3.6% 
15.9% 
Yes 
Yes 
77.3% 
69.2% 
84.1% 
Yes Yes 
80.5% 
80.2% 
80.8% 
Yes 
Yes 
92.2% 
90.9% 
93.0% 
Yes 
Yes 
79.0% 
69.4% 
83.7% 
Yes 
Yes 
Yes 
79,1% 
69.5% 
84.3% 
Yes 
Yes 
Yes 
92.2% 
90.9% 
93.3% 
Yes 
Yes Yes 
80.6% 
80.2% 
82.2% 
Yes Yes 
Yes 
92.2% 
90.9% 
93.1% 
Yes 
Yes Yes 
Yes 
92.3% 
90.9% 
93.3% 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Integrating Compression and Execution in Column-Oriented Database Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abadi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ferreira</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2006 ACM SIGMOD International Conference on Management of Data</title>
		<meeting>the 2006 ACM SIGMOD International Conference on Management of Data</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="671" to="682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">NetApp Deduplication for FAS and V-Series Deployment and Implementation Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alvarez</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<pubPlace>NetApp</pubPlace>
		</imprint>
	</monogr>
<note type="report_type">Tech. rep</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Sequence of Hashes Compression in Data De-duplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balachandran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Constantinescu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18 th Data Compression Conference (DCC)</title>
		<meeting>the 18 th Data Compression Conference (DCC)</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="671" to="682" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Extreme Binning: Scalable, Parallel Deduplication for Chunkbased File Backup</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhagwat</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eshghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Long</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillibridge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17 th IEEE International Symposium on Modeling, Analysis, and Simulation (MASCOTS</title>
		<meeting>the 17 th IEEE International Symposium on Modeling, Analysis, and Simulation (MASCOTS</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Block Size Optimization in Deduplication Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Constantinescu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Pieper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19 th Data Compression Conference (DCC</title>
		<meeting>the 19 th Data Compression Conference (DCC</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page">442</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Providing Efficient Incremental Upload and Versioning for a Utility Rendering Service</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eshghi</forename></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lillibridge</surname></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wilcock</surname></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Belrose</surname></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hawkes</forename></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">Jumbo</forename><surname>Store</surname></persName>
			<affiliation>
				<orgName type="collaboration">FAST</orgName>
			</affiliation>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5 th USENIX Conference on File and Storage Technologies</title>
		<meeting>the 5 th USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="123" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">How to Barter Bits for Chronons: Compression and Bandwidth Trade Offs for Database Scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holloway</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Raman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Swart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dewitt</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 ACM SIGMOD International Conference on Management of Data</title>
		<meeting>the 2007 ACM SIGMOD International Conference on Management of Data</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="389" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Duplicate Data Elimination in a SAN File System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Long</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">D E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21 st IEEE / 12 th NASA Goddard Conference on Mass Storage Systems and Technologies (MSST</title>
		<meeting>the 21 st IEEE / 12 th NASA Goddard Conference on Mass Storage Systems and Technologies (MSST</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="301" to="314" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A method for the construction of minimumredundancy codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huffman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IRE</title>
		<meeting>the IRE</meeting>
		<imprint>
			<date type="published" when="1952" />
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="1098" to="1101" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The Effectiveness of Deduplication on Virtual Machine Disk Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2 nd Israeli Experimental Systems Conference (SYSTOR)</title>
		<meeting>the 2 nd Israeli Experimental Systems Conference (SYSTOR)</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Design of an Exact Data Deduplication Cluster</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaiser</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Meister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Brinkmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Effert</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 28 th IEEE Conference on Mass Storage Systems and Technologies (MSST</title>
		<meeting>the 28 th IEEE Conference on Mass Storage Systems and Technologies (MSST</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Sparse Indexing: Large Scale, Inline Deduplication using Sampling and Locality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillibridge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eshghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Deolalikar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Trezise</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Camble</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7 th USENIX Conference on File and Storage Technologies (FAST</title>
		<meeting>the 7 th USENIX Conference on File and Storage Technologies (FAST</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="111" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Optimized Cloud Storage with High Throughput Deduplication Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lokeshwari</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">V</forename><surname>Prabavathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Babu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Emerging Technology Trends</title>
		<meeting>the International Conference on Emerging Technology Trends</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="32" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Finding similar files in a large file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manber</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Winter 1994 Technical Conference</title>
		<meeting>the USENIX Winter 1994 Technical Conference<address><addrLine>San Fransisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Introduction to Information Retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manning</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sch¨utze</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Multi-level Comparison of Data Deduplication in a Backup Scenario</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meister</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brinkmann</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2 nd Israeli Experimental Systems Conference (SYSTOR</title>
		<meeting>the 2 nd Israeli Experimental Systems Conference (SYSTOR</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">12</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Improving Deduplication Throughput using Solid State Drives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meister</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brinkmann</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26 th IEEE Conference on Mass Storage Systems and Technologies (MSST) (2010)</title>
		<meeting>the 26 th IEEE Conference on Mass Storage Systems and Technologies (MSST) (2010)</meeting>
		<imprint>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Study of Practical Deduplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meyer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bolosky</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Storage</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">20</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Misra</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gries</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Finding Repeated Elements. Tech. rep</title>
		<imprint>
			<date type="published" when="1982" />
		</imprint>
		<respStmt>
			<orgName>Cornell University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Data Storage using Identifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patterson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">US Patent</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page">251</biblScope>
			<date type="published" when="2006-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A new Approach to Archival Storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quinlan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dorward</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1 st USENIX Conference on File and Storage Technologies (FAST</title>
		<meeting>the 1 st USENIX Conference on File and Storage Technologies (FAST</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Balls into Bins&quot; -A Simple and Tight Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raab</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steger</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2 nd International Workshop on Randomization and Approximation Techniques in Computer Science (RANDOM)</title>
		<meeting>the 2 nd International Workshop on Randomization and Approximation Techniques in Computer Science (RANDOM)</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="159" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Delta compressed and deduplicated storage using stream-informed locality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shilane</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4 th USENIX Conference on Hot Topics in Storage and File Systems</title>
		<meeting>the 4 th USENIX Conference on Hot Topics in Storage and File Systems</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="10" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The Design and Implementation of INGRES</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stonebraker</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Held</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kreps</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="189" to="222" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">CABdedupe: A Causality-Based Deduplication Performance Booster for Cloud Backup Services</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25 th IEEE International Parallel and Distributed Processing Symposium (IPDPS</title>
		<meeting>the 25 th IEEE International Parallel and Distributed Processing Symposium (IPDPS</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1266" to="1277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Opportunistic use of Content Addressable Storage for Distributed File Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tolia</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kozuch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bressoud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Perrig</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2003 USENIX Annual Technical Conference</title>
		<meeting>the 2003 USENIX Annual Technical Conference</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="127" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">HydraFS: A High-throughput File System for the HYDRAstor Content-addressable Storage System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ungureanu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Atkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Aranya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gokhale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rago</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Calkowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Dubnicki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bohra</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8 th USENIX Conference on File and Storage Technologies (FAST) (2010)</title>
		<meeting>the 8 th USENIX Conference on File and Storage Technologies (FAST) (2010)</meeting>
		<imprint>
			<biblScope unit="page" from="225" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Characteristics of Backup Workloads in Production Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wallace</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Douglis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shilane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Smaldone</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12 th USENIX Conference on File and Storage Technologies (FAST)</title>
		<meeting>the 12 th USENIX Conference on File and Storage Technologies (FAST)</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">MAD2: A Scalable High-throughput Exact Deduplication Approach for Network Backup Services</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Feng</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26 th IEEE Conference on Mass Storage Systems and Technologies (MSST) (2010)</title>
		<meeting>the 26 th IEEE Conference on Mass Storage Systems and Technologies (MSST) (2010)</meeting>
		<imprint>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Managing Gigabytes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Witten</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">H</forename><surname>Moffat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bell</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Avoiding the Disk Bottleneck in the Data Domain Deduplication File System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patterson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6 th USENIX Conference on File and Storage Technologies (FAST)</title>
		<meeting>the 6 th USENIX Conference on File and Storage Technologies (FAST)</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page">14</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
