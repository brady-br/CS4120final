<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:30+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Toward Cloud-based Collaboration Services</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Banks</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Hewlett Packard Labs</orgName>
								<orgName type="laboratory" key="lab2">Hewlett Packard Labs</orgName>
								<address>
									<settlement>Hewlett-Packard Labs</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">S</forename><surname>Erickson</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Hewlett Packard Labs</orgName>
								<orgName type="laboratory" key="lab2">Hewlett Packard Labs</orgName>
								<address>
									<settlement>Hewlett-Packard Labs</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Rhodes</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory" key="lab1">Hewlett Packard Labs</orgName>
								<orgName type="laboratory" key="lab2">Hewlett Packard Labs</orgName>
								<address>
									<settlement>Hewlett-Packard Labs</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Toward Cloud-based Collaboration Services</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this paper, we argue increased outsourcing of non-core competencies will create demand for cloud-based platforms to address the need for content-centered collaboration between organizations. We introduce a prototype created to evaluate the suitability of current enterprise content management (ECM) technologies for this type of platform. Following from this work, we highlight several areas where we feel current platforms are inadequate and new approaches are required, particularly in multi-tenancy and user-customization</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>As we approach the end of the first decade of the 21 st century, we are witnessing a disruptive change in the provisioning of information technology: the advent of cloud computing. For most organizations, information technology is not a core competence. Until recently, their only option was to retain IT specialists onpremise, but now alternatives from the likes of Google, Amazon and Salesforce.com are becoming increasingly viable. Accordingly, out-sourced IT is now an option for all sizes of company.</p><p>This coincides with businesses seeking to operate efficiently in a global marketplace by outsourcing noncore competencies. As businesses choose to excel in a single area and partner for the rest, collaboration across organizational boundaries becomes a core part of product development. Traditional Enterprise Content Management (ECM) software has not kept up, leaving people collaborating via email-the lowest common denominator.</p><p>In response to these trends, we envision a generation of cloud-based collaboration platforms emerging to address the needs of content-centered collaboration between businesses. Although superficially similar to the best of today's ECM systems, these platforms will operate on a massive scale, simultaneously supporting thousands of organizations and millions of users. The Fractal research program <ref type="bibr" target="#b0">[1]</ref> in HP Labs aims to design and deploy such a platform.</p><p>As part of the Fractal research program, we have built a prototype of our envisioned platform using a leading ECM system. We found several shortcomings in this system as we tried to apply it in this new context. This paper, therefore, presents where we believe research is required to bring ECM to the cloud.</p><p>The paper is structured as follows. Section 2 presents the prototype, describing our goals and giving an overview of its functionality. This provides the framework for Section 3, where we discuss our rationale for why current leading ECM systems are not a suitable base for a cloud-based, highly usercustomizable collaboration platform. In Section 4, we highlight related work in this area. Finally, in Section 5 we present suggestions for future research directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Fractal Conceptual Prototype</head><p>We built the Fractal prototype to help us understand how suited current ECM technologies are for realizing Fractal's vision of a multi-tenanted, highly usercustomizable collaboration service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Key Features</head><p>We wished to demonstrate the following features of Fractal in the prototype:</p><p>Content Spaces: hosted workspaces which bring together people, content, collaborative tools, and customizable active behaviors.</p><p>Active behaviors: a way for end users to define functional extensions operating within the context of a content space involving content, metadata, automated processing services and tasks carried out by other users. An active behavior may be manually invoked as needed, or it may be automatically triggered by a change to a content space or the passing of time. An invocation may involve a single content object or many objects in parallel. Their complexity ranges from creating up-to-date PDF versions of documents as they are modified, to running workflows that automatically collate information from several collaborating organizations into a single document.</p><p>Agile configuration: the service must be lightweight, low-touch and customizable by end users without IT involvement.</p><p>Open and extensible by third parties: the platform should provide open APIs that enable third parties to develop customizations and extensions that may be obtained or purchased through a marketplace by users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Technical Approach</head><p>We evaluated several technologies as a starting point for the prototype, including Joomla, Drupal, Alfresco, Liferay, TikiWiki and SharePoint. Our selection criteria included: strong document management features; embedded workflow; social capabilities (blogs, wikis, tagging); and user interface qualities similar to those we envisioned for Fractal. We selected Alfresco's new Share technology <ref type="bibr" target="#b1">[2]</ref> because it satisfied these criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Conceptual Prototype Overview</head><p>In this section, we give a brief overview of our prototype. For further details, we refer the reader to a series of short demo videos we have produced based on the prototype <ref type="bibr" target="#b2">[3]</ref>.</p><p>Our prototype centered on a content space supporting a collaborative pharmaceutical research project called UTS-Alpha. In addition to the research content in a document library, the space had a customizable set of collaboration tools (wikis, blogs and so on) with a configurable default view, the dashboard, which summarized the members and content of the space.</p><p>To demonstrate the key Fractal concepts of usercustomizability and developer extensibility, we built the Fractal Extensions Marketplace where a user chooses functionality to add to their content space. To provide functionality, developers publish extensions in the marketplace. The marketplace provides a rich set of search and browse capabilities to help users find the functionality they need.</p><p>We used the Simile Exhibit faceted browser <ref type="bibr">[4]</ref> to build the marketplace. Exhibit gave us several viewstabular, timeline, etc.-each of which allowed the user to narrow down their search using facets derived from descriptive, commercial and social metadata bound to listed extensions.</p><p>Adopting an extension to a user's content space requires a single click of an install button, not unlike adopting Gadgets for the iGoogle homepage.</p><p>For the prototype, we created an extension allowing the user to add functionality to the UTS-Alpha content space in the form of a workflow to coordinate production of a monthly report by the members of the space. This extension added a dashboard component and a jBPM workflow to orchestrate the steps necessary to build the report, including emailing members when they needed to write or review a section and archiving the complete report into the document library.</p><p>Although we successfully used Alfresco Share to rapidly prototype a functioning system with many of the end-user characteristics we envision for Fractal, our experiences building the prototype convinced us neither Alfresco nor any of the other leading ECM platforms provide a suitable base for a multi-tenanted, cloud-scale collaboration platform. The next section discusses why we feel this way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Technical Challenges</head><p>In this section, we discuss where current ECM platforms have shortcomings when building cloudbased collaboration platforms. Though our discussion draws specific examples from our experience with Alfresco, we believe our conclusions apply to current ECM software in general. The issues fall into two broad topics: multi-tenancy and extensibility.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Large-Scale Multi-Tenancy</head><p>Most cloud-based services are inherently multitenanted; this arrangement currently seems the most efficient way to deal with the scale required to run services at this scale.</p><p>In general, the definition of multi-tenanted software is that it gives each customer the impression they have their own instance of the software, whilst in reality services share a single or a few large instances between many users. Customers see their data and settings as isolated from other customers.</p><p>This hard segregation of customer data makes it impossible for individual customers to share their data. As organizations are likely different customers from the point of view of the service provider, problems arise when applying this definition to a service intended to facilitate collaboration between organizations.</p><p>The multi-tenancy paradigm offered by a cloud-based collaboration needs to support several usage patterns. A content space may have a single user and so be a private space. It might instead have multiple users from the same company, and thus be a collaborative company space. Finally, it may have users from different organizations, and therefore be a collaborative space for inter-organizational activities. The latter two of these patterns could well have participants from different customers working together.</p><p>We therefore argue "tenant" and "customer" are not synonymous in this environment. In a multi-tenanted collaboration service, a tenant is instead a collection of distinct, collaborative activities, people and related content-a content space in Fractal's terminology. We use this definition of tenant in the discussion in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Data Isolation</head><p>Data isolation ensures adequate segregation of data to prevent unauthorized access by tenants to each other's data. In Alfresco Share, all content spaces (sites in Alfresco) are persisted to a single shared store. This store is backed by a relational database, together with a file system that contains content and a single Lucene index. The store provides access control, but otherwise data separation is an application level responsibility. Cloud-based ECM requires stronger data isolation for two reasons.</p><p>Firstly, the single Lucene index shared by all content spaces causes queries in any content space to slow down as the number of content spaces increasesregardless of the amount of data present in the content space being queried.</p><p>Secondly, files representing content from different content spaces reside in the same file system directories. This makes it impossible to perform efficient backups of individual tenant data to different media at the file-system level-that is, without invoking repository operations. Not only are there legal implications to this, but it also prevents the service provider offering tenants copies of their own backup media.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Application Isolation</head><p>Like data, customizations or functional extensions to one content space should not be visible by default to other content spaces. Furthermore, if a user adopts an application into one content space, parts of that application-dashlets, for example-should not be visible to users of other content spaces.</p><p>In Alfresco Share, developers implement applications as web scripts, written in a combination of server-side Javascript and Freemarker templates. However, all content spaces (sites in Alfresco) share a common search path for web scripts, so when a uses introduces a new application into their content space it is actually available to all content spaces. Users can also extend the functionality of Alfresco using custom jBPM workflows; these are also deployed globally and suffer the same lack of isolation.</p><p>Managing functional extensions as data objects within content spaces rather than a separate global space, as is currently the case in Alfresco, is required for application isolation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Performance Isolation</head><p>A third type of isolation ensures resource-intensive activity in one content space does not affect the use of other content spaces. This is one of the hardest challenges when designing a multi-tenanted service because it conflicts with the goal of reducing service costs by sharing resources between tenants. In general, a multi-tenanted service should adopt several approaches to minimizing the impact of tenants on each other.</p><p>First, the service should track resource usage on a pertenant basis. Resource usage typically includes storage, I/O bandwidth, CPU usage, and possibly memory usage. Such tracking enables identification of resource intensive tenants. It is also worth tracking resource usage against other dimensions, such as per user, organization, and application. Application resource tracking allows blocking or throttling of poorly written applications until they are improved.</p><p>Second, tenants should be charged based on resources consumed. This form of pricing (as opposed to a flat rate or fixed subscription) serves as a form of feedback to make users sensitive to what they are doing. All existing large-scale cloud platforms (Amazon Web Services, Google App Engine, etc.) use some form of resource-based pricing.</p><p>Third, the service should dynamically load balance tenants across hardware resources. Usage patterns are likely to be bursty and there will be times when resources are over-allocated causing hot spots to develop. Dynamically altering resources assigned to tenants could minimize the impact of such hot spots. In extreme circumstances, the service can throttle a tenant's resources. This is a last resort because repeatedly throttling a tenant is likely to discourage future use of the service.</p><p>Current ECM platforms, designed for use within a single organization, lack this type of fine-grained monitoring, management and billing infrastructure necessary to support these approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4">Tolerance of Hardware Failures</head><p>In a cloud-scale service provisioned across thousands of servers, disk and server failures occur routinely and must not result in loss of service. In addition, continuous hardware upgrades must not interrupt the service to any tenants.</p><p>ECM platforms use a variety of techniques to support high-availability deployments. In Alfresco, servers can be clustered and share state using a transactional object cache. A single database is shared between servers, which must itself be clustered. Indexes are maintained locally, loosely synchronized to the object cache. Finally, content either is stored on a single shared file system or on local file systems replicated between servers <ref type="bibr">[5]</ref>.</p><p>This approach to high availability is expensive in terms of hardware, software licenses and operational costs. It also does not scale to a very large number of nodes. Following this model, a cloud-scale service capable of supporting thousands of tenants would require many independent clusters (pods), shifting the problem of load balancing to a different level rather than solving it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.5">Per-Tenant Levels of Service</head><p>In a multi-tenanted service, different tenants may require-and be willing to pay for-different levels of service. For example, one tenant might place a premium on storing their data within certain jurisdictions. Another may highly value low latency access to their data. Providing these features requires the platform to support per-tenant data placement, redundancy and replication policies.</p><p>Current ECM platforms support policies such as these at the deployment level. Therefore, to support differing policies, a deployment per tenant is required. An instance per tenant is unlikely to be a scalable business model because of inefficiencies, not least the mechanisms used to provide high availability discussed above. Therefore, support of per-tenant levels of service within an individual deployment is required for ECM platforms to support multi-tenanted services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Extensibility</head><p>The second major area of Fractal research centers on allowing users to customize their content spaces using functionality created by developers and other interested users. This research direction stems from our belief a cloud-based service can uniquely allow users and developers to create, share and-if desired-sell pieces of functionality.</p><p>We seek to explore a sustainable paradigm where users are able to conceive and create new functionality, leveraging social networks for discovering and propagating their wares. Achieving this requires not merely an accessible development model, but a tractable means for sharing, practical mechanisms for installation, and assurances of safe execution.</p><p>Today none of this is available close to the user. In this section, we discuss where research is required to enable this model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Ease of Extension by Developers</head><p>A number of factors make a platform attractive to developers, including accurate documentation; a familiar programming language; well-designed, stable programming interfaces; effective frameworks for testing; and a solid development environment.</p><p>We found extending Alfresco to be complex, requiring us to independently modify several different aspects of the platform using several different languages and tools. Deploying our extensions involved uploading artifacts to various folders on our Alfresco server, making uploading in a single package troublesome; our Extensions Marketplace required extensive knowledge of Alfresco's inner workings to enable single-click deployment of the Progress Report active behaviour.</p><p>We also note that not many ECM companies have set out to create platforms as open as Alfesco. In addition, few commercial ECM platforms are sufficiently widely deployed to have attracted a large following of third party developers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Ease of Customization by End Users</head><p>With Fractal, we want to empower ordinary users to tailor content spaces to their needs. We want their customizations to extend beyond simply adopting applications written by professional developers; rather, we want to create an environment where end users are able to author their own extensions that precisely meet their needs and, if appropriate, share these with the broader community.</p><p>Many ECM systems embed simple scripting and workflow capabilities that, in theory, provide an easy route to authoring simple extensions. Alfresco, like many other ECM systems, embeds the JBoss jBPM workflow engine to allow custom workflows to be developed. In our prototype we evaluated the suitability of this environment for non-technical end users. Unfortunately, our results were not positive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Even</head><p>for experienced software developers, implementing the jBPM workflow for the Progress Report application described in Section 2.3 was time consuming. We found several sources of complexity: users first needed to find a jBPM design environment as one was not part of Alfresco; the Eclipse-based graphical editor only gave a partial view of the workflow, requiring users write actions in code; users needed an understanding of concurrent programming concepts, such as fork and join; users needed to make XML configuration changes across the platform to support the workflow. This complexity needs eliminating if non-technical users are to have a chance at authoring their own custom active behaviors.</p><p>A core value we see in active behaviors is allowing non-technical users to create actions that respond to changes in their content in novel ways. This is impossible in Alfresco, but we believe essential in allowing people to build compelling, timesaving functionality around their content. How to provide simple, effective means for users to produce such reactive functionality around groups of content is a specific focus area for our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Related Work</head><p>Focusing on the scientific domain, myExperiment <ref type="bibr" target="#b3">[6]</ref> provides compelling confirmation that users can successfully author and share complex workflows, given the right tools. In the myExperiment "virtual research environment," participants are able to share, extend and even execute scientific workflows and share data sets with fellow researchers and developers from across domains of interest. We envision a similar ecosystem of development and sharing in Fractal for both user defined behaviors and developer created extensions.</p><p>The Ning social network platform <ref type="bibr" target="#b4">[7]</ref> demonstrates how easy it can be for users to create their own customized spaces. The key difference between Ning and Fractal is that Ning is consumer focused and does not extend its powerful user configurability to document management and workflow features.</p><p>Several cloud application platforms have recently emerged that free developers from concerns over how the infrastructure supporting their applications will scale if they are successful. The leading examples are Microsoft Azure <ref type="bibr" target="#b5">[8]</ref>, Google App Engine <ref type="bibr" target="#b6">[9]</ref> and Salesforce's Force.com <ref type="bibr" target="#b7">[10]</ref>. The Force.com platform is especially compelling, as they have fully recognized the importance designing specifically for multi-tenancy, using a metadata-driven approach.</p><p>The Storage and Information Management Platforms Lab (SIMPL) at HP Labs has recently presented work in which they recognize the tradeoffs between consistency and availability, and provide fine-grained control of this balance at write-time <ref type="bibr" target="#b10">[13]</ref>. We see this as a promising step toward enabling tenant-level control of similar tradeoffs in a multi-tenanted environment, control not available today.</p><p>In the area of ease of extension for end users, there are a number of works discussing ways to present BPEL service composition workflows within a graphical authoring environment <ref type="bibr" target="#b8">[11]</ref> <ref type="bibr" target="#b9">[12]</ref>. These provide solid foundations for the environments we require for enabling wide-ranging user composition of services during extension authoring.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions and Future Work</head><p>In this paper, we argued for a coming need for cloudbased, highly user-customizable collaboration platforms. We overviewed the Fractal project at HP Labs that aims to create such a platform. We described the Fractal Conceptual Prototype, where we explored what we see as key requirements for a multi-tenanted cloud-scale platform focused on content-centric collaboration. We argued the current generation of ECM technologies is not a good match, and highlighted some of the improvements required.</p><p>Over the next twelve months, our research will focus on alternative implementation patterns to satisfy these requirements.</p></div>		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Content-Centered Collaboration Spaces in the Cloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Erickson</surname></persName>
		</author>
		<idno>HPL- 2009-11</idno>
		<ptr target="http://tinyurl.com/fractal-vision" />
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing special issue on Cloud Computing</title>
		<imprint>
			<date type="published" when="2009-01" />
		</imprint>
	</monogr>
<note type="report_type">HPL Tech Report</note>
	<note>Submitted</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alfresco</forename><surname>Share</surname></persName>
		</author>
		<ptr target="http://tinyurl.com/3z7wkh" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<ptr target="http://tinyurl.com/c76ncd" />
		<title level="m">Fractal Conceptual Prototype Videos: Content Spaces</title>
		<imprint/>
	</monogr>
	<note>Active Behaviors</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Design and Realisation of the myExperiment Virtual Research Environment for Social Sharing of Workflows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>De Roure</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Goble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stevens</surname></persName>
		</author>
		<ptr target="http://eprints.ecs.soton.ac.uk/15709/" />
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<ptr target="http://ning.com" />
	</analytic>
	<monogr>
		<title level="j">Ning Social Network Platform</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Microsoft</forename><surname>Azure</surname></persName>
		</author>
		<ptr target="http://www.microsoft.com/azure" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Google App Engine</surname></persName>
		</author>
		<ptr target="http://code.google.com/appengine" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<ptr target="http://tinyurl.com/8uxxb7" />
	</analytic>
	<monogr>
		<title level="j">The Force.com Multitenant Architecture</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Visual Modelling of Complex Business Processes with Trees, Overlays and Distortion-based Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lei</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Hosking</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Grundy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2007 IEEE Symposium on Visual Languages and Human-Centric Computing</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">ZenFlow: a visual Web service composition tool for BPEL4WS</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Martinez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Patino-Martinez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jimenezperis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Perez-Sorrosal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2005 IEEE Symposium on Visual Languages and Human-Centric Computing</title>
		<imprint>
			<biblScope unit="page" from="20" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Consistability: Describing usually consistent systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Amitanand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Aiyer</surname></persName>
		</author>
		<ptr target="http://tinyurl.com/cnspyx" />
	</analytic>
	<monogr>
		<title level="m">The 4th workshop on Hot Topics in Dependability</title>
		<meeting><address><addrLine>San Diego, California, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-12-07" />
		</imprint>
	</monogr>
	<note>Proceedings of HotDep</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
