<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:55+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Metadata Considered Harmful ... to Deduplication</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xing</forename><surname>Lin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fred</forename><surname>Douglis</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xudong</forename><surname>Li</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Ricci</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>Smaldone</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grant</forename><surname>Wallace</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Utah EMC Corp. EMC Corp. Nankai University</orgName>
								<orgName type="institution" key="instit2">University of Utah EMC Corp. EMC Corp</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Metadata Considered Harmful ... to Deduplication</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Deduplication is widely used to improve space efficiency in storage systems. While much attention has been paid to making the process of deduplication fast and scalable, the effectiveness of deduplication can vary dramatically depending on the data stored. We show that many file formats suffer from a fundamental design property that is incompatible with deduplication: they intersperse metadata with data in ways that result in otherwise identical data being different. We examine three models for improving deduplication in the presence of embedded metadata: deduplication-friendly data formats, application-level post-processing, and format-aware deduplication. Working with real-world file formats and datasets, we find that by separating metadata from data, deduplication ratios are improved significantly-in some cases as dramatically as 5.6Ã—.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The amount of digital data continues to grow rapidly. Data deduplication has been shown to be effective in improving space efficiency for backup/archive storage systems <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b18">20]</ref> and there is an increasing interest in applying deduplication to general-purpose file systems <ref type="bibr" target="#b15">[16,</ref><ref type="bibr">19]</ref>. The effectiveness of deduplication is therefore crucial to the efficiency of such storage systems.</p><p>Generally, there are three types of deduplication: whole-file (also known as single-instance store <ref type="bibr" target="#b0">[1]</ref>), fixed-size blocks <ref type="bibr" target="#b13">[14]</ref>, and variable-size content-defined chunks <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b18">20]</ref>. Whole-file and fixed-block deduplication work well in some environments <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b14">15]</ref>, but using the content itself to determine deduplication unit boundaries is popular for two reasons. First, within a file, a small edit that shifts the remaining content would cause fixed-size blocks to align differently such that they would not deduplicate. Second, even small unmodified files may be written to the backup system by applications such as EMC NetWorker or Symantec NetBackup as part of a larger aggregate file to amortize overheads <ref type="bibr" target="#b17">[18]</ref>; these aggregate files resemble UNIX tar files.</p><p>In this position paper, we show that many file formats suffer from a fundamental design property that is incompatible with deduplication: they intersperse metadata with data in ways that result in otherwise identical data being different. Metadata is changed more frequently, sometimes in trivial ways, leading to poor deduplication.</p><p>We observe that there are at least three ways to adapt ill-behaved data to deduplicating storage:</p><p>Deduplication-friendly formats The best solution is to design file formats that separate metadata and data in a way that preserves potential deduplication. We provide a case study of EMC NetWorker, which has migrated to a new deduplication-friendly data format for backup data.</p><p>Application-level post-processing When it is hard to change the file format for an established application, it is often possible to post-process files to produce a new format that is better suited to deduplication. We describe mtar, which transforms tar files into a more deduplication-friendly format.</p><p>Format-aware deduplication Sometimes, neither of the previous approaches is feasible, and special logic is required within the deduplicating system. We describe how EMC Data Domain appliances handle two cases of file formats that use special markers interspersed with data: tape markers for virtual tape libraries and block headers within the Oracle RMAN backup format <ref type="bibr" target="#b12">[13]</ref>. This paper makes three contributions. 1) It is the first detailed study that identifies the impact of metadata on deduplication. 2) It proposes two new formats (Common Data Format and mtar) that improve deduplication. 3) It evaluates the new formats with real-world datasets and shows quantitative improvements to deduplication ratios. We hope that this study contributes to an increased understanding of the role of metadata in deduplication, and thus improved storage efficiency in future deduplicating systems and file formats.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Deduplication-friendly Formats</head><p>In this section, we discuss our experiences with EMC NetWorker, a commercial backup software system. NetWorker was first developed in the age of tape-based backups and has since evolved. It uses application-specific data formats that describe data in different formats for different types of backup devices: disk backups and tape  Figure 1: Deduplication ratios for workstation backups, using the original NetWorker and deduplication-friendly CDF formats. X-axis labels are X:Y, where X is the number of full backup generations analyzed and Y is the average internal deduplication ratio. Hosts were sorted by the CDF deduplication ratio. The number above each bar shows the improvement due to CDF.</p><p>backups use different formats. The format is proprietary, but we discuss it here in general terms. For disk-based file systems, the NetWorker save format includes these fields, among others: internal file identifier, file name, offset and size, and file attributes. These metadata fields precede the data of each saved file, and some of these fields are unfriendly to deduplication. In particular, the internal file identifier is a monotonically increasing sequence number, so adding a file to a directory shifts the sequence number of every file that follows, and the blocks are no longer identical. Attributes such as timestamps can thwart deduplication; we discuss this further in the context of tar in Section 3.</p><p>We have designed a new Common Data Format (CDF), which separates data from metadata. The metadata of all files is grouped together and stored in one section, where it references file data stored in another section. This separation has a substantial impact on deduplication, and as a result, EMC's backup software products are migrating to this new format.</p><p>We evaluated CDF by estimating the deduplication across the backups of 15 hosts using content-defined chunks (8 KB average, 4 KB min, 12 KB max). Fingerprints are checked using Bloom filters. This dataset is a subset of the workstations dataset used by Douglis, et al., in an earlier study <ref type="bibr" target="#b1">[2]</ref>; here we have fewer workstations and evaluate deduplication ratios (defined as original size deduplicated size ) only for the full backups. There were 15-25 backups per workstation, totalling up to about 420 GB. The more backups there are for a host, the higher its deduplication ratio is likely to be, since the same data may appear more times. In addition, some hosts have remarkably high internal deduplication: the fraction of data within even a single backup that is eliminated by deduplication with other data in the same backup. <ref type="figure">Figure 1</ref> shows the deduplication within each of the datasets using the original NetWorker data format and the deduplication-friendly CDF format. Since both the number of backups and the internal deduplication affect the overall deduplication ratio, these are shown (colonseparated) as the x-axis labels for each host. (We ignore traditional LZ compression, which is applied after deduplication.) The datasets are sorted in decreasing order of deduplication.</p><p>The backups in the original format deduplicated rather poorly, with deduplication ratios of 3.6-6.1Ã— even with over 20 backups stored. Moving to the CDF format produces deduplication ratios from 17.0-33.4Ã—, with an average improvement (shown in red) of 4.9Ã—. Many systems had aggregate deduplication better than simply finding the same data once in each backup. We attribute this to these workstations being engineering workstations containing multiple copies of certain data such as source code, leading to internal deduplication as high as 1.9Ã—.</p><p>In addition we found that inter-host duplication reported in the earlier study <ref type="bibr" target="#b1">[2]</ref>, using the original NetWorker format, understated the available deduplication. For instance, the most content in common across two hosts reported in that study was 74% of one host's chunks, but when considering only the data without the impact of metadata, it rose to 93%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Application-level Post-processing</head><p>Next, we look at tar as an example of an application that has a well-defined data format that is 1) unfriendly to deduplication; and 2) in wide use for decades, and is thus hard to change for compatibility reasons. For this class of applications, we propose post-processing as a way to deinterleave data and metadata, improving deduplication.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">tar</head><p>tar <ref type="bibr" target="#b5">[6]</ref> was initially designed for archival storage on magnetic tapes, and the format was optimized for sequential IO. A tar file is a sequence of entries, one per file, each containing a file header and data blocks. The file header includes metadata for that file, including its path, ownership and modification time. The tar program works in 512-byte blocks. Thus, each file entry consists of one header block 1 and many data blocks. File headers are placed immediately before the corresponding data blocks to avoid multiple "seeks" when extracting a single file. An illustration of the tar format is presented in the top half of <ref type="figure">Figure 2</ref>.</p><p>While the tar format works well for tape backups, it is now also commonly used to store and distribute source code, binaries, and disk-based backups. tar's decision to place metadata and data together in its file format, however, interacts poorly with deduplicating storage. Specifically, we found that when storing tar files of multiple releases of source code, we were only able to achieve deduplication ratios of about 2Ã—; if we simply concatenated the files (thus throwing out the metadata), we were able to achieve deduplication ratios of up to 18Ã— (with an average chunk size of 8 KB). The tar format clearly interferes with deduplication. The underlying reason is that metadata changes more frequently than data blocks: we found that the modification time for the same file in two consecutive releases of Linux source code distributions is different, even when the file's content remains the same. By mixing more frequently changing metadata with data blocks, the tar format unnecessarily introduces many more unique chunks. An illustration of this problem is presented in <ref type="figure">Figure 3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Migratory tar</head><p>We propose a new Migratory tar format (mtar for short), in which we separate metadata from data blocks by colocating metadata blocks at the end of the mtar file. Changes in metadata are localized and isolated from data blocks, enabling better deduplication of the data.</p><p>An mtar file can be created by migrating a tar file. Specifically, we scan a tar file, output all data blocks to the mtar file and all header blocks to a temporary file, and then concatenate the two. <ref type="bibr" target="#b1">2</ref> We store the offset of the metadata block in the first block of a mtar file for efficient access. To get back the original tar file, a restore operation reads the first block, finds the first header block, reads all data blocks for that file starting from the second block and outputs it. This process is repeated for every file, resulting in re-creation of the original tar file. This dynamic reorganization of the tar file is similar to migratory compression (MC) <ref type="bibr" target="#b9">[10]</ref>. An illustration of the mtar format and the migrate and restore operations are shown in <ref type="figure">Figure 2</ref>. mtar works best when a tar file includes many small files, because metadata interleaves with data more frequently. This is generally true for source code distributions, which we evaluate. For tar files that include mostly large files, we expect less benefit from mtar. We implemented mtar by extending GNU tar version 1.27.1 (the extension is available at https://github.com/ xinglin/mtar).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Evaluation</head><p>To evaluate mtar, we use source code distributions of the Linux kernel and 9 GNU software packages from ftp://ftp.gnu.org/gnu/. For each package, we examine deduplication for multiple released versions. The software packages are shown in <ref type="table">Table 1</ref>.</p><p>For each dataset, we download compressed tar files and decompress them. We remove padded blocks at the end of each tar file, 3 then use our modified tar program to convert each tar file into an mtar file. We compared deduplication for tar and mtar using the fs-hasher tool, released by Stony Brook University <ref type="bibr" target="#b3">[4]</ref>. We use variable-size chunking, with 8 KB as the average chunk  <ref type="figure">3 1.2 1.1 1.2   1.7 1.5 1.5 1.5</ref> 1.1</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.3</head><p>Figure 4: Deduplication ratios for tar and mtar. The number above each bar shows the improvement due to mtar.</p><p>size (4 KB min, 16 KB max). An MD5 hash value is generated for each chunk; note that this is not collisionresistant but for our analysis an occasional error is unimportant. We compare bytes in unique chunks to bytes in all chunks. <ref type="figure">Figure 4</ref> shows that mtar improves deduplication ratios over tar by 1.1-5.3Ã—. Using a 2 KB average chunk size, with the same ratio for the minimal and maximal chunk sizes, mtar achieves 1.1-3.3Ã— improvements. For a 32 KB average chunk size, the improvements range from 1.1-6.2Ã—. These results show mtar improves deduplication significantly.</p><p>Next, we examined deduplication ratios for metadata blocks and data blocks separately. We found that metadata blocks have no duplication, while data blocks show high deduplication ratios: up to 16.62Ã— for Linux. Deduplication ratios for data blocks are close to our earlier experiment which simply concatenates source files, showing that mtar's improvement over tar comes from increased deduplication among the data blocks. It is interesting to note the effect on stored (post-deduplication) blocks: as mtar improves the deduplication ratios for data blocks, the fraction of stored blocks that consist of undeduplicatable metadata blocks increases significantly. For the Linux kernel, before deduplication, 95.61% are data blocks and only 4.39% are metadata blocks. After deduplication, the unique data blocks become 5.75% (16.62Ã— deduplication ratio) while we still have the same metadata blocks. While the percentage of metadata blocks is small in the original data, the weight becomes much more significant after deduplication: here, 43.3% of post-deduplication storage comes from metadata( <ref type="bibr">4.39 (4.39+5.75)</ref> ). Future work should also study how to store metadata efficiently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Format-aware Deduplication</head><p>Formats that are not designed with deduplication in mind may needlessly degrade deduplication effectiveness. If it is not possible to change the data format or post-process prior to writing it to storage, then the storage system needs to understand and address the effects on the fly. Here we describe two examples of format-aware deduplication in EMC Data Domain appliances <ref type="bibr" target="#b18">[20]</ref>.</p><p>One of the earliest data types requiring special handling was the existence of "block markers" intended for magnetic tapes. When using a disk-based system to emulate tape, the incoming stream for a "virtual tape library" (VTL) device continues to periodically include block markers with a special bit pattern. Since these block markers appear at fixed intervals, a shift in content results in the marker appearing at a different point within a chunk, and the chunk does not deduplicate. Worse, the block markers can also contain variable metadata, even preventing deduplication of unmodified data. Data Domain addressed this by allowing the system to scan for block markers while performing chunking and fingerprinting. If one is identified, then it is removed from the content and stored in a separate location, thus the fingerprints of the remaining data are unaffected. Upon a read, the marker is inserted at the specified offset to restore the original data. Marker handling can have significant impact: for example, one customer saw deduplication improve from 9.9Ã— to 16.8Ã— with proper treatment of the interspersed metadata (a 70% improvement).</p><p>Another data type requiring special handling arises in Oracle RMAN backups <ref type="bibr" target="#b12">[13]</ref>. RMAN writes fixed-sized blocks, configurable between 2KB and 64KB, each containing a block header and footer. Portions of the header and footer can change from backup to backup even when the block data remains unchanged, due to internal Oracle data formats. Additionally, RMAN may multiplex multiple data files together into a backup and the ordering of multiplexing can change; this affects contentdefined chunk creation. Without special handling, therefore, deduplication would be degraded due to the modified metadata in the header and footer and the possibility of a change to the order in which files were multiplexed.</p><p>To solve the above problem, Data Domain modified the system to use block headers to delineate Oracle blocks as the (fixed-size) unit of deduplication and to remove portions of the block header and footer similar to tape marker handling: the variable portion is stripped out and stored as a small inlined data unit within the file system metadata, and the remaining content is fingerprinted. By doing this deduplication becomes impervious to multiplexing order or changes isolated to the header.</p><p>In experiments doing 6 backups of an Oracle database with a 5% change rate between backups, we observed a 1.2-2Ã— improvement in deduplication (4.5â†’5.28Ã— without multiplexing and 2.48â†’5.07Ã— with multiplexing). Thus removing block headers restores the deduplication to that expected from the underlying data.</p><p>While we see promising results by making deduplication systems aware of data formats, this approach has a significant drawback, requiring deduplicating appliance manufacturers to track a moving target. Changes to the format cause deduplication to drop, requiring engineers to address the change. This results in a cycle of analysis, implementation, testing, and finally a patch release-a process that can take substantial time and effort.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>Most work in the deduplication space has focused on improving write throughput (e.g., Data Domain <ref type="bibr" target="#b18">[20]</ref> and Sparse Indexing <ref type="bibr" target="#b8">[9]</ref>), with a significant recent effort on improving restore performance <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8]</ref>. However, little work has been done to examine the impact of input data in deduplication. The closest work to both RMAN block special handling and mtar is a poster proposing a tarformat aware chunking algorithm <ref type="bibr" target="#b16">[17]</ref>. To prevent the interference from metadata blocks, Sung, et al., partition every header block as a deduplication chunk while in our mtar approach, we group header blocks together and separate header blocks from data blocks. Their approach requires changes in the chunking algorithm for existing deduplication systems, to make them aware of the tar format. mtar does not require any changes. Their chunking algorithm produces small chunks in the tar block size (512 bytes). This could break minimal chunk size requirements; in addition, small chunks dramatically increase deduplication system metadata overhead <ref type="bibr" target="#b17">[18]</ref>. MC <ref type="bibr" target="#b9">[10]</ref> has similarities to mtar: both reorganize data to improve space efficiency, but mtar uses knowledge of the tar format to improve deduplication while MC rewrites generic data to improve traditional compression.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>We have examined the effect of metadata on deduplication effectiveness. When metadata changes frequently over time, it is essential to separate it from data that stays more stable and would otherwise deduplicate. This separation can occur within the deduplication process, but that leads to complexity as well as dependencies on both data formats and deduplication environments. It can be done as a post-processing step, which makes the benefits more generic: any deduplication back-end can benefit from the conversion process, but the post-processor still must closely track the input format. Designing a data format to be deduplication-friendly has the best benefits of all, as the application improves deduplication in a platform-independent manner while isolating the storage system from the data format.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Figure 2: The tar and mtar formats and transformations between them.</figDesc></figure>

			<note place="foot" n="1"> Multiple header blocks are used when the file path is too long to fit in a single header block.</note>

			<note place="foot" n="2"> Putting metadata at the end of the mtar file allows us to make a single pass over the input tar file: the amount of metadata and data cannot be known without reading the entire file, and appending the smaller metadata to the larger data is more efficient than the reverse. 3 tar does IO in fixed multiples of blocks, called records. It pads the last few blocks to be a full record.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank Yamini Allu, Abhinav Duggal, Kai Li, Vladimir Mandic, Philip Shilane, and others in Data Domain engineering for comments and for their efforts reported here. We thank our shepherd, Dan Ports, and the anonymous reviewers for their insightful feedback.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Single instance storage in windows 2000</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bolosky</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Corbin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Goebel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douceur</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of USENIX Windows Systems Symposium</title>
		<meeting>of USENIX Windows Systems Symposium</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Content-aware load balancing for distributed backup</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bhardwaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shilane</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of LISA</title>
		<meeting>of LISA</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hydrastor: A scalable secondary storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dubnicki</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gryz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Heldt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kaczmarczyk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kilian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strzelczak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Szczepkowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Un-Gureanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Welnicki</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<ptr target="http://tracer.filesystems.org/.RetrievedMarch9" />
	</analytic>
	<monogr>
		<title level="j">FILE SYSTEMS AND STORAGE LAB FROM STONY BROOK UNIVERSITY. fs-hasher</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Accelerating restore and garbage collection in deduplication-based backup systems via exploiting historical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of USENIX ATC</title>
		<meeting>of USENIX ATC</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Basic tar format</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gnu</forename><surname>Tar</surname></persName>
		</author>
		<ptr target="http://www.gnu.org/software/tar/manual/html_node/Standard.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The effectiveness of deduplication on virtual machine disk images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SYSTOR</title>
		<meeting>of SYSTOR</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Improving restore speed for backup systems that use inline chunk-based deduplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillibridge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eshghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhagwat</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sparse indexing: Large scale, inline deduplication using sampling and locality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lillibridge</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eshghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Deola-Likar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Trezise</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Camble</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Migratory compression: Coarse-grained data reordering to improve compressibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Douglis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Shilane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wallace</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A study of practical deduplication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meyer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bolosky</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A low-bandwidth network file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Muthitacharoen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mazi`eresmazi` Mazi`eres</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGOPS Oper. Syst. Rev</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Database backup and recovery user&apos;s guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oracle</forename><surname>Corp</surname></persName>
		</author>
		<ptr target="http://docs.oracle.com/cd/E11882_01/backup.112/e10642/.RetrievedMarch9" />
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A new approach to archival data storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quinlan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dorward</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Efficiently storing virtual machine backups</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Smaldone</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HotStorage</title>
		<meeting>of HotStorage</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Latency-aware, inline data deduplication for primary storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Srinivasan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bisson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Goodson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Voru-Ganti</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Idedup</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An efficient data deduplication based on tar-format awareness in backup applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Park</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FAST</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note>Poster</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Characteristics of backup workloads in production systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wallace</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Douglis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shilane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Smal-Done</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chamness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Avoiding the disk bottleneck in the data domain deduplication file system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patterson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of FAST</title>
		<meeting>of FAST</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
