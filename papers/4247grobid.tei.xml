<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:07+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX. On Training Robust PDF Malware Classifiers On Training Robust PDF Malware Classifiers</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 12-14, 2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yizheng</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shiqi</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dongdong</forename><surname>She</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Suman</forename><surname>Jana</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yizheng</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shiqi</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dongdong</forename><surname>She</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Suman</forename><surname>Jana</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Columbia University</orgName>
								<orgName type="institution" key="instit2">Columbia University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX. On Training Robust PDF Malware Classifiers On Training Robust PDF Malware Classifiers</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 29th USENIX Security Symposium</title>
						<meeting>the 29th USENIX Security Symposium						</meeting>
						<imprint>
							<date type="published">August 12-14, 2020</date>
						</imprint>
					</monogr>
					<note>This paper is included in the 978-1-939133-17-5</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Although state-of-the-art PDF malware classifiers can be trained with almost perfect test accuracy (99%) and extremely low false positive rate (under 0.1%), it has been shown that even a simple adversary can evade them. A practically useful mal-ware classifier must be robust against evasion attacks. However, achieving such robustness is an extremely challenging task. In this paper, we take the first steps towards training robust PDF malware classifiers with verifiable robustness properties. For instance, a robustness property can enforce that no matter how many pages from benign documents are inserted into a PDF malware, the classifier must still classify it as malicious. We demonstrate how the worst-case behavior of a malware classifier with respect to specific robustness properties can be formally verified. Furthermore, we find that training classifiers that satisfy formally verified robustness properties can increase the evasion cost of unbounded (i.e., not bounded by the robustness properties) attackers by eliminating simple evasion attacks. Specifically, we propose a new distance metric that operates on the PDF tree structure and specify two classes of robustness properties including subtree insertions and deletions. We utilize state-of-the-art verifiably robust training method to build robust PDF malware classifiers. Our results show that, we can achieve 92.27% average verified robust accuracy over three properties, while maintaining 99.74% accuracy and 0.56% false positive rate. With simple robustness properties, our robust model maintains 7% higher robust accuracy than all the baseline models against unrestricted whitebox attacks. Moreover , the state-of-the-art and new adaptive evolutionary attackers need up to 10 times larger L 0 feature distance and 21 times more PDF basic mutations (e.g., inserting and deleting objects) to evade our robust model than the baselines.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Machine learning classifiers have long been used for many important security problems such as malware detection, spam filtering, and online fraud detection. One of the most ubiquitous applications is to detect PDF malware, which is a very popular infection vector for both large-scale mass and targeted attacks. Many prior research projects have demonstrated that machine-learning-based PDF malware classifiers can achieve almost perfect test accuracy (99%) with extremely low false positive rate (under 0.1%) <ref type="bibr" target="#b45">[47,</ref><ref type="bibr" target="#b46">48]</ref>. Nonetheless, all the state-of-the-art classifiers, including the proprietary ones used by popular services like Gmail, can be evaded by trivial transformations over the PDFs, such as adding invisible document metadata, deleting the length indicator of the exploit payload, or simply increasing the length of the document <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b34">36,</ref><ref type="bibr" target="#b59">61]</ref>.</p><p>Since any security-relevant application of machine learning classifiers must deal with adaptive adversaries, it is fundamentally insufficient to evaluate security classifiers by measuring the accuracy and false positive rate. Despite the abundance of available metrics given by well-established theoretical results in machine learning <ref type="bibr">[7]</ref>, none of them are suitable to measure the robustness of the classifiers under adaptive attackers. In order to be practically useful, a malware classifier must be demonstrated to be secure against different types of adaptive attacks. For example, a sample robustness property might require that no matter how many pages from benign documents are inserted into a PDF malware, the classifier still must classify the modified malware as malicious. Similarly, deletion of any non-functional objects in the PDF must not result in a benign classification.</p><p>Ideally, a classifier should be sound with regard to a robustness property. That is, the robustness property can be formally verified to get strict bounds on the worst-case behavior of the classifier. If a classifier satisfies the robustness property, the strongest possible attacker bounded by the specification of the property, i.e., bounded attacker, will not be able to violate the property, no matter how powerful the attacker is or whatever adaptive strategy she follows. For example, even for a perfect knowledge attacker, any creative way of inserting pages from the most-benign documents to the malware can be verified to keep the malicious classification.</p><p>If we train classifiers to be verifiably robust against building block attacks, we can raise the bar for more sophisticated attacks to succeed. Essentially, the attacker is solving a search problem to find an evasive PDF malware. She starts from a malicious PDF, performs a series of manipulations to the PDF, and eventually arrives at a solution that makes the PDF variant classified as benign without affecting its maliciousness. To maintain malicious functionality, the PDF variant needs to have the correct syntax and correct semantics. Therefore, manipulations from different attacks can be decomposed to many building block operations in the parsed PDF tree. By training building block robustness properties, we eliminate simple and easy evasions, which increases the search cost for attackers.</p><p>In this paper, we take the first steps towards training a PDF malware classifier with verifiable robustness properties, and we demonstrate that such classifiers also increase the attack cost even for the attackers not bounded by these properties. We address several challenges in building robust PDF malware classifiers. First, previous work has shown that retraining the malware classifier with adversarial instances drastically increases the false positive rate <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b26">28]</ref>. Since verifiably robust training is strictly a harder problem to solve than adversarially robust training without any verifiable bound, it is challenging to specify robustness properties that do not increase false positive rates yet still increase the cost for the attackers. To this end, we propose a new distance metric for the structured PDF trees. Using a small distance for the robustness properties maintains low false positive rate. Second, popular model choices for PDF malware classifiers are not suitable for robust training. For example, adversarially robust training over a random forest model requires manual adjustment to the complexity of trees to maintain acceptable accuracy <ref type="bibr" target="#b31">[33]</ref>. Therefore, we choose a neural network model to leverage state-of-the-art verifiably robust training schemes. Third, to evaluate our defense, we compare the robustness of our models against twelve different baseline models using seven attacks. We implement five attacks unrestricted by robustness properties, including feature-space attacks as well as application-space attacks that generate actual evasive PDF malware. In particular, we develop adaptive attacks to target the trained robustness properties based on EvadeML <ref type="bibr" target="#b59">[61]</ref>. We use these attacks to quantify the increase in the unbounded attacker cost caused by the verifiable robust training.</p><p>Using our new distance metric for the PDF tree structure, we specify two classes of robustness properties, subtree deletion properties and subtree insertion properties. The properties allow any possible attacks involving deletion/insertion up to a bounded number of subtrees under the PDF root. For example, when choosing to delete /Root/Metadata subtree containing children /Root/Metadata/Length and /Root/Metadata/Type, the attacker can delete either one of the children, both children, or the whole subtree. Note that even at the subtree distance one, the properties include a large number of possible model inputs. For example, subtree insertion property bounds the attacker to any one of the 42 subtrees under the PDF root. Among them, /Root/Pages alone includes 2 1,195 different input features for the classifier. This overapproximates attacker's actions, and includes even unknown attacks. We train seven verifiably robust models with different robustness properties, utilizing symbolic interval analysis <ref type="bibr" target="#b53">[55,</ref><ref type="bibr" target="#b54">56]</ref>. We measure the verified robust accuracy (VRA) for a test set of 3,416 PDF malware. The VRA represents the percentage of test samples that are verifiably robust against the strongest bounded attacker. Although adversarially robust training is known to achieve strong robustness against a specific type of attacker, the gradient attacker <ref type="bibr" target="#b37">[39]</ref>, our verifiably trained models can obtain superior verifiable robustness against all possible bounded attackers while keeping high test accuracies and low false positive rates.</p><p>Perhaps even more importantly, we show that a verifiably robust classifier with two proposed robustness properties can already increase the cost for the unbounded attacker. We evaluate our model against two unrestricted whitebox attacks and three unrestricted blackbox attacks. In the whitebox setting, our robust model maintains 7% higher estimated robust accuracy (defined in Section 2.3.4) against the unrestricted gradient attack and the Mixed Integer Linear Program (MILP) attack than the baseline models. In the blackbox setting, the enhanced evolutionary attack needs up to 3.6 times larger L 0 distance and 21 times more PDF mutations (described in Section 4.5.1 and 4.7) to evade our model compared to the baselines. Even the adaptive evolutionary attack needs 10 times larger L 0 distance and 3.7 times more PDF mutations to evade our robust model. In addition, we achieve 2% higher ERA than the strongest baseline model against the reverse mimicry attack. The results show that training verifiably robust PDF malware classifiers even for carefully chosen simple robustness properties can effectively increase the bar for the attacker to solve the evasion problem.</p><p>As defenders, making all evasion attacks on malware classifiers computationally infeasible is an extremely hard problem. However, our work shows a very promising direction to increase the cost of an attacker by training malware classfiers that are verifiably robust against different simple robustness properties. We can potentially further increase the robustness of PDF malware classifier by specifying more complex robustness properties. Our key contributions are summarized as follows.</p><p>• We are the first to evaluate and train verifiable robustness properties of PDF malware classifiers. We propose a new distance metric to bound the robustness properties in the PDF tree structure. We specify two essential robustness properties as building blocks to compose more powerful properties.</p><p>• We train verifiably robust PDF malware classifier models. We thoroughly evaluate the robustness against twelve baseline models, using state-of-the-art measures including estimated robust accuracy (ERA) under gradient attacks and verified robust accuracy (VRA) against any bounded adaptive attacker. We can achieve 92.27% average VRA over three robustness properties while maintaining 99.74% test accuracy and 0.56% false positive rate.</p><p>• We can increase the bar for unrestricted attackers to evade our verifiably robust model. Our model achieves 7% higher ERA against the unrestricted gradient attacker up to 200,000 iterations than all the baselines. The state-of-the-art and new adaptive evolutionary attackers need up to 10 times larger L 0 feature distance and 21 times more PDF manipulations to evade our robust model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>In this section, we present an overview of the PDF format and PDF malware. Then, we introduce the features used by  PDF malware classifiers and two main classes of attacks that evade them. At last, we describe the robust training techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">PDF Malware</head><p>The Portable Document Format (PDF) contains four sections: header, body, cross-reference table, and trailer. The header identifies the file format, version, and a magic number. The body consists of various types of objects, including arrays, name trees, dictionaries, etc. For example, <ref type="figure" target="#fig_0">Figure 1a</ref> shows four PDF objects and the trailer from a PDF malware. The trailer identifies the entrance to parse the file, along with the cross-reference table size. Here, the entrance is the root object 1 0 obj, where the object number is 1 and the object version is 0, and R means indirect reference. The cross-reference table indexes all object locations in the file. Starting from the root object, a parser resolves referred objects either using the crossreference table or scanning the PDF to get the object locations.</p><p>The four objects in this file are dictionaries, indicated by &lt;&lt; and &gt;&gt; symbols and enclosed by obj and endobj keywords. The dictionary object is a collection of key/value pairs. Each key is a name object, and the value can be any object. The root object 1 0 obj has a special type, /Catalog, and the value of the key /OpenAction is another dictionary object. Within /OpenAction, the object containing the JavaScript exploit is referred to as 2 0 R. The exploit object contains a stream that can be decoded using the /Filter indicator, and a length field for the stream. The exploit is executed when the file is opened. There is generally discrepancy between the parser implementation and actual file format specification. For example, many PDF readers do not need the correct length field to decode the stream, and malware authors can delete the field to evade the classifier. The rest of the PDF contains object 3 and 4 that refer to each other. The PDF structure forms a tree, by taking the shortest path to objects via references <ref type="figure" target="#fig_0">(Figure 1b)</ref>. PDF malware exploits the vulnerabilities in the PDF reader in order to transfer execution control, e.g., to run shellcode or drop additional binary. PDF malware authors employ various techniques to evade the detection, e.g., add content from legitimate documents, crash the PDF reader, and obfuscate the PDF content. Making PDF malware classifier robust against trivial manipulation remains a hard problem. For example, increasing the length of the file to be 7,050,000 bytes can evade the Gmail PDF malware scanner <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">PDF Malware Classifiers</head><p>In this section, we discuss two open-source PDF malware classifiers that have attracted considerable evasion effort in the security community, PDFrate <ref type="bibr" target="#b45">[47]</ref> and Hidost <ref type="bibr" target="#b46">[48]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">PDFrate</head><p>PDFrate <ref type="bibr" target="#b45">[47]</ref> uses a total of 202 features including counts for various keywords and certain fields in the PDF. For example, number of characters in the author field, number of "endobj" keyword, sum of all pixels in all the images, and number of JavaScript markers, etc. The classifier is a Random Forest, with 99% accuracy and 0.2% false positive rate over the Contagio malware dataset <ref type="bibr" target="#b3">[4]</ref>.</p><p>Simple manipulation of the PDF file can result in very big changes in the feature values of PDFrate. For instance, inserting pages from a benign document to the PDF malware can increase the page count feature alone to be as big as the maximal integer value, which also affects many other counts. If a bounded manipulation in the PDF cannot tightly bound the feature input to the classifier, these features are not suitable for verifiably robust training.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Hidost</head><p>Hidost <ref type="bibr" target="#b46">[48]</ref> uses Bag-of-Path features extracted from the parsed tree structure of the PDF. It obtains the shortest structural path to each object, including terminals and nonterminals in the tree, and uses binary counts for these paths as features. In the paper, the authors used only those paths that appeared in at least 1,000 files in the corpus, which reduced the number of paths from 9 million to 6,087. Hidost was evaluated on a decision tree model and a SVM model. Both models have 99.8% accuracy and less than 0.06% false positive rate</p><p>The binary Bag-of-Path features are able to bound the input to the classifier, given certain attack properties. For example, in our dataset, if we insert anything under the /Pages subtree, only up to 1,195 features will be flipped from 0 to 1, resulting in a tight input bound to the classifier. Therefore, in this paper, we choose to use Hidost features to build our robust PDF malware classifier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.3">Automatically Evading Malware Classifiers</head><p>Several automated attacks have successfully evaded PDF malware classifiers, under different threat models.</p><p>White-box Attacks. White-box attackers are assumed to have perfect knowledge. They can launch precise attacks targeting the exact model being trained, e.g., gradient-based attack <ref type="bibr" target="#b9">[11,</ref><ref type="bibr" target="#b34">36]</ref>. For instance, in the white-box setting, the Gradient Descent and Kernel Density Estimation (GD-KDE) attack can be launched against the SVM version of PDFrate <ref type="bibr" target="#b34">[36]</ref>. In addition, <ref type="bibr" target="#b26">[28]</ref> uses an approach to only add features, in order to preserve existing malicious functionality of adversarial malware examples <ref type="bibr" target="#b6">[8]</ref>. The drawback of such white-box gradient-based attacks is that the evasion instances are found in the feature space, so they do not generate actual PDF malware.</p><p>Black-box Attacks. The threat models of black-box attacks generally assume that the attacker does not have access to any model parameters, but has oracle access to the prediction labels for some samples, and in some cases also the prediction confidence. In some settings, features and the model type are assumed to be known as well. <ref type="bibr">Xu et al. [61]</ref> use a genetic evolution algorithm to automatically evade both PDFrate and Hidost. The evolutionary algorithm uses a fitness score as feedback, to guide the search in finding evasive PDF variants by mutating the seed PDF malware. For every generation of the population during the search, the attack uses a cuckoo oracle to dynamically check that mutated PDFs still preserve the malicious functionality. This check is much stronger than static insertion-only methods used by gradient-based attacks. <ref type="bibr">Dang et al. [18]</ref> uses a more restricted threat model where the attacker does not have access to classification scores, and only has access to the classified label and a blackbox morpher that manipulates the PDFs. They use the scoring function based on Hill-Climbing to attack the classifier under such assumptions. In this paper, we improve the attack from the genetic evolution framework of EvadeML <ref type="bibr" target="#b59">[61]</ref>, and also develop several adaptive attacks based on that.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Robust Training</head><p>Out of the arms race between adversarial image examples <ref type="bibr" target="#b47">[49]</ref> and many defenses <ref type="bibr" target="#b7">[9,</ref><ref type="bibr" target="#b10">12,</ref><ref type="bibr" target="#b11">13,</ref><ref type="bibr" target="#b40">42,</ref><ref type="bibr" target="#b41">43]</ref>, two training methods have proven to be the strongest among all. They are adversarially robust training and verifiably robust training. We briefly explain the training methods, and reason about why verifiably robust training provides stronger robustness guarantee.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">Robust Optimization</head><p>Both adversarially robust training and verifiably robust training are based on robust optimization. Let us first look at the optimization objective used by the regular training process of the neural network. Given an input x with the true label y, a neural network f q parameterized by q maps it to a labeî y = f (x). A loss function L(y, ˆ y) is used to evaluate the errors of such prediction, e.g., the cross-entropy loss. The training process has the following optimization objective that minimizes the loss to find optimal weights q. The summation is an empirical measure of the expected loss over the entire training dataset.</p><formula xml:id="formula_0">q = argmin q Â L(y, ˆ y)<label>(1)</label></formula><p>In the adversarial setting, for the input x, there can be a set of all possible manipulations˜xmanipulations˜ manipulations˜x bounded by a distance metric D k within distance k, i.e. ˜ x 2 D k (x). Robust optimization minimizes the worst case loss for all inputs in D k (x), solving a minimax problem with two components.</p><formula xml:id="formula_1">q = argmin q Â max˜x2D max˜ max˜x2D k (x) L(y, f q ( ˜ x))<label>(2)</label></formula><p>• Inner Maximization Problem: find˜xfind˜ find˜x that maximizes the loss value within the robustness region D k (x), i.e., the robust loss.</p><p>• Outer Minimization Problem: minimize the maximal loss to update the weights q of the neural network.</p><p>The following two robust training methods solve the inner maximization problem in different ways.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Adversarially Robust Training</head><p>Adversarially robust training empirically estimates the maximal loss in Equation 2 by using different attacks. The state-of-the-art adversarially robust training method from Madry et al. <ref type="bibr" target="#b37">[39]</ref> uses adversarial examples found by the Projected Gradient Descent (PGD) attack <ref type="bibr" target="#b33">[35]</ref> to estimate the robust loss for the training. The training method has been applied to benchmarking image datasets, including MNIST and CIFAR-10. The trained models have shown robustness against known attacks including the Projected Gradient Descent (PGD) attack <ref type="bibr" target="#b33">[35]</ref>, Carlini-Wagner (CW) attacks <ref type="bibr" target="#b11">[13]</ref>, Fast Gradient Sign Method (FGSM) <ref type="bibr" target="#b24">[26]</ref>, etc.</p><p>Adversarially robust training has been applied to malware datasets. In the followup work to <ref type="bibr" target="#b59">[61]</ref>, Xu et al. <ref type="bibr" target="#b0">[1]</ref> applied adversarially robust training over the Contagio malware dataset, which increased the false positive rate to as high as 85%. <ref type="bibr">Grosse et al. [28]</ref> applied the training method to the android malware classifier using adversarial malware examples, increasing the false positive rate to 67%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">Verifiably Robust Training</head><p>Verifiably robust training uses sound over-approximation techniques to obtain the upper bound of the inner maximization problem. Different methods have been used to formally verify the robustness of neural networks over input regions <ref type="bibr" target="#b18">[20,</ref><ref type="bibr" target="#b21">23,</ref><ref type="bibr" target="#b22">24,</ref><ref type="bibr" target="#b29">31,</ref><ref type="bibr" target="#b32">34,</ref><ref type="bibr" target="#b35">37,</ref><ref type="bibr" target="#b42">44]</ref>, such as abstract transformations <ref type="bibr" target="#b23">[25]</ref>, symbolic interval analysis <ref type="bibr" target="#b53">[55,</ref><ref type="bibr" target="#b54">56]</ref>, convex polytope approximation <ref type="bibr" target="#b56">[58]</ref>, semidefinite programming <ref type="bibr" target="#b43">[45]</ref>, mixed integer programming <ref type="bibr" target="#b48">[50]</ref>, Lagrangian relaxation <ref type="bibr" target="#b20">[22]</ref> and relaxation with Lipschitz constant <ref type="bibr" target="#b55">[57]</ref>, which essentially solve the inner maximization problem. By using the worst case bounds derived by formal verification techniques, verifiably robust training <ref type="bibr" target="#b19">[21,</ref><ref type="bibr" target="#b39">41,</ref><ref type="bibr" target="#b51">53,</ref><ref type="bibr" target="#b57">59]</ref> can obtain such verified robustness properties.</p><p>The training method has been applied to image datasets to increase verifiable robustness, usually with the tradeoff of lower accuracy and higher computation and memory cost for the training. Recent works have focused on scaling the training method to larger networks and bigger datasets <ref type="bibr" target="#b51">[53,</ref><ref type="bibr" target="#b57">59]</ref>. Since verifiably robust training techniques can train classifiers to be sound with regard to the robustness properties, the trained network gains robustness against even unknown adaptive attacks. On the contrary, adversarially robust training is limited by the specific threat model used to generate adversarial instances for the training. Therefore, we apply verifiably robust training to build the PDF malware classifier. By carefully specifying useful robustness properties, our robust model has only 0.56% false positive rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.4">ERA and VRA</head><p>In this paper, we will use the following two metrics to evaluate our verifiably robust PDF malware classifier.</p><p>Estimated </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Verifiably Robust PDF Malware Classifier</head><p>Since it is extremely hard, if not impossible, to have a malware classifier that is robust against all possible attackers, we aim to train classifiers to be robust against building block attacks. In this section, we describe the specification and training of robustness properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Robustness Properties</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Motivation</head><p>Building block operations. A large group of evasion attacks against malware classifiers can be considered as solving a search problem, e.g., mimicry attacks <ref type="bibr" target="#b34">[36,</ref><ref type="bibr" target="#b50">52]</ref>, EvadeML <ref type="bibr" target="#b59">[61]</ref>, EvadeHC <ref type="bibr" target="#b16">[18]</ref> and MalGAN <ref type="bibr" target="#b28">[30]</ref>. The search starts from the seed malware, modifies the malware to generate variants while keeping the malicious functionality, until finding a variant that can be classified as benign. The attacks use building block operations to make the search process more systematic and efficient over a large space. Specifically for PDF malware, the operations include PDF object mutation operators <ref type="bibr" target="#b59">[61]</ref>, random morpher <ref type="bibr" target="#b16">[18]</ref> and feature insertion-only generator <ref type="bibr" target="#b28">[30]</ref>. After performing the building block operations, the attacks optimize the search based on the classifier's feedback that indicates the evasion progress. We want to make the search harder by training classifiers to be robust against building block operations. To achieve that, we consider operations that generate PDFs with the correct syntax. A PDF variant needs to have both correct syntax and correct semantics to stay malicious. Though dynamic execution can confirm the same malicious behavior, it is too expensive to do that during training. Therefore, we statically ensure the correct PDF syntax. A syntactically correct PDF file can be parsed into a tree structure ( <ref type="figure" target="#fig_0">Figure 1b</ref>, Section 2.1). Thus, the building block operations are a combination of insertion and deletion in the PDF tree. Based on this insight, we design robustness properties related to the PDF subtrees. We propose two classes of subtree insertion and subtree deletion properties, which can be used as the stepping stones to construct more sophisticated attacks.</p><p>False positive rate. It is crucial to maintain low false positive rate for security classifiers due to the Base-Rate Fallacy <ref type="bibr" target="#b8">[10]</ref>. If we train classifiers with evasive malware variants without enforcing a proper bound, the classifier will have very high false positive rate. Since attacks often mimic benign behavior, the feature vectors of unbounded variants are close to benign vectors, which affects the false positive rate. Therefore, we need a distance metric to define the robustness properties to capture the similarity between the PDF malware and its variants. Since the L p norm distance in the feature space does not capture whether the corresponding PDF variant has the correct syntax, we propose a new distance metric for the PDF subtree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Subtree Distance Metric</head><p>Subtree Distance Definition. We propose a new distance metric to bound the attacker's building block operations over a PDF malware. The subtree distance between two PDFs x and x 0 is, the number of different subtrees of depth one in the two PDF trees. These subtrees are directly under the root object in the PDF, regardless of their height and the number of nodes in them. Formally,</p><formula xml:id="formula_2">d(x, x 0 ) = #{(root x .subtrees [ root x 0 .subtrees) 񮽙 (root x .subtrees\root x 0 .subtrees)}</formula><p>We first take the union of the subtrees with depth one from two PDFs, and then remove the intersection of the two subtree sets (identical subtrees). The distance d(x,x 0 ) is the cardinality of the resulting set.</p><p>If the attacker inserts benign pages into the PDF malware under the /Root/Pages subtree <ref type="figure" target="#fig_0">(Figure 1b</ref>), this operation will not exceed subtree distance one, no matter how long the malicious PDF document becomes. Changing an arbitrary subtree in the PDF may have different L p norm distances depending on which subtree is manipulated. For example, in the Hidost binary path features, manipulating /Root/Metadata is bounded by L 1  4, whereas changing /Root/Pages can be up to L 1  1195. However, under the subtree distance, they are both within the distance one bound.</p><p>We use the subtree distance to define robustness properties. Each property corresponds to an over-approximated set</p><formula xml:id="formula_3">D k (x) = { ˜ x|d(x, ˜ x)  k}.</formula><p>The set captures all PDF malware˜xmalware˜ malware˜x that can be possibly generated by changes in arbitrary k subtree regions under the root of the malware seed x, regardless of the feature extraction method. Since insertion and deletion are building block operations, we formulate these robustness properties at distance one before composing more complicated robustness properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Subtree Insertion and Deletion Properties</head><p>Subtree Insertion Property (Subtree Distance 1): given a PDF malware, all possible manipulations to the PDF bounded by inserting an arbitrary subtree under the root, do not result in a benign prediction by the classifier.</p><p>The attacker first chooses any one of the subtrees, and then chooses an arbitrary shape of the subtree for the insertion. Some subtrees are commonly seen in benign PDFs, which can be good insertion candidates for evasion, e.g., /Root/Metadata, /Root/StructTreeRoot, /Root/ViewerPreferences. Although the subtree distance for the property is only one, the total number of allowable insertions is on the order of the sum of exponentials for the number of children under each subtree.</p><p>The property over-approximates the set of semantically correct and malicious PDFs. For example, if we insert /Root/Names/JavaScript/Names/JS but not /Root/Names/JavaScript/Names/S, the javascript is no longer functional. Moreover, we over-approximate the attacker's possible actions. Attacks are usually based on some optimization procedure rather than exhaustive search. However, if a known attack fails to find succesful insertion in a subtree, unknown attacks may succeed. Therefore, the property can overestimate the worst case behavior of the classifier.</p><p>Subtree Deletion Property (Subtree Distance 1): given a PDF malware, all possible manipulations to the PDF bounded by deleting an arbitrary subtree under the root, do not result in a benign prediction by the classifier.</p><p>For the PDF malware example shown in <ref type="figure" target="#fig_0">Figure 1b</ref>, this property allows deleting any one of the following: /Root/Type, /Root/Pages, and /Root/OpenAction. Note that this allows any combination of deletion under non-terminal nodes /Root/Pages and /Root/OpenAction.</p><p>Some exploit triggers may be lost or the program semantics may be broken by deleting content from the malware. The robustness property covers an over-approximated set of evasive PDF malware, and enforces that they are always classified as malicious. It is acceptable to include some non-malicious PDFs in the robustness region, as long as we do not increase the false positive rate for benign PDFs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4">Other Properties</head><p>We do not specify other common properties like replacement, since many can be viewed as a combination of insertions and deletions. The robustness properties can be generalized to up to N subtree distance, where N = 42 in our feature space. Next, we describe properties with larger distances.</p><p>Subtree Deletion Property (Subtree Distance 2): the strongest possible attackers bounded by deletions within any two subtrees under the root, cannot make the PDF classified as benign.</p><p>Subtree Insertion Property (Subtree Distance N 񮽙 1): the strongest possible attackers bounded by insertions within all but one subtree under the root, cannot make the PDF classified as benign.</p><p>Monotonic Property and Subtree Insertion Property (Distance N): Incer et al. <ref type="bibr" target="#b30">[32]</ref> have proposed to enforce the monotonic property for malware classifiers. The monotonic property states that an attacker cannot evade the classifier by only increasing the feature values. Specifically, if two feature vectors satisfy x  x 0 , then the classifier f guarantees that f (x)  f (x 0 ). They enforce monotonicity for both benign and malicious classes, such that inserting features into any executable makes it appear more malicious to the classifier. The property is so strong that it decreased the temporal detection rate of the classifier by 13%.</p><p>To compare against the monotonic property, we propose the subtree insertion property at distance N. In other words, the insertion is unrestricted by any subtree, and it is allowed for all features. We focus on this property for the malicious PDFs, which is a key difference from the monotonic property.</p><p>Larger distances bound a larger set of evasive malware variants, which can make malicious feature vectors more similar to benign ones and affect the false positive rate. In our evaluation, we train all five properties and several combinations of them using mixed training technique <ref type="table" target="#tab_9">(Table 4)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Training the Properties</head><p>Given the over-approximated set of inputs D k (x) for each robustness property, we use sound analysis of the neural network to obtain the corresponding robust loss.</p><p>Sound analysis definition. A sound analysis over the neural network f q represents a sound transformation T f from the input to the output of f q . Formally, given input x 2 X and a property D k (x) bounded by distance k, the transformation T f is sound if the following condition is true: 8x 2 X, we have</p><formula xml:id="formula_4">{ f q ( ˜ x)| ˜ x 2 D k (x)} ✓ T f (D k (x))</formula><p>That is, the sound analysis over-approximates all the possible neural network outputs for the property. Using T f (D k (x)), we can compute the robust loss in Equation 2.</p><p>Training. Existing works have shown that training only for the robustness objective degrades regular test accuracy, and combining the two objectives helps smooth the conflict between the two <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b39">41,</ref><ref type="bibr" target="#b51">53]</ref>. Consequently, we adopt the same principle to train for a combined loss as below.</p><formula xml:id="formula_5">L = L(y, f q (x))+ max˜x2D max˜ max˜x2D k (x) L(y, f q ( ˜ x))<label>(3)</label></formula><p>In Equation 3, the left-hand side of the summation denotes the regular loss for the training data point <ref type="bibr">(x, y)</ref>, and the right-hand side represents the robust loss for any manipulated˜xmanipulated˜ manipulated˜x bounded by distance k satisfying a defined robustness property D k (x). We give the same weights to combine the two parts of the loss, to equally optimize the regular loss and the robust loss. The robust loss is computed by the worst case within the bounded region of every training data input. More implementation details about robust training can be found in Section 4.1.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head><p>We train seven verifiably robust models and compare them against twelve baseline models, including neural network with regular training, adversarially robust training, ensemble classifiers, and monotonic classifiers 1 . We answer the following questions in the evaluation.</p><p>• Do we have higher VRA and ERA if the attackers are restricted by the robustness properties?</p><p>• Do we have higher ERA against unrestricted attackers?</p><p>• How much do we raise the bar (e.g., L 0 distance in features and mutation trace length) for the unrestricted attackers to evade our robust models?</p><p>We use seven different attackers to evaluate the models. When choosing the attackers, we consider three factors, i.e., whether the attacker is bounded by the robustness properties, whether the attacker has whitebox access to the model, and whether the attacker is adaptive. <ref type="figure" target="#fig_1">Figure 2</ref> shows the categories where every attacker belongs to, and the evaluation metrics we use for the category. The detailed threat model for each attacker ((1) to <ref type="formula">(7)</ref>) is shown in <ref type="table">Table 1</ref>. In the table, we have marked whether each attacker generates realizable inputs that are real PDF malware. We evaluate attacks producing both realizable and non-realizable inputs since robustness against them are equally important. Tong et al. <ref type="bibr" target="#b49">[51]</ref> have shown that robustness against feature-space attacks on non-realizable inputs can be generalized to robustness against realizable attacks.</p><p>Machine. We use a desktop machine for all the experiments. The machine is configured with Intel Core i7-9700K 3.6 GHz 8-Core Processor, 64 GB physical memory, 1TB SSD, Nvidia GTX 1080 Ti GPU, and it runs a 64-bit Ubuntu 18.04 system. To run the genetic evolution attacks, we set up the Cuckoo sandbox with 32 virtual machines running Windows XP SP3 32 bit and Adobe Acrobat Reader 8.1.1. <ref type="bibr" target="#b0">1</ref> Our code is available at https://github.com/surrealyz/pdfclassifier 4.1 Models</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Datasets</head><p>We obtain the PDF malware dataset from Contagio <ref type="bibr" target="#b2">[3]</ref>. The malicious PDFs include web exploit PDFs and email attachments for targeted attacks. We split the dataset into 70% train set and 30% test set, summarized in <ref type="table" target="#tab_4">Table 2</ref>. In total, we have 13K training PDFs and 6K test PDFs. We use the Hidost feature extractor to extract structural paths features, with the default compact path option <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b46">48]</ref>. The input features have 3,514 dimensions, representing all the distinct path features from the training dataset.</p><p>Robustness Properties. In our experiments, we focus on five robustness properties as labeled from A to E in <ref type="table" target="#tab_5">Table 3</ref>. For brevity, we will refer to the four robustness properties as property A (subtree deletion distance one), B (subtree insertion distance one), C (subtree deletion distance two), D (subtree insertion distance 41) and E (subtree insertion distance 42). They are defined in Section 3.1. Every subtree is represented by a continuous range of indices in the binary feature vector, so insertion and deletion can be bounded by a corresponding interval.</p><p>Symbolic Interval Analysis. We implement verifiably robust training using Symbolic Interval Analysis <ref type="bibr" target="#b53">[55,</ref><ref type="bibr" target="#b54">56]</ref> as the sound over-approximation method. Symbolic interval analysis uses intervals to bound the adversarial input range to the model, then propagates the range over the neural network while keeping input dependency. When passing the interval through the non-linearity in the neural network, we do linear relaxation of the input interval, and bound the output interval by two equations <ref type="bibr" target="#b53">[55]</ref>. The analysis tightly over-estimates the output range, which we use to compute the robust loss (Equation 2, Section 2.3.1).</p><p>We parse and manipulate the PDFs using the modified version of pdfrw parser that handles malformed PDF malware <ref type="bibr" target="#b58">[60]</ref>. When a subtree is deleted, the paths it contains and objects with zero reference are deleted. If the subtree contains any object referenced by other nodes, the object still exists along with the other paths. Within the regular training dataset, we have successfully parsed 6,867 training and 3,416 testing PDF malware to train and evaluate the robustness properties. <ref type="table" target="#tab_5">Table 3</ref> shows the number of intervals we extract for each property, separated by training and testing sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Model Architecture and Hyperparameters</head><p>Among the models we evaluate, many are neural networks or have neural networks as the basic component. We use the same model architecture and training hyperparameters for all the neural network models. We follow previous work <ref type="bibr" target="#b26">[28,</ref><ref type="bibr" target="#b27">29,</ref><ref type="bibr" target="#b44">46]</ref> to build a feed-forward neural network with two hidden layers, each with 200 neurons activated by ReLU, and a final layer of Softmax activation. We train all neural network models for 20 epochs, using the Adam Optimizer, with mini-batch size 50, and learning rate 0.01.  <ref type="table">Table 1</ref>: We evaluate our models using seven types of attackers. They represent, two strongest bounded adaptive attackers (Type I), four state-of-the-art unbounded attackers (Type II), and the new adaptive unbounded attacker (Type III). Only attackers <ref type="formula" target="#formula_0">(1)</ref> and <ref type="formula" target="#formula_1">(2)</ref> are restricted by the robustness property. The gradient and MILP attackers ( <ref type="formula" target="#formula_1">(2)</ref>, <ref type="formula" target="#formula_5">(3)</ref>, <ref type="formula">(4)</ref>   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Baseline Models</head><p>Baseline Neural Network. We train the baseline neural network model with the regular training objective (Equation 1, Section 2.3.1), using the regular training dataset <ref type="table" target="#tab_4">(Table 2)</ref>. The model has 99.9% test accuracy and 0.07% false positive rate. The performance is consistent with those reported in PDFrate <ref type="bibr" target="#b45">[47]</ref> and Hidost <ref type="bibr" target="#b46">[48]</ref>  <ref type="figure" target="#fig_1">(Section 2.2)</ref>.</p><p>Adversarially Robust Training. We use the new subtree distance metric to adversarially retrain the neural network. We train five models corresponding to A, B, C, D, and A+B properties. For the deletion properties, we train with deleting one or two entire subtrees; and for the insertion properties, we train with inserting one or 41 full subtrees. The resulting performance of the models are shown in <ref type="table" target="#tab_9">Table 4</ref>. All models have more than 99% accuracy. The Adv Retrain A, B models maintain the same 0.07% FPR as the baseline neural network. The other three models have slightly higher FPR up to 0.15%.</p><p>Ensemble Classifiers. Ensemble methods use multiple learners to boost the performance of the base learner. We implement two ensemble classifiers.</p><p>Ensemble A+B. The provable robustness property is, if a PDF variant is generated by subtree insertion bounded by distance one to a PDF, the variant has the same prediction as the original PDF. The ensemble classifies the PDF as malicious, if an arbitrary full subtree deletion results in malicious class by the base learner. We augment the regular training dataset with an arbitrary subtree deleted from both malicious and benign PDFs, which maintains the performance for original PDFs because they also need to be tested under multiple deletion operations. Ensemble A+B achieves 99.87% accuracy and 0.26% FPR.</p><p>Ensemble D. The provable robustness property is, if a PDF variant is generated by inserting up to 41 subtrees in a PDF, it has the same prediction as the original PDF. For the base learner, we train a neural network to classify the original malicious and benign PDFs as if they were generated by up to 41 subtree insertions. Consequently, we augment the training dataset by keeping one subtree from all PDFs to train the base learner. To build the ensemble, we test every single subtree of the unseen PDFs, and predict the malicious class if any subtree is classified as malicious. The Ensemble D model has 99.96% accuracy and 0.07% FPR.</p><p>Monotonic Classifiers. Monotonic classifiers <ref type="bibr" target="#b30">[32]</ref> are the most related work to ours. We follow Incer et al. <ref type="bibr" target="#b30">[32]</ref> to use Gradient Boosted Decision Trees <ref type="bibr" target="#b13">[15]</ref> with monotonic constraint. After comparing different tree depths, we find that the results do not significantly differ in this dataset. Therefore, we train multiple monotonic classifiers with different number of learners (10, 100, 1K, and 2K), where each learner is a decision tree of depth 2. The classifiers are named by the number of learners they have <ref type="table" target="#tab_9">(Table 4</ref>). The monotonic classifiers have an average of 99% accuracy and under 2% FPR, which shows much better performance in a small Contagio dataset compared to results in <ref type="bibr" target="#b30">[32]</ref>. Since monotonic property is such a strong enforcement for the classifier's decision boundaries, the malware classifier in <ref type="bibr" target="#b30">[32]</ref> has 62% temporal detection rate over a large scale dataset containing over 1.1 million binaries.</p><p>Note that the ensembles and monotonic classifiers are the only models we train with properties for both malicious and benign PDFs. For all the other models, we train properties for only malicious PDFs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">Verifiably Robust Models</head><p>Robust Training. We train seven verifiably robust models and name them with the properties they are trained with. We use the same model architecture and the same set of hyperparameters as the baseline neural network model (Section 4.1.2). During training, we optimize the sum of the regular loss and the robust loss in each epoch, as defined in Equation 3. At the minibatch level, we randomly mix batches belonging to different properties. For example, to train the Robust A+B model, we do mixed training for regular accuracy, the insertion property, and the deletion property alternately by mini-batches, in order to obtain two properties as well as high accuracy in the same model. The left side of <ref type="table" target="#tab_9">Table 4</ref> contains the test accuracy (Acc), false positive rate (FPR), and training time for the models.</p><p>Training Time. The robust models with insertion properties (Robust B, Robust D, Robust A+B, Robust A+B+E) took more than an hour to train, since they have significantly more intervals <ref type="table" target="#tab_5">(Table 3</ref>) than deletion properties. On the contrary, Robust A and Robust C models can be trained by 11 and 25 minutes, respectively. The average training time for each mini-batch is 0.036s. Efficiently scaling the number of training points, input dimension, and network size can be achieved by techniques from <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b51">53,</ref><ref type="bibr" target="#b57">59]</ref>.</p><p>Accuracy and FPR. All the robust models, except the Robust D model, can maintain over 99% test accuracy while obtaining verifiable robustness. Robust D model dropped the test accuracy only a little to 98.96%. Training robustness properties increased the false positive rates by under 0.5% for Robust A, B, and A+B models, which are acceptable. For models C and D, the false positive rates increased to 1.04% and 2.3% respectively. Models with property E (Robust E and Robust A+B+E), have FPR 1.93% and 1.89%, similar to those of the monotonic classifiers. The false positive rate increases more for the insertion properties (B and E) than the subtree deletion property (A). The FPR is also larger for a bigger distance under the same type of operation (C vs A, and D vs B).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Bounded Arbitrary Attacker</head><p>Strongest Possible Bounded Attacker. The bounded arbitrary attacker has access to everything <ref type="table">(Table 1)</ref>. The attacker can do anything to evade the classifier, under the restriction that attacks are bounded by the robustness properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Results</head><p>We formally verify the robustness of the models using symbolic interval analysis to obtain VRA, over all the 3,461 testing malicious PDFs <ref type="table" target="#tab_5">(Table 3)</ref>. For example, 99% VRA for property B means that, 99% of 3,416 test PDFs will always be classified as malicious, for arbitrary insertion attacks restricted by one of the subtrees under the PDF root. No matter how powerful the attacker is after knowing the defense, she will not have more than 1% success rate. <ref type="table" target="#tab_9">Table 4</ref> shows all the VRAs for the baseline models and verifiably robust models. Our key observations are as follows.</p><p>Baseline NN: It has robustness for the deletion properties, but not robust against insertion.</p><p>Adversarially Robust Training: All adversarially retrained models can increase the VRAs for deletion properties, except Adv Retrain B model. Adv Retrain B model is trained with insertion at distance one, which shows conflict with the deletion properties and decreased VRAs for property A and C, compared to the baseline NN. Adv Retrain C achieves the highest VRAs for both property A and C.</p><p>Ensemble Classifiers: We conduct the interval analysis according to the ensemble setup, described in Appendix A.1. Ensemble A+B has 97% and 99% VRAs for property A and B, respectively. However, the VRA for property C is only 7% and the VRA is zero for property D and E. On the other hand, Ensemble D does not have VRA for any property, despite the ensemble setup. Since the the base learner in Ensemble D needs to classify an arbitrary subtree after certain deletion and insertion operations, it is not enough to gain VRA by learning specific subtree from the training dataset.</p><p>Monotonic Classifiers: All the monotonic classifiers have insertion VRAs that are the same as the test accuracy, due to the monotonic constraints enforced during the training time. Except the model with 10 learners, all the models have over 99% VRAs for properties B, D, and E. We utilize the monotonic property of the models to find lower bound of deletion VRAs. For property A, we verify the classifier's behavior on a malicious test PDF, if every possible mutated PDF with an arbitrary full subtree deletion is always classified correctly. Since the original malicious PDF features are larger, based on the monotonic property, any partial deletion will also result in malicious classification for these PDFs. This gives us between 5.74% and 8.78% VRAs for the monotonic classifiers under property A. Similarly, by testing the lower bound of two subtree deletion, we verify the monotonic classifiers to have 0 VRA for property C.</p><p>Verifiably Robust Models: We can increase the VRA from as low as 0% to as high as 99%, maintaining high accuracy, with under 0.6% increase in FPR in properties A and B.</p><p>Training a model with one robustness property can make it obtain the same type of property under a different distance. For example, Robust A model is trained with property A (distance one), but it has also gained VRA in property C (distance two), that is higher than the baseline NN model.</p><p>If we only train one type of property at a time, the other properties may be lost. For example, Robust B and Robust D models both have decreased VRA in the deletion property, compared to the baseline NN model. This indicates the conflicts between training for different tasks in general.</p><p>The strongest models according to the VRA evaluation are Ensemble A+B, monotonic classifiers, Robust A+B, and Robust A+B+E. While Adv Retrain A+B has slightly lower VRA than Adv Retrain C, it is more robust against unrestricted gradient attack <ref type="bibr">(Appendix A.3</ref>) since it is trained with more properties. Robust A+B has slightly lower VRA in property B than the monotonic and ensemble baselines, but it has 85.28% VRA for property C. Robust A+B+E has gained VRA in all prop-  <ref type="table" target="#tab_9">Table 4</ref>: The verified robust accuracy (VRA) computed from 3,461 test PDF malware. The name of the monotonic classifier represents the number of trees in the model. For the other models, the name for the model corresponds to the property it is trained with. Although monotonic classifiers have higher VRA for insertion properties (B, D, E), Robust A+B and Robust A+B+E have strong VRA in both insertion and deletion properties, and therefore they are more robust against unrestricted attacks (Section 4.3 to Section 4.7).</p><p>erties. Although the monotonic classifiers have higher VRA in insertion properties, since Robust A+B and Robust A+B+E have strong VRA in both insertion and deletion properties, they are more robust against unrestricted attacks than the monotonic classifiers, as shown by the results in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Gradient Attackers</head><p>The gradient attacker has perfect knowledge, but the evasive feature vector found by the attack may not correspond to a real evasive PDF. We implement bounded and unbounded gradient attackers to evaluate the ERA for all neural network models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Implementation</head><p>State-of-the-art Bounded Attacker. We implement the bounded gradient attacker for each robustness property. For example, for property B, we first choose an arbitrary subtree from the PDF malware seed. Then, we take the gradient of the benign label with regard to the input feature, and increase the feature for the input index with the highest gradient value. We repeat this until either an evasion instance is found or the whole bounded region is inserted to be ones. If any of the subtree choices succeeds, the attack can succeed for the malware seed within the property. Similarly, we perform the bounded gradient attacks for the other properties.</p><p>State-of-the-art Unbounded Attacker. We implement the unbounded gradient attacker that performs arbitrary insertion and deletion guided by gradients, unrestricted by all robustness   <ref type="table" target="#tab_9">Table 4</ref> are the lower bound of ERA values.</p><p>properties. The attack stops when all evasive instances are found, or until 200,000 iterations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Results</head><p>Bounded Gradient Attack. We evaluate the ERA restricted by each robustness property. Since VRA overapproximates possible attacks, VRA is the lower bound for the ERA against any specific attack. We show the ERA for the most representative models in <ref type="table" target="#tab_8">Table 5</ref>, with further details in Appendix A.2. All the ERA numbers are higher than the corresponding VRA in  is not effective at evading this model, since the attack could have used the solution from property B to reduce the ERA for the other two properties to at least 84.6%. Although Adv Retrain A+B has a higher ERA in property D and E against the gradient attack than the Robust A+B model, both models have 0 VRA in these properties. Since there always exist stronger attacks that can reduce the ERA <ref type="bibr" target="#b52">[54]</ref>, VRA provides a stronger robustness guarantee than ERA. Unbounded Gradient Attack. Our verifiably robust model can improve the ERA against the unrestricted gradient attack by 7% up to 200,000 iterations. <ref type="table" target="#tab_10">Table 7</ref> shows the attack results on five representative models. The unrestricted gradient attack can reduce the ERA for three models to 0 given enough allowable L 0 distance in feature changes. Baseline NN is the first to reach 0 ERA at L 0 = 19, whereas Robust A+B+E requires the largest L 0 distance (68) to reach 0 ERA. For the other three models, Robust A+B is the most robust one. It maintains 7.38% ERA even after 200,000 attack iterations. The ERA converges for Adv Retrain A+B, Robust D and Robust A+B models against the unrestricted gradient attack <ref type="bibr">(Appendix A.3.2)</ref>. Further details about the attack can be found in Appendix A.3.</p><p>We convert the evasive feature vectors to real PDFs. Given each feature index change, we either delete the corresponding PDF object, or insert the object with minimal number of children in the benign training dataset. Inserting object with minimal children makes the features from constructed PDF close to the evasive features. On average, the ERA of models against the real evasive PDF malware is 94.25%, much higher than 0.62% ERA against evasive feature vectors, since unrestricted gradient attack often breaks the PDF semantics <ref type="bibr">(Appendix A.4)</ref>. Due to the inherent limitation of feature-space attacks, we also evaluate robustness of the models against realizable attacks from Section 4.5 to Section 4.7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">MILP Attacker</head><p>State-of-the-art Unbounded Attacker. The Mixed Integer Linear Program (MILP) attacker is the unbounded whitebox attacker for the GBDT monotonic classifiers, proposed by Kantchelian et al. <ref type="bibr" target="#b31">[33]</ref>. The attack formulates the evasion problem as a Mixed Integer Linear Program. The variables in this program are predicates and leaves in all the decision trees. We set the objective of the linear program to minimize the L 0 distance between the seed malware feature vector and the variant vector. The constraints to solve the linear program include model misclassification, consistency among leaves and predicates, and several variables being integer. The solution to the MILP represents the malware feature vector manipulation. We use the re-implementation from <ref type="bibr" target="#b12">[14]</ref> to conduct the MILP attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1">Result</head><p>The MILP attack can succeed for all the 3416 test malicious PDFs against all four monotonic classifiers. We plot the ERA values with different L 0 distance (number of feature changes) in <ref type="figure">Figure 3</ref>. The Monotonic 10 model is the weakest among them. With only 2 feature deletion, 10% of PDFs can be evaded, e.g., deleting /Root/Names/JavaScript/Names and /Root/Names/JavaScript/Names/JS/Filter. Everything can be evaded by up to six feature changes for the 10 learner model. Using 100 learners can increase the L 0 distance for evasion. However, using more learners does not increase the robustness after 100 learners. All the monotonic classifiers can be evaded by up to 15 feature changes. In comparison, when L 0 = 15, the ERA for Robust A+B is 10.54%. Under different whitebox attacks, Robust A+B is more robust than the monotonic classifiers.</p><p>After converting the evasive feature vectors to real PDFs, none of them are still malicious, since the MILP attack deletes the exploit <ref type="bibr">(Appendix A.4</ref>). Next, we will evaluate the strongest models against unrestricted black box attacks that ensure the maliciousness of evasive PDF variants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Enhanced Evolutionary Attacker</head><p>State-of-the-art Unbounded Attacker. The enhanced evolutionary attacker has black-box oracle access to the model, including the classification label and scores, and she is not bounded by the robustness properties. The attack is based on the genetic evolution algorithm <ref type="bibr" target="#b59">[61]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">Implementation</head><p>The genetic evolution attack evades the model prediction function by mutating the PDF malware, using random deletion, insertion, and replacement, guided by a fitness function. We implemented two strategies to enhance the evolutionary attack, with details and the experiment set up in Appendix A.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Results</head><p>Within the 500 PDF malware seeds that exhibit network behavior from previous work <ref type="bibr" target="#b59">[61]</ref>, we can detect 495 PDFs with signatures using our cuckoo sandbox. All the PDF malware seeds belong to the testing PDF set in <ref type="table" target="#tab_4">Table 2</ref>. By round robin, we go through the list of randomly scheduled PDFs by rounds of attacks, until all of them are evaded.</p><p>We run the attack on the best baseline and robust models: Baseline NN, Adv Retrain A+B, Ensemble A+B, Monotonic Classifiers, Robust A+B, and Robust A+B+E. For four models without property E, the attack has succeeded in generating evasive variants for all PDF seeds. It takes between three days to two weeks to evade each model. The attack is not effective against monotonic classifier and Robust A+B+E model. Although the attack can identify that deletion is preferred to evade the models, sometimes it deletes the exploit. We design adaptive evolutionary attacks to evade these models in Section 4.7.</p><p>L 0 distance. The enhanced evolutionary attack needs up to 3.6 times larger L 0 distance, and 21 times more mutations <ref type="bibr">(Appendix A.6)</ref> to evade our robust model than the baselines. We plot the ERA for different models under various L 0 distances to generate evasive PDF variants in <ref type="figure">Figure 4</ref>. For hidost features, the L 0 distance also means the number of feature changes. To evade the baseline NN model, at least 49 features need to be changed. The ERA of the model quickly drops to zero at 133 features. The Adv Retrain A+B and Ensemble A+B both require more changes to be fully evaded, up to 252 and 300 respectively. Compared to these baselines, our Robust A+B model needs the most number of feature changes (475) to be evaded, 3.6 times of that against the Baseline NN. The smallest L 0 distances to generate one evasive PDF malware variant are 49, 39, 134, and 159 for Baseline NN, Adv Retrain A+B, Ensemble A+B, and Robust A+B, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Reverse Mimicry Attacker</head><p>State-of-the-art Unbounded Attacker. The reverse mimicry attacker injects malicious payload into a benign PDF, which is outside of all five robustness properties. We have proposed robustness properties for malicious PDFs, not benign ones. The attacker uses the same strategy for all models, and thus she does not need to know model internals or the defenses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.1">Implementation</head><p>We implement our own reverse mimicry attack, similar to the JSinject <ref type="bibr" target="#b38">[40]</ref>. We use peepdf <ref type="bibr" target="#b5">[6]</ref> static analyzer to identify the suspicious objects in the PDF malware seeds, and then inject these objects to a benign PDF. We inject different malicious payload into a benign file, whereas the JSinject attack injects the same JavaScript code into different benign PDFs. Within the PDF malware seeds, 250 of them retained maliciousness according to the cuckoo oracle. Some payload are no longer malicious because there can be object dependencies within the malware not identified by the static analyzer. We test whether the models can detect the 250 PDFs are malicious.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6.2">Results</head><p>We measure ERA as the percentage of correctly classified PDFs for the strongest models against whitebox attacks in <ref type="table">Table 6</ref>. Since this is outside all five robustness properties, the attack can defeat most verifiably robust models and baseline models, except the monotonic classifier and Robust A+B+E models. The monotonic classifier has the monotonic constraint enforced for the benign PDFs, whereas we only trained property E for malicious PDFs for our Robust A+B+E model. However, we still achieve 2% higher ERA than the Monotonic 100 model against the reverse mimicry attack. This shows that verifiably robust training can generalize outside the trained robustness properties. Since training property E incurs higher FPR than properties with smaller subtree distances, we plan to experiment with training insertion property with small distance for benign samples as future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">Adaptive Evolutionary Attacker</head><p>New Adaptive Unbounded Attacker. The adaptive evolutionary attacker has the same level of black-box access as the enhanced evolutionary attacker (Section 4.5). She is not bounded by the robustness properties and knows about the defense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7.1">Implementation</head><p>To evade the three strongest models: the monotonic classifier, Robust A+B, and Robust A+B+E, we design three versions of the adaptive attacks as following.</p><p>Move Exploit Attack. The monotonic property forces the attacker to delete objects from the malware, but deletion could remove the exploit. Therefore, we implement a new mutation to move the exploit around to different trigger points in the PDF <ref type="bibr">(Appendix A.7)</ref>. This attack combines the move exploit mutation with deletion to evade the monotonic classifier. Note that the move exploit mutation is not effective against Robust A+B, since it is covered by the insertion and deletion properties.</p><p>Scatter Attack. To evade Robust A+B, we insert and delete more objects under different subtrees. We keep track of past insertion and deletion operations separately, and prioritize new insertion and deletion operations to target a different subtree.</p><p>Move and Scatter Combination Attack. To evade the Robust A+B+E model, we combine the move exploit attack and the scatter attack, to target all the properties of the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7.2">Results</head><p>The adaptive attacks need 10 times larger L 0 distance ( <ref type="figure" target="#fig_2">Figure 5</ref>), and 3.7 times more mutations <ref type="bibr">(Appendix A.6</ref>) to evade our model than the monotonic classifier. <ref type="figure" target="#fig_2">Figure 5</ref> shows the L 0 distance to evade the three models: Monotonic 100, Robust A+B, and Robust A+B+E. The move exploit attack is very effective against the Monotonic 100 model. The ERA of Monotonic 100 quickly drops to zero at L 0 = 10. The scatter attack can reduce the mutation trace length to evade Robust A+B compared to the nonadaptive version. However, the median L 0 distance has increased from 228 ( <ref type="figure">Figure 4</ref>) to 289 ( <ref type="figure" target="#fig_2">Figure 5</ref>). The minimal L 0 distances to generate one evasive PDF malware for the Monotonic 100 and Robust A+B are 1 and 263 respectively. Lastly, the move and scatter combination attack can reduce the ERA of Robust A+C+E to 44% after running for three weeks. The attack is stuck at premature convergence and needs additional improvements to fully evade the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>Generalization. In the arms race against malware detection and evasion, there has been no verifiably robust solution to the detection problem. By setting bounds on attackers' actions, we can provide verifiable robustness properties in PDF malware classifiers. We further show that such robust training can also increase the bar for state-of-the-art unbounded attackers. Since we specify robustness properties related to the PDF syntax, they can be generalized to different features, datasets, and models. Our method can be complementary to other defenses such as feature reduction. We plan to explore all these issues regarding the generalization of our methodology in our future work.</p><p>Scalability. Verifiably robust training using symbolic interval analysis is faster than existing sound approximation methods, achieving state-of-the-art tight bounds. Many techniques can scale the training to larger neural networks with hundreds of thousands of hidden units, and larger datasets such as ImageNet-200 <ref type="bibr" target="#b25">[27,</ref><ref type="bibr" target="#b51">53,</ref><ref type="bibr" target="#b53">55,</ref><ref type="bibr" target="#b57">59]</ref>. We plan to explore the tradeoffs between scalability and performance (e.g., accuracy, robustness, and false positive rate) of the trained network.</p><p>Diverse Robustness Properties. The robustness properties for insertion and deletion can be used as building blocks to construct stronger properties. Training combinations of properties can make the evasion task even harder for the attacker. In addition, we plan to train verifiable robustness properties for benign PDFs, to defend against another type of evasion search that starts from a benign PDF seed. Exploring the tradeoffs among learning multiple robustness properties and overhead of training will be an interesting direction for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Existing defenses in increasing the robustness of malware classifiers mainly focus on using feature reduction and adversarially robust retraining. Researchers have employed methods including mutual information <ref type="bibr" target="#b26">[28]</ref>, expert domain knowlege <ref type="bibr" target="#b30">[32]</ref>, information from cuckoo sandbox <ref type="bibr" target="#b49">[51]</ref> to remove features unrelated to maliciousness. However, previous adversarial retraining results show severe drop in accuracy <ref type="bibr" target="#b30">[32]</ref>, and increase in false positive rate <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b26">28]</ref>.</p><p>Incer et al.</p><p>[32] enforced the monotonicity property to make the malware classifier robust against attacks that increase feature values. Thus, attackers have to conduct more expensive feature manipulation that might remove the malicious functionality. In comparison, we train robustness properties not only for insertion, but also for deletion, since deletion operations are often not costly to the attacker <ref type="bibr" target="#b59">[61]</ref>.</p><p>Our method can increase the feature distance and mutation trace length as cost for the attacker to evade the model. Existing works have discussed cost for the attackers to manipulate features <ref type="bibr" target="#b36">[38]</ref>, to increase suspiciousness <ref type="bibr" target="#b14">[16]</ref>, and to solve the combinatorial optimization problem <ref type="bibr" target="#b15">[17]</ref>. On the other hand, several work have explored the cost for the defender <ref type="bibr" target="#b17">[19,</ref><ref type="bibr" target="#b60">62]</ref>. <ref type="bibr">Dreossi et al. [19]</ref> argued that only some adversarial examples cause the overall control system to make catastrophic decision. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>We are the first to train verifiable robustness properties for PDF malware classifier. We proposed a new distance metric in the PDF tree structure to bound robustness properties. Our best model achieved 99.68% and 85.28% verified robust accuracy (VRA) for the insertion and deletion properties, while maintaining 99.74% accuracy and 0.56% false positive rate. Our results showed that training security classifiers with verifiable robustness properties is a promising direction to increase the bar for unrestricted attackers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Appendix</head><p>A.1 VRA for Ensemble Classifiers A.1.1 Ensemble A+B VRA Property A. A test PDF is verified to be safe within property A, if all the possible subtree deletion with distance one is safe. Therefore, for each interval representing one subtree deletion, we require that any of the corresponding two subtree deletion is classified as malicious.</p><p>Property B. Property B is the provable robustness property of Ensemble A+B. If any mutated PDF is generated by inserting one arbitrary subtree to a malicious PDF, it has the same classification result as the malicious PDF seed. Therefore, we use the test accuracy of malicious PDFs as the VRA for property B.</p><p>Property C. A test PDF is verified to be safe within property C, if all the possible subtree deletion with distance two is safe. Therefore, for each interval representing two subtree deletion, we require that any of the corresponding three subtree deletion is classified as malicious.</p><p>Property D. A test PDF is verified to be safe within property D, if all the possible subtree insertion at distance 41 is safe. Therefore, we test whether any interval representing 40 subtree insertion on a malicious test PDF can be classified as malicious.</p><p>Property E. A test PDF is verified to be safe within property E, if all the possible subtree insertion in the entire feature space is safe. Therefore, we test whether any interval representing all-but-one (41) subtree insertion on a malicious test PDF can be classified as malicious.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1.2 Ensemble D VRA</head><p>Property A and C. A test PDF is verified to be safe for a deletion property, if any subtree after some deletion is classified as malicious. Therefore, for each test PDF, we check whether any interval representing the lower bound of all zeros and the upper bound of the original subtree can be classified as malicious.</p><p>Property B, D and E. A test PDF is verified to be safe for a insertion property, if any subtree after some insertion is classified as malicious. There are two categories. If the inserted subtree does not exist, the interval is from all zeros and all ones for that subtree. If the inserted subtree already exists, the interval bound is from the original subtree features to all ones. We check if any of these intervals can be classified as malicious for all possible insertions.  <ref type="figure">Figure 7</ref>: Unrestricted gradient attack against our verifiably robust models. <ref type="figure">Figure 6</ref> shows the ERA of the Baseline NN and adversarially retrained models against unrestricted gradient attack. Most adversarially retrained models perform similar to the Baseline NN. Adv Retrain A+B is most robust among them according to the ERA curve. The ERA drops more slowly as the L 0 distance increases compared to the other models. <ref type="figure">Figure 7</ref> shows the ERA of verifiably robust models against unrestricted gradient attack. Robust A+B performs the best among them, maintaining 7.38% ERA after 200,000 attack iterations. We run the unrestricted gradient attack for 200,000 iterations, and plot the ERA for the first 50,000 iterations.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 ERA under Bounded Gradient Attack</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.2 Convergence</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4 Real PDFs from Unrestricted Gradient Attack</head><p>Within the 3,416 evasive PDF vectors, we convert 495 of them back to real PDFs, i.e., those with network signature that can be detected by the cuckoo sandbox. Then, we measure the ERA for features extracted from the real PDFs as the 3rd column in <ref type="table" target="#tab_15">Table 9</ref>. Furthermore, we check how many of these PDFs are still malicious using the cuckoo sandbox. Then we measure the ERA against the end-to-end attack that generates malicious PDFs, as the last column in <ref type="table" target="#tab_15">Table 9</ref>.</p><p>Although the neural network models have an average of 0.62% ERA against evasive feature vectors, that increases to 35.23% if we enforce that they classify the corresponding PDF files. The average ERA further increases to 94.25% if we require that the generated PDFs are malicious.</p><p>For monotonic classifiers, the average ERA against evasive feature vectors is 0%, which increases to 100% if we require the corresponding evasive PDF to be malicious. This is because the MILP solver always finds the action that deletes the exploit to evade the monotonic property.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5 Genetic Evolution Attack</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5.1 Fitness Function</head><p>To construct the fitness function for neural network, we take the output of softmax as the classification scores for malicious and benign classes, and compute log (benign) 񮽙  log(malicious). This helps prioritize PDF variants with very small prediction changes in the floating point number. When the fitness score reaches zero, the attack succeeds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5.2 Two Improvement Strategies</head><p>First, we improve the effectiveness of insertion and replacement operations. Insertion and replacement use external genomes (subtrees) from benign PDFs. The original operations generate a lot of different PDF malware, but not as many different feature inputs to the neural network, because they don't affect valid Hidost paths in the feature space. Therefore, we use a trie to index the external benign genomes with valid feature paths. Given an insertion/replacement point in the PDF malware, we select a genome that shares the same prefix from the trie, to effectively change the input features to the neural network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>USENIX</head><p>Second, we implement a more diverse selection strategy for every generation of the PDF variants. Diversity is crucial to avoid the evolutionary algorithm being stuck at premature convergence. We keep all the variants that survived from the previous generation, as in the original implementation. However, for those variants that are no longer malicious according to the cuckoo sandbox, we find replacement for them equally by three shares. The first share selects the best historical variant. The second share selects the historical variants with distinct highest fitness scores, since distinct scores show that the variants explored different mutation paths in the search space. The last share randomly selects from a pool of historical variants from the last four generations as well as the original seed, since randomness helps the search process explore more diverse paths that could lead to the solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5.3 Experiment Setup</head><p>Following Xu et al. <ref type="bibr" target="#b59">[61]</ref>, we use the same parameters for the attack: 48 variants as the size of the population for each generation, a maximum of 20 generations per PDF for each round, 0.0 fitness stop threshold, and 0.1 mutation rate. We select four PDFs with the most benign classification scores as the external benign genomes, containing a total of 42,629 PDF objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.6 Trace Length of Evolutionary Attacks</head><p>Enhanced Evolutionary Attack. We measure the shortest mutation trace lengths needed to generate all the PDF variants. <ref type="figure" target="#fig_5">Figure 9</ref> shows how ERA decreases as the length of mutation trace increases. The Baseline NN is the easiest to evade. One mutation drops the ERA to 0.4%. Two mutations are sufficient to evade the Baseline NN for all PDF seeds. The Adv Retrain A+B and Ensemble A+B models perform better than the Baseline NN. They can be evaded by up to 6 and 7 mutations respectively. The Robust A+B requires most number of mutations to evade compared to all other models. Robust A+B model has higher VRA in property C than the Ensemble A+B model <ref type="table" target="#tab_9">(Table 4)</ref>, which further increases the mutation trace length to evade the model. The attack needs 15 mutations to succeed in 63% of PDF seeds, and 43 mutations to succeed in all seeds for Robust A+B. Since we can verify that Robust A+B is robust against basic building block attack operations (insertions and deletions), unrestricted attacks consisting of the building block operations are harder to succeed.</p><p>Adaptive Evolutionary Attacks. We measure the mutation trace length to evade the three models: Monotonic 100, Robust A+B, and Robust A+B+E. The move exploit attack is very effective against the Monotonic 100 model. A single move operation can decrease the ERA of the model to 29.70%, e.g., moving the exploit from /Root/OpenAction/JS to /Root/Pages/Kids/AA . On the other hand, the scatter attack can reduce the median mutation trace length needed to evade Robust A+B from 11 to 8 compared to the nonadaptive version ( <ref type="figure" target="#fig_5">Figure 9</ref>). The move and scatter combination attack can reduce the ERA of Robust A+B+E to 44% with up to 14 mutations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.7 Move Exploit</head><p>We use the static analyzer peepdf <ref type="bibr" target="#b5">[6]</ref> and manual analysis to identify the following exploit triggers.</p><p>• /Root/Pages/Kids/AA</p><p>• /Root/Names/JavaScript/Names</p><p>• /Root/OpenAction/JS</p><p>• /Root/StructTreeRoot/JS The move mutation operation identifies whether the PDF variant has object under one of the paths, then randomly selects one of the target paths to move the object to. Compared to the reverse mimicry, the move operation works much better by preserving many references (e.g., function names) in the same PDF.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The objects and trailer, parsed PDF tree structure, and extracted Hidost features from an example PDF malware.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Different types of attackers in our evaluation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: The decrease of robustness in ERA against adaptive evolutionary attacks as the L 0 distance increases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Zhang et al. [62] integrated the defender's cost with Wong et al.'s verifiably robust training method [58].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: The ERA of three models converges against the unrestricted gradient attack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Trace length for enhanced evolutionary attack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Trace length for adaptive evolutionary attacks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><head>Table 2 : The Contagio [3] dataset used for regular training.</head><label>2</label><figDesc></figDesc><table>Training 
Testing 
Robustness Property 
Intervals Intervals 
A: Subtree Deletion Distance 1 
30,655 
15,672 
B: Subtree Insertion Distance 1 
288,414 
143,472 
C: Subtree Deletion Distance 2 
62,445 
33,711 
D: Subtree Insertion Distance 41 
288,414 
143,472 
E: Subtree Insertion Distance 42 
6,867 
3,416 
Training 
Testing 
Number of PDF Malware 
6,867 
3,416 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>Five robustness properties and the corresponding num-
ber of intervals used to train and test VRA. The intervals are 
extracted from 6,867 training and 3,416 testing PDF malware. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>Table 5 :</head><label>5</label><figDesc>ERA under bounded gradient attack. The correspond- ing VRAs in</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="false"><head>Table 4 .</head><label>4</label><figDesc>For the Adv Retrain A+B model, the gap between VRA and ERA is quite large. While it has 0 VRA for property B and D (Table 4), the ERA values under bounded gradient attack are 84.6% and 87.3% respectively. One interesting observation is that the ERA of property E is higher than property D, which is also higher than property B. It shows that the greedy algorithm (gradient</figDesc><table>Model 

ERA (%) 
Baseline NN 
0 
Adv Retrain A+B 
0 
Ensemble A+B 
0 
Monotonic 100 
48.8 
Robust A+B 
0 
Robust A+B+E 
50.8 
Table 6: ERA under reverse 
mimicry attack. Robust A+B+E 
is the most robust one. 

• 

• 
• 
• 

• 
• 
• 
• 
• 

0.00 

0.25 

0.50 

0.75 

1.00 

0 
5 
10 
15 
L 0 

ERA 

• 

Monotonic 10 
Monotonic 100 
Monotonic 1K 
Monotonic 2K 

Figure 3: MILP attack: the monotonic 
classifiers can be evaded by up to 15 feature 
changes. 

0.00 

0.25 

0.50 

0.75 

1.00 

0 
100 
200 
300 
400 
L 0 

ERA 

Baseline NN 
Adv Retrain A+B 
Ensemble A+B 
Robust A+B 

Figure 4: Enhanced evolutionary attack: Ro-
bust A+B requires up to 3.6 times larger L 0 dis-
tance to be evaded compared to the baselines. 

L 0 for ERA (%) at 200K 
Model 
ERA=0 
attack iterations 
Baseline NN 
19 
0 
Adv Retrain A+B 
N/A 
0.32 
Robust A 
36 
0 
Robust D 
N/A 
0.03 
Robust A+B 
N/A 
7.38 
Robust A+B+E 
68 
0 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_10" validated="false"><head>Table 7 :</head><label>7</label><figDesc></figDesc><table>Robust A+B model maintains 7% higher ERA against 
the unrestricted gradient attack than the other five models. 

descent) </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_11" validated="false"><head>Table 8 shows precision, recall of the models on the left side, and the ERA under gradient attacks bounded by robustness properties on the right side. All verifiably robust models main- tain high precision and recall. The ERA values of the</head><label>8</label><figDesc></figDesc><table>models 
are higher than the corresponding VRA values in Table 4. 

A.3 Unrestricted Gradient Attack Result 

A.3.1 ERA 

0.00 

0.25 

0.50 

0.75 

1.00 

1 
10 
100 
1000 3514 
L 0 

ERA 

Baseline NN 
Adv Retrain A 
Adv Retrain B 
Adv Retrain C 
Adv Retrain D 
Adv Retrain A+B 

Figure 6: Unrestricted gradient attack against baseline models. 

0.00 

0.25 

0.50 

0.75 

1.00 

1 
10 
100 
1000 3514 
L 0 

ERA 

Robust A 
Robust B 
Robust C 
Robust D 
Robust E 
Robust A+B 
Robust A+B+E 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13" validated="false"><head>Table 8 :</head><label>8</label><figDesc></figDesc><table>The estimated robust accuracy (ERA) against bounded gradient attacker, computed from 3,461 testing PDF malware, 
over five robustness properties. *We run bounded gradient attack against the base learner of ensemble models. 

Figure 8 shows that the unrestricted gradient attack converges 
for Adv Retrain A+B, Robust D, and Robust A+B models. The 
ERA of Robust D model stays the same after 49,128 attack 
iterations, and the ERA of Robust D A+B model stays the same 
after 60 attack iterations. For Adv Retrain A+B, the ERA only 
decreases very slowly between 30,000 and 200,000 iterations. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15" validated="false"><head>Table 9 :</head><label>9</label><figDesc></figDesc><table>ERA according to feature vectors, corresponding 
PDFs, and corresponding malicious PDFs. 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We thank our shepherd Nicolas Papernot and the anonymous reviewers for their constructive and valuable feedback. This work is sponsored in part by NSF grants CNS-18-42456, CNS-18-01426, CNS-16-17670, CNS-16-18771, CCF-16-19123, CCF-18-22965, CNS-19-46068; ONR grant N00014-17-1-2010; an ARL Young Investigator (YIP) award; a NSF CAREER award; a Google Faculty Fellowship; a Capital One Research Grant; and a J.P. Morgan Faculty Award. Any opinions, findings, conclusions, or recommendations expressed herein are those of the authors, and do not necessarily reflect those of the US Government, ONR, ARL, NSF, Google, Capital One or J.P. Morgan.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Adversarial Machine Learning: Are We Playing the Wrong Game?</title>
		<ptr target="https://speakerdeck.com/evansuva/adversarial-machine-learning-are-we-playing-the-wrong-game" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Toolset for extracting document structures from PDF and SWF files</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hidost</surname></persName>
		</author>
		<ptr target="https://github.com/srndic/hidost" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">800 clean and 11,960 malicious files for signa</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parkour</surname></persName>
		</author>
		<ptr target="http://contagiodump.blogspot.com/2013/03/16800-clean-and-11960-malicious-files.html" />
		<imprint>
			<biblScope unit="volume">16</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">355+ malicious documents -archive for signature testing and research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parkour</surname></persName>
		</author>
		<ptr target="http://contagiodump.blogspot.com/2010/08/malicious-documents-archive-for.html" />
		<imprint>
			<date type="published" when="2011-04-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Automatically Evading Classifiers (including Gmail&apos;s)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ndss</forename><surname>Talk</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Powerful Python tool to analyze PDF documents</title>
		<ptr target="https://github.com/jesparza/peepdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">DREBIN: Effective and Explainable Detection of Android Malware in Your Pocket</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Arp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Spreitzenbarth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hubner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Gascon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Rieck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Siemens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Ndss</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="23" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Obfuscated gradients give a false sense of security: Circumventing defenses to adversarial examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Athalye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Carlini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.00420</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The base-rate fallacy and its implications for the difficulty of intrusion detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Axelsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th ACM Conference on Computer and Communications Security</title>
		<meeting>the 6th ACM Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Evasion attacks against machine learning at test time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Biggio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Corona</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Maiorca</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Šrndi´cšrndi´c</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Laskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Giacinto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Roli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Joint European conference on machine learning and knowledge discovery in databases</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="387" to="402" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mitigating evasion attacks to deep neural networks via region-based classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">Z</forename><surname>Gong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 33rd Annual Computer Security Applications Conference</title>
		<meeting>the 33rd Annual Computer Security Applications Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="278" to="287" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Towards evaluating the robustness of neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Carlini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Security and Privacy (SP)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="39" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Robust decision trees against adversarial examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Boning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-J</forename><surname>Hsieh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Xgboost: A scalable tree boosting system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd acm sigkdd international conference on knowledge discovery and data mining</title>
		<meeting>the 22nd acm sigkdd international conference on knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="785" to="794" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Practical attacks against graph-based clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Nadji</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kountouras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Monrose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Perdisci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Antonakakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Vasiloglou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security</title>
		<meeting>the 2017 ACM SIGSAC Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1125" to="1142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Song</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1806.02371</idno>
		<title level="m">Adversarial attack on graph structured data</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Evading classifiers by morphing in the dark</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Dang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E.-C</forename><surname>Chang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security</title>
		<meeting>the 2017 ACM SIGSAC Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="119" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dreossi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Seshia</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1804.07045</idno>
		<title level="m">Semantic adversarial deep learning</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Output range analysis for deep feedforward neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Dutta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sankaranarayanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tiwari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NASA Formal Methods Symposium</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="121" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Training verified learners with learned verifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dvijotham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gowal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stanforth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Arandjelovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>O&amp;apos;donoghue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Uesato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1805.10265</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">A dual approach to scalable verification of deep networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dvijotham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stanforth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gowal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1803.06567</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Formal verification of piece-wise linear feed-forward neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ehlers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th International Symposium on Automated Technology for Verification and Analysis</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fischetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jo</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1712.06174</idno>
		<title level="m">Deep neural networks as 0-1 mixed integer linear programs: A feasibility study</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Ai 2: Safety and robustness certification of neural networks with abstract interpretation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gehr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Drachsler-Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tsankov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chaudhuri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vechev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Security and Privacy (SP)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Explaining and harnessing adversarial examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shlens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations (ICLR)</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">On the effectiveness of interval bound propagation for training verifiably robust models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gowal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dvijotham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stanforth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bunel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Uesato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.12715</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Grosse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Papernot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Manoharan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Backes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mcdaniel</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1606.04435</idno>
		<title level="m">Adversarial perturbations against deep neural networks for malware classification</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Lemna: Explaining deep learning based security applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Xing</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security</title>
		<meeting>the 2018 ACM SIGSAC Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="364" to="379" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Generating adversarial malware examples for black-box attacks based on gan</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tan</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1702.05983</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Safety verification of deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kwiatkowska</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Aided Verification (CAV)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="3" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Adversarially robust malware detection using monotonic classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Incer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Theodorides</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Afroz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourth ACM International Workshop on Security and Privacy Analytics</title>
		<meeting>the Fourth ACM International Workshop on Security and Privacy Analytics</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="54" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Evasion and hardening of tree ensemble classifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kantchelian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tygar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Joseph</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="2387" to="2396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Reluplex: An efficient smt solver for verifying deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Barrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Dill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Julian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Kochenderfer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Aided Verification (CAV)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="97" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Adversarial machine learning at scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kurakin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bengio</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1611.01236</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Practical evasion of a learning-based classifier: A case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Laskov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security and Privacy (SP), 2014 IEEE Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="197" to="211" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lomuscio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Maganti</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1706.07351</idno>
		<title level="m">An approach to reachability analysis for feed-forward relu neural networks</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Adversarial Learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lowd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Meek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</title>
		<meeting>the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="641" to="647" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Towards deep learning models resistant to adversarial attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Madry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Makelov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tsipras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vladu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations (ICLR)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Looking at the bag is not enough to find the bomb: an evasion of structural methods for malicious pdf files detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Maiorca</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Corona</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Giacinto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM SIGSAC symposium on Information, computer and communications security</title>
		<meeting>the 8th ACM SIGSAC symposium on Information, computer and communications security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="119" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Differentiable abstract interpretation for provably robust neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gehr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vechev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning (ICML)</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="3575" to="3583" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Practical black-box attacks against machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Papernot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mcdaniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">B</forename><surname>Celik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security</title>
		<meeting>the 2017 ACM on Asia Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="506" to="519" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Papernot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mcdaniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1511.04508</idno>
		<title level="m">Distillation as a defense to adversarial perturbations against deep neural networks</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Raghunathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Steinhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Liang</surname></persName>
		</author>
		<title level="m">Certified defenses against adversarial examples. International Conference on Learning Representations (ICLR)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Semidefinite relaxations for certifying robustness to adversarial examples</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Raghunathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Steinhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Liang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="10900" to="10910" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Deep neural network based malware detection using two dimensional binary program features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Saxe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Berlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Malicious and Unwanted Software (MALWARE), 2015 10th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Malicious pdf detection using metadata and structural features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Smutz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Stavrou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 28th annual computer security applications conference</title>
		<meeting>the 28th annual computer security applications conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="239" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Detection of malicious pdf files based on hierarchical document structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Šrndic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Laskov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th Annual Network &amp; Distributed System Security Symposium</title>
		<meeting>the 20th Annual Network &amp; Distributed System Security Symposium</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Szegedy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zaremba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bruna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Erhan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fergus</surname></persName>
		</author>
		<title level="m">Intriguing properties of neural networks. International Conference on Learning Representations (ICLR)</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Evaluating robustness of neural networks with mixed integer programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Tjeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tedrake</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1711.07356</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Improving robustness of ml classifiers against realizable evasion attacks using conserved features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Vorobeychik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">28th USENIX Security Symposium (USENIX Security 19)</title>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="285" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Mimicry attacks on host-based intrusion detection systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Soto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM Conference on Computer and Communications Security</title>
		<meeting>the 9th ACM Conference on Computer and Communications Security</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="255" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Abdou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jana</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1811.02625</idno>
		<title level="m">Mixtrain: Scalable training of formally robust neural networks</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Enhancing gradient-based attacks with symbolic intervals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Abdou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jana</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1906.02282</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Efficient formal safety analysis of neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Justin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jana</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Formal security analysis of neural networks using symbolic intervals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Justin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jana</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">27th USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-W</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-J</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Boning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">S</forename><surname>Dhillon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Daniel</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1804.09699</idno>
		<title level="m">Towards fast computation of certified robustness for relu networks</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Provable defenses against adversarial examples via the convex outer adversarial polytope</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Kolter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="5283" to="5292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Scaling provable adversarial defenses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Metzen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Z</forename><surname>Kolter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems (NIPS)</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">PDF-Malware-Parser for EvadeML</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<ptr target="https://github.com/mzweilin/PDF-Malware-Parser" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Automatically Evading Classifiers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 Network and Distributed Systems Symposium</title>
		<meeting>the 2016 Network and Distributed Systems Symposium</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1810.09225</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">Cost-Sensitive Robustness against Adversarial Examples. arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
