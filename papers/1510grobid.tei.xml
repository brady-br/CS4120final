<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:01+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SilverLine: Data and Network Isolation for Cloud Services</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yogesh</forename><surname>Mundada</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<address>
									<country>Georgia Tech</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anirudh</forename><surname>Ramachandran</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<address>
									<country>Georgia Tech</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nick</forename><surname>Feamster</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<address>
									<country>Georgia Tech</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">SilverLine: Data and Network Isolation for Cloud Services</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Although cloud computing service providers offer opportunities for improving the administration, reliability, and maintenance of hosted services, they also concentrate network resources and data in a small number of cloud service providers. The concentration of data and resources introduces various associated risks, including sharing the underlying infrastructure with unknown (and untrusted) tenants and relying on the availability and security of the underlying infrastructure itself. These security risks represent some of the most significant barriers to the adoption of cloud-based services. To begin tackling these risks, a cloud hosting infrastructure should provide strong guarantees for resource and data isolation. This paper examines isolation problems with today&apos;s cloud hosting infrastructures and proposes Sil-verLine, a collection of techniques to improve data and network isolation for a cloud tenant&apos;s service.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Cloud computing reduces operational costs for networked and Web-based services and makes scaling easier as the demands for hosted services grow. Additionally, cloud computing lowers the barrier to entry for new enterprises and services by allowing them to direct energy towards the development of new functions, as opposed to low-level deployment or system administration concerns. Indeed, Gartner reports that revenue from cloud services was $68.3 billion in 2010 and projects this figure to reach nearly $150 billion by 2014 <ref type="bibr" target="#b13">[16]</ref>.</p><p>Although cloud hosting continues to become more prominent, many enterprises are hesitant to deploy services in the cloud. Indeed, the very nature of cloud computing that has propelled its rise-low barrier-to-entry and third-party management of infrastructure and system administration-has also become a significant concern. The Cloud Security Alliance indicates that potentially improper data and network isolation is a top threat for medium-to-large enterprises <ref type="bibr">[15]</ref>. Any attacker with a stolen credit card number can purchase their own cloud services, thus lowering the barrier to entry for attackers. The lack of control over management is exacerbated because many tenants share the same underlying physical infrastructure, making it potentially easier for a malicious tenant to mount an attack (e.g., a denial of service) against another. Additional threats-either from another cloud tenant or an outside attacker-exist because cloud services are extremely easy to deploy, especially with platforms such as Google's AppEngine <ref type="bibr" target="#b14">[17]</ref> or Heroku <ref type="bibr" target="#b15">[18]</ref>: many Web services are created by novice programmers without proper code security audits. As a result of these threats, cloud providers have a strong incentive to deploy and maintain technologies that help improve the security of cloud services.</p><p>Although corporations and individuals are entrusting an increasing amount of personal and corporate information in cloud solutions (e.g., Dropbox), relatively little attention has been paid to the security of data that is stored in the cloud. If an external attacker or a malicious cloud tenant gains access to a vulnerable or misconfigured service of another tenant, current techniques-including content-based data loss prevention systems <ref type="bibr" target="#b9">[11]</ref>-cannot stop them froma gaining access to data associated with the service. In one recent example, Microsoft's cloud-hosted Business Productivity Online Suite suffered a misconfiguration that allowed unauthorized users to download other tenant data <ref type="bibr" target="#b16">[19]</ref>. This paper introduces SilverLine, a system that enables cloud providers to offer security as a service to protect tenant data in clouds, even if the software or services that a particular tenant runs are themselves insecure. SilverLine augments the cloud provider's virtual machine manager (e.g., XenServer, VMware ESXi, etc.) to perform data and network isolation between various cloud tenants, and combines this isolation with modifications to guest operating systems for additional data isolation. These mechanisms protect against data leaks that result from compromise, misconfiguration, or sidechannel attacks from co-resident cloud tenants <ref type="bibr" target="#b8">[10]</ref>.</p><p>SilverLine implements two types of isolation: (1) data isolation and (2) network isolation. To enforce data isolation, we use a transparent operating systemlevel information-flow tracking layer that is assisted by an enforcement layer in the cloud provider's virtual machine monitor (e.g., Xen or VMware). Our approach allows tenants to label data with security levels; trusted enforcers then use these labels to ensure that data from one tenant is not propagated to untrusted server instances belonging to other tenants, or to locations outside the cloud. Even in case of a service misconfiguration or exploit that would otherwise have resulted in a breach or unauthorized access of data, labels that are tracked and enforced by the cloud provider's infrastructure would ensure that such breaches would not occur with SilverLine. To improve network isolation, we develop defenses against co-residence checks that allow an attacker to identify a victim tenant's virtual machine instances. SilverLine runs entirely in software (i.e., without customized hardware) using existing network infrastructure and emerging network control protocols (e.g., OpenFlow <ref type="bibr" target="#b7">[8]</ref>, which can already be deployed on virtual switches in the Xen hypervisor that is used by Amazon's AWS).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Background and Related Work</head><p>Cloud Security. Cloud-based infrastructures face many threats. First, existing cloud providers' default security mechanisms still place much of the onus of data and resource isolation on the cloud tenants themselves <ref type="bibr" target="#b12">[14]</ref>; because the tenant is typically free to choose the OS and services that run on their virtual machines, their services become vulnerable to attacks against the OS and services both from within and outside the cloud. Second, most cloud service developers are not security experts, and misconfigurations, buggy code, and weak passwords expose their services to critical data breaches, such as the Microsoft Business Productivity Online Suite's recent misconfiguration <ref type="bibr" target="#b16">[19]</ref>, and the breach of its corporate emails from HBGary-itself a security firm <ref type="bibr" target="#b3">[4]</ref>. Finally, cloud tenants do not control the physical machines that host their virtual machine instances, and a malicious tenant or even an insider (e.g., an operator of the cloud platform itself) might be able to affect or breach the security of a co-resident virtual machine using side-channel attacks <ref type="bibr" target="#b8">[10]</ref>.</p><p>In 2009, Ristenpart et al. studied how cloud hosting providers allocate IP addresses to virtual machines. With knowledge of this allocation strategy, they identified a set of possible physical machines where the victim's virtual machine might be running; an attacker could use this technique to increase the likelihood of running a VM instance on the same physical machine as the victim and affecting a DoS attack <ref type="bibr" target="#b8">[10]</ref>. They also design a co-residence check, which is a side-channel attack that allows an attacker to verify whether his VM is running on the same physical hardware as the victim, using network-based (e.g., based on IP address allocation, traceroutes, or latencies between machines) or cache-based measurements. In Section 4.2, we describe how SilverLine can prevent certain types of coresidence checks.</p><p>Hao et al. describe a virtualized network infrastructure to isolate tenants from one another and defend against co-residence checks <ref type="bibr" target="#b2">[3]</ref>. Unfortunately, their design requires specialized hardware devices at the boundaries of edge domains; two tenants who want to use each other's software services cannot do so without significant administrative and configuration overhead. The design also tracks at least four mappings at the central controller and uses VLANs to isolate traffic between two tenants within each edge domain, which can be complex. Neither solution proposes the type of data isolation offered by SilverLine. Recent work has proposed extending trusted computing platforms <ref type="bibr" target="#b0">[1]</ref> to the cloud by providing protocols to launch and migrate virtual machines over trusted platforms <ref type="bibr" target="#b10">[12]</ref>. These methods protect against certain types of attacks by the cloud infrastructure provider but do not defend against service misconfiguration and exploits or attacks by other malicious tenants.</p><p>Information Flow Control. SilverLine's data isolation capabilities are inspired by information-flow control mechanisms in operating systems such as DStar <ref type="bibr" target="#b17">[20]</ref> and Flume <ref type="bibr" target="#b4">[5]</ref>. The main drawback of these systems is that they prevent a set of multi-process applications (including one or more untrusted applications) from leaking data, so they require applications to be rewritten. In contrast, SilverLine does not require applications to be rewritten; rather, it tracks information flow in a modified Linux kernel. It also provides services for tenants to maintain and enforce their information flow policies. Other systems such as Neon <ref type="bibr" target="#b18">[21]</ref> track information flow for legacy applications entirely within the hypervisor and do instruction level taint tracking within the emulator. It incurs a higher overhead as execution control is required to be passed to QEMU instance within the root domain (dom0). Neon thus achieves finer granularity, at the cost of more performance overhead. <ref type="table">Table 1</ref> shows the types of threats that we consider, the entities that pose each threat, and defenses against each type of attack. The most likely threat for cloud tenants arises from misconfigurations or bugs in the tenant's own service. Unfortunately, not only must the tenant secure their Internet-facing services, but also it must ensure that a malicious tenant hosted on the same cloud provider cannot disrupt or steal information from the tenant's virtual machine instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Threat Model</head><p>Other threats include attacks due to vulnerabilities in the cloud platform itself (e.g., the Amazon EC2 attack <ref type="bibr" target="#b8">[10]</ref>), vulnerabilities in the operating system run by a tenant, or breaches due to malicious insiders employed by the cloud service provider. SilverLine currently trusts a tenant's operating system kernel to perform information-flow tracking. Critical operating system bugs and vulnerabilities are not common, but, to protect against such threats, the cloud service provider could deploy an information flow tracking system similar to SilverLine in the hypervisor. SilverLine cannot protect against attacks due to vulnerabilities in the cloud platform or attacks from malicious insiders, but recent work on trusted cloud computing platforms <ref type="bibr" target="#b10">[12]</ref> that builds upon Trusted Platform Modules (TPM) may help Background checks, full encryption <ref type="table">Table 1</ref>: Taxonomy of threats specific to cloud computing. mitigate some of these attacks. <ref type="figure" target="#fig_0">Figure 1</ref> shows how SilverLine resides on the virtualized hardware that cloud tenants use in a cloud hosting environment. The design has three parts: (1) two software modules in the privileged guest OS (dom0), one each for data isolation and network isolation; (2) a labeling service attached to the cloud provider's storage services (e.g., a database service such as Amazon's Relational Database Service); and (3) an OS-level information-flow tracking component called Pedigree, which is installed on virtual machine instances. Cloud tenants that run Pedigree can specify policies that will automatically assign labels to their data using the labeling service attached to the cloud provider's storage services. Pedigree then tracks the flow of information using labels between all processes and files associated with the tenant's VM instances. If the tenant's data accidentally travels to another tenant's VM or to a machine outside the cloud provider's network, the enforcer component in the dom0 will stop such potential data breaches. The network isolation component in each dom0 obfuscates co-residency checks: using a centralized database or service, it rewrites IP address ranges to thwart attackers from singling out a victim tenant's VM; it also normalizes ping times such that the ping times between VMs on the same physical machine are no different than ping times between VMs on different machines. We describe data isolation in Section 4.1, and network isolation in Section 4.2.</p><note type="other">Threat Victim Attacker Likelihood Consequences Solutions A tenant's deployed service is misconfigured or vulnerable Only the tenant Other tenants and outsiders Most likely Loss of data &amp; service disruption Bug-free code, Firewalls &amp; ID</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SilverLine: Isolation for Cloud Services</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Data Isolation</head><p>We discuss the three components of SilverLine that enable data isolation.</p><p>Pedigree Information-flow Tracking. Pedigree uses labels to track information flow between files and process within a single machine as well as across the network. Using a trusted module in a Linux kernel, Pedigree provides network-wide information flow control for unmodified legacy applications <ref type="bibr" target="#b5">[6]</ref>. Users or administrators add labels to files and use enforcers on both end-hosts and at a network egress point to prevent data leaks. Pedigree's labels have associated policies that specify the users who can access and tagged with the label, and who can remove labels attached to data ("declassification"). Pedigree monitors interactions between resources (such as processes or files) and tracks information flow using labels associated with every resource, and prevents data leaks from the entire enterprise network (instead of a single application) by preventing users or applications from exporting data that carries a user's label outside the network boundary. In a SilverLine-enabled cloud, a tenant can choose to install a Pedigree-enabled VM image on all its VM instances to benefit from the provider's security services.</p><p>Labeling Service. The labeling service automatically labels data inserted into the storage service, and ensures that data returned for read requests have these labels associated with them. Tenants can create policies and labels through a management console. The service functions on top of existing infrastructure such as Amazon's RDS, SimpleDB, or even its block-based storage service S3 <ref type="bibr" target="#b11">[13]</ref>. A simple policy description and an associated label that is generated and attached to a database record might look as follows:</p><p>when query := "INSERT" and table := "USERS":</p><p>Generate new label; add it to the DB record</p><p>Enforcer. The enforcer exists in all dom0s on the cloud and prevents data flow both between tenants on the came infrastructure and between the cloud infrastructure and the global Internet. Preventing unauthorized data flow between tenants that share a cloud infrastructure is straightforward: Using the unique tenant-id field in labels associated with data generated by a specific tenant, the cloud provider can ensure that any data transfer that originates from the tenant's VM or storage carries that label. The enforcer in the dom0 on each machine in the cloud infrastructure will intercept and read the tenant-id label on each connection, and ensure that the destination IP address belongs to the same tenant. Thus even if a tenant misconfigures its services such that its files are accessible to any tenant, other tenants (or their users) will not be able to access the victim tenant's data due to the tenant-id label check.</p><p>Preventing data breaches from the cloud hosting infrastructure to external networks, however, is considerably more challenging. The challenge is to allow authenticated users to view their own data from outside the cloud while preventing an attacker from viewing any other users' data, even if the attacker has exploited a vulnerability in Internet-facing services of the cloud tenant. For this, the cloud tenant runs a trusted login service that is coupled with the cloud provider's declassifier service.</p><p>Each tenant implements their own trusted login service, but ensures that it is free of vulnerabilities. To do so, they might use an audited open-source library and deploy the login service on a VM of its own. When a user enters their credentials at the tenant's Website, the login process authenticates the user and communicates with the declassifier to indicate the connection that belongs to the user.</p><p>The declassifier is a trusted proxy service (which we expect to be provided by the cloud service provider) that can strip labels from flows before forwarding the traffic. When the declassifier receives a request from a tenant's login service to declassify a particular user's connection, it will ensure that any outgoing labeled data on that connection that has the correct tenant-id and user; before forwarding the traffic, the declassifier will remove the associated labels. Outgoing data is always routed through a network enforcer-which can be a standalone router or switch that can inspect labels-which has one simple function: if it observes an outgoing flow that still has a label attached to its data, the flow will be dropped. <ref type="figure" target="#fig_1">Figure 2</ref>(a) and <ref type="figure" target="#fig_1">Figure 2(b)</ref> show how SilverLine enforces data isolation between the cloud and external users. Suppose that a tenant deploys a Web service that accepts user logins and displays user-specific information (e.g., an online banking site). All of the tenant's virtual machines run Pedigree, all dom0s run SilverLine enforcer and access the data from SilverLine storage service VM. The tenant specifies SilverLine policies so that each user's data receives a unique label. After a successful login, the login process passes the connection-id and the username to the declassifier. New worker threads are spawned for each logged-in user that read labeled user data from the storage service and output the same data but with the label removed. The output data is sent from the declassifier successfully flows through the enforcer, because the data has already been declassified. <ref type="figure" target="#fig_1">Figure 2</ref>(a) also shows the interactions between a normal user Alex and SilverLine. Alex logs in the system and requests for his balance. His responses are labeled only with his label 'A'. The then declassifier removes Alex's label; because the enforcer does not find any sensitive labels attached to the replies, forwards the traffic. On the other hand, lets say a malicious user Bob exploits an SQL injection bug in the Internet-facing Web service of the tenant and attempts to retrieve Alex's data as shown in <ref type="figure" target="#fig_1">Figure 2(b)</ref>. Since the declassifier has only associated Bob's connection with Bob's label, it will only strip Bob's label from database replies. Alex's data that Bob requested will continue to have Alex's label associated with it when it reaches the enforcer, and the enforcer will drop such packets. Even if Bob can trick any of the other internal VMs into sending the data directly outside bypassing the declassifier VM, the enforcers in each of the dom0s will drop that connection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Network Isolation</head><p>A malicious cloud tenant can use side-channel attacks based on network-based and cache-based channels to gain co-residence on a victim tenant's VM <ref type="bibr" target="#b8">[10]</ref>. To isolate the victim's VMs in a cloud infrastructure, Risten-  Pseudo IP addresses for virtual machines. Because Ristenpart et al. used IP address ranges to single out the physical machines running a victim's VM, we aim to provide each VM with a "pseudo" randomly-allocated IP address that VMs use when communicating with each other, keeping the actual cloud-provider IP address allocations unchanged. The SilverLine network isolation module in each dom0 includes an OpenFlow switch and a NOX controller (e.g., using OpenflowSwitch <ref type="bibr" target="#b7">[8]</ref>) that rewrites pseudo IP addresses to actual VM IP address before packets leave the machine. The mapping between pseudo IP addresses and the virtual machine's actual IP addresses maintained by a single centralized service or database; local NOX controllers on each physical machine consult the centralized database for these mappings as shown in <ref type="figure" target="#fig_1">Figure 2</ref>. Because internal IP addresses are discovered using DNS requests, the local controller also rewrites DNS responses to the appropriate pseudo address. ARP queries and responses also need to be rewritten, and hence they are redirected to local NOX controller as well. Because pseudo IP addresses are only used within virtual machines, switches and routers in the cloud provider's network can continue to forward packets based on their statically assigned IP addresses.</p><p>Normalized network metrics. Ristenpart et al. observed that the round trip times (RTTs) between virtual machines running on the same physical machine are significantly lower than RTTs between VMs running on separate physical machines <ref type="bibr" target="#b8">[10]</ref>. SilverLine normalizes round-trip delays by adding a small queuing delay to packets sent between virtual machines that reside on the same physical machine. To do so, SilverLine uses an OpenFlow element we developed for the Click software router <ref type="bibr">[9]</ref>, along with a queuing element as shown in <ref type="figure" target="#fig_2">Figure 3</ref>. Another co-residence check involves an attacker running a traceroute to determine hop count to the victim; if this hop count is zero or one, then the attacker is likely co-resident on the victim's virtual machine. To defend against this attack, for traffic between virtual machines within a physical machine, SilverLine can drop packets with low TTL values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Summary and Research Agenda</head><p>One of the biggest impediments to the adoption of cloud-based services is the risk that data stored in the cloud will be compromised, either by a third-party attacker or by another cloud tenant. To prevent these emerging threats, we have designed SilverLine, a system that improves both data and network isolation for cloud-based services without requiring cloud application developers to rewrite their applications, and without requiring the deployment of specialized network hardware. SilverLine provides isolation for cloud services using a specialized kernel module and an addition to the privileged guest OS of the cloud provider's virtual machine monitor.</p><p>Our existing implementation of Pedigree, which performs information-flow control in enterprise networks, suggests that the performance overhead for propagating labels incurs acceptable performance overhead, and our implementation of the OpenFlowClick [9] module suggests that the performance penalty for pseudo-IP mapping and network normalization is minimal. Our next step is to deploy SilverLine in a cloud environment and test the performance overhead for cloud-based services. We also intend to further develop SilverLine to defend against covert channels and insider threats (i.e., attacks by administrators of the cloud infrastructure). Finally, we intend to extend SilverLine to track labels at a finer granularity than files and processes.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 : SilverLine is installed by the Cloud service provider in the privileged guest OS (e.g., Dom0 in Xen), and an OS-level information-flow control system, Pedigree, is installed in guest OSes. Darker shades of green indicate higher trustworthiness.</head><label>1</label><figDesc>Figure 1: SilverLine is installed by the Cloud service provider in the privileged guest OS (e.g., Dom0 in Xen), and an OS-level information-flow control system, Pedigree, is installed in guest OSes. Darker shades of green indicate higher trustworthiness.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 : Rewriting internal IP addresses as pseudo-IP addresses.</head><label>2</label><figDesc>Figure 2: Rewriting internal IP addresses as pseudo-IP addresses.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Normalizing round-trip times. part et al. rely on discovering the internal cloud infrastructure. We use the OpenFlow/NOX platform [2, 7]-already included in open-source cloud platforms such as the Xen Cloud Platform (XCP)-to perform the following defenses.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>- Ses, SilverLine (Dom0 + OS)</head><label></label><figDesc></figDesc><table>Cloud platform allows 
side-channel attacks 

All cloud tenants 
Other tenants 
Less likely 
Denial of Service and 
potential data breach 

Trusted Cloud Platforms [12], 
SilverLine in VMM 
A tenant's system li-
braries, kernel has bugs 

Only the tenant 
Outsiders or Other 
cloud tenants 

Less likely 
Loss of data &amp; service 
disruption 

Timely security updates, Sil-
verLine in the VMM 
Cloud provider is mali-
cious 

All cloud tenants 
Cloud provider's em-
ployees 

Least 
Data and service 
breach for all tenants 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This research was supported by NSF Awards CNS-0916732 and CNS-0964647.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Terra: A Virtual Machine-Based Platform for Trusted Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Garfinkel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Pfaff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rosenblum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 19th ACM Symposium on Operating Systems Principles (SOSP)</title>
		<meeting>19th ACM Symposium on Operating Systems Principles (SOSP)<address><addrLine>Lake George, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">NOX: towards an operating system for networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Gude</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Koponen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Pettit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Pfaff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Casado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="105" to="110" />
			<date type="published" when="2008-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Secure Cloud Computing with a Virtualized Network Infrastructure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lakshman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mukherjee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Song</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010-06" />
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<ptr target="http://arstechnica.com/tech-policy/news/2011/02/anonymous-speaks-the-inside-story-of-the-hbgary-hack.ars/" />
		<title level="m">Anonymous speaks: the inside story of the hbgary hack</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Information flow control for standard os abstractions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krohn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Yip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brodsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cliffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Kaashoek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kohler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 21st ACM Symposium on Operating Systems Principles (SOSP)</title>
		<meeting>21st ACM Symposium on Operating Systems Principles (SOSP)<address><addrLine>Stevenson, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Practical Data-Leak Prevention for Legacy Applications in Enterprise Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Mundada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ramachandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Tariq</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Feamster</surname></persName>
		</author>
		<idno>GT-CS-11-01</idno>
		<imprint>
			<date type="published" when="2011-01" />
			<pubPlace>Atlanta, GA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
				<ptr target="http://www.noxrepo.org" />
		<title level="m">NOX: An OpenFlow controller</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Consortium</forename><surname>Openflow Switch</surname></persName>
		</author>
		<ptr target="http://www.openflowswitch.org/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Hey, you, get off of my cloud! exploring information leakage in third-party compute clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ristenpart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tromer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Computer and Communications Security</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
				<ptr target="http://www.rsa.com/node.aspx?id=3426" />
		<title level="m">RSA Data Loss Prevention</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Towards Trusted Cloud Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">P</forename><surname>Gummadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rodrigues</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009-06" />
			<pubPlace>San Diego, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<ptr target="http://aws.amazon.com/s3/" />
	</analytic>
	<monogr>
		<title level="j">Amazon Simple Storage Service (Amazon S3</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Web</forename><surname>Amazon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Services</surname></persName>
		</author>
		<ptr target="http://awsmedia.s3.amazonaws.com/pdf/AWS_Security_Whitepaper.pdf" />
		<title level="m">Overview of Security Processes (section Port Scanning</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Cloud Services To Top $68 Billion</title>
		<ptr target="http://www.informationweek.com/news/storage/systems/showArticle.jhtml?articleID=225701068" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Google App Engine</surname></persName>
		</author>
		<ptr target="http://code.google.com/appengine/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heroku -Ruby</forename><surname>Cloud</surname></persName>
		</author>
		<ptr target="http://www.heroku.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bpos</forename><surname>Microsoft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cloud</surname></persName>
		</author>
		<ptr target="http://www.pcworld.com/businesscenter/article/214591/microsoft_bpos_cloud_service_hit_with_data_breach.html" />
		<title level="m">Service Hit With Data Breach</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Making Information Flow Explicit in HiStar</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zeldovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Boyd-Wickizer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kohler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mazieres</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th USENIX OSDI</title>
		<meeting>7th USENIX OSDI<address><addrLine>Seattle, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Neon: System Support for Derived Data Management</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mccullough</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Schear</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vrable</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Snoeren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vahdat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Virtual Execution Environments</title>
		<imprint>
			<date type="published" when="2010-03" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
