<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:34+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Coercion-Resistant Electronic Elections with Write-In Candidates</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carmen</forename><surname>Kempka</surname></persName>
							<email>kempka@kit.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Institute of Cryptography and Security</orgName>
								<orgName type="department" key="dep2">Faculty of Informatics</orgName>
								<orgName type="institution">Karlsruhe Institute of Technology</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Coercion-Resistant Electronic Elections with Write-In Candidates</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>It is often argued in the e-voting community that in the presence of write-in candidates, forced abstention attacks are always possible. Therefore, write-in candidates are often excluded in existing definitions of coercion-resistance arguing that those definitions cannot be achieved by write-in supporting schemes. This is only true if the tally is made public directly. Coercion-resistance may well be achieved if only a fuzzy version of the tally is published. This paper provides a formaliza-tion of fuzzy tally representations which enables definitions for coercion-resistance to take into account write-in candidates without being weakened. We also show how the cryptographic voting scheme Bingo Voting can be applied to write-in candidates with respect to this for-malization, providing what we believe to be the first e-voting scheme that prevents forced abstention while allowing for write-in candidates. We then give a general construction of coercion-resistant schemes that provide a verifiable fuzzy tally representation from mix-based and homomorphic election schemes with trusted authority.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Elections should be verifiable and coercion-resistant. Cryptography gives us the means to make it so, as the existence of many schemes shows, a few examples being <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b9">9,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b20">20]</ref>. Several frameworks for electronic elections including several notions of coercion-resistance and voter-privacy exist <ref type="bibr" target="#b16">[16,</ref><ref type="bibr" target="#b25">24,</ref><ref type="bibr" target="#b14">14,</ref><ref type="bibr" target="#b12">12]</ref>. A remaining gap is that while in some elections, it is legally required that voters can vote for a write-in candidate, existing definitions of coercion-resistance disregard or even exclude write-in candidates, arguing that as soon as write-in candidates come into play, forced abstention attacks are always possible by forcing the voter to write in a certain rarely elected candidate or a certain random string, therefore an election allowing write-in candidates can never be fully coercion-resistant. As stated by Juels et. al. <ref type="bibr" target="#b16">[16]</ref> this is true if the tally is published directly. But it is actually possible for write-in supporting schemes to be fully coercion-resistant if only a fuzzy version of the tally is published. In real world elections a fuzzy representation of the tally is often sufficient. Examples for such fuzzy representations are the representation of the tally in percent or the resulting number of parliamentary seats for each candidate. In this case, if a candidate only got zero or one votes, it is sufficient that the representation of the tally shows that the number of votes for this candidate is less than a certain threshold, instead of showing whether this candidate got a vote or not. However, the added fuzziness should not be greater than necessary. This work takes a closer look at this fuzziness.</p><p>Contributions: We provide a formalization of fuzzy tally representations that enables reasonable definitions of coercion-resistance to be achieved by write-in supporting verifiable election schemes without weakening that definition. One problem is that if the tally is published fuzzy, a verifiable election scheme has to prove the correctness of the fuzzy tally without revealing the exact tally. We provide the cryptographic voting scheme Bingo Voting with the possibility to allow for write-in candidates. Thereby we provide what we believe to be the first cryptographic voting scheme with verifiable correctness that allows for write-in candidates while achieving a feasible notion of coercion-resistance and provably preventing forced abstention. We then provide general constructions of verifiable voting schemes supporting fuzzy tally representations from verifiable mix-based and homomorphic schemes with a trusted voting authority.</p><p>This work can be seen as an add-on to existing and upcoming models, bridging the gap between write-in candidates and coercion-resistance. The idea of this work is as follows: Consider a voting scheme with verifiable correctness that is coercion-resistant (by any definition), and provides a proof of correctness of the tally which can be adapted such that it proves the correctness of the fuzzy tally representation without revealing the exact tally. Applied to an election where the tally can be published fuzzy according to our definitions of fuzzability, the adapted scheme should still achieve the same coercion-resistance while additionally being resistant against forced abstention caused by forcing voters to vote for a rarely elected candidate. This holds even if the scheme supports write-in candidates, assumed that a voter can add names to the representation of the tally without voting for (or losing her vote for) them.</p><p>Some remarks: On a first glance, there seems to be a simple countermeasure to the attack that a voter is forced to vote for an unlikely or fictional write-in candidate in opening and counting write-in votes only if they could make a difference in the result. On a closer look, this is not as trivial as it seems. To prevent voters from being coerced to write-in a name instead of voting for a list candidate, the voting process must not leak the information if a voter voted for a write-in candidate or not. At the same time, to preserve verifiable correctness, there needs to be a proof that those unopened votes are really for write-in candidates and that they really make no difference in the result. This is especially a problem if voters can validly write in names of list candidates. By contrast, the modification of Bingo Voting presented here proves the correctness of the tally without revealing any information about a single voter's choices.</p><p>There are some attacks that are hard to prevent by any voting scheme and not considered in this paper. Forced abstention attacks are trivially possible in non-remote elections by observing the polling stations during the whole voting phase, and as Benaloh stated in <ref type="bibr" target="#b3">[4]</ref> it is infeasible to prove that no camera is in the voting booth. We argue that these kind of attacks are technically much more complex than the evaluation of data on a website and are ineffective for large-scale attacks. Pattern-voting attacks are also not considered here, but as mentioned in <ref type="bibr" target="#b24">[23]</ref>, those can usually be prevented by contest splitting. This paper is organized as follows: After describing related work in Section 2, we will formalize fuzziness in Section 3. Section 4 adapts the cryptographic voting scheme Bingo Voting to our notion of fuzziness. In section 5 Bingo Voting is provided with the possibility to include write-in candidates. Section 6 describes general constructions for verifiable mix-based and homomorphic schemes with fuzzy tally representation. Section 7 concludes this work and states some open problems and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Gardner et. al. <ref type="bibr" target="#b14">[14]</ref> propose a game based definition of coercion-resistance based on the indistinguishability of protocol behavior given inputs of the voter's choice and inputs of the adversary's choice. They explicitly don't take into account write-in votes. KÃ¼sters et. al <ref type="bibr" target="#b18">[18]</ref> provide a very abstract game-based definition of coercionresistance. Like the definition of Gardner et. al. this definition is based on the indistinguishability of the two cases that 1) the voter behaves as told by the adversary and 2) the voter deceives the adversary with some counter strategy and casts a vote of her own choice. Using this definition, they prove that Bingo Voting is as coercion-resistant as an ideal voting scheme except for forced abstention. Juels et. al. <ref type="bibr" target="#b16">[16]</ref> propose a model for electronic elections including definitions of verifiability and coercion-resistance. The authors state that forced abstention by forcing to vote for an unlikely candidate cannot be prevented as long as the tally is made public directly, and refrain from considering this attack in their model. In their work about ranking votes <ref type="bibr" target="#b25">[24]</ref>, Teague et. al. propose a definition for coercion-resistance that takes into account the information leakage of (intermediate) tally results.</p><p>Several schemes exist <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b17">17]</ref> that efficiently include write-in votes in elections based on homomorphic encryption. While forced-abstention attacks are not considered in <ref type="bibr" target="#b17">[17]</ref>, Acquisti <ref type="bibr" target="#b0">[1]</ref> prevents forced abstention attacks based on forcing the voter to "vote for" a random string by only allowing certain permissible choices. This does not keep an adversary from forcing the voter to vote for a valid, rarely elected candidate. As stated in <ref type="bibr" target="#b1">[2]</ref>, mixnet-based schemes like Neff's <ref type="bibr" target="#b22">[21]</ref> naturally support write-in votes as they support free-form ballots. Scantegrity II <ref type="bibr" target="#b9">[9]</ref> has been used in a real election <ref type="bibr" target="#b8">[8]</ref> providing the possibility to write in candidates in a way which is practical and straightforward for the voter. Their technique is similar to ours in that it also tallies in two steps: first the candidates from the list and then the write-in candidates. However, the write-in solution of Scantegrity II has some drawbacks. As stated in <ref type="bibr" target="#b8">[8]</ref>, the election authority can modify the write-in names. Furthermore, any observer auditing the resolution of write-in votes sees the handwritten choices. The two-step idea of counting write-in votes separately has also been proposed in <ref type="bibr" target="#b1">[2]</ref> for paper-based schemes. All schemes allowing writein votes, including those mentioned above, are naturally vulnerable to forced-abstention attacks as long as their proofs of correctness yield the exact tally.</p><p>Bohli et. al. <ref type="bibr" target="#b5">[6]</ref> propose additional features for Bingo Voting (and other voting machines). One of them is linking the receipts with a chain of hash values to protect their integrity, this does not change the basic scheme and can also be done in our proposed scheme. They also propose proving correctness of intermediate results directly after each voting process and then immediately deleting all secret information needed for this proof, maximizing voter secrecy if the voting machine is corrupted during the voting phase. Their approach is not directly applicable to this work, which therefore refers to the original scheme as described in <ref type="bibr" target="#b7">[7]</ref>. To the author's knowledge, no technique for Bingo Voting to support write-in votes has been proposed yet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Formalizing Fuzziness</head><p>In the literature it is usually assumed that everyone including the adversary sees the whole tally, and therefore, abstention attacks are always trivially possible by forcing a voter to vote for an unlikely candidate. This is why existing definitions of coercion-resistance do not consider this attack. For the same reason, as soon as write-in candidates are supported, coercion-resistance as defined in the literature seems impossible to achieve.</p><p>As a solution to prevent forced abstention attacks in the presence of write-in candidates (or very rarely elected candidates), we propose publishing the tally in a fuzzy way that does not weaken verifiability more than necessary. Hence published proofs of correctness will not prove the exact tally, only that the tally is very close to the published one. This section first provides a rather strong definition of fuzziness and then a weaker version of this definition in which the fuzziness/accuracy-tradeoff is adjustable in a more fine-grained way.</p><p>Since the author sees this formalization is an add-on to existing (or upcoming) models, this work refrains from giving a specific definition for an election system. Neither do we commit ourselves to a certain definition of coercion-resistance or a corruption model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Defining Fuzziness</head><p>We differentiate between the tally and its representation. We assume the tally itself to remain secret, while instead a representation of the tally is published.</p><p>We denote the set of possible tally outcomes of a given election by T . A representation R can be seen as a view that represents a certain subset T R â T of tallies.</p><p>Please note that possible representations of the tally are co-determined by the election since the election defines the needed accuracy with which the tally has to be represented.</p><p>Definition 1 (complete) We call a set R of representations complete for a set of tallies T if RâR T R = T where T R denotes the set of tallies represented by a representation R â R.</p><p>Hence a set of representations is complete if each possible tally has a representation.</p><p>We henceforth assume that the tally is a vector of length n where n is the number of candidates. The ith entry in this vector corresponds to the number of votes for the ith candidate.</p><p>Definition 2 (Î´ -neighbored) Let A and B be two vectors of length n. We call A Î´ -neighbored to B, if a vector X = (x 1 , x 2 , . . . , x n ) exists with â n i=1 |x i | â¤ Î´ and A = B + X.</p><p>Definition 3 (Âµ, Î´ -fuzzability) Let T be the set of all possible tallies of a given election. We call this election Âµ, Î´ -fuzzable if there is a set R of representations that is complete for T and for each representation R â R the following holds for its set of represented tallies T R â T :</p><formula xml:id="formula_0">1. For each pair of tallies (T 1 , T 2 ) â T R Ã T R it holds that T 1 is Î´ -neighbored to T 2 .</formula><p>2. Let E i be the set of all entries that occur at position i within any tally-vector in T R . Then</p><formula xml:id="formula_1">|E i | â¥ Âµ for i = 1, . . . , n.</formula><p>Intuitively, the second requirement means that there are at least Âµ different tally outcomes for each candidate encoded in each representation.</p><p>Definition 4 (Âµ, Î´ -fuzzy election scheme) We call an election scheme Âµ, Î´ -fuzzy, if applied to a Âµ, Î´ -fuzzable election with a set of possible tallies T , a corresponding set R of representations with corresponding represented subsets T R of T according to the definition of Âµ, Î´ -fuzzability, for each representation R â R representing tally T â T R its proof of correctness proves that T â T R and no other information than just that is revealed by any public data produced in the election process.</p><p>Particularly, if Âµ &gt; 0 the proof of correctness must not yield the tally itself. This means that voting schemes whose proofs of correctness can only be verified with knowledge of the exact tally cannot comply with the above definition unadapted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Weak Fuzziness</head><p>To prevent forced abstention, full Âµ, Î´ -fuzzability is not generally required (though it makes the construction of a corresponding voting scheme easier). We usually do not have to conceal if a candidate got, say 150 or 151 votes.</p><p>In some cases we even must not conceal this because the order of the most elected candidates is an important tally outcome. If we just want to conceal if a candidate got zero votes or more, a weaker definition as follows is sufficient.</p><p>Definition 5 (weak Âµ, Î´ -fuzzability) Let T be the set of all possible tallies for a given election. We call this election weak Âµ, Î´ -fuzzable, if there is a set R of representations that is complete for T and the following holds for each tally T â T : Let T = (x 1 , . . . , x n ). For each representation R â R that represents T , meaning T â T R , the following holds:</p><p>1. For each pair of tallies</p><formula xml:id="formula_2">(T 1 , T 2 ) â T R Ã T R it holds that T 1 is Î´ -neighbored to T 2 .</formula><p>2. For each i â {1, . . . , n} with x i &lt; Âµ: Let E i be the set of all entries that occur at position i within any tally-vector in T R . Then |E i | â¥ Âµ.</p><p>Intuitively this means that if a candidate got less than Âµ votes, then each representation of the tally indicates Âµ other possible numbers of votes for this candidate. Please note that Âµ, Î´ -fuzzability implies weak Âµ, Î´ -fuzzability: Given Âµ, Î´ -fuzzability, for each representation R there occur Âµ different outcomes in T R for each candidate, in particular for those having less than Âµ votes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 6 (weak Âµ, Î´ -fuzzy election scheme)</head><p>We call an election scheme weak Âµ, Î´ -fuzzy, if applied to a weak Âµ, Î´ -fuzzable election with a set of possible tallies T and a corresponding set R of representations according to the definition of weak Âµ, Î´ -fuzzability, for each representation R â R representing tally T â T R its proof of correctness proves that T â T R and no other information than just that is revealed by any public data produced in the election process.</p><p>For real world elections, parameters Î´ and Âµ less than 5 seem reasonable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Fuzzy Bingo Voting</head><p>As an example, we adapt Bingo Voting to our notion of fuzziness and show that the adapted scheme is resistant against forced abstention by forcing a voter to vote for an unlikely candidate. In Section 4.1 we briefly describe the original Bingo Voting scheme. In Section 4.2 we describe a version of Bingo Voting that is Âµ, Âµ-fuzzy for arbitrary Âµ. To allow for a more precise tally representation, we propose a weak Âµ, Âµ-fuzzy version of Bingo Voting in Section 4.3, where the tally can be published directly if there is no candidate who got less then Âµ votes. In this scheme, if a candidate got less then Âµ votes, only the number of votes of this candidate and one other has to be made fuzzy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The Original Bingo Voting Scheme</head><p>In this section we briefly describe the original Bingo Voting scheme. For a more detailed description see for example <ref type="bibr" target="#b7">[7]</ref>.</p><p>Bingo Voting is a cryptographic computer-assisted voting scheme which relies on a trusted random number generator. It provides verifiable correctness, and if the voting computer is uncorrupted it also provides secrecy.</p><p>The scheme is rather flexible since it allows cross voting and cumulation of votes, but it does not support write-in candidates as it is. We will fix this in Section 5.1. The scheme consists of three phases that will be described in more detail in the following sections. The pre-voting phase consists of the precalculation and publishing of commitments to so-called dummy votes in the form of random numbers that are later used on the voter's receipt to conceal the voter's choice. After entering her vote, the voter gets a receipt that contains dummy votes for each not elected candidate and for each elected candidate a fresh random number from the trusted random number generator which represents the voter's choice but is indistinguishable from the dummy votes. In the postvoting phase, the receipts, the tally and its proofs of correctness are published for verification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Preconditions</head><p>All calculations including the creation of dummy votes and all proofs of correctness are done by the voting computer. Preconditions for the correctness of the tally are the fact that the random number generator is untampered with and has its own (also uncorrupted) display, as well as the existence of a public bulletin board which can be thought of as a website, meaning anyone has read access and an election authority that doesn't have to be trusted for correctness has write access. For secrecy we additionally have to assume that the voting computer is uncorrupted.</p><p>We model this as an election authority that has full access to the voting computer and write access to the bulletin board. This election authority then has to be trusted for secrecy but not for correctness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Pre-Voting Phase</head><p>In the pre-voting phase, dummy votes for each candidate are created that are later used on the voter's receipt to conceal her choice. Each candidate gets the same number k of dummy votes, where k has to be (at least) the number of votes that can be cast for one candidate during the voting phase. Let n be the number of candidates, C = {C 1 , . . . ,C n } the set of candidates and l the number of eligible voters. For the sake of perspicuity let us assume that each voter can cast one vote for one candidate, so we have a one out of n choice. This means that at least k = l dummy votes for each candidate C 1 , . . . ,C n have to be created. More dummy votes can be created if the exact number of expected voters is unclear, as long as this is later accounted for in the calculation of the tally. For now we assume that exactly k = l dummy votes are created.</p><p>The dummy votes are created as follows: For each candidate C i â C , k random numbers r C i ,1 , . . . , r C i ,k are drawn, these random numbers are the dummy votes for candidate C i . Those random numbers have to be mutually distinct and indistinguishable from those drawn by the trusted random number generator during the voting phase, so they are ideally drawn out of the same source.</p><p>For each candidate C i , commitments com(C i , r C i , j ) to each of his dummy votes r C i , j are created. The commitments are published, the random numbers themselves must be kept secret by the voting authority. Additionally a proof is published that each candidate has the same number of dummy votes. In the original scheme <ref type="bibr" target="#b7">[7]</ref> those proofs are done with randomized partial checking <ref type="bibr" target="#b15">[15]</ref>, but the authors of <ref type="bibr" target="#b7">[7]</ref> also state that other proof techniques can be used. Details of this proof or the exact proof technique are not relevant for our work as long as the proof is sound and done without revealing the random numbers, so we refrain from presenting a proof here. As commitments, the original Bingo Voting scheme uses Pedersen commitments <ref type="bibr" target="#b23">[22]</ref>, because they are unconditionally hiding and maskable through rerandomization. They can also be used in the adapted schemes introduced in this work, if the preelection proof is also done with randomized partial checking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Voting Phase</head><p>In the voting booth, the voter uses the voting computer to enter her choice. She then gets as a printed receipt a list of all candidates with a random number behind each candidate's name. Each candidate except the elected one has a dummy vote written behind his name, this dummy vote is deleted from the candidate's pool of dummy votes and not used again on another receipt. The elected candidate should instead have a fresh random number from the trusted random number generator written behind his name. In the privacy of the voting booth, the voter can check the equality of the number behind the elected candidate's name and the fresh random number shown on the trusted random number generator's display. She can take the receipt with her and forget the fresh random number after checking. When the voter leaves the voting booth, the random number generator's display is cleared, and the receipt does not show which of the numbers were fresh, this information is only known to the voter and the voting authority and cannot be proven by the voter to an adversary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">Post-Voting Phase</head><p>After the election is closed, the tally and all receipts are published on the public bulletin board, and the voters can check the presence of their receipts. All commitments to unused dummy votes are opened publicly. The unused dummy votes mirror the tally, since each time a candidate gets a vote, he does not lose a dummy vote. It is thus sufficient to publish the unused dummy votes as the tally. What is also published is a proof that each receipt contains a) exactly one fresh random number and b) for each not elected candidate a dummy vote of which a commitment was published in the pre-voting phase. The proof takes as input a new commitment to the fresh random number and the commitments to the dummy votes on the receipt which were published in the pre-voting phase. It is then proven that there is one commitment for each candidate and that the content of the commitments correspond to the random numbers on the receipt, without revealing any associations between commitments and random numbers. The details of this proof are again omitted here since there are different proof techniques <ref type="bibr" target="#b7">[7,</ref><ref type="bibr" target="#b15">15]</ref> that work here as well as with our adapted fuzzy scheme which is described in Section 4.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Fuzzy Scheme</head><p>We define the tally T as well as its representation R to be vectors of length n where n is the number of candidates. The ith entry in T corresponds to the number of votes for the ith candidate and the ith entry in R is the representation of the number of votes for the ith candidate.</p><p>In the following we describe a Bingo Voting scheme that is Âµ, Âµ-fuzzy for arbitrary parameters Âµ. For the sake of perspicuity we first describe a scheme not supporting write-in candidates. We will describe a write-in supporting Âµ, Âµ-fuzzy version of Bingo Voting in Section 5.2.</p><p>The idea is as follows: In the pre-voting phase, we prepare enough dummy votes that in any case at least Âµ dummy votes of each candidate will remain unused after the election. In the post-voting phase, we do not open all unused dummy votes, just almost all. The opened unused dummy votes are our representation of the tally. The set of remaining unopened dummy votes is filled up with some new commitments. Of this filled-up set of commitments we prove that there are at most Âµ commitments for each candidate, so each candidate C i has at most Âµ more votes than in the ith entry in the representation (minus Âµ, since we created Âµ more dummy votes than needed). In particular, in this scheme it is proven that a rarely elected candidate has less than Âµ votes without revealing if he got a vote or not.</p><p>Consider a Âµ, Âµ-fuzzable election with l eligible voters and one vote per voter, n candidates C 1 , . . . ,C n , and a set R = {(R 1 , . . . , R n )|0 â¤ R i â¤ l + Âµ for 1 â¤ i â¤ n} of possible representations. With one vote per voter, l is the maximum number of votes a candidate can get during the election. The set T R of tallies represented by an R â R with R = (R 1 , . . . , R n ) is</p><formula xml:id="formula_3">T R = {(T 1 , . . . , T n )|R i â Âµ â¤ T i â¤ R i for 1 â¤ i â¤ n} .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Pre-Voting Phase</head><p>The pre-voting phase is done as described in Section 4.1, except that for each candidate at least Âµ more dummy votes than needed are prepared. So in an election with n candidates C 1 , ..,C n and l eligible voters, at least k = l + Âµ dummy votes r C i ,1 , . . . , r C i ,k for each candidate C i are prepared. As in the original scheme, commitments com(C i , r C i , j ), i = 1, . . . , n, j = 1, . . . , k to these dummy votes are published and it is proven that each candidate has the same amount of dummy votes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Voting Phase</head><p>The voting phase is exactly the same as in the original scheme, described in Section 4.1.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Post-Voting Phase</head><p>We make use of the fact that for secrecy we need to assume a trustworthy voting authority, so we have an instance who can open commitments and compute the tally in secret without making additional assumptions. Please note that if secrecy does not hold, forced-abstention and other coercion attacks are trivially possible.</p><p>Remember that the tally is mirrored by the unused dummy votes, this time with an offset of Âµ because Âµ more dummy votes for each candidate were created in the pre-voting phase. Let T = (T 1 , .., T n ) be the tally, then there are T i + Âµ unused dummy votes for each candidate C i . Again, all receipts are published with corresponding proofs that the number of fresh random numbers is correct, this part is the same as in the original scheme. But this time, not all unused dummy votes are opened. Instead, a vector f = ( f 1 , . . . , f n ) is chosen by the voting authority at random but with the following restrictions:</p><formula xml:id="formula_4">1. â n i=1 f i â¥ Âµ 2. 0 â¤ f i â¤ min{T i , Âµ} for all i</formula><p>The vector f determines in which way the tally is made fuzzy, and must be kept secret. As a representation of the tally, we publish the vector R = (R 1 , . . . , R n ) where</p><formula xml:id="formula_5">R i = T i + Âµ â f i for i = 1, . . . , n.</formula><p>For each candidate C i , the commitments to R i of his unused dummy votes are opened, so f i commitments to C i 's dummy votes remain unopened. This set of unopened commitments is now filled up in the following way: For each candidate C i , Âµ â f i new commitments of the form com(C i , r j ), j = 1, . . . , Âµ â f i are created, where the r j are new random numbers that are mutually distinct and indistinguishable from the dummy votes. These new commitments together with the unopened commitments to dummy votes are published on the public bulletin board, so everyone can see how many new commitments were created, but not how many for which candidate. These commitments are then opened in a way that hides the association between commitment and content but proves that the set of published contents corresponds to the set of published commitments. This is the same kind of proof that is used in the proof that each receipt contains one fresh random number and can be done with the same proof technique, for example randomized partial checking. Everyone can check that of those opened commitments, there are Âµ for each candidate. This proves that each candidate has got at most Âµ votes more than indicated by the representation. To prevent forced abstention, it is sufficient to just make entries of the tally vector fuzzy that are smaller than Âµ. We therefore provide a weak Âµ, Âµ fuzzy scheme in Section 4.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">Fuzziness of the Scheme</head><p>We now discuss why the scheme presented above is Âµ, Âµ-fuzzy. In the post-voting phase, a representation R = (R 1 , . . . , R n ) of the tally T = (T 1 , . . . , T n ) is published, and a proof is given that the tally lies between (R 1 â Âµ, . . . , R n â Âµ) and (R 1 , . . . , R n ). No more information about the tally than this is yielded by any published data. So the set T R of tallies represented by R consists of all vectors (x 1 , . . . , x n ) where R i â¤ x i â¤ R i + Âµ for all i = 1, . . . , n. This set indicates Âµ different possible tally outcomes for each candidate and obviously all vectors in T R are Âµ-neighbored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Bingo Voting with Weak Fuzziness</head><p>Since it is not always convenient and necessary to make the whole tally fuzzy, we propose a weak Âµ, Âµ-fuzzy scheme applied to a (not weak) Âµ, Âµ-fuzzable election. In this scheme, the accuracy of the representation of tally can be adjusted more precisely. Like in the previous section, consider a Âµ, Âµ-fuzzable election with l eligible voters and one vote per voter, n candidates C 1 , . . . ,C n , and a set R = {(R 1 , . . . , R n )|0 â¤ R i â¤ l + Âµ for 1 â¤ i â¤ n} of possible representations. Each R = (R 1 , . . . , R n ) â R represents the tallies in the set</p><formula xml:id="formula_6">T R = {(T 1 , . . . , T n )|R i â¤ T i â¤ R i + Âµ for 1 â¤ i â¤ n} .</formula><p>The pre-voting phase and voting phase are the same as in the Âµ, Âµ-fuzzy scheme described in the previous section. In the post-voting phase, the trusted authority calculates the tally T = (T 1 , . . . , T n ) in secret. Similar to the Âµ, Âµ-fuzzy scheme the voting authority chooses a vector f = ( f 1 , . . . , f n ) such that 0 â¤ f i â¤ min{Âµ, T i } for i = 1, . . . , n and â n i=1 f i â¥ Âµ. The difference to the previous scheme is that now a second vector</p><formula xml:id="formula_7">d = (d 1 , . . . , d n ) is chosen such that 1. f i + d i â¤ Âµ for all i 2. f i + d i = Âµ for each i where T i â¤ Âµ, 3. if an i exists with T i â¤ Âµ, then (a) â n i=1 d i â¥ Âµ (b) f + d must</formula><p>have at least two entries that are greater than zero.</p><p>The vectors f and d must be kept secret. As in the Âµ, Âµ-fuzzy scheme, the representation R = (R 1 , . . . , R n ) with R i = T i + Âµ â f i for all i is published. We open R i of the unopened commitments for each candidate C i , which proves that C i got at least R i â Âµ votes. Now f i commitments remain unopened for each candidate C i . The voting machine creates d i new commitments com(C i , r C i , j ), j = 1, . . . , d i for each candidate such that all r C i , j are mutually distinct and indistinguishable from the dummy votes. We now have f i + d i unopened commitments for each candidate C i . Those commitments are published and opened in a way that hides the association between commitment and content but proves that the set of published contents corresponds to the set of published commitments. Again this can be done for example with randomized partial checking <ref type="bibr" target="#b15">[15]</ref>. Please note that while f and d must remain secret, f + d becomes public. So the published data indicates that each candidate C i got between R i â Âµ and R i â Âµ + f i + d i votes. This means that the number of votes for candidates C i for which f i + d i = 0 is represented accurately, it is exactly R i â Âµ, each voter can check this using the data published on the bulletin board. Since f j + d j = Âµ for candidates C j who got less then Âµ votes, the published data proves that C j got between R j â Âµ and R j votes without revealing more information about this candidate's number of votes than just that. For all candidates C h that got more than Âµ votes, f h + d h lies between 0 and Âµ, so this candidate's number of votes may or may not be represented fuzzy, since f h + d h is public the degree of fuzziness is public, too. It is important that f + d has to have either zero or at least two entries = 0. The reason for this is that if exactly one candidate C x got v â¤ Âµ votes and f x + d x = Âµ but f i +d i = 0 for all i = 1, . . . , n, i = x, in the end only unopened dummy votes of candidate C x remain. These are then filled up with other commitments for C x and opened. So the published data indicates that all unopened commitments created and published in the pre-voting phase are for candidate C x , and everyone can see how many there were, so the exact number of votes for C x can be calculated. Besides, if the overall number V of votes cast in the election is published and we know that only the number of votes of C x is made fuzzy, the number of votes for C x can easily be calculated by subtracting all T i , i = x from V .</p><p>The advantage of our weak Âµ, Âµ-fuzzy scheme is that if a candidate got less than Âµ votes, only the number of votes for this candidate and one other has to be made fuzzy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Bingo Voting with Write-In Support</head><p>In this section, we provide Bingo Voting with write-in support. For the sake of perspicuity we first describe a scheme without fuzziness in Section 5.1. Finally in Section 5.2 we propose a Âµ, Âµ-fuzzy version of the scheme with write-in support, providing what we believe to be the first verifiable election scheme with write-in support that is provably resistant against forced abstention caused by forcing voters to vote for an unlikely or fictional candidate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Without Fuzziness</head><p>In this chapter, we show how Bingo Voting can be adapted to allow write-in candidates by the means of known techniques. This is done with almost no additional work for the voter. In fact, a voter who does not write in a candidate can do exactly the same as in the original scheme. Apart from a voluntary testing of the voting process her only additional effort compared to a pen-and-paper election is the also voluntary comparison of a random number. In addition our write-in technique is generic. We strongly suppose that write-in votes can be included in other electronic voting schemes in basically the same way.</p><p>The idea is to have an additional candidate named "Write-In" which is treated as a regular candidate. The "normal" tally, along with the votes for the list candidates, then yields the overall number of write-in votes. The actual votes for the write-in candidates are counted in a separate tally.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Preconditions</head><p>The same preconditions hold as in the original scheme described in Section 4.1. Since we want to prevent forced abstention we assume a trusted authority with access to an uncorrupted voting computer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Pre-voting Phase</head><p>To be able to include a write-in candidate into the Bingo Voting election process, we use an additional mock candidate named "Write-In" as a wildcard character. Before the election starts, "Write-In" is added to the candidate list. Then the pre-voting phase is performed as described in Section 4.1. "Write-In" is treated as a regular candidate and therefore gets the same number of dummy votes as any other candidate. For the sake of simplicity we describe our technique for one write-in candidate. If the voter can write in more than one candidate, our scheme can be extended in a straightforward way by adding more mock candidates to the list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Voting Phase</head><p>In the polling booth, at first nothing changes for the voter compared to the original scheme except that she now has the possibility to write in a candidate. The receipt, sketched in <ref type="figure">Figure 1</ref>, looks like a receipt of the original scheme, except that it now additionally contains a commitment to the write-in candidate's name. If the corresponding vote is not for a write-in candidate, the commitment is to the string "No Write-In".</p><p>After the voter has made her choice, either in the conventional way or by writing in a candidate, the printer begins to print the voter's receipt. First, only the commitment is printed. Now the voter has to be assured that this commitment contains the right name. To prevent coercion, the voter cannot just be given the unveil information. Instead, we use voter-initiated auditing <ref type="bibr" target="#b4">[5]</ref>: The voter can choose to either test the voting process or cast her vote. In the case of testing, the vote does not count, the unveil information and the supposed content of the commitment is printed and the voting process begins anew. The voter can do the testing as often as she wishes. The printed commitments and corresponding unveil information can be checked later, either by the voter herself or by a competent person or institution of her choice. After the voter's real vote is cast, the last <ref type="figure">Figure 1</ref>: Scheme of a receipt with write-in support: 1(a) Receipt with write-in candidate "Na Me"; 1(b) No writein candidate was chosen.</p><formula xml:id="formula_8">Cand 1 R 1 Cand 2 R 2 . . . . . . Cand n R n W riteIn R n+1 com("Na Me") (a) Cand 1 R 1 Cand 2 R 2 . . . . . . Cand n R n W riteIn R n+1 com("No Write-In") (b)</formula><p>printed commitment remains unopened, and the voting process goes on as in the original scheme: The trusted random number generator creates the fresh random number representing the vote. Then the rest of the receipt is printed with the fresh random number behind the chosen candidate. If the voter voted for a write-in candidate, the fresh random number appears behind "Write-In". The voter can compare the random number behind her chosen candidate with the display of the trusted random number generator. Then she can take her receipt home to check later that her vote has been counted in the tally.</p><p>Please note that we do not have to make any additional assumptions about the printer. Since the dummy votes are printed last and do not have to be sent to the printer by the voting machine before, the voter can see what is printed anytime and take away the print-out anytime.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.4">Post-voting Phase</head><p>After the election, the tally is published as sketched in <ref type="figure" target="#fig_0">Figure 2</ref> together with all receipts and a proof of its correctness. As <ref type="figure" target="#fig_0">Figure 2</ref> shows, the tally consists of two parts. The first part tallies the candidates on the list and yields the overall number of write-in votes. It is done as described in Section 4.1 by counting the unused dummy votes for each candidate. The proofs of correctness of this tally part are done as in the original scheme described in Section 4.1. The other part tallies the write-in candidates. To prove its correctness, we can use the same proof technique as for the first tally part. What has to be proven is that the outcome of the tally corresponds to the commitments behind "Write-In" on the receipts. The number of commitments to "No Write-In" has to equal the number of all votes minus the number of votes for write-in candidates. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.5">Some remarks</head><p>Our scheme provides the same amount of voter privacy as Bingo Voting with the exception that the abstention attack that forces the voter to write in a certain random string is still possible. This is a problem of all writein techniques that publish the names of written-in candidates one-to-one in the tally. We address this problem in Section 5.</p><p>2. An advantage of our scheme is that the voter's receipt neither shows a write-in candidate's name in plaintext nor if a candidate was written in at all. There is good reason why we don't print the whole receipt before testing. If we would print the whole receipt at once, one had to consider what happens with the dummy votes if the voter chooses to test the voting process. If the voter saw the dummy random numbers, they cannot be reused on another receipt because the voter would recognize them. One cannot just use the same dummy votes on the voters real receipt because maybe she gives her vote to someone else. But if the dummy votes are thrown away, either an infinite pool of dummy votes has to be provided or the number of tests have to be limited, both possibilities are infeasible. Solution: The voter sees the dummy votes only after testing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Bingo Voting with Write-In Support and Fuzziness</head><p>We now describe a Âµ, Âµ-fuzzy version of Bingo Voting with write-in support. To prevent forced abstention that is caused by forcing the voter to "vote" for a certain random string it is crucial here that the voter may write in names without voting for them, so that those names appear in the representation of the tally. Without this possibility, a voter can be forced to not vote for a certain write-in candidate by forcing him to write in another. So we have to provide the voter with the possibility to somehow whisper an arbitrary number of names to the voting authority that are later included in the representation even though they got no votes. Since in Bingo Voting for secrecy we have to assume an honest voting computer anyway we can as well provide the voting computer with an additional interface with which the voter can secretly enter names that she wishes to be included in the representation.</p><p>The scheme works as follows: Consider a Âµ, Âµ-fuzzable election with l eligible voters, one vote per voter, n regular candidates C 1 , . . . ,C n , and a set R of representations that is compliant to the representations in the post-voting phase described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Pre-Voting Phase</head><p>First, we add a candidate C n+1 called "Write In" to the candidate list. Then all candidates C 1 , . . . ,C n+1 get l + Âµ dummy votes as in the Âµ, Âµ-fuzzy Bingo Voting scheme without write-in support described in Section 4.2. The rest of this phase is also done as in Section 4.2, commitments to each candidate's dummy votes including "Write In" are created and a corresponding proof is published that each candidate has the same number of dummy votes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Voting Phase</head><p>The voting phase is the same as in the non-fuzzy write-in supporting scheme described in Section 5.1 with the difference that the voter is additionally provided with an interface for entering names that she wishes to be included in the representation of the tally. Regardless of whether the voter entered a name using this interface or not, she can cast her vote by writing in a candidate or by voting for a regular candidate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Post-Voting Phase</head><p>The post voting phase of this scheme is a combination of the Âµ, Âµ-fuzzy Bingo Voting version described in Section 4.2 and the write-in supporting scheme described in Section 5.1. Suppose that the voting phase yields a list of n w shuffled additional names N 1 , . . . , N w that belong to write-in candidates and/or were entered via the interface in the voting booth, including "no write-in". These names can be real names or random strings. They should be in shuffled order because their order should yield no information about which candidates are actual write-in candidates and which names were entered via the additional interface. This list is published, and all the names in this list have to be included in the representation of the tally. Voters can check if the names they entered or voted for appear on the bulletin board.</p><p>Like in the write-in supporting scheme described in Section 5.1, we have two tally parts. We represent these parts with two representation vectors. The tally</p><formula xml:id="formula_9">T r = (T r 1 , . . . , T r n+1 )</formula><p>of the regular candidates (including "Write-In") is represented by</p><formula xml:id="formula_10">R r = (R r 1 , . . . , R r n+1 )</formula><p>and the tally</p><formula xml:id="formula_11">T w = (T w 1 , . . . , T w n w )</formula><p>of the write-in candidates is represented by</p><formula xml:id="formula_12">R w = (R w 1 , . . . , R w n w )</formula><p>where R w i represents the number of votes for name N i for all i.</p><p>The trusted voting authority first computes the tally T r of the regular candidates. This tally is represented as in the Âµ, Âµ-fuzzy scheme described in Section 4.2 by choosing a vector f = ( f 1 , . . . , f n+1 ) with restrictions</p><formula xml:id="formula_13">1. â n i=1 f i â¥ Âµ and 2. 0 â¤ f i â¤ min{T i , Âµ} for all i</formula><p>and publicly opening R r i = T r i + Âµ â f i dummy votes for each candidate C i .</p><p>Then the voting authority opens the commitments to the write-in candidates in secret and computes the tally T w . Another vector f w = ( f w 1 , . . . , f w n w ) is chosen with</p><formula xml:id="formula_14">1. â n+1 i=1 f i + â n w i=1 f w i â¥ Âµ and 2. f w i â¤ min{T w i , Âµ} for i = 1, . . . , n w .</formula><p>Of each potential write-in candidate N i , the voting authority publicly opens R w i = T w i â f w i commitments, yielding the representation R w = (R w 1 , . . . , R w n w ) of the tally of the write-in votes. We now have f i unopened commitments for each regular candidate C i and f w i unopened commitments for each write-in candidate N i . Analogous to the Âµ, Âµ-fuzzy scheme described in Section 4.2 we fill this set of commitments so that there are Âµ commitments for each candidate. Those are opened via for example randomized partial checking, proving that each regular candidate C i got between R r i â Âµ and R r i votes and each potential write-in candidate N i got between R w i and R w i + Âµ votes. Please note that while we have Âµ additional dummy votes for each regular candidate, we don't have any extra commitments for the write-in candidates. This is why the representation of the write-in votes differs from the representation of the regular candidates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">Weak Âµ, Âµ-Fuzzy Scheme with Write-In Support</head><p>Analogous to the weak Âµ, Âµ-fuzzy scheme described in Section 4.3, the scheme described above can be made weak Âµ, Âµ-fuzzy by adapting the vectors f and f w and not filling each candidate's commitments up to Âµ. If there are at least Âµ write-in votes and of the not written in candidates every candidate has at least Âµ votes, the first tally part can be published as it is. If necessary, the votes of the first tally part can be used to make the second tally part fuzzy though.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Some Remarks on Coercion-Resistance</head><p>To show how our definition of fuzziness can be used together with definitions of coercion resistance, we informally apply our work to the definition of KÃ¼sters et. al <ref type="bibr" target="#b18">[18]</ref> and the Âµ, Âµ-fuzzy Bingo Voting schemes described in Section 4.2 and Section 5.2. KÃ¼sters et. al prove that Bingo Voting achieves the same degree of coercion resistance as an ideal voting scheme except for forced abstention. They state that Bingo Voting is vulnerable to this attack because the adversary sees the receipts of all voters. We argue that a voter can not by any feasible means prove that she has obtained no receipt, so she can not prove to an adversary that she did not vote. We do not regard this attack any further. What remains is forced abstention through voting for an unlikely or fictional candidate.</p><p>We informally define Âµ-coercion-resistance as follows:</p><p>Definition 7 (Âµ-coercion-resistance) A voting scheme applied to a Âµ, Âµ-fuzzable election is Âµ-coercion resistant if it is coercion-resistant according to the definition of KÃ¼sters et. al <ref type="bibr" target="#b18">[18]</ref> and Âµ, Âµ-fuzzy.</p><p>It is easy to see that if a Âµ, Âµ-fuzzy election scheme that achieves coercion resistance according to the definition of KÃ¼sters et. al, it also achieves the definition of Âµ-coercion-resistance above and is resistant against forced abstention caused by forcing to vote for unlikely candidates.</p><p>Since the Âµ, Âµ-fuzzy Bingo Voting scheme does not differ from the original scheme except in its published data and the fact that Âµ more dummy votes are created per candidate, and since its published data leaks less information than that of the original scheme, the Âµ, Âµ-fuzzy Bingo Voting should achieve coercion-resistance according to the definition of KÃ¼sters et. al. As stated above the voter cannot possibly prove that she did not vote by proving that she has no receipt. Therefore the scheme seems to be resistant against forced abstention.</p><p>The Âµ, Âµ-fuzzy Bingo Voting scheme with write-in support yields with its published data no more information as is yielded by an election done with the original scheme and all occurring write-in candidates on the list of regular candidates. The additionally published list of names does not tell if a candidate on this list got a writein vote or not. So this scheme, too, should be Âµ-coercionresistant and additionally resistant against forced abstention.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">General Constructions</head><p>This section introduces a general construction of Âµ, Âµ-fuzzy verifiable election schemes from mix-based schemes and homomorphic schemes with a trusted authority. The constructions are similar to the construction of the Âµ, Âµ-fuzzy scheme from the original Bingo Voting scheme described in Section 4.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">General Construction for MixnetBased Schemes with Trusted Entity</head><p>One assumption in the Bingo Voting schemes described in the previous sections is that there is a trusted entity that can open commitments in secret before publishing the representation of the tally and the proofs of correctness. One way to do the proofs of correctness in Bingo Voting is doing a mix with randomized partial checking. Other mix-based schemes can be made Âµ, Âµ-fuzzy in an analogous way, given that such a trusted entity is at hand. This is for example the case in the original Helios scheme <ref type="bibr" target="#b2">[3]</ref>, which also uses one trusted Helios server. The construction is described for a verifiable mixbased election scheme applied to a Âµ, Âµ-fuzzable election with n candidates C 1 , . . . ,C n and one vote per voter. We assume that there is a trusted entity E that gets all cast votes in the form of commitments or ciphertexts and has all the information needed to compute the plaintext votes. In the following, with encrypted votes we mean those ciphertexts or commitments. We also assume that more than Âµ votes are cast, so more than Âµ encrypted votes are available. The voting process of the original mix-based scheme stays the same up to the point where the tally is computed. Instead of mixing and opening the votes, we do the following. The trusted entity E opens the votes and computes the tally T = (T 1 , . . . , T n ) in secret. Then E chooses f = ( f 1 , . . . , f n ) with</p><formula xml:id="formula_15">1. â n i=1 f i â¥ Âµ and 2. 0 â¤ f i â¤ min{Âµ, T i } for all i.</formula><p>Of the available encrypted votes the trusted entity takes away f i from candidate C i . The remaining R i = T i â f i encrypted votes of each candidate are included in the mix that would be done with all votes in the original scheme. The plaintexts of the votes included in the mix and a proof of correct mixing is published, again as would be done in the original scheme. The representation of the tally is (R 1 , . . . , R n ) = (T 1 â f 1 , . . . , T n â f n ).</p><p>For each candidate C i , Âµ â f i new encrypted votes are created such that the corresponding plaintext votes are indistinguishable from the cast votes and each candidate has Âµ encrypted votes. Those n * Âµ encrypted votes are then mixed and opened with the same mix used for the representation of the tally, corresponding outcomes and proofs of correctness of the mix are published, proving that the tally lies between (R 1 , . . . , R n ) and (R 1 + Âµ, . . . , R n + Âµ). This is different from the Âµ, Âµ-fuzzy Bingo Voting schemes because we don't have the extra Âµ commitments for each candidate. A weak Âµ, Âµ-fuzzy election scheme can be created in the same way using corresponding vectors f and d as in the weak Âµ, Âµ-fuzzy Bingo Voting scheme described in Section 4.3.</p><p>Write-in support can be included analogous to the write-in supporting Bingo Voting scheme described in Section 5.2 using an additional "regular" candidate "Write-In" and two tallies with their own representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">General Construction for Homomorphic Schemes with Trusted Entity</head><p>In this section, a verifiable Âµ, Âµ-fuzzy election scheme is constructed from an arbitrary verifiable election scheme with trusted entity that is based on homomorphic encryption. Analogous to the previous section, the construction is described for an election scheme applied to a Âµ, Âµ-fuzzable election with n candidates C 1 , . . . ,C n and one vote per voter. Precondition is a trusted entity E who sees all encrypted votes and has the means to decrypt them. As in the previous section, the voting process of the Âµ, Âµ-fuzzy scheme is the same as in the original homomorphic scheme. After all votes are cast, the trusted entity E computes the tally T = (T 1 , . . . , T n ) in secret. Then E chooses f = ( f 1 , . . . , f n ) with the usual restrictions:</p><p>1. â n i=1 f i â¥ Âµ and 2. 0 â¤ f i â¤ min{Âµ, T i } for all i.</p><p>For each candidate C i , E chooses f i of his encrypted votes that are not to be included in the calculation of the sum of all encrypted votes. Then E calculates and publishes the sum of the remaining votes according to the original homomorphic scheme, and publishes which encryptions were not included in this calculation. The result is decrypted and the decryption proven as would be in the original scheme, yielding a representation R = (R 1 , . . . , R n ) of the tally where R i = T i â f i . Then E creates Âµ â f i encrypted votes for each candidate C i whose corresponding plaintexts are indistinguishable from the votes cast by real voters. The sum of the encrypted votes not included in the calculation of the representation and the new encryptions is computed and decrypted, again with a proof of correct decryption. The result of the second sum should be Âµ votes for each candidate, which proves that each candidate C i got between R i and R i + Âµ votes.</p><p>Here, too, a weak Âµ, Âµ-fuzzy version of the scheme can be created analogous to the construction above using corresponding vectors f and d as in the Âµ, Âµ-fuzzy Bingo Voting scheme described in Section 4.3.</p><p>Write-in support should also be possible to be included straightforwardly as described in Section 5.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion and Future Work</head><p>This work provides a formalization of fuzzy tally representations that closes the gap between coercionresistance and write-in candidates. We have proposed a verifiable election scheme that supports write-in candidates and is resistant to forced-abstention attacks, as well as a general construction for such schemes. A remaining open problem is the construction of a verifiable Âµ, Î´ -fuzzy scheme that does not need a trusted authority.</p><p>Our notion of fuzziness is reminiscent of approaches to database anonymization like k-anonymity <ref type="bibr" target="#b11">[11]</ref> and ldiversity <ref type="bibr" target="#b19">[19]</ref>. Hence there seems to be a relation to database anonymity by modeling the tally as a database that is coarsened for privacy and which in its coarsened version must not leak any private information about the voter (namely her vote). Looking at database anonymization, we might want to have a tally representation that reaches something similar to Dwork's notion of differential privacy <ref type="bibr" target="#b13">[13]</ref>, but with end-to-end verifiability.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: 2(a) Main tally: There are 3 votes for writein candidates. 2(b) Tally of the write-in candidates: The number of "votes" for No Write-In has to match the number of non-write-in votes.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgments</head><p>The author thanks JÃ¶rn MÃ¼ller-Quade, Christian Henrich and the reviewers for helpful discussions and comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Receipt-Free Homomorphic Elections and Writein Ballots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Acquisti</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Association for Cryptologic Research</title>
		<imprint>
			<biblScope unit="volume">105</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Advances in Cryptographic Voting Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adida</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>MIT</publisher>
		</imprint>
	</monogr>
<note type="report_type">PhD Thesis</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Helios: web-based open-audit voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adida</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th conference on Security symposium</title>
		<meeting>the 17th conference on Security symposium<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="335" to="348" />
		</imprint>
	</monogr>
	<note>SS&apos;08, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Simple verifiable elections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benaloh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX/Accurate Electronic Voting Technology Workshop 2006 on Electronic Voting Technology Workshop</title>
		<meeting>the USENIX/Accurate Electronic Voting Technology Workshop 2006 on Electronic Voting Technology Workshop<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="5" to="5" />
		</imprint>
	</monogr>
	<note>EVT&apos;06, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Simple verifiable elections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benaloh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX/Accurate Electronic Voting Technology Workshop 2006 on Electronic Voting Technology Workshop</title>
		<meeting>the USENIX/Accurate Electronic Voting Technology Workshop 2006 on Electronic Voting Technology Workshop<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="5" to="5" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bohli</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename><surname>Henrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kempka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M Â¨ Uller-Quade</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Enhancing Electronic Voting Machines on the Example of Bingo Voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And R Â¨ Ohrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Information Forensics and Security</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="745" to="750" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Bingo Voting: Secure and Coercion-Free Voting Using a Trusted Random Number Generator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bohli</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M Â¨ Uller-Quade</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And R Â¨ Ohrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VOTE-ID 2007</title>
		<editor>A. Alkassar and M. Volkamer</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007" />
			<biblScope unit="volume">4896</biblScope>
			<biblScope unit="page" from="111" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Scantegrity II Municipal Election at Takoma Park: The First E2E Binding Governmental Election with Ballot Privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carback</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Chaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Conway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Es-Sex</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Herrnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Mayberry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Popoveniuc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vora</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th USENIX Security Symposium</title>
		<meeting>the 19th USENIX Security Symposium</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Scantegrity II: End-to-End Verifiability for Optical Scan Election Systems using Invisible Ink Confirmation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaum</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Carback</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Essex</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Popove-Niuc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rivest</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Ryan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">Y A</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sherman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename></persName>
		</author>
		<ptr target="http://www.usenix.org/event/evt08/tech/full_papers/chaum/chaum.pdf" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Practical Voter-Verifiable Election Scheme</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chaum</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ryan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">Y</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schneider</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Security -ES-ORICS 2005</title>
		<editor>S. De Capitani di Vimercati, P. Syverson, and D. Gollmann</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">3679</biblScope>
			<biblScope unit="page" from="118" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ciriani</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Di Vimercati</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D C</forename><surname>Foresti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samarati</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<title level="m">Secure Data Management in Decentralized Systems</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="323" to="353" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Coercion-resistance and receipt-freeness in electronic voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Delaune</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ryan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Delaune</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 19th Computer Security Foundations Workshop</title>
		<meeting>19th Computer Security Foundations Workshop</meeting>
		<imprint>
			<publisher>Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="28" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dwork</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Coercion resistant end-to-end voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gardner</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Garera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rubin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Financial Cryptography</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="344" to="361" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Making Mix Nets Robust For Electronic Voting By Randomized Partial Checking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jakobsson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And Rivest</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="339" to="353" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Coercionresistant electronic elections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Juels</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Catalano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jakobsson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WPES &apos;05: Proceedings of the 2005 ACM workshop on Privacy in the electronic society</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">The Vector-Ballot E-Voting Approach. Financial Cryptography</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kiayias</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Game-Based Definition of Coercion-Resistance and its Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K Â¨ Usters</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Truderung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vogt</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Security</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>special issue of selected CSF 2010 papers. To appear</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Machanavajjhala</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kifer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gehrke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Venkitasubramaniam</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<title level="m">Privacy beyond kanonymity. TKDD</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Naor</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>Receipt-Free Universally-</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Verifiable Voting With Everlasting Privacy</title>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -CRYPTO</title>
		<editor>C. Dwork</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006-08" />
			<biblScope unit="volume">4117</biblScope>
			<biblScope unit="page" from="373" to="392" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A verifiable secret shuffle and its application to e-voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Neff</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;01 Proceedings of the 8th ACM conference on Computer and Communications Security</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Non-interactive and Information-Theoretic Secure Verifiable Secret Sharing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pedersen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -CRYPTO &apos;91: Proceedings</title>
		<editor>J. Feigenbaum</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1991" />
			<biblScope unit="volume">576</biblScope>
			<biblScope unit="page" from="129" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Undervote and Pattern Voting: Vulnerability and a mitigation technique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Popoveniuc</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stanton</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Coercionresistant tallying for stv voting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Teague</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ramchen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Naish</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EVT</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
