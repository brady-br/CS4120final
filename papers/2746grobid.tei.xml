<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:51+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Cloud Gaming Framework for Dynamic Graphical Rendering Towards Achieving Distributed Game Engines</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Bulman</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Lancaster University</orgName>
								<orgName type="institution" key="instit2">Lancaster University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Garraghan</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Lancaster University</orgName>
								<orgName type="institution" key="instit2">Lancaster University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Cloud Gaming Framework for Dynamic Graphical Rendering Towards Achieving Distributed Game Engines</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Cloud gaming in recent years has gained growing success in delivering games-as-a-service by leveraging cloud resources. Existing cloud gaming frameworks deploy the entire game engine within Virtual Machines (VMs) due to the tight-coupling of game engine subsystems (graphics, physics, AI). The effectiveness of such an approach is heavily dependant on the cloud VM providing consistently high levels of performance, availability, and reliability. However this assumption is difficult to guarantee due to QoS degradation within, and outside of, the cloud-from system failure, network connectivity, to consumer datacaps-all of which may result in game service outage. We present a cloud gaming framework that creates a distributed game engine via loose-coupling the graphical ren-derer from the game engine, allowing for its execution across cloud VMs and client devices dynamically. Our framework allows games to operate during performance degradation and cloud service failure, enabling game developers to exploit heterogeneous graphical APIs unrestricted from Operating System and hardware constraints. Our initial experiments show that our framework improves game frame rates by up to 33% via frame interlacing between cloud and client systems.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Video games are now the largest entertainment industry in the world, growing to $143.5b revenue in 2020 <ref type="bibr" target="#b0">[1]</ref> with the PC distribution platform; Steam, reaching over 22 million concurrent players alone <ref type="bibr" target="#b1">[2]</ref>. Cloud gaming -a paradigm whereby gaming is delivered as a service by leveraging cloud resources <ref type="bibr" target="#b2">[3]</ref> -has begun to gain increasing popularity in society, providing advantages over traditional desktop and console gaming including lower installation times, reduced hardware cost, greater device portability, and the ability to leverage cloud resources for higher graphical quality <ref type="bibr" target="#b2">[3]</ref>.</p><p>A design principle shared across all existing cloud gaming frameworks <ref type="bibr" target="#b2">[3]</ref><ref type="bibr" target="#b3">[4]</ref><ref type="bibr" target="#b5">[5]</ref><ref type="bibr" target="#b6">[6]</ref><ref type="bibr" target="#b7">[7]</ref> is that service is provisioned by deploying a game instance (an instantiation of a game program) within a Virtual Machine (VM), whereby game state is manipulated and resulting frames are encoded and streamed to a consumer client device based on user input <ref type="bibr" target="#b8">[8]</ref>. This approach is necessary primarily due to the game engine architecture: Monolithic systems with multiple subsystems tightly coupled with each other and the underlying operating system to facilitate aspects of graphics, physics, audio, and AI <ref type="bibr" target="#b9">[9]</ref>.</p><p>However such a design results in limitations within cloud gaming due to a strong dependence on performance and dependability of the cloud game instance and its connection to client devices. In the cloud, game instances deployed within VMs are exposed to a plethora of detrimental datacenter behaviors, spanning interference <ref type="bibr" target="#b10">[10]</ref>, resource contention <ref type="bibr" target="#b11">[11]</ref>, and failures <ref type="bibr" target="#b12">[12]</ref>. Such behaviors -in isolation or in tandem -result in Quality of Service (QoS) degradation in terms of lower interactivity and frames per second (FPS), lower graphical quality (lower resolution, bitrate), as well as reduced availability and reliability <ref type="bibr" target="#b13">[13]</ref>. While various approaches have been proposed to alleviate such issues <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b15">14,</ref><ref type="bibr" target="#b16">15]</ref>, they all assume a stable network connection established between the client device and the cloud game instance. Thus, such approaches are unable to tolerate cloud outages, prolonged network disconnection, or consumer data caps, resulting in consumers unable to access games entirely.</p><p>One approach to overcome these limitations would be to dynamically distribute all game engine subsystems across the cloud -and is the overarching research vision for our work. A distributed game engine would allow for dynamic deployment and reconfiguration of all subsystems across both cloud and client systems in response to the specified QoS requirements. However this is currently not possible in existing game engine architectures due to tight-coupling with their underlying platforms <ref type="bibr" target="#b17">[16]</ref>. Taking graphical rendering (a core game subsystem) as an example, game systems are developed to use specific graphics APIs (OpenGL, Vulkan, etc.), and require specialized developer knowledge to take advantage of advanced hardware features (e.g. real-time ray-tracing). Thus it is not possible to transition to other graphics APIs and platforms without significant development effort and time.</p><p>In this paper we present a cloud gaming framework that enables loose-coupling between the game engine and the graphical renderer, representing the first distributed game engine designed for the cloud. Our approach allows for dynamic run-time rendering across cloud and client systems using heterogeneous graphics APIs (Vulkan, OpenGL) in response to changing performance and network conditions. Our specific contributions are as follows:</p><p>• Creation of a distributed cloud gaming framework whereby graphical rendering is performed by the game instance via submitting generic graphics commands to the framework which automatically converts commands into specific graphics API function calls in cloud and client systems based on QoS and hardware constraints. Our design reduces game engine graphics development complexity across heterogeneous platforms.</p><p>• Empirical demonstration that our framework enhances game instance performance and fault-tolerance via renderer hot-swapping and frame interlacing. Our results show that cooperative client and cloud-based rendering can improve game frame rates by 33% against client-side or cloud-side rendering whilst using 1.1-4.0 Mbps</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Game Engines: A term popularized in the 1990's <ref type="bibr">[17,</ref><ref type="bibr">18]</ref>, game engines are a composition of subsystems working in tandem to facilitate real-time interactive simulation for entertainment purposes <ref type="bibr" target="#b18">[19]</ref>. Game engines are used to instantiate a game instance, which provide coded gameplay logic that utilizes generic data-driven systems provided by the game engine to perform a game loop <ref type="bibr" target="#b18">[19]</ref>. As shown in <ref type="figure" target="#fig_0">Figure 1</ref>, the game loop includes a set of distinct stages, each executed once per frame, and will interact with the operating system and hardware in different ways. Handle Input polls input events from user devices, Update Game State advances virtual world state to the next frame and prepares for rendering loading for any required assets, Render Game State interacts with the graphics hardware via the graphics API to generate an image to be displayed on the screen, ending with Swap Buffers displaying the computed image. Modern game engines are designed as fullyfledged frameworks, such as Unity <ref type="bibr" target="#b19">[20]</ref> and Unreal Engine 4 <ref type="bibr" target="#b20">[21]</ref>, using different architecture paradigms (event-driven, data-driven) <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23]</ref>. Notably, most modern game engines comprise four fundamental subsystems -physics, sound, input handling and graphics <ref type="bibr" target="#b17">[16]</ref>  <ref type="bibr" target="#b23">[24]</ref>.</p><p>Renderer: The graphical renderer 1 is the game engine subsystem responsible for performing graphical operations to display geometry, lighting and texture information <ref type="bibr" target="#b8">[8]</ref>. A renderer exploits graphic APIs such as OpenGL <ref type="bibr" target="#b24">[25]</ref>, Vulkan <ref type="bibr" target="#b25">[26]</ref>, DirectX <ref type="bibr">[27]</ref> and WebGPU <ref type="bibr" target="#b26">[28]</ref> to interface with the <ref type="bibr" target="#b0">1</ref> Which we refer to as the renderer graphics hardware. Graphics hardware (such as GPUs) follow a strict computation pipeline, as shown in <ref type="figure">Figure 2</ref>, with each graphics API using a different method to manipulate or interface graphics pipeline stages. If the graphics API cannot modify a specific stage (i.e. proprietary), the hardware is responsible for performing the specific stage. Operating System support for a given graphics API is determined by the organization that defines it, leading to reduced portability between platforms as a graphics API may only work for a subset of hardware vendors, and is especially true for Game Consoles APIs, DirectX <ref type="bibr">[27]</ref> and Metal <ref type="bibr" target="#b27">[29]</ref>. Thus, it takes considerable developer experience and effort to build games to be Operating System agnostic. Specific graphics features (such as real-time raytracing) are currently only accessible on specific hardware architectures <ref type="bibr" target="#b28">[30]</ref>.</p><p>Cloud gaming: Cloud gaming is a paradigm whereby cloud-resources are provisioned as a service for gaming purposes, interacted by users via a thin client <ref type="bibr" target="#b30">[31]</ref>. Cloud gaming enables game engines to be deployed and executed entirely within the cloud, running as a cloud game instance within an isolated environment such as a VM <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b5">[5]</ref><ref type="bibr" target="#b6">[6]</ref><ref type="bibr" target="#b7">[7]</ref>. As depicted in <ref type="figure">Figure 3</ref>, user inputs are streamed from a device to the cloud game instance, which are used to update and render the game state. Once the frame has been rendered in the cloud, it is compressed via a video codec algorithm and streamed to the client to be displayed on the screen. Cloud gaming provides several key advantages over traditional gaming on dedicated consumer hardware, including greater device and game instance portability <ref type="bibr" target="#b31">[32]</ref>, reduced location restrictions and power consumption for consumer devices, and access to cutting-edge graphics features such as ray tracing <ref type="bibr" target="#b2">[3]</ref>. Cloud gaming limitations: Delivering gaming service via existing frameworks <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b5">5,</ref><ref type="bibr" target="#b7">7]</ref> are strongly dependant on the operational performance and dependability of the cloud game instance and its connection to the consumer. Game instances deployed within virtualized datacenters will encounter detrimental phenomena including co-location performance interference <ref type="bibr" target="#b10">[10]</ref>, high contention <ref type="bibr" target="#b11">[11]</ref> 2 , and frequent software and hardware failure <ref type="bibr" target="#b12">[12]</ref>. All of these behaviors result in reduced QoS, measured in terms of interactivity, FPS, reduced graphics quality, as well as reduced availability and reliability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>Various cloud gaming approaches have been proposed to enhance game instance operation <ref type="bibr" target="#b32">[33]</ref><ref type="bibr" target="#b33">[34]</ref><ref type="bibr" target="#b34">[35]</ref><ref type="bibr" target="#b35">[36]</ref><ref type="bibr" target="#b36">[37]</ref>. Of relevance to this work are all empirically evaluated gaming and streaming systems which deploy game instances in cloud VMs. Huang et al. <ref type="bibr" target="#b2">[3]</ref> proposed a streaming system that executes the game instance in a cloud VM, with Audio-Visual data streamed to user thin-clients. Polled user input is encoded into a custom protocol sent to the VM to update game state and frame rendering which is transmitted, decoded, and displayed on the client. Shi et al. <ref type="bibr" target="#b37">[38]</ref> proposed a streaming framework which allows post-processing effects to be computed on the client device with the majority of the game computation and rendering performed on the cloud. The work uses rendering viewpoint, pixel depth and camera motion to perform image warping to improve the quality and encoded efficiency of the streamed video. Commercial cloud gaming frameworks such as Google Stadia <ref type="bibr" target="#b7">[7]</ref> and Microsoft Project xCloud <ref type="bibr" target="#b6">[6]</ref> also utilize cloud VMs, however due to the closed-source nature of projects it is currently unknown how game engines are modified to execute within their frameworks using the Vulkan graphics API <ref type="bibr" target="#b25">[26]</ref>. Lee et al. <ref type="bibr" target="#b3">[4]</ref> proposed a system which actively speculates user thin-client input, and predicts a subset of next possible frames for streaming upon receiving input. Such work helps tolerate network latency due to reduced computational delay between receiving input and frame streaming, however incurs substantial cloud VM computation. Command-based execution for rendering and input handling over the network has been used in the X11 protocol <ref type="bibr" target="#b38">[39]</ref>, however is limited to sending display commands to client machines as opposed to graphics rendering.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">System Design</head><p>Overview: We propose a cloud gaming framework that creates a distributed game engine that loosely-couples the renderer subsystems from other subsystems. The renderer is loosely-coupled by removing the game code's ability to perform direct function call access to specific graphics APIs. Instead, the game code generates generic graphics commands enqueued to a CloudRend component that interprets and converts commands into specific graphics API function calls to render across cloud or client systems, driven by QoS and hardware constraints.</p><p>Rationale: The advantage of using general graphics commands is two-fold: First, our framework only requires to map specific graphics API calls once, after which game code can now leverage multiple graphics APIs, thus reducing and simplifying development effort to implement specific graphics function calls for every new game engine. Second, it allows for ready transmission and replication of the renderer across client devices and cloud VMs comprising heterogeneous Operating Systems and hardware constraints.</p><p>CloudRend: The CloudRend component is responsible for determining and managing game instance rendering for game code. CloudRend can execute as a process in a single game instance, or be deployed in its own VM to facilitate multiple game instances. CloudRend comprises two main sub-components as shown in <ref type="figure" target="#fig_3">Figure 4</ref>. The Game Instance Manager interprets, transmits, and converts generic graphical commands from the game code into a specific graphics API for rendering across the system. Mitigation is responsible for selecting and executing mechanisms to improve game instance QoS due to performance degradation and failure. We have focused on developing three core generic graphical commands for CloudRend as shown in <ref type="table">Table 1</ref>. These commands were chosen as they are fundamental across all graphics APIs: RenderClear for screen clearing at frame start, required for more advance functions RenderModel for drawing geometry and RenderLightSet for large computation (per pixel lighting).</p><p>Phases: CloudRend uses four phases shown in <ref type="figure" target="#fig_4">Figure 5</ref>. store command-information tuples responsible for encoding generic graphics commands along with the relevant information required for processing. For example, during a given game loop iteration, the game code executes command RenderModel(x,y) to render a model reference x with matrix y. Discovery: Upon game instance instantiation and execution, the QoS Monitor will determine hardware constraints and periodically measure game instance performance for rendering within client devices or the cloud VM. If failure or performance degradation is detected, CloudRend will activate Mitigation to enhance game instance QoS.</p><p>Conversion: After game code has completed state updates and render commands required for the current game loop, all graphics commands in Command Buffer are transmitted by CloudRend to the Graphic Converter in the client device or cloud VM. Commands are automatically translated via a jump table that corresponds to one or more graphics API-specific procedure calls that are emitted with required data paired with command type. RenderModel() called in Vulkan is converted to vkCmdBindVertexBuffers() and vkCmdDraw() as shown in <ref type="table">Table 1</ref>. The jump table allows command execution to scale if new commands are required they can just be appended to this table with a corresponding command type for lookup.</p><p>Drawing: Our framework has two methods for image drawing: Co-location (game code and rendering performed in the same system) iterates over command-information tuples, executes graphics API function calls, and displays the produced image. Distributed (rendering performed in a different instances from game code) encodes and streams the image from the remote renderer to game code and drawn to client window.</p><p>Mitigation: CloudRend exploits renderer and game engine distribution to enhance game instance QoS via two features:</p><p>Interlacing: Enables multiple renderers distributed across the client device and cloud VM to collaboratively render frames based on game instance performance. The proportion of frames per second rendered by client or cloud systems can be user-defined, or dynamically calculated based on game instance performance (FPS), network performance (latency, bandwidth), constraints (client hardware architecture). For example, if the CloudRend QoS Monitor detects good network performance between the client and cloud, an increasing proportion of frames will be rendered within the cloud, and vice versa for degraded network conditions (and entirely clientside in the event of no network access).</p><p>Hot-Swapping: Allows dynamic run-time renderer reconfiguration with no impact on game code execution. In the event a graphics API error, we redefine enabled extensions or alternatively swap to another graphics API. A game instance using a cloud renderer can have the client renderer on warm-standby to activate upon failure detection or network connection loss. A benefit is not needing to restart the game instance upon major graphics reconfiguration (i.e. Antialiasing, Tessellation etc.) currently required for the majority of current games. While we have implemented this feature (we observed no observable frame rate difference when swapping graphics APIs during game instance execution), it has been omitted from evaluation due to space limitations. Even with such mitigation in place, severe scenarios (cloud outage, network disconnection) will still reduce graphical quality due to resource and/or hardware constraints on client systems. We believe that tolerating such scenarios is an acceptable alternative compared to service loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Preliminary Evaluation</head><p>For our experiments we have measured the performance and resource-efficiency of our proposed cloud gaming framework within various operational scenarios. Setup: The cloud VM was created via deploying a VM in a desktop machine (i7-7700HQ, 16GB RAM, Intel HD 630), and using a Raspberry Pi 4 as the client device. The selected experiment scenarios entails our framework executing a game instance where the client device contains both the game code and CloudRend, while the cloud VM contains CloudRend. Network communication between the client and cloud was performed over a wireless network to introduce greater latency variability between 3ms -100ms. The Cloud VM was configured to only use Vulkan, and the client device OpenGL (Vulkan is currently not supported on the Raspberry Pi). The zlib library was used to compress streamed images from the cloud VM, reducing its size by up to 80%. The framework was configure at different frame interlacing ratios, ranging between 100% client (rendering performed on client device), 100% cloud (rendering on cloud VM), and client-cloud ratios of 25-75%, 50-50%, and 75-25%. Each experiment entailed the game instance executing two 1280x720 scenes for 5,000 frames at 60FPS for different levels of graphical quality as depicted in <ref type="figure" target="#fig_5">Figure 6</ref>: low (100 vertices) and high (200,000 vertices) both using per pixel diffuse lighting in order to create additional computation within the system.</p><p>Frame Rate: <ref type="figure">Figure 7</ref> shows the game instance frame rate using different framework interlacing ratios. We observed that the client device is capable of achieving a frame rate of 60 FPS for low vertices scenes, and degrades to 41 FPS with increased cloud interlacing. This is because the client device is sufficiently powerful to render the geometry of low vertices scenes faster than the latency of transmitting the rendered and encoded images from the cloud VM. However, this pattern changes for high vertices scenes, where we found 50/50% frame interlacing gave a 33% improvement over cloud or client-only rendering. Such improvement is due to the cloud renderer providing faster rendering for complex geometry scenes resultant of greater compute power, however still incurs latency issues for Cloud VM transmission. However, we believe that cloud rendering performance will increase proportionally to scene complexity, as we identified through experiments that latency stemming from the cloud VM was not due to rendering or CloudRend, but due to the transport system that transfers the image into GPU memory creating a performance bottleneck. Hence, our initial results indicate the existence of a trade-off between between game instance rendering on a slower, yet direct client device rendering against a faster, yet latency induced cloud VM renderer. Network: We found that outbound network traffic (i.e. generic graphics commands to the Cloud VM) sent 12-32kbs. For inbound network traffic of images to the client device, we observed that when leveraging the cloud VM, our approach attained network throughput between 1.1Mpbs-4Mbps as shown in 8b. We observed that 50-50% interlacing achieved the highest network throughput compared to 100% cloud rendering at 3.6Mbps. This is because 50-50% interlacing achieves the highest frame rate as shown in <ref type="figure">Figure 7</ref>, and thus capable of streaming more images per second. Increased cloud rendering results in a linear increase in network data as shown in <ref type="figure">Figure 8a</ref>. As compared to other cloud gaming approaches, network usage will be higher as command buffer size increases, especially for games at higher frame rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>All existing Cloud gaming frameworks deploy and stream game engine instances using VMs. However such design encounters issues with performance degradation and failure in the cloud and between cloud and consumers. In this paper we presented a cloud gaming framework that dynamically distributes the game engine via loose-coupling of the graphical renderer from the game engine, allowing for cloud-client rendering. We have empirically demonstrated that our framework improves frame rates against solely cloud or client rendering. Results indicate that future cloud gaming engines (desktop, mobile, VR) may benefit from further distribution, allowing deployment in cloud-client, cloud-cloud, or fog-cloud based on performance and graphical quality trade offs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Discussion</head><p>While have successfully distributed the game engine within the cloud, there are some clear improvements to the design and implementation of our cloud gaming framework.</p><p>Performance: An improved frame display system can be created for better compression size and speed of streaming frames from the cloud VM using a video codec such as H.265/HEVC. The network implementation can also be optimized; during experiments we discovered that performance bottlenecks from the cloud VM were not due to framework rendering, but from our networking architecture using TCP streams that blocked the game loop while the client waits for the VM to send a computed frame. This could be improved by multi-threading the network system so the renderer does not block the main game loop while waiting to receive cloud frames, allowing more command buffers to be generated, thus increasing the cloud rendering framerate.</p><p>Graphics APIs: While we have currently implemented generic graphic commands in OpenGL and Vulkan, we aim to include additional commands and graphics APIs in future work. A long-standing issue in the games industry is the secretive nature of in-house game engine development which have gotten increasingly larger and complex. We hope this research would allow development of game engines across platforms to be considerably simpler and easier.</p><p>Multi-instance: Although we have focused on a single client game instance connecting to dedicated cloud VM similar to existing cloud gaming frameworks, we believe that the CloudRend component can be designed to facilitate multiple clients, allowing for multi-tenant rendering across entirely different game codes currently not explored. We aim to explore alternative game instance deployment scenarios (e.g. code deployed on a cloud VM with client-side rendering). Multiple Cloud VM instances could be deployed for a single client to maximize game instance performance and fault tolerance in the event of instance failure.</p><p>Mitigation: While we have demonstrated that frame interlacing can help tolerate performance degradation and failure, we plan to evaluate hotswapping and have mechanisms dynamically adapt their operation in response changing system and network conditions. Calculating the optimal ratio for frame interlacing between the cloud and client based on monitoring and modelling game instance and network performance is likely a sensible direction to investigate.</p><p>Vision: We intend to expand our cloud gaming framework to encompass other game engine subsystems such as the physics, animation and artificial intelligence. We are interested in soliciting feedback on interesting challenges posed with run-time discovery and orchestration of highly looselycoupled and distributed game engine subsystems. This challenge is difficult as subsystems such as physics require strict timing requirements within the game code, and latency between networked subsystems between the cloud instances.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Depiction of standard game loop.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Figure 2: Graphics Pipeline (Grey denotes limited/no developer control).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>2</head><label></label><figDesc>Outages are common for Day 1 major game releases expansions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Overview of CloudRend component.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Cloud gaming framework in operation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Rendered scenes: Low (100 vertices), High (200,000 vertices).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>Figure 7: Comparison of frame rate during frame interlacting.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head></head><label></label><figDesc>Buffering: At the beginning of the game instance, the game code requests CloudRend to create a Command Buffer. The Command Buffer is a small block of memory used to</figDesc><table>Description 

CloudRend 
OpenGL 
Vulkan 

Clear screen with color; 
optionally clear depth buffer 
RenderClear() 
glClearColor(), glClear() 
vkCmdBeginRenderPass() 

Draws referenced model to 
screen with model matrix 
RenderModel() 
glBindBuffer(), glDrawElements(), 
glUniformMatrix4fv() 

vkCmdBindVertexBuffers(), vkCmdDrawIndexed(), 
vkCmdPushConstants(), vkCmdBindIndexBuffer() 

Set position and color of 
global lighting setup 
RenderLightSet() 
glUniform3fv(), 
glUniform4fv() 
vkCmdPushConstants() 

Table 1: CloudRend generic graphics commands and graphics API calls. 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We would like to thank anonymous HotCloud reviewers and our shepherd Ymir Vigfusson for their constructive comments and valuable feedback to improve our paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The global games market report</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Newzoo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note>Amsterdam: gamesindustry. com</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Steam: Game and player statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Inc</surname></persName>
		</author>
		<ptr target="https://store.steampowered.com/stats/" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Gaminganywhere: an open cloud gaming system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-H</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-C</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-T</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th ACM multimedia systems conference</title>
		<meeting>the 4th ACM multimedia systems conference</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="36" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Outatime: Using speculation to enable low-latency continuous interaction for mobile cloud gaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Cuervo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Degtyarev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grizan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wolman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Flinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th</title>
		<meeting>the 13th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
				<title level="m">Annual International Conference on Mobile Systems, Applications, and Services</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="151" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A hybrid thinclient protocol for multimedia streaming and interactive gaming applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">De</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Simoens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Deboosere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>De Turck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Moreau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dhoedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Demeester</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the international workshop on Network and operating systems support for digital audio and video</title>
		<meeting>the international workshop on Network and operating systems support for digital audio and video</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Microsoft project xcloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Microsoft</surname></persName>
		</author>
		<ptr target="https://www.xbox.com/en-US/xbox-game-streaming/project-xcloud" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Google stadia</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Google</surname></persName>
		</author>
		<ptr target="https://stadia.google.com/" />
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An evaluation of contemporary game engines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Koehler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dieckmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Russell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th eCAADe Conference</title>
		<meeting>the 26th eCAADe Conference</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="743" to="750" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The case for research in game engine architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">F</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Comninos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Mcloughlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2008 Conference on Future Play: Research, Play, Share</title>
		<meeting>the 2008 Conference on Future Play: Research, Play, Share</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="228" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Measuring interference between live datacenter applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kambadur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Moseley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SC&apos;12: Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Straggler root-cause and impact analysis for massivescale virtualized cloud datacenters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Garraghan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Ouyang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mckee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Services Computing</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="91" to="104" />
			<date type="published" when="2019-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Failure analysis of jobs in compute clouds: A google cluster case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pattabiraman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE 25th International Symposium on Software Reliability Engineering</title>
		<imprint>
			<date type="published" when="2014-11" />
			<biblScope unit="page" from="167" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Avizienis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Basic concepts and taxonomy of dependable and secure computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Laprie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Randell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Landwehr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Dependable and Secure Computing</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="11" to="33" />
			<date type="published" when="2004-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Towards efficient edge cloud augmentation for virtual reality mmogs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Raychaudhuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second ACM/IEEE Symposium on Edge Computing</title>
		<meeting>the Second ACM/IEEE Symposium on Edge Computing</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Experiences with client-based speculative remote display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Lange</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Dinda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rossoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Annual Technical Conference</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="419" to="432" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Smash: A distributed game engine architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Maggiorini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Ripamonti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zanon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bujari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Palazzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE Symposium on Computers and Communication (ISCC)</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="196" to="201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Game engine architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gregory</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
			<publisher>crc Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Unity3d game engine</title>
		<ptr target="https://unity.com/" />
	</analytic>
	<monogr>
		<title level="j">U. Technologies</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Unreal 4 engine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">Epic</forename><surname>Games</surname></persName>
		</author>
		<ptr target="https://www.unrealengine.com/" />
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Evaluation of game engines for simulated surgical training</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Windsor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wünsche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th international conference on Computer graphics and interactive techniques in Australia and Southeast Asia</title>
		<meeting>the 5th international conference on Computer graphics and interactive techniques in Australia and Southeast Asia</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="273" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A data-driven game object system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bilas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Game Developers Conference Proceedings</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Game engines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lewis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">27</biblScope>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Khronos opengl 4.6 specification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Group</surname></persName>
		</author>
		<ptr target="https://www.khronos.org/registry/OpenGL/specs/gl/glspec46.core.pdf" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Khronos vulkan specification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Khronos</forename><surname>Group</surname></persName>
		</author>
		<ptr target="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note>html [27] Microsoft. (2019) Direct3d 12 programming guide. [Online</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W3c</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">&amp;quot;</forename><surname>Webgpu</surname></persName>
		</author>
		<ptr target="https://gpuweb.github.io/gpuweb/" />
		<imprint>
			<date type="published" when="2020-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Metal -apple developer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inc</surname></persName>
		</author>
		<ptr target="https://developer.apple.com/metal/" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Nvidia turing gpu architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nvidia</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Available: https</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On the quality of service of cloud gaming systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Multimedia</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="480" to="495" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A survey on cloud gaming: Future of computer games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">C</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-H</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="7605" to="7620" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Placing virtual machines to optimize cloud gaming experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Cloud Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="42" to="53" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Ubitus gamecloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ubitus</surname></persName>
		</author>
		<ptr target="http://www.ubitus.net" />
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Enabling adaptive cloud gaming in an opensource cloud gaming platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tsai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2078" to="2091" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A cost-efficient cloud gaming system at scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Network</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="42" to="47" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Ubcgaming: Ubiquitous cloud gaming system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">C M</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Systems Journal</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="2483" to="2494" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Using graphics rendering contexts to enhance the real-time video coding for mobile cloud gaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Nahrstedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Campbell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM international conference on Multimedia</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="103" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Network services in the athena environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">G</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Geer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jr</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Winter 1988 Usenix Conference</title>
		<meeting>the Winter 1988 Usenix Conference</meeting>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
