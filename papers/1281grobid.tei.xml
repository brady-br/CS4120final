<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T01:52+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Analysis of Power Consumption in a Smartphone</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Carroll</surname></persName>
							<email>aaron.carroll@nicta.com.au</email>
							<affiliation key="aff0">
								<orgName type="laboratory">South Wales and Open Kernel Labs</orgName>
								<orgName type="institution" key="instit1">NICTA and University of New South Wales</orgName>
								<orgName type="institution" key="instit2">NICTA</orgName>
								<orgName type="institution" key="instit3">University of New</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gernot</forename><surname>Heiser</surname></persName>
							<email>gernot@nicta.com.au</email>
							<affiliation key="aff0">
								<orgName type="laboratory">South Wales and Open Kernel Labs</orgName>
								<orgName type="institution" key="instit1">NICTA and University of New South Wales</orgName>
								<orgName type="institution" key="instit2">NICTA</orgName>
								<orgName type="institution" key="instit3">University of New</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">An Analysis of Power Consumption in a Smartphone</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Mobile consumer-electronics devices, especially phones, are powered from batteries which are limited in size and therefore capacity. This implies that managing energy well is paramount in such devices. Good energy management requires a good understanding of where and how the energy is used. To this end we present a detailed analysis of the power consumption of a recent mobile phone, the Openmoko Neo Freerunner. We measure not only overall system power, but the exact breakdown of power consumption by the device&apos;s main hardware components. We present this power breakdown for micro-benchmarks as well as for a number of realistic usage scenarios. These results are validated by overall power measurements of two other devices: the HTC Dream and Google Nexus One. We develop a power model of the Freerunner device and analyse the energy usage and battery lifetime under a number of usage patterns. We discuss the significance of the power drawn by various components, and identify the most promising areas to focus on for further improvements of power management. We also analyse the energy impact of dynamic voltage and frequency scaling of the device&apos;s application processor.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Mobile devices derive the energy required for their operation from batteries. In the case of many consumerelectronics devices, especially mobile phones, battery capacity is severely restricted due to constraints on size and weight of the device. This implies that energy efficiency of these devices is very important to their usability. Hence, optimal management of power consumption of these devices is critical.</p><p>At the same time, device functionality is increasing rapidly. Modern high-end mobile phones combine the functionality of a pocket-sized communication device with PC-like capabilities, resulting in what are generally referred to as smartphones <ref type="bibr" target="#b10">[11]</ref>. These integrate such diverse functionality as voice communication, audio and video playback, web browsing, short-message and email communication, media downloads, gaming and more. The rich functionality increases the pressure on battery lifetime, and deepens the need for effective energy management.</p><p>A core requirement of effective and efficient management of energy is a good understanding of where and how the energy is used: how much of the system's energy is consumed by which parts of the system and under what circumstances.</p><p>In this paper we attempt to answer this question and thus provide a basis for understanding and managing mobile-device energy consumption. Our approach is to measure the power consumption of a modern mobile device, the Openmoko Neo Freerunner mobile phone, broken down to the device's major subsystems, under a wide range of realistic usage scenarios.</p><p>Specifically, we produce a breakdown of power distribution to CPU, memory, touchscreen, graphics hardware, audio, storage, and various networking interfaces. We derive an overall energy model of the device as a function of the main usage scenarios. This should provide a good basis for focusing future energy-management research for mobile devices.</p><p>Furthermore, we validate the results with two additional mobile devices at a less detailed level: the HTC Dream and Google Nexus One. Along with the Freerunner, these three devices represent approximately the last three to four years of mobile phone technology.</p><p>The paper is structured as follows. In Section 2 we describe our measurement platform and benchmarking methodology. Section 3 describes each experiment and presents the results, and in Section 4 we perform a coarse-grained validation of the results. We then analyse this data in Section 5. Section 6 surveys existing work. Finally, we conclude in Section 7. This device was selected because the design files, particularly the circuit schematics <ref type="bibr" target="#b6">[7]</ref>, are freely available. This is critical for our approach to power measurement, which relies on understanding the power distribution network at the circuit level. For this reason, few other devices would be suitable.</p><p>The high-level architecture of the Freerunner is shown in <ref type="figure" target="#fig_0">Figure 1</ref>. The total system memory is split equally between two banks, one external RAM package, and one on-chip. All peripherals except the graphics chip communicate with the application processor (CPU) by programmed I/O over various serial buses.</p><p>The other devices studied, the HTC Dream (G1) and Google Nexus One (N1), are described in Section 4. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Experimental setup</head><p>To calculate the power consumed by any component, both the supply voltage and current must be determined.</p><p>To measure current, we inserted sense resistors on the power supply rails of the relevant components-this is relatively simple on the DuT selected, since most of them have been designed with placeholders for sense resistors, factory-populated with 0 Ω. Where this was not the case, choke inductors could be reused in the same way. In both cases, we replaced the part with a current-sense resistor selected such that the peak voltage drop did not exceed 10 mV, which in all cases is less than 1 % of the supply voltage and therefore presents an acceptably small perturbation. With a known resistance and measured voltage drop, current can be determined by Ohm's law.</p><p>To measure the voltages, we used a National Instruments PCI-6229 DAQ, to which the sense resistors were connected via twisted-pair wiring. The key characteristics of this hardware are summarised in  <ref type="table" target="#tab_1">Table 2</ref>: National Instruments PCI-6229 DAQ specifications <ref type="bibr" target="#b5">[6]</ref>.</p><p>The sense-resistor voltage drops were sampled differentially at the ±0.2 V input range. We used the same physical connections to measure supply voltages; these were taken relative to ground from the component side of the resistors, in the ±5 V range.</p><p>We were able to directly measure the power consumed by the following components: CPU core, RAM (both banks), GSM, GPS, Bluetooth, LCD panel and touchscreen, LCD backlight, WiFi, audio (codec and amplifier), internal NAND flash, and SD card. Since the graphics module had too many supply rails to measure directly, we instead used a combination of direct and subtractive measurements.</p><p>Power to the DuT was supplied through a bench power supply connected to the phone's battery terminals so we did not need to deal with battery management. This also prevents the OS's power policies from interfering with the benchmarks. Total system power consumption was measured at this point by inserting a sense resistor between the supply and the phone. For the G1 and N1 we measured total system power by inserting a sense resistor between the device and its battery.</p><p>Measuring backlight power required special attention, because its supply voltage (10-15 V, depending on the brightness) far exceeded the maximum range supported by our DAQ hardware. To resolve this, we pre-scaled the backlight voltage with some external circuitry, consisting of a high-input-impedance voltage follower feeding a fixed voltage divider. This brought the voltage within the ±5 V range.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Voltage regulation efficiency</head><p>Our measurement approach yields the power directly consumed by each component. However, a certain amount of additional power is lost in converting the supply (i.e. battery) voltage to the levels required by the components. We have not included this factor in the results reported, because the conversion efficiencies are unknown. However, based on the data sheet of a similar part (the NXP PCF 50606), the efficiency conversion is likely to be in the range of 75-85 %, depending on the current drawn.</p><p>Because of this, we differentiate between "total power", measured at the battery, and "aggregate power", measured as the sum of individual component measurements. The latter assumes no power is consumed in the non-instrumented components, and while we haven't been able to measure precisely what their contribution is, it is certainly less than 10 %, and probably within a few percent of the aggregate consumption.</p><p>One exception to this is the backlight boost converter, the efficiency of which we measured to be 67 %. We determined the cause of this poor efficiency to be heating in an external component. We found no evidence to suggest this is an issue for any of the other voltage regulators.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Software</head><p>The DuT ran the Freerunner port of the Android 1.5 operating system <ref type="bibr" target="#b0">[1]</ref> using the Linux v2.6.29 kernel. Except for the CPU micro-benchmark, the kernel was configured with the ondemand frequency scaling governor, using 100 MHz and 400 MHz-the only two frequencies supported by both the hardware and OS.</p><p>On the host system we ran the power-data collection software which interfaced with the National Instruments DAQmxBase 3.3 library to collect raw data from the DAQ, aggregate it, and write the result to file for postprocessing. Each data point collected was an average of 2000 consecutive voltage samples. We configured the tool such that a complete power snapshot of the system could be generated approximately every 400 ms.</p><p>The benchmarks were coordinated on the host machine, which communicated with the DuT via a serial connection. It was responsible for executing benchmarks on the DuT, synchronising the power measurement software with the benchmark, and collecting other relevant data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Benchmarks</head><p>We ran two types of benchmarks. First, a series of micro-benchmarks designed to independently characterise components of the system, particularly their peak and idle power consumption.</p><p>Second, we ran a series of macro-benchmarks based on real usage scenarios. For low-interactivity applications (e.g. music playback), we simply launched them from the command line. For interactive applications, such as web browsing, we took a trace-based approach. A trace consisted of a sequence of input events, including a time-stamp, the name of the device providing the input (the touchscreen or one of two pushbuttons), and for touchscreen events, the coordinates of the touch. The Linux kernel provides this information by reading from the /dev/input/event * device files. To collect the trace, we used the target application normally, while in the background storing the input events to file. We then replayed the events under benchmarking conditions by writing the collected data to the /dev/input/event * files at the correct time.</p><p>Although this approach does bypass the hardware and interrupt paths that would usually be followed for a touchscreen event, our measurements showed the additional power to be negligible. The vast majority of energy required to handle a touchscreen event is consumed in delivering it from the kernel to software. 3 Results</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Baseline cases</head><p>Prior to running any benchmarks, we established the baseline power state of the device, when no applications are running. There are two different cases to consider: suspended and idle. For the idle case, there is also the application-independent power consumption of the backlight to consider.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Suspended device</head><p>A mobile phone will typically spend a large amount of time in a state where it is not actively used. This means that the application processor is idle, while the communications processor performs a low level of activity, as it must remain connected to the network be able to receive calls, SMS messages, etc. As this state tends to dominate the time during which the phone is switched on, the power consumed in this state is critical to battery lifetime. The Android OS running on the application processor aggressively suspends to RAM during idle periods, whereby all necessary state is written to RAM and the devices are put into low-power sleep modes (where appropriate). To quantify power use while suspended, we forced the device into Android's suspended state and measured the power over a 120 second period. <ref type="figure" target="#fig_1">Figure 2</ref> shows the results, averaged over 10 iterations. The average aggregate power is 68.6 mW, with a relative standard deviation (RSD) of 8.2 %. The large fluctuations are largely due to the GSM (14.4 % RSD) and graphics (13.0 %) subsystems.</p><p>The GSM subsystem power clearly dominates while suspended, consuming approximately 45 % of the overall power. Despite maintaining full state, RAM consumes negligible power-less than 3 mW. Note that the GSM subsystem in our device does not use system memory-it has its own bank of RAM which we include in the GSM power measurements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Idle device</head><p>The device is in the idle state if it is fully awake (not suspended) but no applications are active. This case constitutes the static contribution to power of an active system. We run this case with the backlight turned off, but the rest of the display subsystem enabled. <ref type="figure" target="#fig_2">Figure 3</ref> shows the power consumed in the idle state. As with the suspend benchmark, we ran 10 iterations, each of 120 seconds in the idle state. Power consumed in this state was very stable, with an RSD of 2.6 %, influenced largely by GSM, which varied with an RSD of 30 %. All other components showed an RSD below 1 %. <ref type="figure" target="#fig_2">Figure 3</ref> shows that the display-related subsystems consume the largest proportion of power in the idle state-approximately 50 % due to the graphics chip and LCD alone, and up to 80 % with backlight at peak brightness. GSM is also a large consumer, at 22 % of aggregate power. <ref type="figure" target="#fig_3">Figure 4</ref> shows the power consumed by the display backlight over the range of available brightness levels. That level is an integer value between 1 and 255, programmed into the power-management module, used to control backlight current. Android's brightness-control user-interface provides linear control of this value between 30 and 255.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Display</head><p>The minimum backlight power is approximately 7.8 mW, the maximum 414 mW, and a centred slider corresponds to a brightness level of 143, consuming 75 mW. The backlight consumes negligible power when disabled (as in the above idle benchmarks). We also measured how the content displayed on the LCD affected its power consumption: 33.1 mW for a completely white screen, and 74.2 mW for a a black screen. Display content can therefore affect overall power consumption by up to 43 mW.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Micro-benchmarks</head><p>As mentioned in Section 2.4, we used micro-benchmarks to determine the contribution to overall power from various system components. Specifically we used benchmarks to exercise the application processor (CPU and memory), the flash storage devices, and the network interfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">CPU and RAM</head><p>To measure CPU and RAM power, we ran a subset of the SPEC CPU2000 suite. There are several reasons for not running all benchmarks of the suite. Firstly, we could only use benchmarks which we could build and run on the Android OS, which rules out those written in C++ or Fortran, due to Android's lack of run-time support for these languages. They also needed to fit into the phone's limited memory and their execution times needed to be short enough to give reasonable turn-around. Finally, we were only interested in establishing the power consumption of CPU and memory, rather than making comparisons between different platforms' algorithms, hence completeness of the suite was not a relevant consideration.</p><p>From the candidates remaining according to the above criteria, we selected a set representing a good spectrum of CPU and memory utilisation, from highly CPU-bound to highly memory-bound. We determined memoryboundedness by running the entire suite on a server Linux system and comparing the slowdown due to frequency scaling. Snowdon et al. <ref type="bibr" target="#b8">[9]</ref> show that this slowdown is primarily due to memory-boundedness. While Figure 5: CPU and RAM power when running SPEC CPU2000 micro-benchmarks, sorted by CPU power.</p><p>we do not expect the benchmarks to behave similarly on the different platforms, our aim is only to select benchmarks with different characteristics. The SPEC CPU2000 benchmarks ultimately selected are equake, vpr, gzip, crafty and mcf.</p><p>For each of the benchmarks, we measured the average CPU and RAM power at fixed core frequencies of 100 MHz and 400 MHz. We also measured power for the system in the idle state. <ref type="figure">Figure 5</ref> shows these results, averaged over 10 runs. The RSD is less than 3 % in all cases.</p><p>For the idle, equake, vpr and gzip workloads, CPU power dominates RAM power considerably at both frequencies. However, crafty and mcf show that RAM power can exceed CPU power, albeit by a small margin. <ref type="table" target="#tab_3">Table 3</ref> shows the effect of frequency scaling on the performance, as well as combined CPU and RAM power and energy of the benchmarks. The wide range of slowdown factors across the different benchmarks validates our selection of workloads as representing a range of CPU/memory utilisations.   <ref type="figure">Figure 6</ref>: SD, NAND, CPU and RAM power for flash storage read and write benchmarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Benchmark Performance Power Energy</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Flash storage</head><p>Bulk storage on the Freerunner device is provided by 256 MiB of internal NAND flash, and an external micro Secure Digital (SD) card slot. To measure their maximum power consumption, we used the Linux dd program to perform streaming reads and writes. For reads we copied a 64 MiB file, filled with random data, to /dev/null in 4 KiB blocks. For writes, 8 MiB of random data was written, with an fsync between successive 4 KiB blocks to ensure predictability of writes. Between each iteration we forced a flush of the page cache. <ref type="figure">Figure 6</ref> shows the power consumed by the NAND flash and SD card, as well as the CPU and RAM, averaged over 10 iterations of each workload. <ref type="table" target="#tab_5">Table 4</ref> shows the corresponding data throughput, efficiency (including NAND/SD power and the CPU and RAM power to support it), and idle power consumption. The power and throughput RSD is less than 5 % in all cases.</p><p>The graphics module, which contains the physical SD card interface, showed a power increase of 2.2 mW (2.6 % above static) for writes, and a 21.1 mW increase (26 %) for reads.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Metric</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Network</head><p>In this benchmark we stressed the two main networking components of the device: WiFi and GPRS (provided by the GSM subsystem). The test consisted of downloading a file via HTTP using wget. The files contained random data, and were 15 MiB for WiFi, and 50 KiB for GPRS. The results of 10 iterations of the benchmark are shown in <ref type="figure" target="#fig_5">Figure 7</ref>.</p><p>WiFi showed a throughput of 660.1 ± 36.8 KiB/s, and GPRS 3.8 ± 1.0 KiB/s. However, they both show comparable power consumption far exceeding the contribution of the RAM and CPU. The increased CPU and RAM power for WiFi reflects the cost of processing data with a higher throughput. Despite highly-variable throughput, GSM showed a relatively consistent power consumption with an RSD of approximately 2 %.</p><p>To test the effect of signal strength on power and throughput, we re-ran the network benchmarks with the device shielded within a metal box of 2 mm thickness. Over GPRS, this resulted in an increase of GSM power of 30 %, but no effect on throughput. The shielding resulted in a reported signal strength drop of 10 dBm. Over WiFi, the signal strength dropped by only 2 dBm, and no effect on throughput or power consumption was observed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">GPS</head><p>To measure power consumption of the GPS subsystem, we enabled the module and ran the GPS Status 2 Android application. <ref type="table">Table 5</ref> shows the power consumed by the GPS module in three situations; using only the internal antenna, with an external active antenna attached, and when idle (i.e. powered down).</p><p>We noticed that the energy consumption of the module is largely independent of the received signal-neither the number of satellites, nor the signal strength, had any appreciable effect.</p><p>This observation is contrary to the part's data sheet</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>State</head><p>Power (mW) Enabled (internal antenna) 143.1 ± 0.05 % Enabled (external antenna) 166.1 ± 0.04 % Disabled 0.0 <ref type="table">Table 5</ref>: GPS energy consumption.</p><p>[10], which specifies that power consumption should drop by approximately 30 % after satellite acquisition. It is unclear why we did not see such behaviour; perhaps due to the GPS module itself, or more likely an error in hardware integration or software. In addition, the powermanagement features of the device are not exploited by software. Thus, these figures should only be considered worst-case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Usage scenarios</head><p>Here we show the results of using macro-benchmarks to determine power consumption under a number of typical usage scenarios of a smartphone. Specifically we examined audio and video playback, text messaging, voice calls, emailing and web browsing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Audio playback</head><p>This benchmark is designed to measure power in a system being used as a portable media player. The sample music is a 12.3 MiB, 537-second stereo 44.1 kHz MP3, with the output to a pair of stereo headphones. The measurements are taken with the backlight off (which is representative of the typical case of someone listening to music or podcasts while carrying the phone in their pocket). However, GSM power was included, as the realistic usage scenario includes the phone being ready to receive calls or text messages. <ref type="figure" target="#fig_6">Figure 8</ref> shows the power breakdown for this benchmark at maximum volume, averaged over 10 iterations. The audio file is stored on the SD card. Between successive iterations we forced a flush of the buffer cache to ensure that the audio file was re-read each time.</p><p>The results show the audio subsystem (amplifier and codec) consuming 33.1 mW with an RSD of less than 0.2 %. Approximately 58 % of this power is consumed by the codec, with the remaining 42 % used by the amplifier. Compared with the idle state, this corresponds to a negligible change in codec power, with amplifier power increasing by 80 %. Overall, the audio subsystem accounts for less than 12 % of power consumed.</p><p>In addition to maximum volume, we also measured the system at 13 % volume. This showed little change-the audio subsystem power decreased by 4.3 mW (approximately 14 %), mostly in the amplifier. However, for unknown reasons, the power consumed by the graphics chip increased by 4.6 mW. As a result, the additional power consumed in the high-volume benchmark is less than 1 mW compared with the low-volume case. Again, maintaining a connection to the GSM network requires a significant and highly variable amount of power, specifically 55.6 ± 19.7 mW in this case. While the MP3 file is loaded from the SD card, the cost of doing so is negligible at &lt; 2 % of total power.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Video playback</head><p>In this benchmark we measured the power requirements for playing a video file. We used a 5 minute, 12.3 MiB H.263-encoded video clip (no sound), and played it with Android's camera application. Again we forced a flush of the buffer cache between iterations. The power averaged over 10 iterations is shown in <ref type="figure">Figure 9</ref>.</p><p>Since the purpose of the macro-benchmarks is to analyse the full system, we have included backlight power in the results. However, rather than arbitrarily choosing a single brightness, we have plotted the results at 0 %, 33 %, 66 %, and 100 %, corresponding to the position of Android's brightness-control slider. These correspond to brightness levels of 30, 105, 180 and 255 respectively. GSM power is again included.</p><p>While the CPU is the biggest single consumer of power (other than backlight), the display subsystems still account for at least 38 % of aggregate power, up to 68 % with maximum backlight brightness. The energy cost of loading the video from the SD card is negligible, with an average power of 2.6 mW over the length of the benchmark.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3">Text messaging</head><p>We benchmarked the cost of sending an SMS by using a trace of real phone usage. This consists of loading the contacts application and selecting a contact, typing and sending a 55-character message, then returning to the home screen; lasting a total of 62 seconds. To ensure the full cost of the GSM transaction is included, we measured power for an additional 20 seconds. The average result of 10 iterations of this benchmark are shown in <ref type="figure" target="#fig_0">Figure 10</ref>. Again, the power for four backlight brightness levels is shown. Power consumed is again dominated by the display components. The GSM radio shows an average power of 66.3 ± 20.9 mW, only 7.9 mW greater than idle over the full length of the benchmark, and accounting for 22 % of the aggregate power (excluding backlight). All other components showed an RSD of below 3 %. <ref type="figure" target="#fig_0">Figure 11</ref> shows the power consumption when making a GSM phone call. The benchmark is trace-based, and includes loading the dialer application, dialing a number, and making a 57-second call. The dialled device was configured to automatically accept the call after 10 sec-   onds. Thus, the time spent in the call was approximately 40 seconds, assuming a 7-second connection time. The total benchmark runs for 77 seconds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.4">Phone call</head><p>GSM power clearly dominates in this benchmark at 832.4 ± 99.0 mW. Backlight is also significant, however note that its average power is lower than in other benchmarks, since Android disables the backlight during the call. The backlight is active for approximately 45 % of the total benchmark.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.5">Emailing</head><p>For this benchmark, we used Android's email application to measure the cost of sending and receiving emails. The workload consisted of opening the email application, downloading and reading 5 emails (one of which included a 60 KiB image) and replying to 2 of them. The results of the benchmark are shown in <ref type="figure" target="#fig_0">Figure 12</ref>, averaged over 10 iterations.</p><p>The power breakdown between the GPRS and WiFi   benchmarks is comparable, except for the GSM and WiFi radios. Despite presenting identical workloads to the radios, GSM consumes more than three times the power of WiFi.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.6">Web browsing</head><p>Our last benchmark measured the power consumption for a web-browsing workload using both GPRS and WiFi connections. The benchmark was trace-based, ran for a total of 490 seconds, and consisted of loading the browser application, selecting a bookmarked web site and browsing several pages. We used the BBC News website, which we mirrored locally to improve the reliability of the benchmark. After each run, the browser cache was cleared. The results averaged over 10 iterations are shown in <ref type="figure" target="#fig_0">Figure 13</ref>, including backlight power at 4 brightness levels.</p><p>GPRS consumes more power than WiFi by a factor of 2.5. The other components do not display any significant difference between the two benchmarks.</p><p>This benchmark, along with the emailing benchmark, are the only two where a more modern phone can be expected to show significantly different results. The much higher bandwidth supported by 3G protocols is likely to result in them being more power-hungry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Validation</head><p>In this section, we measure the power consumption of two additional smartphones; the HTC Dream (G1), and the Google Nexus One (N1). <ref type="table" target="#tab_9">Table 6</ref> lists the key features of these devices.</p><p>We measure the full-system power of these platforms at the battery; per-component measurements are not possible because the necessary documentation (schematics, etc.) are not available to us. Moreover, there is no reason to expect these production devices would be capable of the type of instrumentation we have performed on the Freerunner, since the additional components and PCB area would increase the per-unit cost. <ref type="figure" target="#fig_0">Figure 14</ref> plots the power consumption of the various backlights on the G1 as a function of brightness level. In addition to the LCD display backlight, the G1 features a backlit physical keyboard and buttons which are not present on either the Freerunner or the N1. These backlights do not have any brightness control, and contribute 189 mW when both enabled. The content of the LCD display can affect power consumption by up to 17 mW. The Nexus One features an OLED display, and as such does not require a separate backlight like the Freerunner and G1. Furthermore, the effects of display content and brightness on power consumption are more tightly coupled. For instance, the OLED power consumption for a black screen is fixed, regardless of the brightness setting. For a completely white screen at minimum brightness, an additional 194 mW is consumed, and at maximum brightness, 1313 mW. <ref type="figure" target="#fig_0">Figure 15</ref> plots the G1 and N1 total system power under our SPEC CPU2000 workloads at the minimum and maximum frequencies supported by the respective device: 246 MHz and 384 MHz on the G1, and 245 MHz and 998 MHz on the N1. <ref type="table">Table 7</ref> shows the percentage slowdown, and reduction in full system power, due to frequency scaling. This benchmark was run with the display system powered down and all radios disabled.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Display and backlight</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">CPU</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G1 N1</head><p>Figure 15: N1 and G1 system power for SPEC CPU2000 benchmarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performance (%)</head><p>Power <ref type="formula">(</ref>  <ref type="table">Table 7</ref>: SPEC CPU2000 performance and average system power of 246 MHz relative to 384 MHz on the G1, and 245 MHz relative to 998 MHz on the N1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Bluetooth</head><p>As noted earlier, we were unable to get Bluetooth working reliably on the Freerunner phone. To get an idea of Bluetooth power consumption, we re-ran the audio benchmark on the G1 with the audio output to a Bluetooth stereo headset. The power difference between this and the baseline audio benchmark should yield the consumption of the Bluetooth module, because (as shown in our Freerunner benchmarks) the power consumed by the audio subsystem is almost entirely static.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Power (mW) Benchmark</head><p>Total Bluetooth Audio baseline 459.7 -Bluetooth (near) 495.7</p><p>36.0 Bluetooth (far) 504.7 44.9 <ref type="table">Table 8</ref>: G1 Bluetooth power under the audio benchmark. <ref type="table">Table 8</ref> shows the total and estimated Bluetooth power consumption for the audio benchmarks. In the "near" benchmark, the headset was placed approximately 30 cm from the phone, and about 10 m in the "far" benchmark. <ref type="table">Table 9</ref> shows total system power consumption for the Freerunner, G1, and Nexus One for a selection of our benchmarks. The power consumption of the backlight (OLED for the N1) has been subtracted out, since it is highly dependent on the user's brightness setting. Table 10 shows the additional power consumption of the OLED display at minimum and maximum brightness levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Benchmarks</head><p>The lower power consumption of the G1 in the idle, web and email benchmarks can be attributed to the excellent low-power state of its SoC and effective use of it by software. This can be seen in the SPEC benchmarks, where the idle system consumes less than 22 mW; the idle CPU power must be lower still.</p><p>The power disparity for the phone call benchmark is likely due to power consumed by the non-radio components of the system. The G1 and Nexus One phones enter a suspended state during the call, offloading all functionality to the UMTS module. In contrast, the Freerunner remains in a fully-active state throughout. The power consumption of the GSM subsystem alone (832.4 mW) is comparable to the G1 and N1 system consumption. Due to lack of freely-available documentation, it is not clear whether the Freerunner's GSM chipset lacks this feature, or if it is not supported in software.  <ref type="table">Table 9</ref>: Freerunner, G1 and N1 system power (excluding backlight) for a number of micro-and macrobenchmarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Analysis</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Where does the energy go?</head><p>Our results show that the majority of power consumption can be attributed to the GSM module and the display, including the LCD panel and touchscreen, the graphics accelerator/driver, and the backlight. In all except the GSM-intensive benchmarks, the brightness of the backlight is the most critical factor in determining power consumption. However, this is a relatively simple device from a power-management perspective, and largely depends on the user's brightness preference. Our results confirm that aggressive backlight dimming can save a great deal of energy, and further motivates the inclusion of ambient light and proximity sensors in mobile devices to assist with selecting an appropriate brightness. Moreover, the N1 OLED results show that merely selecting a light-on-dark colour scheme can significantly reduce energy consumption.</p><p>The GSM module consumes a great deal of both static and dynamic power. Merely maintaining a connection with the network consumes a significant fraction of total power. During a phone call, GSM consumes in excess of 800 mW average, which represents the single largest power drain in any of our benchmarks. Unfortunately, a phone-call-heavy workload presents little scope for software-level power management. Dimming the backlight during a call, as Android does, is clearly good policy, saving up to 40 % power even with the large GSM consumption.</p><p>Overall, the static contribution to system power consumption is substantial. In all of our usage scenarios, except GSM phone call, static power accounts for at least 50 % of the total.  ure rises substantially. This leads us to the conclusion that the most effective power management approach on mobile devices is to shut down unused components and disable their power supplies (where possible). The RAM, audio and flash subsystems consistently showed the lowest power consumption. While our micro-benchmarks showed that the peak power of the SD card could be substantial (≈ 50 mW), in practice the utilisation is low enough such that on average, negligible power is consumed. Even video playback, one of the more data-intensive uses of mobile devices, showed SD power well under 1 % of total power. RAM has similar characteristics; micro-benchmarks showed that RAM power can exceed CPU power in certain workloads, but in practical situations, CPU power overshadows RAM by a factor of two or more. Audio displayed a largely static power consumption in the range of 28-34 mW. Overall, RAM, audio and SD have little effect on the power consumption of the device, and therefore offer little potential for energy optimisation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Dynamic voltage and frequency scaling</head><p>Our CPU micro-benchmarks show that dynamic voltage and frequency scaling (DVFS) can significantly reduce the power consumption of the CPU. However, this does not imply reduced energy overall, because the run-time of the workload also increases. Our results show ( <ref type="table" target="#tab_3">Table 3)</ref> that only highly memory-bound workloads (namely mcf) exhibit a net reduction in CPU/RAM energy.</p><p>However, such a simplistic analysis assumes that after completing the task, the device consumes zero power. Clearly this is not a realistic model, particularly for a smartphone. To correct for this, we can "pad" each of the measurements with idle power <ref type="bibr" target="#b4">[5]</ref> in order to equalise the run times, according to the following equation:</p><formula xml:id="formula_0">E = P t + P idle (t max − t)</formula><p>where E is the equivalent energy consumed for the benchmark;  <ref type="table" target="#tab_0">Table 11</ref>: SPEC CPU2000 percentage total system energy consumption of the minimum frequency compared with the maximum frequency, padded with idle power.</p><p>P is the average power over the run-time of the benchmark; t is the run-time of the benchmark; P idle is the idle power; t max is the maximum run-time of the benchmark over all frequencies. <ref type="table" target="#tab_0">Table 11</ref> shows the energy consumed for each of the SPEC benchmarks at the lowest frequency, compared to the highest frequency, padded with idle power.</p><p>The results show that the practical benefits of DVFS depend largely on the CPU hardware (particularly idle power), and to some extent, the workload.</p><p>On the G1, which has a good low-power idle mode, reducing frequency always results in increased energy usage. It appears that DVFS on this platform is completely ineffective.</p><p>On the Freerunner, DVFS only yields a marginal energy reduction of approximately 5 %-a saving of at most 20 mW. However, the N1 shows considerable advantages to using DVFS, saving up to 35 %, corresponding to an average power reduction of 138 mW. Whether or not to use DVFS on these two platforms is a policy decision, since reducing frequency can affect user experience.</p><p>Much of the energy reduction on the Freerunner can be attributed to the high idle power. For a system going into suspend (rather than idle) after completing the workload, DVFS no longer offers an advantage. However, on the N1 this is not the case: DVFS is still effective, even if transitioning into a very-low power state. This is due to the processor's high efficiency at low frequencies, which can be seen in <ref type="figure" target="#fig_0">Figure 15</ref>.</p><p>In the case of an idle system, reducing frequency can result in an energy saving, and at worst has no effect. Our results show that DVFS reduces idle CPU/RAM consumption by about 30 % on the Freerunner. However, in absolute terms, this is less than a 20 mW saving: 6.5 % of an idle system. On the N1, this saving is approximately 36 mW. On the G1, frequency scaling during idle periods is ineffective due to the processor's low-power idle state, which is used aggressively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Energy model</head><p>We can express the results of Section 3 in a scenariobased energy model of the Freerunner device, which shows the energy for each usage scenario as a function of time:</p><formula xml:id="formula_1">E audio (t) = 0.32W × t E video (t) = (0.45W + P BL ) × t E sms (t) = (0.3W + P BL ) × t E call (t) = 1.05W × t E web (t) = (0.43W + P BL ) × t E email (t) = (0.61W + P BL ) × t</formula><p>The equations give the energy consumed in Joules when the time is supplied in seconds. P BL is the backlight power (in watts), scenarios without a P BL term are assumed to run with backlight off.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Modelling usage patterns</head><p>To investigate day-to-day power consumption of the device, we define a number of usage patterns. Suspend represents the baseline case of a device which is on standby, without placing or receiving calls or messages. The casual pattern represents a user who uses the phone for a small number of voice calls and text messages each day. Regular represents a commuter with extended time of listening to music or podcasts, combined with more lengthy or frequent phone calls, messaging and a bit of emailing. The business pattern features extended talking and email use together with some web browsing. Finally, the PMD (portable media device) case represents extensive media playback. The parameters of these patterns are summarised in <ref type="table" target="#tab_0">Table 12</ref>. In each case, GPRS is used for data networking.</p><p>The Freerunner uses a battery of 1.2 Ah capacity, which is approximately 16 kJ. <ref type="table" target="#tab_0">Table 13</ref> shows the power use, and resulting battery life corresponding to the above use patterns. We assume that in all cases requiring backlight, illumination level is set at approx 66 %, corresponding to 140 mW. In all other cases, backlight is assumed off.</p><p>The table shows that total battery life varies by almost a factor of 2.5 between use cases. It shows that GSM is the dominating energy drain, followed by CPU and graphics. <ref type="table" target="#tab_0">Suspend  - - - - - - Casual  15  - - 15  - - Regular  30  - 60  30  15  15  Business  30  - - 60  30  60  PMD  - 60</ref> 180 ---  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Workload SMS Video Audio Phone call Web browsing Email</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Limitations</head><p>Our work has a number of limitations which need to be kept in mind when using our results. The biggest one is that the Freerunner is not a latestgeneration mobile phone, but is a few years old. The main feature it is lacking is a 3G cellular interface, which supports much higher data rates than the 2.5G GPRS interface. Our validation results show that this higher data rate does not appreciably affect power consumption in practical situations.</p><p>Further, the application processor is based on a relatively dated ARMv4 architecture, however it is clocked at a rate consistent with 2009-vintage smartphones. The difference in power consumption compared with more modern processors can traced largely to idle power; in other respects, the age of the CPU is not a substantial limitation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Mahesri and Vardhan <ref type="bibr" target="#b3">[4]</ref> perform an analysis of power consumption on a laptop system. Their approach to component power measurement is driven partially by direct power measurement, but largely by deduction using modelling and off-line piece-wise analysis. They show that the CPU and display are the main consumers of energy for their class of system, and that other components contribute substantially only when they are used intensively. Their results mirror our observations that RAM power is insignificant in real workloads.</p><p>Bircher and John <ref type="bibr" target="#b1">[2]</ref> look at component power estimation using modelling techniques. They demonstrate an error of less than 9 % on average across all tested subsystems, including memory, chipset, disk, CPU, and I/O.</p><p>In a later work, Bircher and John <ref type="bibr" target="#b2">[3]</ref> measure the power consumption of the CPU, memory controller, RAM, I/O, video and disk subsystems under a number of workloads. Their results show that CPU and disk consume the majority of the power, with the RAM and video systems consuming very little. However, under the SPEC CPU suites, they show that RAM power can indeed exceed CPU power for highly memory-bound workloads.</p><p>Sagahyroon <ref type="bibr" target="#b7">[8]</ref> perform an analysis similar to ours on a handheld PC. They show significant consumption in the display subsystems, particularly in backlight brightness. Unlike our results, theirs suggest that the CPU, and its operating frequency, is important to overall power consumption. They also show significant dynamic power consumption in the graphics subsystems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions and Future Work</head><p>We performed a detailed analysis of energy consumption of a smartphone, based on measurements of a physical device. We showed how the different components of the device contribute to overall power consumption. We developed a model of the energy consumption for different usage scenarios, and showed how these translate into overall energy consumption and battery life under a number of usage patterns.</p><p>The open nature of the Openmoko Neo Freerunner smartphone is what allowed us to perform such a detailed analysis and breakdown of its power consumption. This is not possible to the same degree on a typical commercial device.</p><p>We have compared the detailed measurements with a coarse-grained analysis of more modern phones, and shown the results to be comparable.</p><p>The ultimate aim of this work is to enable a systematic approach to improving power management of mobile devices. We hope that by presenting this data, we will enable such future research, both in our lab as well as by others.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Architecture of the Freerunner device, showing the important components and their interconnects.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Power breakdown in the suspended state. The aggregate power consumed is 68.6 mW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Average power consumption while in the idle state with backlight off. Aggregate power is 268.8 mW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Display backlight power for varying brightness levels.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Power consumption of WiFi and GSM modems, CPU, and RAM for the network microbenchmark.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Audio playback power breakdown. Aggregate power consumed is 320.0 mW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Figure 9: Video playback power breakdown. Aggregate power excluding backlight is 453.5 mW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: GSM phone call average power. Excluding backlight, the aggregate power is 1054.3 mW.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Power consumption for the email macrobenchmark. Aggregate power consumption (excluding backlight) is 610.0 mW over GPRS, and 432.4 mW for WiFi.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Web browsing average power over WiFi and GPRS. Aggregate power consumption is 352.8 mW for WiFi, and 429.0 mW for GPRS, excluding backlight.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Display, button and keyboard backlight power on the G1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 : Freerunner hardware specifications.</head><label>1</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><head>Table 2 .</head><label>2</label><figDesc></figDesc><table>Characteristic 
Value 
Max. sample rate 250 kS/s 
Input ranges 
±0.2 V, ±1 V, ±5 V and ±10 V 
Resolution 
16 b 
Accuracy 
112 µV @ ±0.2 V range 
1.62 mV @ ±5 V range 
Sensitivity 
5.2 µV @ ±0.2 V range 
48.8 µV @ ±5 V range 
Input impedance 10 GΩ 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>SPEC CPU2000 performance, power and en-
ergy of 100 MHz relative to 400 MHz. Both CPU and 
RAM power/energy are included. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 4 : Flash storage power and performance.</head><label>4</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>450</head><label>450</label><figDesc></figDesc><table>Backlight 
GSM 
CPU 
WiFi 
Graphics 
LCD 
Rest 
GSM 
CPU 
WiFi 
Graphics 
LCD 
Rest 

Power (mW) 

0% 
33% 
67% 
100% 

GPRS 
WiFi 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>450</head><label>450</label><figDesc></figDesc><table>Backlight 
GSM 
CPU 
WiFi 
Graphics 
LCD 
Rest 
GSM 
CPU 
WiFi 
Graphics 
LCD 
Rest 

Power (mW) 

0% 
33% 
67% 
100% 

GPRS 
WiFi 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="false"><head>Table 6 :</head><label>6</label><figDesc></figDesc><table>G1 and Nexus One specifications. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_13" validated="false"><head>Table 10 :</head><label>10</label><figDesc></figDesc><table>Additional power consumed by the N1 OLED 
display at maximum and minimum brightness. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15" validated="false"><head>Table 12 :</head><label>12</label><figDesc></figDesc><table>Usage patterns, showing total time for each activity in minutes. 

Power (% of total) 
Battery life 
Workload GSM CPU RAM Graphics LCD Backlight Rest 
[hours] 
Suspend 
45 
19 
4 
13 
1 
0 
19 
49 
Casual 
47 
16 
4 
12 
2 
3 
16 
40 
Regular 
44 
14 
4 
14 
4 
7 
13 
27 
Business 
51 
11 
3 
11 
4 
11 
10 
21 
PMD 
31 
19 
5 
17 
6 
6 
14 
29 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_16" validated="false"><head>Table 13 :</head><label>13</label><figDesc>Daily energy use and battery life under a number of usage patterns.</figDesc><table></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>NICTA is funded by the Australian Government as represented by the Department of Broadband, Communications and the Digital Economy and the Australian Research Council through the ICT Centre of Excellence program.</p><p>Thanks to Nicholas FitzRoy-Dale, who provided us with the input event capture and replay tools, and Yanjin Zhu, who allowed us to run measurements on her Nexus One. We would also like to thank Bernard Blackham, Etienne Le Sueur, Leonid Ryzhyk and our anonymous reviewers for their feedback on earlier versions of the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Availability</head><p>Relevant software and data is available at http:// ertos.nicta.com.au/software/.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andriod</forename><surname>On</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Community</surname></persName>
		</author>
		<ptr target="http://code.google.com/p/android-on-freerunner/" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Complete system power estimation: A trickle-down approach based on performance events</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bircher</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Symposium on Performance Analysis of Systems and Software</title>
		<meeting>the IEEE International Symposium on Performance Analysis of Systems and Software<address><addrLine>San Jose, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="158" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Analysis of dynamic power management on multi-core processors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bircher</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd International Conference on Supercomputing</title>
		<meeting>the 22nd International Conference on Supercomputing<address><addrLine>Greece</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-06" />
			<biblScope unit="page" from="327" to="338" />
		</imprint>
		<respStmt>
			<orgName>Island of Kos</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Power consumption breakdown on a modern laptop</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mahesri</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vardhan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 Workshop on Power-Aware Computer Systems</title>
		<editor>B. Falsafi and T. N. Vijaykumar</editor>
		<meeting>the 2004 Workshop on Power-Aware Computer Systems<address><addrLine>Portland, OR, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004-12" />
			<biblScope unit="volume">3471</biblScope>
			<biblScope unit="page" from="165" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Critical power slope: understanding the runtime effects of frequency scaling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miyoshi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lefurgy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hensbergen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">V</forename><surname>Raja-Mony</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rajkumar</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th International Conference on Supercomputing</title>
		<meeting>the 16th International Conference on Supercomputing<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002-06" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">NI 622x Specifications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">National</forename><surname>Instruments Corporation</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007-06" />
			<biblScope unit="page" from="371290" to="371291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Openmoko</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Inc</forename><surname>Gta02 -Neo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Freerunner</surname></persName>
		</author>
		<ptr target="http://downloads.openmoko.org/developer/schematics/GTA02" />
		<imprint>
			<date type="published" when="2008-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Power consumption in handheld computers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sagahyroon</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Circuits and Systems</title>
		<meeting>the International Symposium on Circuits and Systems</meeting>
		<imprint>
			<date type="published" when="2006-12" />
			<biblScope unit="page" from="1721" to="1724" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Koala: A platform for OS-level power management</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Snowdon</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Le Sueur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Petters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heiser</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th EuroSys Conference</title>
		<meeting>the 4th EuroSys Conference<address><addrLine>Nuremberg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">ATR0630 Data Sheet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U-Blox</forename><surname>Ag</surname></persName>
		</author>
		<idno>GPS.G4-X- 06009-P2</idno>
		<imprint>
			<date type="published" when="2006-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wikipedia</forename><surname>Smartphone</surname></persName>
		</author>
		<ptr target="http://en.wikipedia.org/wiki/Smartphone.Lastvisited" />
		<imprint>
			<date type="published" when="2010-01" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
