<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T01:55+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Default-all is dangerous!</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Gatterbauer</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandra</forename><surname>Meliou</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Suciu</surname></persName>
							<email>suciu@cs.washington.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Washington</orgName>
								<address>
									<settlement>Seattle</settlement>
									<region>WA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Default-all is dangerous!</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We show that the default-all propagation scheme for database annotations is dangerous. Dangerous here means that it can propagate annotations to the query output which are semantically irrelevant to the query the user asked. This is the result of considering all relation-ally equivalent queries and returning the union of their where-provenance in an attempt to define a propagation scheme that is insensitive to query rewriting. We propose an alternative query-rewrite-insensitive (QRI) where-provenance called minimal propagation. It is analogous to the minimal witness basis for why-provenance, straightforward to evaluate, and returns all relevant and only relevant annotations.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Why-provenance</head><p>Where-provenance Naive witness <ref type="bibr" target="#b1">[2]</ref> "SQL interpretation" Standard witness basis (α w ) <ref type="bibr" target="#b1">[2]</ref> propagation (α p ) <ref type="bibr" target="#b2">[3]</ref> QRI minimal witness basis (α m w ) <ref type="bibr" target="#b1">[2]</ref> default-all propagation (α d p ) <ref type="bibr" target="#b0">[1]</ref> Figure 1: Particular definitions (naive, standard, QRI) for why-and where-provenance considered in this paper.</p><p>Due to space constraints and in order to keep this paper to the point, we will assume basic familiarity of the reader with the provenance concepts given in <ref type="figure">Fig. 1</ref> and not repeat their formal definitions. Instead, we refer to the detailed survey of Cheney et al. <ref type="bibr" target="#b3">[4]</ref> from which we also borrow the running example of <ref type="figure" target="#fig_0">Fig. 2</ref> and <ref type="figure" target="#fig_2">Fig. 4</ref> (and the milk example after giving a real-world interpretation to the annotations). Appendix A summarizes the notation used throughout this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The minimal witness basis</head><p>as QRI why-provenance</p><p>Why-Provenance identifies witness tuples: "What input tuples contribute to the presence of each output tuple?" A witness is subset of the input tuples that is sufficient to ensure that a given output tuple t appears in the result of a query. This definition implies that the whole database is a witness as it is sufficient for t to appear. The witness basis or why-provenance α w (t, Q) is a subset of only relevant witnesses where the definition by Buneman et al. <ref type="bibr" target="#b1">[2]</ref> makes precise what "relevant" means. Intuitively, those tuples that have been involved in some operation during query evaluation are part of the witness basis. It turns out that why-provenance is not QRI, and relationally equivalent queries may have different witness bases. Buneman et al. <ref type="bibr" target="#b1">[2]</ref> showed that a subset of the witness basis, called the minimal witness basis and written here as α m w (t, Q), is invariant under rewriting. It con- sists of all the minimal witnesses in the witness basis, where a witness is minimal if none of its proper subsets is also a witness. For example, the why-provenance of t 4 in <ref type="figure" target="#fig_0">Fig. 2d</ref> since {t 1 } ⊂ {t 1 ,t 2 }, and thus, {t 1 ,t 2 } is not minimal.</p><formula xml:id="formula_0">(a) R A B t 1 1 2 t 2 1 3 t 3 2 2 (b) Q 1 , α w (Q 1 ) A B t 4 1 2 {{t 1 }} t 5 1 3 {{t 2 }} t 6 2 2 {{t 3 }} (c) Q 2 , α w (Q 2 ) A B t 4 1 2 {{t 1 }, {t 1 ,t 2 }} t 5 1 3 {{t 2 }, {t 1 ,t 2 }} t 6 2 2 {{t 3 }} (d) α m w (Q 2 ) {{t 1 }} {{t 2 }} {{t 3 }} (e) α l (Q 2 ) {t 1 ,t 2 } {t 1 ,t 2 } {t 3 }</formula><formula xml:id="formula_1">Q 2 in Fig. 2c is α w (t 4 , Q 2 ) = {{t 1 }, {t 1 ,t 2 }}, however α m w (t 4 , Q 4 ) = {{t 1 }} in</formula><p>Lineage α l (t, Q) for an output tuple t is a subset of the input tuples which are relevant to the output tuple, where the definition by Cui and Widom <ref type="bibr" target="#b4">[5]</ref> makes precise what "relevant" means. Intuitively, we can get the lineage by taking the union over all witnesses in the whyprovenance. We write this as</p><formula xml:id="formula_2">α l (t, Q) = α w (t, Q). For example, α l (t 4 , Q 2 ) = α w (t 4 , Q 2 ) = {{t 1 }, {t 1 ,t 2 }} = {t 1 ,t 2 } in Fig. 2e.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Default-all propagation</head><p>as QRI where-provenance</p><p>Where-provenance focuses on cells (t, A), i.e. tuples t together with an attribute A, and identifies witness cells: "Where (from what cell) does an output tuple value come from?" Hence, where-provenance of a cell (t, A) consists of locations or values that can be found in tuples of the why-provenance of t. Since where-provenance was investigated in the context of propagating annotations from input to output cells <ref type="bibr" target="#b2">[3]</ref>, we write α p (t, A, Q) for whereprovenance (cp. <ref type="figure">Fig. 1</ref>).</p><p>Where-provenance is also not the same for equivalent queries, and there are two distinct issues to consider: (1) The first has to do with the way we write a conjunctive query in SQL (thus called "SQL interpretation" in <ref type="figure">Fig. 1</ref>), and is illustrated with <ref type="figure" target="#fig_1">Fig. 3</ref> </p><formula xml:id="formula_3">* p (t 8 , Q 3 ) = {a, c} versus α * p (t 8 , Q 3 ) = {g}.</formula><p>This problem disappears once we consider Datalog notation, and got taken care of by the definition of propagation rules in <ref type="bibr" target="#b2">[3]</ref> which propagate annotations from attributes of both joined tables.</p><p>(2) Secondly, certain relational rewrites do not preserve annotation propagation. <ref type="figure" target="#fig_2">Figure 4</ref> gives a detailed example taken from <ref type="bibr" target="#b3">[4]</ref> that shows that relationally equivalent queries Q 1 and Q 2 result in different annota- tions of their output (cp. <ref type="figure" target="#fig_2">Fig. 4b vs. Fig. 4c</ref>).</p><formula xml:id="formula_4">(a) R a A B t 1 1 a 2 b t 2 1 c 3 d t 3 2 e 2 f (b) S a A C t 7 1 g 2 h (c) Q 3 , α P (Q 3 ) A B t 8 1 a,c,g 2 h (d) Q 3 SELECT distinct R.A, S.C FROM R,S WHERE S.C = 2 (e) Q 3 SELECT distinct S.A, S.C FROM R,S WHERE S.C = 2</formula><p>In an attempt to define a QRI propagation scheme for where-provenance, Bhagwat et al. <ref type="bibr" target="#b0">[1]</ref> define the default-all propagation scheme, written here as α d p (t, A, Q). Their system DBNotes achieves QRI for where-provenance by including the provenance of all relationally equivalent rewrites Q for a query Q:</p><formula xml:id="formula_5">α d p (t, A, Q) := Q ≡Q α p (t, A, Q )</formula><p>For example, <ref type="figure" target="#fig_2">Fig. 4d</ref> shows the result annotations for both equivalent queries Q 1 and Q 2 over the input table <ref type="figure" target="#fig_2">Fig. 4a</ref> in the default-all propagation scheme. Intuitively, for both Q 1 and Q 2 , default-all propagation returns the where-provenance of the relationally equivalent query Q(x, y) :− R a (x, y), R a ( , y), R a (x, ).    lactose-free milk, but has just heard that traces of radioactive Cesium-137 were found in LF Milk of the local store. She is worried, and not so without reason. She queries a community database <ref type="figure" target="#fig_4">(Fig. 5a)</ref> for the content of LF Milk. The database includes data and usergenerated annotations. She wants to make sure that she gets all relevant information and therefore opts for the default-all propagation scheme of user-generated community annotations (she is not familiar with databases and provenance, but "default-all" just sounds like the right thing to do). The database returns <ref type="figure" target="#fig_4">Fig. 5b</ref> with two annotations: b and f shown in <ref type="figure" target="#fig_4">Fig. 5c</ref> and <ref type="figure" target="#fig_4">Fig. 5d</ref>.</p><p>Based on the annotations the database returns, she decides to buy and drink the milk. Fuyumi is a very reputable friend of hers, and Fuyumi claims in the most recent annotation f that her measurements shows only low levels of radiation. However, what Hanako does not realize (and what the database does not expose to her) is that Fuyumi's comment has nothing to do with LF Milk. The comment propagated to the output because the database included annotations from all relationally equivalent queries. One such query is Q 4 (y) :− R a ( LF Milk , y), R a ( , y), which is responsible for propagating to the output an annotation about Cesium-137 in SC Water, a completely different product.</p><p>Basically, the default-all propagation scheme has given Hanako semantically irrelevant annotations, based on which she then made the wrong decision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Non-dangerous QRI where-provenance</head><p>Why is default-all propagation dangerous? The reason is a mismatch in the semantics. Just because two different tuples have the same value in an attribute does not imply that the annotations of those attribute values are related in any way. And, whereas rewriting the query Q 1 into query Q 2 with an additional (and unnecessary) self-join on table R does not change the output tuples, we now have a join with semantically irrelevant tuples that propagates irrelevant information. And since the first step of making the scheme QRI (that of avoiding the issue in <ref type="figure" target="#fig_1">Fig. 3)</ref> propagates annotations from all cells that join, defaultall propagation will make sure that completely irrelevant annotations propagate to the query output.</p><p>We propose instead the minimal propagation scheme. Intuitively, for a given output cell (t, A), we intersect the where-provenance α p (t, A, Q) with the annotations in the minimal witness basis α m w (t, Q) on all attributes A contributing to α p . Written differently:</p><formula xml:id="formula_6">α m p (t, A, Q) := t ∈α m w (t,Q) A ∈attributes of t propagating to cell(t,A) α p t , A , R (t )</formula><p>Here, the expression α m w (t, Q) transforms the minimal witness basis as sets of sets of tuples into a set of tuples (hence, it can be interpreted as a form of QRI lineage). The overall expression unions from all tuples t in the minimal witness basis, the annotations α p from all attributes A of input table R (t ) from which tuple t propagated values to the cell (t, A). Since those attributes</p><formula xml:id="formula_7">α m w (t 4 , Q 1 ) = α m w (t 4 , Q 2 ) α w (t 4 , Q 2 ) α w (t 4 , Q 1 ) {t 1 ,t 2 } {t 1 }</formula><p>(a) QRI why-provenance for tuple t 4 in <ref type="figure" target="#fig_0">Fig. 2</ref>: minimal witness basis α m w in green.  are never changed by rewriting a query into an equivalent query, the output is well-defined and QRI. The minimal propagation scheme has the following desirable properties:</p><formula xml:id="formula_8">α m p (t 4 , A, Q 1 ) = α m p (t 4 , A, Q 2 ) α d p (t 4 , A, Q 1 ) = α d p (t 4 , A, Q 2 ) α p (Q 2 ) α p (Q 1 ) c a (b) QRI</formula><p>(i) Just like default-all propagation, it is also QRI.</p><p>(ii) There is no need to evaluate any rewrite of a given query. 1 (iii) Just as the minimal witness basis for whyprovenance, it considers a minimal and QRI set of values (see <ref type="figure" target="#fig_6">Fig. 6</ref>). The intuition is that, among all relationally equivalent queries, those that have no irrelevant self-join (cp. Q 1 vs. Q 2 in <ref type="figure" target="#fig_2">Fig. 4</ref>) are the ones that most closely capture the user's actually intended semantics of the query. For our running example, <ref type="figure" target="#fig_2">Fig. 4d</ref> and <ref type="figure" target="#fig_2">Fig. 4e</ref> compare the output of default-all with that of minimal propagation. For example, both where-provenance and defaultall propagation return {a, c} for output cell (t 4 , A) in query Q 2 . In contrast, minimal propagation is {a}, because t 1 from R a is the only tuple in the minimal witness basis (α m w (t 4 , Q 2 ) = {t 1 }) with one contributing attribute A. Hence, α m p (t 4 , A, Q 2 ) = α p (t 1 , A, R a ) = {a}. In our milk example (Example 1), minimal propagation gives the only relevant annotation b.</p><p>Arguably, the QRI (query-rewrite-insensitive) property of annotation propagation is desirable. We do not discuss here whether this is indeed the case, but merely point out that, if aiming for QRI, care has to be taken not to trade a meaningful semantics in exchange for this property.</p><p>We illustrated that the default-all propagation scheme achieves QRI by including annotations from relationally equivalent but somehow irrelevant rewrites. This can lead to spurious annotations in the output which are semantically irrelevant, and thus can give the user a wrong impression of relevance. Hence, default-all is dangerous.</p><p>We proposed minimal propagation which is QRI, has a clean and simple semantics, and propagates all relevant and only relevant annotations to the output.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: (a): Input table R. (b,c): Identical queries Q 1 (x, y) :− R(x, y) and Q 2 (x, y) :− R(x, y), R(x, ) together with the whyprovenance α w of their tuples. (d,e): Lineage α l and minimal witness basis α m w of the tuples for Q 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: A naive "SQL interpretation" of query Q 3 (x, y) :− R a (x, y), S a (x, '2') would lead to different whereprovenances for cell (t 8 , A) in the output depending on whether SQL queries Q 3 or Q 3 were used.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: (a): Annotated table R a . (b,c): Equivalent queries Q 1 (x, y) :− R a (x, y) and Q 2 (x, y) :− R a (x, y), R a (x, ) with the where-provenance α p of their cells. (d,e): QRI variants default-all propagation α d p and minimal propagation α m p .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>March 19, 2011, 7:25am I measured 250ml bought yesterday and today, and I can assure you I found only small, negligible traces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: (a): Database for Example 1. Note that table R a is semantically the same as R a in Fig. 4a taken from [4]. (b): The query is Q 4 (y) :− R a ( LF Milk , y), i.e. "find all annotations for LF Milk." (c,d): Content of annotations b and f .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>where-provenance for cell (t 4 , A) in Fig. 4: min- imal propagation α m p in green vs. default-all α d p in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: (a) The minimal witness basis α m w considers only minimal sets of witnesses that imply the output. (b) In contrast, default-all propagation α d p considers the union of annotations for all equivalent queries. We propose instead minimal propagation α m p as QRI where-provenance analogous to the minimal witness basis α m w for why-provenance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>4 Default-all propagation is dangerous!</head><label>4</label><figDesc></figDesc><table>We next illustrate that the QRI property of default-all 
comes at a high price, namely the price of propagating 
irrelevant tuples to the output. This can be dangerous. 

EXAMPLE 1 (MILK). Hanako lives in Tokyo and 
worries about the recent nuclear accidents at the 
Fukushima nuclear power plant. She likes to drink (a) R a 

A B 
t 1 1 a 2 b 
t 2 1 c 3 d 
t 3 2 e 2 f 

(b) Q 1 , α p (Q 1 ) 

A B 
t 4 1 a 2 b 
t 5 1 c 3 d 
t 6 2 e 2 f 

(c) Q 2 , α p (Q 2 ) 

A B 
t 4 1 a,c 2 b 
t 5 1 a,c 3 d 
t 6 2 e 2 f 

(d) Q 2 , α d 
p (Q 2 ) 

A B 
t 4 1 a,c 2 b, f 
t 5 1 a,c 3 d 
t 6 2 e 2 b, f 

(e) Q 2 , α m 
p (Q 2 ) 

A B 
t 4 1 a 2 b 
t 5 1 c 3 d 
t 6 2 e 2 f 

</table></figure>

			<note place="foot" n="1"> Bhagwat et al. [1] provide an optimization that avoids having to evaluate infinitely many equivalent formulations for default-all, and it suffices to evaluate only a finite number.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Notation</head><p>input or output tuple R, S input tables | sets of tuples A, B,C attributes of a table Q i queries or output tables α w (t, Q) why-provenance (witness basis) for tuple t of table Q | if context is known, also used as α w (Q) or α w (t) | set of sets of tuples α m w () minimal witness basis α l (t, Q) lineage of tuple t in table Q | set of tuples R a , S a annotated input tables α p (t, A, Q) where-provenance (propagation) for the value of cell (t, A) of table Q | if context is known, also used as</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An annotation management system for relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bhagwat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chiticariu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vijayvargiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">VLDB J</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="373" to="396" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Why and where: A characterization of data provenance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Buneman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDT</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="316" to="330" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On propagation of deletions and annotations through views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Buneman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODS</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="150" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Provenance in databases: Why, how, and where. Foundations and Trends in Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cheney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chiticariu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Tan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="379" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Tracing the lineage of view data in a warehousing environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Widom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Wiener</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Database Syst</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="179" to="227" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
