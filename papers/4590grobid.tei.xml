<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:25+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Using Proxies to Accelerate Cloud Applications</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jon</forename><surname>Weissman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Minnesota</orgName>
								<address>
									<country>Twin Cities</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Siddharth</forename><surname>Ramakrishnan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science and Engineering</orgName>
								<orgName type="institution">University of Minnesota</orgName>
								<address>
									<country>Twin Cities</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Using Proxies to Accelerate Cloud Applications</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>A rich cloud ecosystem is unfolding with clouds emerging to provide platforms and services of many shapes and sizes. We speculate that future network applications may wish to utilize and synthesize capabilities from multiple clouds. The problem is this may entail significant data communication that derives from the client-server paradigm imposed by most clouds. To address this bottleneck, we propose a cloud proxy network that allows optimized data-centric operations to be performed at strategic network locations. We show the potential of this architecture for accelerating cloud applications.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The explosion of data produced by simulations, networkconnected instruments and sensors, as well as social and political data harvested from the Web (images, movies, blogs, etc.), is ushering in a new era of data-intensive computing and data-driven scientific inquiry. For example, projects in Geoscience, Astronomy, and High Energy Physics are routinely producing terabytes of data <ref type="bibr">[12,</ref><ref type="bibr" target="#b8">15]</ref> that may hold answers to deep scientific questions. This vast sea of available data provides new opportunities for a large class of distributed applications to solve new problems by utilizing multiple sources of data. Representative data-oriented application classes include distributed data mining, distributed workflows, Web 2.0 Mashups, to name a few.</p><p>To meet the data storage and computing demands of such data-rich applications, a parallel trend is emerging that is commonly referred to as cloud computing <ref type="bibr" target="#b5">[7]</ref>. Clouds currently represent a diverse landscape containing resource providers, application hosting platforms, and service providers. In this paper, we use the term cloud broadly to refer to a large-scale out-sourced data, compute, or service resource, made available to endusers and applications. Many clouds today are optimized for very specific functionality. For example, the IBM/Google MapReduce cloud is specialized for MapReduce computations, while the satellite Earth Imagery cloud (Google Earth) <ref type="bibr">[10]</ref> is specialized for providing geographical data. This trend toward specialization is likely to continue, which means that many of the data-oriented applications described above must increasingly interact with and utilize multiple specialized standalone clouds. Today, the end-user application is responsible for interacting with these different cloud services individually, downloading or uploading data, performing any needed intermediate computations, and generating a final result. This can lead to significant performance bottlenecks. The current cloud interaction paradigm is client-server (e.g. Web Services or http) which forces all output data to flow back to the client even if it is intermediate in the end-to-end application. The problem is even more pronounced if the end-user application is resource constrained, e.g., if the end-user is using a thinclient such as a PDA, or if the network path to the enduser application is poor.</p><p>In this paper, we propose a novel solution to address the bottlenecks inherent in the current cloud interaction paradigm: the provision of a cloud proxy network that allows optimized data-centric operations to be performed at strategic network locations. In our model, proxies may take on several data-centric roles: they can interact with cloud services, route data to each other, cache data for later use, and invoke compute-intensive data operators for intermediate processing. The power of our proxy approach lies in the multiplicity of their roles and interconnection. In this paper, we show the potential of proxies for accelerating network applications by exploiting network diversity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Our project is related to work in a number of areas: dataintensive programming systems, cloud computing, network computing, Web 2.0, volunteer systems, and proxy architectures. Many emerging cloud systems such as Amazon EC2/S3 <ref type="bibr">[4]</ref> and Google Apps <ref type="bibr">[9]</ref> provide resources to third-party applications. There are many data clouds, e.g. Google Earth <ref type="bibr">[10]</ref> and Sloan Digital Sky Survey <ref type="bibr" target="#b8">[15]</ref> that serve data to end-users. These systems are optimized for use within a single cloud or data center, however, a challenge is transferring the underlying data and the results to/from these clouds.</p><p>Volunteer edge computing and data sharing systems are best exemplified by Grid and P2P systems including, Bittorrent <ref type="bibr" target="#b2">[3]</ref>, Globus <ref type="bibr" target="#b3">[5]</ref>, BOINC <ref type="bibr" target="#b0">[1]</ref>, and @home projects <ref type="bibr" target="#b7">[14]</ref>. These systems provide the ability to tap into donated resources such as CPU capacity or network bandwidth, but their focus has been on single applications vs. service hosting.</p><p>Internet programming systems that support content mashup and state sharing, include Yahoo Pipes <ref type="bibr">[16]</ref>, GME <ref type="bibr">[8]</ref>, and LiveMesh <ref type="bibr">[13]</ref>, which can be used to connect applications and/or distributed data.</p><p>Our approach is novel in that proxies may assume a diverse set of roles unlike other systems in which network nodes either compute, route, serve data, or invoke services. Enabling proxies to assume multiple roles is key to the performance and reliability of distributed dataintensive multi-cloud applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Proxy Architecture/Application Model</head><p>System Model: The system model consists of a set of cloud services logically connected by a proxy network, and has three principle entities: (1) cloud services, (2) proxy network, and (3) application initiator ( <ref type="figure">Figure 1</ref>). Cloud services (S i ) may represent a broad array of hosted services from large scale Internet ones (e.g. Google Maps), to scientific services (e.g., Sloan Digital Sky Survey), to platform services (e.g. EC2/S3). In this paper, we use the term cloud broadly to refer to a largescale out-sourced data, compute, or service resource, made available to end-users and applications. We can categorize clouds into different types based on the kind of resource they provide. A data cloud is a large-scale data source, such as data sensors that may be producing raw data, as well as data servers that may be storing or archiving large databases or third-party data. Examples could be Sloan Digital Sky Survey <ref type="bibr" target="#b8">[15]</ref> or Amazon S3 <ref type="bibr">[4]</ref>. A compute cloud provides computation resources for data-dependent computing. An example could be Amazon EC2 <ref type="bibr">[4]</ref>. A service cloud provides specialized services that can be used by other applications. Google Maps <ref type="bibr" target="#b6">[11]</ref> can be an example.</p><p>The proxy network consists of a large number of logically connected edge nodes that may assume a rich set <ref type="figure">Figure 1</ref>: System Model: S i are the cloud services, nodes A and B are proxies, and E is an initiator for an application that uses clouds S 1 , S 2 and S 3 . Solid arcs represent actual proxy-to-proxy and proxy-cloud interactions, and dotted lines represent logical cloud-to-cloud interactions.</p><p>of data roles to boost the performance and reliability of distributed data-intensive applications, including:</p><p>â€¢ Cloud service interaction: A proxy may act as a client to a cloud service. This role allows a proxy with better network connectivity to access one or more cloud services. For example, a proxy may have very high bandwidth to/from a cloud service relative to the end-user.</p><p>â€¢ Computing: A proxy may carry out computations on data via a set of data operators. This role allows a proxy to filter, compress, merge, mine, and transform (i.e. act as a shim) data. We envision a set of well-defined data operators</p><formula xml:id="formula_0">C 1 , C 2 , ... C k , where C i : D in â†’ D out , that</formula><p>is, C i maps an input data into an output data.</p><p>â€¢ Caching: A proxy may efficiently store and serve data to other nearby proxies that may consume the data later on. Proxies can also cache intermediate results from a cloud interaction that may be reused again.</p><p>â€¢ Routing: A proxy may route data to another proxy as part of an application workflow. This role allows a proxy to efficiently send data to another proxy for additional processing, caching, cloud service interactions, etc. This role is particularly important if the application is interacting with multiple clouds which are all widely distributed, and there may be no single proxy that can efficiently orchestrate all of these interactions.</p><p>The real power of proxies lies in the combination of these roles. As a simple example, suppose the end-user is on a PDA behind a poor network connection. We can use a proxy with high bandwidth to interact with a set of service clouds to fetch a large amount of output data, and then use its computing power to process the data.</p><p>Finally, the application initiator is a node (E in <ref type="figure">Fig- ure 1)</ref> in the proxy network which acts on behalf of an application, e.g., an end-user machine, job-scheduler, etc. The initiator acts as an application control point and the place where resource allocation decisions are ultimately made. Note that the end-user may or may not be located on the initiator, and could instead be using the initiator as a control point in the proxy network. There can be many initiators within the proxy network, and a node can act as a proxy or initiator at different times. In this paper, we evaluate the merits of the proxy network that is neutral to its deployment model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Application Model:</head><p>The proxy network operates on behalf of the application to accelerate its performance. Each entity in the system model has specific strengths that we wish to exploit on behalf of distributed applications: (i) the application initiator is best for holding private data and is the logical place for performing application control, (ii) the proxy network is best for providing edge resources at diverse network locations, and (iii) the cloud is best for providing critical data, maintaining shared state, and strong performance guarantees. In particular, the proxy network provides scalable resources that can be coupled to clouds or other proxies by exploiting low latency and high bandwidth connections, relative to the application initiator.</p><p>A distributed application is a coupling of these three entities. For example, <ref type="figure">Figure 1</ref> depicts a scenario where an application invokes two cloud services S 1 and S 2 , process their outputs via operators (e.g filter and merge), and then uses this intermediate data as input to another service S 3 which produces the final output. Two proxies A and B have been selected to accelerate this application. Here, A invokes S 1 and S 2 in parallel, processes the output, and routes the data to B, which invokes S 3 . A and B would be chosen for their network performance to S 1 and S 2 , and S 3 , respectively, relative to E.</p><p>The proxy network is driven by three distributed dataintensive application scenarios that can reap substantial benefits from our approach:</p><p>â€¢ Distributed Internet Workflows: Data-intensive workflows are an important class of distributed applications. In prior work <ref type="bibr" target="#b1">[2]</ref>, we have demonstrated the acceleration potential of proxies for an astronomy application by routing data directly between the application services on high bandwidth paths, avoiding the initiator which was running the workflow engine.</p><p>â€¢ Distributed Data Mining: Distributed data mining enables data from different sources to be combined and analyzed to discover correlations. The proxy network can be used to accelerate this type of application. For example, in <ref type="figure">Figure 1</ref>, proxy A could be performing data mining on data retrieved from S 1 and S 2 .</p><p>â€¢ Mashups: Mashups have a similar structure to distributed data mining applications -the only difference is that the proxy operator is typically a merge rather than a data mining operation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Network Microbenchmarks</head><p>We have performed an extensive evaluation of the proxy network concept using nodes across PlanetLab. We have focused on the network benefits afforded by proxies in their roles as cloud service clients and routers in this evaluation. The first question we posed was to what extent do we see network diversity (latency, bandwidth) from the perspective of proxy nodes to/from cloud services deployed today. This would determine whether there are opportunities for placing proxies between endclients and cloud services. The results indicate that despite plentiful bandwidth in the network core, nodes do in fact exhibit network diversity with respect to different cloud services. We chose a wide-area collection of international PlanetLab nodes and a selection of 35 different commercial web services (i.e. our cloud services). In each case, the PlanetLab proxy recorded the latency (measured as the time to fetch a very small file) to each service, <ref type="figure" target="#fig_0">(Figure 2</ref>). We show a random sample of 12 nodes and each point represents the average of at least 5 trials. The complete set of proxies is 48 nodes and we also plot the best, worst, and median observed values for comparison. Looking vertically, the results indicate great diversity in measured latency suggesting that some proxies have far better connectivity than others. In addition, there appear to be a rich set of options with many proxy nodes lying below the median line (if we assume the application initiator or end-client lies at the median). We also see that the benefit for a specific proxy may vary with the specific cloud service. For example, planetlab1.if1.uio.no (the right facing triangle) typically appears well below the median line, but in a few cases is above it. (e.g. at web service 26). We have observed the same broad patterns for download speed. The next question we asked was: is the diversity sufficient to provide an end-to-end performance benefit? Since the use of a proxy introduces an additional network hop (endclient-to-proxy-to-cloud service, and back), will any real end-to-end benefits be seen? To help answer this question we examined traceroute data for the same set of 48 nodes and looked at all of the paths among them (48x47). The analysis looked at all paths of the form A-B, and checked whether any for intermediate node C, the path (A-C, C-B) was cheaper than A-B. Out of 1600 total paths (48*47 minus the traceroute failures), 1106 paths (or 70%) were improved by the addition of a single intermediate proxy, and a majority (â‰ˆ70%) were improved by over 20% when compared with the default path. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Application Scenario</head><p>We now look at a specific application scenario: an image transformation cloud service <ref type="figure">(Figure 3(a)</ref>). In this example, the images to be processed are stored on an image server separate from the end-user location. The enduser selects an image for transformation by a contacting the cloud service (step 1). This cloud service fetches the image from the image server (steps 2/3), performs the transformation (step 4), and returns the adjusted image to the end-user (step 5). Based on triangle inqeuality violations <ref type="bibr" target="#b4">[6]</ref> in the network, it is possible that the insertion of a proxy can improve the end-to-end performance.</p><p>The reason is that it may have better network connectivity to the image server and/or image processing cloud, or both <ref type="figure">(Figure 3(b)</ref>). In the experimental setup, the image transformation performed was a resizing that reduced the image to a quarter of its size from 228KB to 48KB. We deployed this code as service on a varying set of nodes. We do the same for the image server and the end-user. All nodes are on PlanetLab. We present some representative results -all data is the average of at least five trials. We fix the end-client and the image server varying the location of the image processing servers and the proxies <ref type="figure" target="#fig_1">(Figure 4)</ref>. The same result pattern is seen for many other end-client, image processing, node combination, and we present one such graph. Along the X-axis, we vary the locations of the image processing servers. Each vertical point shows the performance obtained when using a different intermediate proxy (over 40 proxies are shown). The circled points indicate when a direct connection without a proxy achieves the best performance. However, proxies can improve performance in many cases (the trail of proxies that lie beneath the * mark). In this graph and many others, at about 70% of the image processing server locations, proxies can accelerate performance. In some cases, it is only a few proxies (image server 4 and 6), and in others, many proxies (image server 5, 9, 11). The explanation for why the proxies improve performance even with the addition of the extra hop is explained by the network diversity results ( <ref type="figure" target="#fig_0">Figure  2</ref>) and the triangle inequality violations in the network. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Acknowledgments</head><p>The authors would like to acknowledge Abhishek Chandra for his input and discussion on this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper we have introduced the concept of a cloud proxy network to accelerate applications spanning multiple specialized clouds. We described the broad features of the proxy network and presented specific evidence of its potential to improve the network performance of cloud applications by exploiting its network diversity. Our future work consists of demonstrating the full power of the proxy nodes as they take on a diverse set of roles including caching and computation. We also plan to explore techniques that can identify suitable proxies automatically based on application needs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Latency from proxies to different web services. Each proxy is represented by a different shape.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Proxy Acceleration: Pittsburgh End-client, Japan Image server. Each proxy is represented by a light dot and the direct path with error bars by *</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">BOINC: A System for PublicResource Compting and Storage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th ACM/IEEE International Workshop on Grid Computing</title>
		<meeting>the 5th ACM/IEEE International Workshop on Grid Computing</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Eliminating The Middleman: Peer-to-Peer Dataflow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weissman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hemert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of HPDC</title>
		<meeting>HPDC</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Incentives build robustness in BitTorrent</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Workshop on the Economics of Peer-to-Peer Systems</title>
		<meeting>the First Workshop on the Economics of Peer-to-Peer Systems</meeting>
		<imprint>
			<date type="published" when="2003-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Physiology of the Grid: An Open Grid Services Architecture for Distributed Systems Integration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Foster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Global Grid Forum</title>
		<meeting>the Global Grid Forum</meeting>
		<imprint>
			<date type="published" when="2002-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The end-to-end effects of internet path selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The Computational Data Center</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gannon</surname></persName>
		</author>
		<ptr target="http://www.extreme.indiana.edu/Ëœgannon/science-data-center.pdf" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>A Science Cloud</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Google maps</title>
		<ptr target="http://maps.google.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">The SETI@Home problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Molnar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-09" />
			<publisher>ACM Crossroads</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sdss</surname></persName>
		</author>
		<ptr target="http://www.sdss.org/" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
