<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:26+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Leveraging Honest Users: Stealth Command-and-Control of Botnets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diogo</forename><surname>Mónica</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">INESC-ID/IST</orgName>
								<orgName type="institution">INESC-ID/IST</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><surname>Ribeiro</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">INESC-ID/IST</orgName>
								<orgName type="institution">INESC-ID/IST</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Leveraging Honest Users: Stealth Command-and-Control of Botnets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Botnets are large networks of infected computers controlled by an attacker. Much effort has already been invested in the detection and analysis mechanisms, capable of defusing this type of threat. However, botnets have been constantly evolving, and will certainly continue to do so. We must, therefore, make an effort to foresee and study possible future designs, if we are to be capable of timely development of adequate defense mechanisms. Many of the most recent methods to detect and analyze botnets are based upon the vulnerabilities of their command-and-control (C 2) infrastructure. We thus believe that attackers will follow a predictable evolutionary pattern, and start using designs with more robust and stealth C 2 channels, thus minimizing the risk of shutdown or infiltration. In this paper, we will therefore analyze in detail a new kind of botnet C 2 infrastructure, where bots do not possess any information concerning command-and-control mechanisms. These stealth, isolated bots are controlled through honest participants not pertaining to the botnet. This architecture eliminates the possibility of estimation of the botnet size, minimizes the probability of detection of individual bots, and eliminates the possibility of researcher infiltration.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Botnets are one of the dominant threats in the internet, since they harness the power of thousands of infected hosts, and may use them to perform abusive or fraudulent activities, such as: spamming, phishing, click-fraud, distributed denial-of-service (DDoS), or stealing personal data, such as email accounts or credit-card data <ref type="bibr" target="#b2">[5]</ref>. A significant amount of research has been invested in this area, leading to both a better understanding of the botnet phenomenon, and to the development of new detection techniques.</p><p>Most of the initially proposed methods for botnet detection are passive, and work either by detecting specific malicious activity of bots (spam, DoS) <ref type="bibr" target="#b24">[27]</ref>, or by detecting activity on the communication channels used to control the botnet <ref type="bibr" target="#b8">[11,</ref><ref type="bibr" target="#b21">24,</ref><ref type="bibr" target="#b7">10]</ref>. However, these passive approaches can only monitor a small portion of the internet; also, they will only detect botnets with the malicious behavior or the type of C 2 targeted by that particular analysis.</p><p>More recently the research community adopted a more active approach to the study of botnets: infiltration. They create a client capable of mimicking the C 2 protocol, and join the botnet. This privileged position can then be leveraged, to obtain accurate estimates of the size of the botnet, or to gain inside information needed to support an eventual hijacking or dismantling of the botnet <ref type="bibr" target="#b20">[23,</ref><ref type="bibr" target="#b9">12,</ref><ref type="bibr" target="#b12">15]</ref>.</p><p>Unfortunately, botnets are also evolving. The first kind of C 2 infrastructure used by botnets was based on central IRC servers <ref type="bibr" target="#b5">[8]</ref>. This allowed researchers to obtain the IP addresses of the bots, and, sometimes, even control the botnet itself <ref type="bibr" target="#b2">[5]</ref>. Botmasters then upgraded the servers to stripped-down IRC or HTTP servers, which reduced some of the vulnerabilities of the previous servers (namely, the possibility of identification and estimation of the number of bots in the botnet). However, botnets still had a single point of failure: the C 2 server itself. Therefore, botnets began shifting towards peer-topeer command-and-control infrastructures, thus becoming more resilient to takedown attempts. Forecasting the evolutionary adaptive changes in botnet operation profiles is, therefore, of paramount importance, to allow timely development of appropriate countermeasures.</p><p>Of particular concern are the stealth strategies that attackers may employ, to reduce the probability of detection of their bots, and/or of infiltration of their botnets. The intuition is that botmasters will try to avoid the usage of permanent command-and-control infrastructures, since they have been one of the main targets of recent research on botnet detection and analysis <ref type="bibr" target="#b8">[11]</ref>.</p><p>To create this new kind of botnet, attackers can leverage the capability of modern browsers to run pieces of embedded code (such as Javascript or Flash), thus creating a layer of expendable hosts, composed by honest visitors of malicious (or compromised) websites. These hosts will be responsible for doing activities that are verbose in nature, such as disseminating botmaster's commands. As will be seen, the existence of this layer can constitute a formidable obstacle to the analysis, and/or infiltration of the underlying botnet.</p><p>Contributions The main contribution of this paper is the exposure and analysis of a possible path of botnet evolution, capable of higher degrees of stealthiness and resilience against infiltration. Hopefully, this will lead to the timely development of adequate countermeasures against this next generation of botnets. In particular, several novel results are presented:</p><p>− We present and analyze new type of botnet C 2 architecture, capable of achieving much higher degrees of resilience to infiltration and size estimation by the research community;</p><p>− We show that such an architecture can be leveraged to create an overlay (for stolen information retrieval) that cannot be used by anyone but the botmaster;</p><p>− We analyze authentication scheme that allows bots to unambiguously identify honest hosts being used by the botmaster to disseminate commands, using only the botmaster's public key as a trust anchor;</p><p>− We also discuss a tunneling scheme that may allow the botmaster to retrieve information without the risk of exposure of his own identity;</p><p>− A case-study implementation of such an architecture is made;</p><p>− Also, the performance of this architecture is analyzed, both analytically and via Monte Carlo analysis, thus obtaining the practical bounds within which this overall botnet scheme may constitute a threat to network operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background Model</head><p>As stated, our approach is focused on stealth botnets, whose command-and-control architecture can avoid infiltration, size estimation, and reduce the detection probability of the individual bots. In this section, we will state both the model and the assumptions to be made throughout the paper.</p><p>The details of how bots are infected will not be addressed. We will assume the existence of a population of computers infected with a malicious binary, which contains: the code needed to perform the malicious activities; the public key of the botmaster; the initial botmaster's commands (e.g. send spam e-mail). Note that bots do not possess any data (e.g. IP address, domain-names) concerning the botmaster, other than its public key.</p><p>We further assume that bots can receive commands from the botmaster through a common TCP port open to the internet. Attackers can achieve this even in hosts sitting behind NATs, through the use of the Internet Gateway Device (IGD) Protocol, implemented via UPnP, thus providing port mapping capabilities. Also, it is common in malware to have firewall killers, and, in general, to eliminate some of the restrictions that a well configured host may present.</p><p>Finally, and in order to simplify calculations, we assume that the IP addresses of infected hosts are uniformly distributed throughout the fraction of the IP addressing space currently assigned, and that the whole population of infected hosts is online.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Architecture</head><p>Contrarily to usual botnets, in our architecture bots do not attempt to contact any controlling third-party server; they simply execute the original botmaster's orders, and passively listen for commands. This can be seen as a change in the normal communication paradigm. Usually, bots actively participate in some control infrastructure, both to retrieve information from the botmaster (e.g. updates to the malicious binaries, new commands, etc.), and to send information back (e.g. stolen credit card data, email addresses, etc.). However, in the considered architecture, bots are passive in terms of C 2 , and commands are pushed directly into the compromised machines. Command origin authentication is done by verifying if the incoming requests are signed with the botmaster's private key (remember that all the bots have the corresponding public key). This type of authentication is already being used in the wild <ref type="bibr" target="#b18">[21]</ref>.</p><p>This design presents a much greater threat than the usual usual pull model: Researchers controlling individual bots cannot infiltrate the C 2 infrastructure, since, from the perspective of a bot, there is none. This means that, by controlling a bot, researchers cannot estimate botnet size, or gain any type of privileged position in the botnet that might lead to a possible attack vector. Moreover, none of the research methods for bot identification by detection of the C 2 communication pattern is applicable, since there is no outbound (from bots to botmaster) C 2 traffic.</p><p>However, attackers face two obvious difficulties with this overall design:</p><p>Command dissemination. The botmaster does not possess an established command dissemination channel, and, thus, needs to individually send the commands to each and every infected bot; however, since bots never "phone home", the attacker does not know the IP addresses of the infected hosts, and commands will thus have to be sent to the bots by a random (or semi-random) scanning strategy. Command dissemination will thus become a problem of statistical nature;</p><p>Information retrieval. Since bots do not possess the IP address of the botmaster, creating an upstream information flow (if information retrieval is required) is a particularly difficult problem.</p><p>Unfortunately, both these difficulties may be overcome by a motivated botmaster.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Command dissemination</head><p>Direct command dissemination by the botmaster, while feasible, has some disadvantages for the botmaster:</p><p>− The botmaster would be exposing himself, by directly scanning the internet. Even if the attacker uses a compromised host to act as a proxy, exposing a host directly controlled by the botmaster may lead to exposure of the botmaster's true IP address;</p><p>− The botmaster may take too long to reach all the participants in the botnet. This is particularly important when the botmaster wants a command to be executed as soon as possible.</p><p>The botmasters might consider establishing a twoleveled hierarchy of infected hosts, with different objectives on both levels: one lower level to perform the malicious activities (worker bots), and a higher intermediate level, whose sole purpose would be to disseminate the botmaster commands to the worker bots (as was done in <ref type="bibr" target="#b22">[25]</ref>). If botmasters opt for this solution, one may try to impersonate one of these information relay hosts which might allow us to thwart the propagation of the commands, gain enough trust to be able to launch an eclipse attack, or launch other disrupting attacks to the C 2 infrastructure <ref type="bibr" target="#b10">[13]</ref>.</p><p>Unfortunately, we believe that botmasters may try to circumvent both theses difficulties through the use of a new kind of intermediate C 2 layer, between the botmaster and the bots, composed solely of honest participants. These participants are called honest, since they will not be infected with the malicious binary, and are, thus, technically not part of the botnet.  <ref type="figure">Figure 1</ref>: Global architecture.</p><p>works in the following way: The botmaster deploys a website (or infects an existing one) possessing a specific malicious code. This malicious code will not attempt to infect the host through a drive-by-download, gain control of the web user's hosts, or exploit any vulnerability. Instead, it will have an obfuscated piece of code, to be ran by the browser, that will make the web user's browser unwillingly disseminate command messages to the bots. This may be done by leveraging the capabilities of scripting languages like javascript. All users with javascript enabled on their browsers will execute the malicious code, and will, thus, become a part of the command dissemination layer. Such a command dissemination mechanism can be seen in <ref type="figure">Figure 1</ref>.</p><p>Bots will receive commands from the intermediate honest website users, without acknowledging their reception <ref type="bibr" target="#b0">1</ref> . The only traffic sent by the bots is the one generated by the TCP handshake (one SYN/ACK message). Furthermore, attackers may chose commonly open ports belonging to potentially legitimate services, hindering researchers from simply enumerating bots by the presence of an uncommon open port. This makes the task of detecting C 2 traffic very difficult. Moreover, a researcher cannot achieve anything by replaying the received commands, except further spreading of the command throughout the infected population.</p><p>This intermediate layer of command dissemination presents several advantages for the attacker.</p><p>− Command dissemination is not done by the botmaster, reducing the probability of it being detected.</p><p>− Detection of a command dissemination attempt, only reveals the address of a honest user accessing some malicious website. It does not reveal any part of the botnet, nor the malicious website itself.</p><p>− Since there will be typically many victims accessing the malicious website, the time taken to deliver the commands to the bot population decreases dramatically.</p><p>A skeleton version of this command dissemination scheme (including the intermediate layer build-up via a malicious website) has been implemented, for case-study purposes. Implementation details, and a detailed performance analysis will be presented in Section 4 to appreciate it's threat potential.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">IPv6</head><p>It has been repeatedly shown that a full scan of all of the IPv4 space is feasible. With the advent of IPv6, the IP address space will change from from 32 to 128 bits, dramatically increasing the amount of work needed by random scanning worms to cover the whole internet by a factor of 2 96 <ref type="bibr" target="#b15">[18]</ref>. However, this increase in addressing space might not be effective in stopping this method of propagation. In <ref type="bibr" target="#b11">[14]</ref>, the propagation speed of a worm in an IPv6 world is analyzed, and the authors present results indicating that such a worm can exhibit propagation speeds comparable to an IPv4 random-scanning worm. In this work, the authors realized that the directory and naming services necessary for the functioning of the internet can be exploited, thereby considerably reducing the required scanning range. More specifically, instead of scanning random IPs, worms can perform DNS random scanning, i.e., guessing DNS names instead of IP addresses. Others works like <ref type="bibr" target="#b25">[28,</ref><ref type="bibr" target="#b15">18,</ref><ref type="bibr" target="#b26">29]</ref> present several other techniques that allow worms to reduce the search space: scanning only assigned space; using public information about the currently active IP ranges; using existing peer-to-peer networks to gather IP addresses; using search engines and DNS zone transfers, amongst others.</p><p>Furthermore, there is one advantage that IPv6 networks bring to random scanning worms, and therefore, to the botnet architecture presented: the effective disappearance of NATs. With the increase of the use of public IPv6 addresses for regular hosts, the number of bots reachable from the internet will also increase, benefiting potential attackers.</p><p>The advent of IPv6 will, therefore, not restrain malicious attackers from using random scanning schemes on their future botnets and might end up being beneficial for for attackers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Information Upstream</head><p>Until now, we have been describing how the attacker may attempt to disseminate commands to the bots, in a stealth manner. However, bots are often required to send information back to the botmaster (e.g. credit-card data).</p><p>In the discussed architecture bots cannot send information to the botmaster or some rendezvous host, since they do not possess the required IP addresses, or links to any other botnet participant. This isolation ensures a high degree of robustness and stealthiness of the botnet, but creates a challenging environment if an upstream channel is required. However, even this difficulty may be circumvented by the botmaster.</p><p>We will describe two possible implementations of an upstream information channel in these stringent conditions. Each one of them is capable of providing a workable upstream channel, while preserving the three following characteristics:</p><p>1. The fact that they cannot be infiltrated by a researcher through the C 2 channel;</p><p>2. The stealthiness (and, therefore, detection avoidance) conferred by the absence of a traditional C 2 channel;</p><p>3. The fact that compromising any number of bots does still not allow botnet size estimation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1">Spamming Botnets</head><p>If the main objective of the botnet is sending spam, one rather ingenious way of solving the upstream problem, is sending the information encoded along with the spam email, thus hiding the upstream communication in plain sight. This can be done without allowing researchers to read the information, by encrypting all the transmitted information with the botmaster's public key. With this upstream solution, there is virtually no communication done by the bot that doesn't fit the "sending spam" profile, since bots are never required to respond to a command, or have any kind of interaction with the rest of the botnet. To access the data, the botmaster only has to receive spam, something very easy to accomplish these days.</p><p>Obviously, researchers can use the spamming activity to detect the active participants of a botnet, but an active bot will, at most, only compromise itself.</p><p>This upstream solution raises again the issue of randomness and performance in the information retrieval process. The analysis of this specific information upstream channel will not be presented in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2">Information gathering Botnets</head><p>In the case of botnets whose purpose is solely covert information gathering (and not spam), the previous scheme is not an option. In this type of botnet, information is usually stolen locally from infected hosts, through the use of key-loggers, and other mechanisms that usually do not require interaction with external systems. This means that, to send information upstream, bots will have to break silence, even though, assumedly, the amount of involved information is not big enough, in itself, to lead to bot detection. However, it is still possible to create an upstream channel that:</p><p>1. Minimizes the risk of detection;</p><p>2. Allows the bots to keep operating undetected;</p><p>3. Does not expose the botmaster.</p><p>To achieve this, the command dissemination mechanism must change. In particular, bots receiving a valid command must now send an acknowledge to the dissemination layer host from whom the command originated. This information will allow the hosts in the dissemination layer to detect which contacted hosts are part of the botnet, something that will be crucial for allowing the botmaster to retrieve data from the bots, as will be seen further ahead in the text.</p><p>Clearly, requiring bots to acknowledge commands, opens a path for researchers to identify the participants in the botnet. Since commands are disseminated randomly over the internet, researchers can easily collect them. Therefore, to determine if a specific IP address is part of the botnet, a researcher could, in principle, simply replay one of the received commands, and verify if an acknowledge was sent back. Unfortunately, even this weakness can be circumvented by the botmaster, as discussed below.</p><p>Dissemination layer authentication If we could forge or replay commands, prompting acknowledgement from the bots, the botnet size could be estimated, and the infected machines identified. However, botmasters must ensure that bots only acknowledge commands directly originating from hosts in the dissemination layer. The authentication must be done by the bots without access to any information other than the botmaster's public key (that is the only trust anchor they possess), and without the need to transmit (in order to avoid detection).</p><p>Such an authentication scheme can be devised, based on a simple assumption: researchers are unable to access the code of the malicious website used to gather dissemination layer hosts, before expiration of the command issued by the botmaster (commands sent by the botmaster will thus possess a time-validity stamp). This scheme requires, not only the existence of a public/private keypair owned by the botmaster (K bm /K −1 bm ), but also one key-pair for each of the deployed dissemination websites (K w /K −1 w ). The protocol is depicted in <ref type="figure" target="#fig_0">Figure 2</ref>. The following abbreviations are used in this figure:</p><formula xml:id="formula_0">K x /K −1</formula><p>x as x's public/private keys; {m}K −1 x representing m signed Bot Master (bm) 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e with x's private key; C represents the command to disseminate; finally, M is the message sent to the bot. Protocol operation progresses as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Bot</head><p>1. After compromising a vulnerable website, the botmaster inserts the malicious code, which includes the following information: the botmaster's public key (K bm ); the site-specific private key (K −1 w ); the site-specific public key, signed with the botmaster's private key ({K w }K −1 bm ); and the command to be sent, also signed with the botmaster's private key ({C}K −1 bm ); 2. When any host accesses the infected website, the malicious code is sent to the host, to be executed;</p><p>3. This host (which is now part of the command dissemination layer) sends the command message (M), signed with the site-specific private key ({M}K −1 w ), to possible bots. It also sends the site-specific public key, signed with the botmaster's private key ({K w }K −1 bm ). Message (M) contains the command to be executed (C) and the destination bot address; This protocol creates a verifiable trust chain between the botmaster's public key, and message M: the bot verifies if the site-specific public key received is signed by the botmaster, using the known botmaster's public key; then, it uses that public key to verify the signature of message M; finally, it verifies if the Dst IP corresponds to it's own IP address. If these three steps are successful, the bot knows that the host from which this message was received, has had access to one of the botmaster's command dissemination websites. Note that the bot still has to verify the authenticity of C, and the time-stamp associated with it. Under the assumption that researchers will not be able of accessing the code in the dissemination website before command expiration (expiration time may be chosen in such a way as to guarantee that this assumption holds true with a desired high probability), reception of an authentic, non-expired command allows the bot to reply with an acknowledge message, without exposing itself to researchers. If this assumption does not hold true, and researchers are somehow successful in obtaining access to the dissemination website prior to the expiration of C, all we obtained is the capability to identify IP addresses pertaining to the botnet, with no better strategy than random scanning within a short time interval. The insertion of false commands will still not be possible.</p><p>Overlay Construction We will now discuss how the botmaster can retrieve bot information from the dissemination layer without becoming exposed.</p><p>One possible way of implementing the upstream channel is to have the hosts in the dissemination layer retrieve the information from each contacted bot, and post it back to the compromised websites. However, this would create one (or several) places to which the botmaster would have to access for final information retrieval. If one or more of these points could be identified, we could wait for botmaster access, and accomplish direct botmaster identification. Moreover, by taking these websites down, we could also prevent the botmaster from retrieving the stolen information.</p><p>The botmaster may, however, build an overlay within the bots of the botnet, which only the botmaster can locate and use, to retrieve upstream information from the bots. The mechanism is as follows: when a host in the dissemination layer receives an acknowledge from a bot to which it sent a command, it encrypts the bot's IP address with the botmaster's public key. Then, it pushes this information to every other bot found in subsequent dissemination attempts. Each time a new bot is found, its encrypted address is appended to the list, and pushed to subsequently found bots. Each host in the dissemination layer is, therefore, creating a path (a multiply-linked list, in fact) containing all the bots it finds while disseminating the commands. Each bot will possess a list of the encrypted addresses of the bots previously contacted by the same dissemination layer host. Since the list is encrypted with K bm , only the botmaster is capable of using it. The mechanism is depicted in <ref type="figure">Figure 3</ref>.</p><p>As will be seen in the analysis section, for realistic values of the parameters, each one of these individual paths will not possess, on average, more than a couple dozens of IP addresses. Since the IP addresses scanned by the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Encrypted finger</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dissemination Layer Host</head><p>0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e</p><p>Command Dissemination A B C D 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e 0x7 2e4 b76 0xc 52b 7d0 0x8 076 2b8 0xd e32 54e dissemination layer are chosen at random, the individual paths created by different dissemination hosts may, however, intercept. If the number of intersections is large enough, the overlay may present a high degree of connectivity, extending throughout the set of contacted bots. The degree of connectivity of the overlay, as a function of the involved parameters, will be seen in the analysis section (Section 4). This overlay can be easily extended to have bidirectional paths, by having the dissemination hosts sending the encrypted IP address of a newly found bot, to the last bot (or k bots) contacted. With the overlay in place, retrieving information from the botnet becomes a trivial task to the botmaster: he simply has to find one of the bots of the overlay (by random scanning), and then travel through the overlay to find the rest of the bots in the overlay, pulling the information stored in each bot along the way. We stress the fact that, since the fingers are encrypted with K bm , only the botmaster can navigate the overlay.</p><p>Accessing the Overlay By simply joining the botnet with honeypots, and waiting for information retrieval requests, we might be capable of recording the IP address of the botmaster, if we were part of the overlay, or if we were contacted by the botmaster while trying to reach a bot in the overlay. This might give us an edge, even though only a probabilistic one.</p><p>The botmaster can, however, circumvent this weakness. Let us consider the following algorithm:</p><p>1. The botmaster (to be referred as Bot 0 ) contacts one of the bots in the overlay (let us call it Bot 1 ), and requests its overlay list (which is encrypted with K bm , as discussed above).</p><p>2. With probability ρ, Bot 0 nominates Bot 1 to be responsible for information retrieval, and the algorithm proceeds to Step 5. With probability (1 − ρ), the botmaster returns one of the overlay bot addresses (randomly chosen, and in plain text) to Bot 1 , and Bot 1 is requested to connect with the bot in that address (call it Bot 2 ), and obtain its overlay list (which Bot 1 will forward back to Bot 0 );</p><p>3. With probability ρ, Bot 0 nominates Bot 2 (through Bot 1 ) to be responsible for information retrieval, and the algorithm proceeds to Step 5. With probability (1 − ρ), the botmaster returns one of the overlay bot addresses (randomly chosen, and in plain text) to Bot 2 (via Bot 1 ), and Bot 2 is requested to connect with the bot in that address (call it Bot 3 ), and obtain its overlay list (which Bot 2 and Bot 1 will forward back to Bot 0 ); 4. And so on, for Bot 3 , Bot 4 , ...Bot q ;</p><p>5. The bot nominated as responsible for information retrieval (Bot q ) crawls the full overlay, using the botmaster (via the tunnel) to decrypt the overlay address fingers of each successive bot, and sending the collected information back through the established tunnel. This step will be further refined below.</p><p>With this algorithm, the botmaster is creating a tunnel through which the information will be retrieved, the retrieval itself being a task of the last bot in the tunnel Bot q . Since the retrieved information is sent to Bot q already encrypted with K bm , only the botmaster will be able to read it.</p><p>The intuition of this approach is that each bot in the tunnel looks to its successor in the exact same way the botmaster looks to the first contacted bot. Hence, there is no way for a contacted researcher to determine if his antecessor is the botmaster, or simply an innocent bot at an intermediate position in the tunnel. On the other hand, nodes in this tunnel only know the IP addresses of the previous and the next bots in the tunnel, and, thus, the tunnel cannot be traced back to its origin. This mechanism is depicted in <ref type="figure" target="#fig_1">Figure 4</ref>. <ref type="table">0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076  2b8  0xde32  54e   0x72e4  b76  0xc52b  7d0  0x8076</ref> 2b8 0xde32 54e q 0x72e4 b76 0xc52b 7d0 0x8076 2b8 0xde32 54e</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BM</head><p>Figure 4: Construction of a tunnel through q randomly chosen bots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Analysis</head><p>In this section, we will analyze the performance of both the downstream and upstream techniques described in the previous sections. This analysis will highlight the impact on performance of the several system parameters, and provide the practical bounds within which this overall botnet scheme may constitute a threat to network operations. The performance of both the command dissemination and the overlay construction mechanisms cannot be validated in a real-world scenario, since this would require controlling several thousands of nodes, which largely exceeds the number of nodes at our disposal, even when using platforms such as Planetlab. The performance analysis will, thus, use both analytical and simulated results without the benefit of real-life deployment.</p><p>We will assume a botnet with a static population of N = 150000 bots. This number of bots is easily achievable, and in fact, there are botnets that largely exceed this number <ref type="bibr" target="#b20">[23]</ref>. These bots will be considered to be uniformly distributed throughout the presently assigned IPv4 address space. Using the Bogon list ( <ref type="bibr">[2]</ref>), which contains unallocated or reserved address blocks in the IPA address space, only S = 3086889768 possible IP addresses will be considered. We must also consider: the rate at which the browsers running on the intermediate hosts are capable of sending out requests (r); the number of days the dissemination website is up, or the malicious code is active on the dissemination site (d); the number of visitors the dissemination website receives per day (v); and the average number of minutes that a user spends on the dissemination website (m).</p><p>Without loss of generalization, two of these parameters, r and d, will be considered constant throughout the analysis. Since the scanning rate r varies from browser to browser, we tested it on three browsers <ref type="bibr">(Firefox, Safari, and Chrome)</ref>, and on two distinct platforms (Windows and OS X). We obtained approximately the same perfor-mance in all cases (about 250 requests per second). This is well below the reported performance of some previous well known cases (e.g. Code Red, <ref type="bibr" target="#b27">[30]</ref>). Parameter d will be assumed to be d = 1, which means that we will assume only 24 hours of dissemination layer activity, until command (C) expiration. This choice is based on the assumption that researchers need at least 24 hours to get the source code of the dissemination website. This seems to be a conservative assumption, since, as reported in the literature (e.g. <ref type="bibr" target="#b16">[19]</ref>), it has been difficult to collect scripts even from malicious websites that stay online for longer periods of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Case-study implementation</head><p>For a case-study, we implemented some parts of the described architecture. To recruit intermediate layer hosts, we created a Javascript program that was loaded and ran on the victims' browsers 2 . The reason for the choice of Javascript is the fact that it is both present in all modern browsers, and turned on by default.</p><p>We started by implementing a script capable of bypassing the browser's same origin policy. This policy prevents access to most methods and properties across pages on different websites <ref type="bibr">[4]</ref>. Unfortunately, there are widely available tools such as EasyXDM <ref type="bibr" target="#b1">[3]</ref>, that allow bypass of this security mechanism across all mainstream browsers 3 . Then, the malicious script was made to scan a given IP address range, by sending AJAX requests to all the IP addresses, and collecting correct replies from the simulated bots. We also tested the rate at which our malicious script was able to generate AJAX requests, to obtain parameter r (the scan-rate of the intermediate hosts). The significative difference between the scanrate obtained and the scan rates of usual worms can be explained by the fact that browsers are not optimized to send large numbers of simultaneous requests. Finally, we tested public-key encryption libraries in Javascript, to verify the feasibility of the dissemination layer authentication mechanism.</p><p>Adobe Flash could also have been used. It is still ubiquitous in modern browsers, and it also possesses the capability of doing HTTP requests to hosts, and, therefore, the capability of command dissemination. One interesting characteristic of Flash is Adobe Stratus (see <ref type="bibr" target="#b0">[1]</ref>), a service that allows clients to send data from client to client, without passing through a server (P2P communication). This capability would allow cooperation between the intermediate hosts, thereby increasing the number of bots reached in each dissemination campaign, as will be seen further ahead in the text.</p><p>On the issue of how to get honest website visitors to run malicious code, there are two basic approaches: attackers may create their own websites with that specific purpose in mind <ref type="bibr" target="#b23">[26]</ref>, and advertise them through spam email, trending topics on twitter, search engine poisoning, abusing URL shorteners, etc; alternatively, existing websites can be used. We note that common vulnerabilities like XSS and SQL injection are sufficient to get legitimate users running malicious code. The most common method for malware infection is precisely drive-by downloads, in which attackers create malware-serving websites to recruit bots. This is, in fact, commonly done. Using these sites to also recruit intermediate layer hosts would imply only a minor addition to common attack procedures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Command Dissemination</head><p>One of the first performance issues to be addressed is the degree of completeness of command diffusion. Since bots are completely stealth (they simply listen for commands from the botmaster), their IP addresses are not known to the botmaster, or to the intermediate hosts, and commands must be sent randomly to the internet address space, in the hope of reaching a considerable portion of the universe of existing bots. In this analysis, we will assume that a single host does not repeat IP addresses, even though any address may turn out to be scanned as much as v times, once by each host in the dissemination layer. This inefficiency in the global scanning strategy could be fixed, if the botmaster would allow cooperation between the intermediate hosts. Attempting to reach all bots in practical time is an impossible goal, but the possibility of reaching a significant percentage of bots must be investigated.</p><p>Since each one of the hosts in the dissemination layer has a fixed scanning rate r, and d is considered fixed, there are only two parameters influencing the mean percentage of bots that will receive the disseminated commands: v and m. Denoting by s(n) the number of bots reached after n randomly addressed requests (n being the sequential number of a given request within the global set of all requests transmitted by the v intermediate hosts), the equation governing bot discovery by random scan of the used IPv4 address space is given by Equation 1:</p><formula xml:id="formula_1">E{s(n)} = E{s(n − 1)} + N − E{s(n − 1)} S − n v ,<label>(1)</label></formula><p>E{·} being the expected value operator. The solution to this difference equation, when written as a function of the number of hosts in the dissemination layer (v) is given by Equation 2:</p><formula xml:id="formula_2">E{s(v)} = N 1 − 1 − m · r · 60 · d S v .<label>(2)</label></formula><p>In <ref type="figure" target="#fig_3">Figure 5</ref>, we plotted the mean fraction of bots receiving the disseminated command sent out by the botmaster, as a function of the number of hosts in the dissemination layer (Equation 2), for three different values of m (m = 10, m = 15 and m = 20).</p><p>As a side note, and as a justification for our choices of the value of m, once a victim visits a malicious website, attackers can use a combination of Clickjacking and Tabnabbing to ensure that the malicious javascript is kept running for as long as possible. Additionally, the introduction of WebWorkers by HTML5 gives attackers the ability of executing threads running malicious code without slowing down or making the victim's browser unresponsive, which also helps attackers maintain their code running without detection. These tricks, together with the concept of tabbed browsing, mean that most users will have each individual tab remain open throughout the browsing session, which could stretch for hours. This easily puts the average lifetime of an individual instance of the malicious javascript in the order of tens of minutes.</p><p>As previously stated, the dissemination strategy could be made considerably more efficient if the botmaster allowed cooperation between the intermediate hosts, since in that case no address would be scanned twice, implying a constant bot discovery rate. To appreciate this increase in efficiency, the bot discovery performance of such an approach is also represented in <ref type="figure" target="#fig_3">Figure 5</ref>, for the case of m = 20. From <ref type="figure" target="#fig_3">Figure 5</ref>, we can conclude that the non-cooperative approaches require, for effectiveness, a medium sized dissemination site <ref type="bibr">(2000 &lt; v &lt; 20000)</ref>. Sites with lower visitor rates will generate low populated dissemination layers, and low levels of access to the bot population (percentages of botnet coverture smaller than 20%). Alternatively, a set of smaller sized web sites would be needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Overlay Connectivity</head><p>The total number of bots reached in the command dissemination phase is not, however, the only parameter from which the threat level depends. Another issue that must be addressed is the capability to form an overlay of sufficient size to allow proper operation of the upstream information retrieval mechanism (see Section 3). The problem is two sided: we must evaluate the mean size and statistical distribution of the path of bots reached by each one of the intermediate hosts; also, we must consider the connectivity between these different individual paths, since both parameters will determine the maximum size of the connected overlay and, hence, its information retrieval capability. The worst case overlay will be one that includes all the bots reached in the command dissemination phase, a situation that corresponds to a fully connected set of individual paths.</p><p>The number k of successes (k contacted bots) in the process of randomly scanning the IPv4 address space by a single host follows a hypergeometric distribution. That is:</p><formula xml:id="formula_3">P(k) = N k S − N m · r · 60 · d − k S m · r · 60 · d (3)</formula><p>Its mean value (mean length of the individual bot paths) is given by (m · r · 60 · d · N)/S and is, therefore, a linear function in both r and m. Evaluating the connectivity of the global overlay (that is, the connectivity of the set of individual bot paths) now becomes a typical problem of graph analysis. To perform this evaluation, we simulated several dissemination campaigns using Mathematica. For each campaign, v bot chains of random IP addresses (from the set of S used addresses) were generated. The length of each individual chain was obtained with (3) with the appropriate parameters. We then evaluated the overall connectivity of the generated graph, and determined the mean size of the biggest cluster of bots. As a preliminary note, we note that the parameter with the biggest impact on the connectivity (length) of the overlay is the number of minutes spent on the dissemination website by the visitors (m), due to its impact on the length of the individual paths. In <ref type="figure" target="#fig_4">Figure 6</ref> we present the mean size of the largest connected cluster of bots (as a percentage of the total number of bots present in the graph), plotted as a function of m. The Monte Carlo simulation to generate this curve consisted of 100 different simulated dissemination campaigns, with N = 150000, S = 3086889768 and v = {2000, 5000, 10000, 20000}. We can see that, even for the smallest value of v, m &gt; 20 implies that the set of bots contacted in the dissemination command becomes almost fully connected, thus creating a worrisome overlay, highly capable of supporting information retrieval.</p><p>A final performance issue should be addressed: the mean amount of time required for the botmaster to contact the overlay. We should note, however, that this is not a critical issue. Once the overlay is set up, there is no particular timeline for the botmaster to comply with in this last information retrieval phase. However, the existence of dynamics in the bot population may introduce breaks in the connected overlay (bots going off-line), splitting it into smaller sub-paths and, thus, hampering the effectiveness of the retrieval process. Hence, we should also consider this additional parameter l -the mean number of scan attempts it takes the botmaster to contact the overlay, by randomly scanning the used IP address space (l can then be directly translated into time). Since the tunneling scheme doesn't affect the probability structure of the scan, the scan process is still governed by a hypergeometric arrival process (Equation 3), but with N replaced by the mean overlay max size (p). This implies that the probability mass distribution for the number of scan attempts needed to reach one of the bots of the overlay (u) is:</p><formula xml:id="formula_4">P(u) = p S − p − u + 1 u−1 ∏ i=0 S − p − i S − i<label>(4)</label></formula><p>The mean number of tries required to reach one of the bots of the overlay becomes:</p><formula xml:id="formula_5">l = E{u} = S/p.<label>(5)</label></formula><p>With the results of Equation 5, <ref type="figure" target="#fig_4">Figure 6</ref> and Equation 2, the effectiveness of the overall botnet downstream and upstream flows can be evaluated and, thus, the overall danger to network operations properly considered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>These results show that the possibility of emergence of this type of botnet constitutes a serious threat, requiring new defensive approaches. From the previous section, we note that the time taken for researchers to identify the malicious website plays a critical role on the feasibility of the proposed architecture. Currently, the detection of malicious websites takes several days, and if a malicious website stays online for a smaller period of time, it will probably remain undetected. Furthermore, there is a lot of fragmentation on the available website blacklists, allowing users to access websites that were already detected as malicious in other blacklists. We need, therefore, to focus our efforts in developing improved mechanisms to detect and blacklist malicious websites, in a faster and more efficient manner. Also, the discussed architecture reduces the usefulness of "client-side" honeypots emulating normal enduser systems. Since bots do not possess information regarding the C 2 infrastructure, capturing them is of limited use. Therefore, in order to be able to detect and mitigate this threat, we should switch our focus to "serversided" honeypots, detecting and analyzing the creation of the malicious websites themselves, instead of bot infections.</p><p>Finally, there is a vastly unexplored space concerning heuristics that allow browsers to detect malicious behavior that does not directly target the user's browser. As of now, having javascript code sending thousands of backto-back connections is not considered malicious by the majority of detection methods, since they focus on the detection of specific attacks (exploit attempts, for example). Heuristics that enable detection of code that creates a large number of connections to different remote destinations, with a potentially large number of those being failed requests, should be put in place. These heuristics would also be useful in the detection of other types of attacks, such as browser-based denial-of-service, where malicious code is also sent to hundreds of legitimate clients, having them send thousands of requests to some specific remote location, thereby effectively creating a distributed denial-of-service attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Botnet detection has been a major research topic in recent years. Lately, researchers have been focusing on detection of the command-and-control traffic, as a way to detect the presence of infected machines, and analyse the botnet infrastructure <ref type="bibr" target="#b21">[24,</ref><ref type="bibr" target="#b4">7,</ref><ref type="bibr" target="#b14">17,</ref><ref type="bibr" target="#b3">6]</ref>.</p><p>Centralized botnets are the most commonly known and studied botnets. Most of these botnets use IRC servers as their centralized control point, having the bots joining in as normal clients. The existence of a centralized control point is the biggest weakness of this kind of infrastructure, since it represents a single point of failure in the architecture. Also, this particular kind of C 2 infrastructure allows researchers to extract information about the botnet, such as its size and the participants's IP addresses.</p><p>Several techniques have been found to detect this type of C 2 infrastructure. In <ref type="bibr" target="#b8">[11]</ref>, the authors proposed several statistical algorithms to detect these botnets, based on their multiple crowd-like behavior. An extension of this work was done in <ref type="bibr" target="#b7">[10]</ref>, where the authors presented a framework to perform clustering on the monitored C 2 communication and malicious activities, performing a cross-correlation between them to attain the final results. Also, some researchers have studied particular details of the IRC protocol, enabling the detection of this specific kind of botnets <ref type="bibr" target="#b6">[9]</ref>. Unfortunately, botnets are also in constant evolution, and, more recently, there was a shift in C 2 architectures towards the use of P2P networks. This new C 2 infrastructure is focused on survivability, and is therefore, considerably harder to take down. However, due to the open and decentralized nature of peer-topeer protocols, the academic community has also found several ways of detecting and infiltrating them.</p><p>In <ref type="bibr" target="#b13">[16]</ref>, researchers were able to infiltrate the Storm botnet by impersonating proxy peers in the overlay network used for the C 2 infrastructure. They were able to take advantage of this privileged position in the overlay, to rewrite URLs in the spam sent by the bots. Also, there are several results on botnet size estimation that exploit the openness of the C 2 infrastructure overlay to estimate the botnets' size, or to extract the stolen information from the bots <ref type="bibr" target="#b10">[13]</ref>. One other way of disrupting the operation of these botnets has been to attack the bootstrap procedure, and tamper with the domain name service (DNS), as bots typically resolve domain names to connect to their C 2 infrastructure. Therefore, by collaborating with the domain registrar, it is possible to change the mapping of a botnet domain to point to a machine controlled by the researchers.</p><p>It is our intuition that botmasters will try to camouflage their C 2 infrastructure, and maybe avoid its use altogether, if possible. One such example of camouflage can be found in <ref type="bibr" target="#b19">[22]</ref>. Overbot is a P2P C 2 infrastructure proposed by Starnberger et al., that camouflages bots as normal P2P clients, thwarting researchers from distinguishing a compromised host from a honest P2P participant. This solution turns out to be impractical for several reasons, one of them being the fact that it requires the existence of several sensor bots inside the P2P network, possessing the botmaster's private key, and sniffing all control communications that passes trough them. A similary stealthy approach is also described in <ref type="bibr" target="#b17">[20]</ref>, where the authors design a botnet architecture that makes use of the Skype P2P network as a C 2 infrastructure.</p><p>In the literature, there are some references to the principle of no single bot knowing more about the infrastructure than its own local information <ref type="bibr" target="#b5">[8]</ref>. This would allow the detection and compromise of an unbounded number of bots, since none of them possesses enough knowledge to allow the compromise or exposure of the full botnet. However, to the best of our knowledge, this is the first work to show that this principle can be implemented in a practical way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>Most of the recent approaches to botnet detection and analysis are based upon the vulnerabilities of the botnet's internal C 2 infrastructure. In this paper, we showed that, with the present capabilities of scripting languages like javascript, it is already possible to devise a botnet which does not, in fact, possess an internal C 2 infrastructure, and is, therefore, impervious to such methods of analysis.</p><p>An example of such an architecture was discussed, were bots do not possess any information concerning command-and-control mechanisms. These stealth, isolated bots are controlled through honest participants not pertaining to the botnet. This architecture eliminates the possibility of estimation of the botnet size, minimizes the probability of detection of individual bots, and eliminates the possibility of researcher infiltration. The impact on performance of the several system parameters was analyzed, the bounds within which such an architecture may constitute a threat were determined, and a case-study architecture was implemented. We believe that, given the recent focus on detecting the C 2 communication pattern of botnets by the academic community, botmasters will follow a predictable evolutionary pattern, and try to employ this type of architecture to harden their botnets against researchers. As was shown, for some combinations of the relevant parameters, these botnets may constitute serious, effective threats, very difficult to analyze and defuse. An effort is, therefore, needed, if we are to preclude the emergence of this type of botnet.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Dissemination layer authentication.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>4 .</head><label>4</label><figDesc>The bot verifies the authenticity of M and C, and the associated time stamp. If M and C are authentic and not yet expired, command C is executed, and an acknowledge is sent to the intermediate layer host.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>{A}K bm ,{B}K bm 3 Figure 3 :</head><label>33</label><figDesc>Figure 3: Construction of an encrypted bot overlay by the intermediate hosts.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Fraction of population reached with a varying number of dissemination hosts for (S)mall, (M)edium and (B)ig websites.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Percentage of overlay connectivity with a varying number of minutes of dissemination.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>This intermediate C 2 layer</head><label></label><figDesc></figDesc><table>Botmaster 

0x72 
e4b7 
6 
0xc5 
2b7d 
0 
0x80 
762b 
8 
0xde 
3254 
e 

0x72 
e4b7 
6 
0xc5 
2b7d 
0 
0x80 
762b 
8 
0xde 
3254 
e 

0x72 
e4b7 
6 
0xc5 
2b7d 
0 
0x80 
762b 
8 
0xde 
3254 
e 

Bots 

Vulnerable Webserver 

Web Users 

</table></figure>

			<note place="foot" n="1"> For the moment this assumption creates a worst-case scenario which will be abandoned at a later section.</note>

			<note place="foot" n="2"> The victims referred here, are test computers allocated for that specific purpose. 3 HTML5 formalizes a method for this: the postMessage interface, removing the need for external tools.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Adobe labs -stratus</title>
		<ptr target="http://labs.adobe.com/technologies/stratus" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Easyxdm -cross-domain messaging</title>
		<ptr target="http://easyxdm.net" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A multifaceted approach to understanding the botnet phenomenon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Abu Rajab</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zarfoss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Monrose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Terzis</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IMC &apos;06: Proceedings of the 6th ACM SIGCOMM conference on Internet measurement</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="41" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A proposal of metrics for botnet detection based on its cooperative behavior</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Akiyama</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kawamoto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Shimamura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yokoyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kadobayashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yamaguchi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SAINT-W &apos;07: Proceedings of the 2007 International Symposium on Applications and the Internet Workshops</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page">82</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Botnet detection by monitoring group activities in dns traffic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Choi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">7th IEEE International Conference on</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
	<note>Computer and Information Technology</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The zombie roundup: understanding, detecting, and disrupting botnets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cooke</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Jahanian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mcpherson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SRUTI&apos;05: Proceedings of the Steps to Reducing Unwanted Traffic on the Internet on Steps to Reducing Unwanted Traffic on the Internet Workshop</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="6" to="6" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Rishi: identify bot contaminated hosts by irc nickname evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Goebel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HotBots&apos;07: Proceedings of the first conference on First Workshop on Hot Topics in Understanding Botnets</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="8" to="8" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Botminer: clustering analysis of network traffic for protocol-and structure-independent botnet detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Perdisci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SS&apos;08: Proceedings of the 17th conference on Security symposium</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="139" to="154" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">BotSniffer: Detecting botnet command and control channels in network traffic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th Annual Network and Distributed System Security Symposium (NDSS&apos;08</title>
		<meeting>the 15th Annual Network and Distributed System Security Symposium (NDSS&apos;08</meeting>
		<imprint>
			<date type="published" when="2008-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Measurements and mitigation of peer-to-peer-based botnets: a case study on storm worm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Biersack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Freiling</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LEET&apos;08: Proceedings of the 1st Usenix Workshop on Large-Scale Exploits and Emergent Threats</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Measurements and mitigation of peer-to-peer-based botnets: a case study on storm worm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Biersack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Freiling</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LEET&apos;08: Proceedings of the 1st Usenix Workshop on Large-Scale Exploits and Emergent Threats</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The effect of dns delays on worm propagation in an ipv6 internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kamra</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Misra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keromytis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFO-COM 2005. 24th Annual Joint Conference of the IEEE Computer and Communications Societies. Proceedings IEEE</title>
		<imprint>
			<date type="published" when="2005-03" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="2405" to="2414" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Towards complete node enumeration in a peer-to-peer botnet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Chan-Tin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">P</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tyra</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">J</forename><surname>Nunnery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wadler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Sinclair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dagon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASIACCS &apos;09: Proceedings of the 4th International Symposium on Information, Computer, and Communications Security</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="23" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Spamalytics: an empirical analysis of spam marketing conversion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kanich</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kreibich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Levchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Enright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;08: Proceedings of the 15th ACM conference on Computer and communications security</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="3" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Wide-scale botnet detection and characterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karasaridis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rexroad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hoe-Flin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HotBots&apos;07: Proceedings of the first conference on First Workshop on Hot Topics in Understanding Botnets</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="7" to="7" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Worm propagation strategies in an ipv6 internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keromytis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Bellovin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheswick</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">USENIX</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="70" to="76" />
			<date type="published" when="2006-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A targeted web crawling for building malicious javascript collection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Likarish</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DSMM &apos;09: Proceeding of the ACM first international workshop on Data-intensive software management and mining</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="23" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Take a deep breath: a stealthy, resilient and cost-effective botnet using skype</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nappa</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fattori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Balduzzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dell&amp;apos;amico</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cavallaro</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th international conference on Detection of intrusions and malware, and vulnerability assessment</title>
		<meeting>the 7th international conference on Detection of intrusions and malware, and vulnerability assessment<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="81" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A foray into conficker&apos;s logic and rendezvous points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Porras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yegneswaran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">LEET&apos;09: Proceedings of the 2nd Usenix Workshop on Large-Scale Exploits and Emergent Threats</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Overbot: a botnet protocol based on kademlia</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Starnberger</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kruegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kirda</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SecureComm &apos;08: Proceedings of the 4th international conference on Security and privacy in communication networks</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Your botnet is my botnet: analysis of a botnet takeover</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stone-Gross</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cavallaro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Szydlowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kemmerer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kruegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vigna</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS &apos;09: Proceedings of the 16th ACM conference on Computer and communications security</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="635" to="647" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Detecting botnets with tight command and control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Strayer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walsh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Livadas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lapsley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Local Computer Networks, Proceedings 2006 31st IEEE Conference on</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="195" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">An advanced hybrid peer-to-peer botnet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sparks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And Member</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C Z</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Workshop on Hot Topics in Understanding Botnets</title>
		<meeting>the First Workshop on Hot Topics in Understanding Botnets</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Is the internet for porn? an insight into the online adult industry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wondracek</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Holz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Platzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kirda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kruegel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth Workshop on the Economics of Information Security</title>
		<meeting>the Ninth Workshop on the Economics of Information Security</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Spamming botnets: signatures and characteristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xie</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Achan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Panigrahy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hulten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Osipkov</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGCOMM Comput. Commun</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A p2p-based worm in next gernation network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X.-M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 Fourth International Conference on Genetic and Evolutionary Computing</title>
		<meeting>the 2010 Fourth International Conference on Genetic and Evolutionary Computing<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="418" to="421" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Worm detection in an ipv6 internet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yangui</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Jiachun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Xiangchun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huanyan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Intelligence and Security, 2009. CIS &apos;09. International Conference on (dec. 2009)</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="366" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On the performance of internet worm scanning strategies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zou</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C</forename><surname>Towsley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gong</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Perform. Eval</title>
		<imprint>
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="700" to="723" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
