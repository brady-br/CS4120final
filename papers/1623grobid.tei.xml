<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:05+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Query Computing for Uncertain Possibilistic Databases with Provenance</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Angelos</forename><surname>Vasilakopoulos</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">National Technical University of Athens</orgName>
								<orgName type="institution" key="instit2">Cyprus University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Verena</forename><surname>Kantere</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">National Technical University of Athens</orgName>
								<orgName type="institution" key="instit2">Cyprus University of Technology</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Query Computing for Uncertain Possibilistic Databases with Provenance</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We propose an extension of possibilistic databases that also includes provenance. The introduction of prove-nance makes our model closed under selection with equalities, projection and join. In addition the computation of query computing with possibilities is polynomial, in contrast with current models that combine provenance with probabilities and have #P complexity.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Modeling, representing and manipulating uncertain data has gained a lot of research attention. There has been a plethora of models that capture different kinds of uncertainty: i) when an attribute can take a value from a finite set of alternatives (model of or-sets), ii) when the existence of a whole tuple is not certain (model of ?-tuples). The last two kinds can be combined yielding the x-tuple and x-relation model R a ? <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8]</ref>. On top of uncertain models we can also put "confidence" values. For example in the model of ?-tuples if we attach on each tuple the probability of the event that this tuple is indeed present in our data we yield the model of probabilistic databases <ref type="bibr" target="#b4">[5]</ref>.</p><p>One of the key aspects of an uncertain database framework is how efficient it can compute queries. Consider a query Q and an uncertain database U . An uncertain database U represents a set of possible worlds P W (U ). One naive approach in order to compute Q over U would be to compute first all the possible worlds of P W (U ) and pose the query over each one of them. This approach is not efficient since computing the possible worlds of an uncertain database can be intractable in the size of the data. For example if we have an uncertain relation with n x-tuples and each one of which has m different alternatives then the possible worlds are m n . In contrast we would like to be able to efficiently compute query Q posed directly on uncertain database U and the result Q(U ) to be a new uncertain database which can be represented in our model with the correct semantics, i.e., we have that P W (Q(U )) = Q(P W (U )) <ref type="bibr" target="#b8">[9]</ref>. If this holds for an uncertainty model and a query language L we say that this model is closed under L.</p><p>Possibilistic databases extend the x-tuple model by attaching on each alternative value degrees from a possibility distribution. In <ref type="bibr" target="#b1">[2]</ref> it was shown that possibilistic databases are not closed under: i) selection with a condition that involves different attributes, ii) projection that performs duplicate elimination in the tuples of the answer and iii) under the join operator. In addition existing database models with provenance that attach "belief values" by using probabilities have high complexity #P <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12]</ref>. We solve the first problem and for the second problem we offer a suitable alternative to probabilities by proposing a new model which extends possibilistic databases by adding provenance. The proposed model has the following benefits:</p><p>• Closed under: i) selection involving equalities even over different attributes, ii) projection even after duplicate elimination and iii) join. This property is a result of the introduction of provenance in the possibilistic model.</p><p>• The possibility values of each tuple alternative in the answer of a query involving the above three operators are computed in polynomial time.</p><p>Our main contribution is that we define operators for equality select, projection (wth duplicate elimination) and join that can be posed directly on a database expressed in our model of provenance and possibilities without the need to compute first all the possible worlds. The result of each operator is a new database of our model that has the correct semantics: its possible worlds are the same with the ones we would have if we first computed all the possible worlds and pose queries over them. Moreover our operators compute data and possibilities for each alternative of the result in polynomial time.</p><p>We think that the employment of possibilities instead of probabilities in our model offers more suitable modeling of alternative belief values, due to the qualitative nature of possibilities. For example suppose that we want to model the fact that a witness Amy is uncertain of whether she saw a M azda or a T oyota car but she believes that more likely it was a M azda. These kinds of real-life situations are well-represented though possibilistic theory. In addition even when only probabilities of alternatives are available, there exists a way to "translate" probability values to possibilities such that the more probable events will also be more possible, as it is intuitively expected <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related Work</head><p>The possibilistic model is not closed for SPJ queries because it is not powerful enough to pose logical constraints on the alternative values that tuples can take of the answer of a query (e.g., indicate that two alternatives of two different tuples cannot coexist in a possible world <ref type="bibr" target="#b1">[2]</ref>). Recent work <ref type="bibr" target="#b2">[3]</ref> efficiently computes SPJ queries over a limited possibilistic model (specifically where only one alternative has possibility 1 and all others have 1 − a) and the answers of the queries include only tuples appearing in a complete possible world (a world with possibility 1). In contrast our approach returns all tuples appearing in any possible world and does not require the initial data to have this limitation in its possibilities.</p><p>Many models have been proposed that are able to handle uncertainty and keep track of the provenance of data which is usually modeled though semiring annotations on data <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b9">10]</ref>. Those models are closed under positive relational algebra but if probabilistic confidence values are added on each possible alternative tuple then the computation of the probabilities of the answer of a query that involves projection (with duplicate elimination) is intractable (specificaly #P) <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12]</ref>. The provenance used in Trio system <ref type="bibr" target="#b0">[1]</ref> is one out of many kinds of provenance that semirings can model <ref type="bibr" target="#b6">[7]</ref>. Our proposed model extends possibilistic databases by adding Trio's provenance used in the Uncertain and Lineage ULDB model <ref type="bibr" target="#b0">[1]</ref> (where provenance is called "lineage"). The reason we choose this model is because it expresses tuple uncertainty and provenance tracking over the R a ? (or-set and ?-tuple) x-tuple model which is also used in possibilistic databases <ref type="bibr" target="#b0">1</ref> . <ref type="bibr" target="#b0">1</ref> Note that our proposed model that extends possibilistic databases with Trio's provenance can be equivalently regarded as an extension of the ULDB model with possibilistic confidence values on each alternative</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Properties of the Proposed Model</head><p>In this section we illustrate the key aspects of possibilistic databases and of the provenance semiring of Trio. Due to space limitation we refer for more details to <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7]</ref>. We also investigate how we can combine uncertainty (xtuples), provenance (Trio's lineage semiring) and possibilities. We begin with stating the basic properties of the Possibility Theory <ref type="bibr" target="#b2">[3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Possibility Theory</head><p>A possibility distribution is a function π from a domain X to the interval <ref type="bibr">[0,</ref><ref type="bibr" target="#b0">1]</ref>. Possibility π(a) is a qualitative measure expressing the degree of "how possible" it is for the considered variable to take the value a. Each possibility distribution has a normalization condition posing the constraint that at least one of the values of X is completely possible, i.e., has possibility 1. We use a discrete domain of possible values and we denote with {a 1 :π 1 , . . . , a n :π n } the fact that for each i = 1 . . . n value a i has possibility π i . The axioms of possibility are the following: i)</p><formula xml:id="formula_0">Π(X) = 1, ii) Π(∅) = 0, iii) Π(E 1 ∪ E 2 ) = max(Π(E 1 ), Π(E 2 )), iv) Π(E 1 ∩ E 2 ) ≤ min(Π(E 1 ), Π(E 2 )) and when E 1 and E 2 are not-interactive: Π(E 1 ∩ E 2 ) = min(Π(E 1 ), Π(E 2 )).</formula><p>For the events E and ¯ E (opposite of E) the only valid relation is: max{Π(E), Π( ¯ E)} = 1. Apart from possibility each event has a necessity measure N which is dual with Π and their relation is expressed through:</p><formula xml:id="formula_1">N (E) = 1 − Π( ¯ E).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The Proposed Model: Combining Uncertainty, Possibilities and Provenance</head><p>Possibility theory can be naturally adapted to the model of x-relations and the semiring of Trio <ref type="bibr" target="#b0">[1]</ref>. In x-relations model we no longer have ordinary tuples. Instead we have x-tuples which include a bag of possible ordinary tuples, called alternatives. The semantics are the following: on each possible world at most one of the alternatives of an x-tuple can be true. If from an x-tuple we can select none of its alternatives then this is a maybe-xtuple annotated with symbol '?'. It is then straightforward that we can combine possibilistic theory and x-tuples in the following way: Suppose that we have an uncertain database which contains x-tuples. We attach on each alternative a possibility degree and on each x-tuple at least one alternative should be assigned with possibility 1 (the most possible one(s)). Furthermore for each x-tuple with a '?' symbol we attach to it a necessity degree less than 1 and to all other x-tuples necessity equal to 1 (since an alternative of each one of them is always possible). We do not have to explicitly attach a possibility degree on each x-tuple since it is equal to the minimum possibility of each alternative. So we always begin with an uncertain database containing x-tuples with possibility degrees on each alternative and necessity degrees on each x-tuple. Trio's provenance (called "lineage" in Trio) semiring works as follows: If we pose queries over initial data we want to keep track of the provenance of the answers, i.e., from which data the answers are derived from. In order to do this efficiently we attach a unique identifier i over each x-tuple. We also identify the alternatives of each x-tuple: In general the pair (i, j) identifies the j-th alternative of x-tuple i. If an alternative with data t is a result from two other alternatives t 1 and t 2 but can also be the result of our query combining two other alternatives t 3 and t 4 then we have for its lineage: λ(t) = (id(t 1 )∧id(t 2 )) ∨ (id(t 3 )∧id(t 4 )). We note that lineage plays a double role: it relates answers of queries to the data they are coming from and also poses logical restrictions: an alternative can be true only in a possible world in which its lineage is true. We note that initial data have empty lineage. Initial data with empty lineage is defined as base data. Due to limited space we refer to <ref type="bibr" target="#b0">[1]</ref> for more details about lineage and possible worlds. We borrow from the same work the general setting of our following running example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Running Example</head><p>Consider x-relation Saw(witness, car) having two xtuples with two alternatives each. Suppose that witness Amy saw a car near a crime-scene but she was not sure if it was a M azda or a T oyota car. Moreover she believed it was more possible that the car was a M azda and a little less possible that it was a T oyota. The first tuple has identifier 11 and the second 12. We separate different alternatives of a same x-tuple with || symbol. After each alternative we attach its possibility and after each x-tuple its necessity measure, i.e., &lt;t ′ 1 :a||t ′ 2 :b&gt;:c is an x-tuple with necessity c that has two alternatives: alternative with data t ′ 1 has possibility a and alternative t ′ 2 has possibility b. Suppose also that in x-relation Drives(person, car) we encode uncertainty about who is driving a car of a specific brand. The uncertain database U with Trio's provenance of our running example is: There is a total of 2 3 = 8 possible worlds. Suppose that we pose query Q 2 which is a projection of attribute person on the result of query Q 1 which is the join of  Similarly in the answer of query Q 2 we expect: Q 2 (Q 1 (U))={41&lt;Hank:0.8&gt;:0} λ(41) = {((11, 1) ∧ (21, 1)) ∨ ((12, 1) ∧ (21, 1)) ∨ ((11, 2) ∧ (21, 2))} We would like to be able to directly compute those answers of Q 1 and Q 2 without having to compute all (exponentially many) possible worlds. As we already mentioned, existing work about possibilistic theory, join or projection with duplicate elimination was not possible due to the fact that possibistic sets were not powerful enough to express the disjunction of two different tuples occuring in the answer <ref type="bibr" target="#b1">[2]</ref>. For example possibility theory could not model the fact that, e.g., tuples 31 and 33 in the answer of Q 1 could not coexist. Provenance poses additional logical restrictions to where an alternative can exist, thus overcoming this obstacle.</p><p>On the other hand until now provenance has only been combined with probabilistic theory and not with possibilistic. But probabilities have high complexity: for example if we want to compute the probability of alternative 41 Hank we must compute the probability of {( <ref type="bibr" target="#b10">(11,</ref><ref type="bibr" target="#b0">1</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>)∧(21, 1))∨(12, 1)∧(21, 1)∨((11, 2)∧(21, 2))}.</head><p>In general computing the probability of a DNF boolean formula is #-P complete <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b10">11]</ref>. In contrast in our model which uses possibilities we can compute answers of selection with equality, projection and join in polynomial time. Note in particular that the possibility of the union of two events is always equal to the maximum of their possibilities. We use provenance only to restrict data. The computation of possibilities and necessities is not based on provenance; instead, they are computed directly from initial data. Provenance (which includes only possibilities of alternatives and not necessities of xtuples) is inadequate of computing x-tuple necessities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The Operators</head><p>In this section we give the definitions of selection, projection and join operators. These definitions enable us to directly compute the answers of SPJ queries posed over an uncertain database of our model with x-tuples and possibilities without having to compute first its possible worlds. In addition the computation of the possibilities of the answers is polynomial.</p><p>Let r be an uncertain relation of our model, A an attribute and (A = q) a logical selection condition where q can be another attribute or a constant. With alt(t) we denote the alternatives of x-tuple t: Selection select(r, A = q) = {&lt; restict(alt(t), A = q) &gt;: N ′ such that t:N ∈ r and where:</p><formula xml:id="formula_2">N ′ =min{1 − max t ′ i ∈alt(t)∧t ′ i |=(A=q)</formula><p>{Π(t ′ i )}, N (t)} and: restrict(alt(t), A = q) = {t ′ :Π, λ(t ′ ) such that: t ′ ∈ alt(t), where t ∈ r, and t ′ |= (A = q) and Π = Π(t ′ ) and λ(t ′ ) = Id(t ′ )}.</p><p>We keep in the select result only the alternatives that satisfy our select condition, with the same possibility that they had in our initial database. We set as their lineage, the lineage pointing to the identifiers of the initial alternatives. As for necessity of each resulting x-tuple, it is the minimum of: i) the necessity of the original x-tuple they belonged to, ii) the initial necessity of the original alternatives and iii) of 1 minus the maximum possibility that an alternative of the same original x-tuple that does not satisfy our selection condition has. The proof that our system is closed under selection with equality conditions uses a combination of the closure of Trio system <ref type="bibr" target="#b0">[1]</ref> and the closure of selection on Possibilistic databases <ref type="bibr" target="#b1">[2]</ref>.</p><p>Projection project(r, X) = {&lt; t ′ .X : Π ′ &gt;: N ′ such that: t ∈ r and t ′ ∈ alt(t) and N ′ = max</p><formula xml:id="formula_3">Ai {N i }</formula><p>where:</p><formula xml:id="formula_4">A i = {N i | t i : N i ∈ r and ∃t ′ i ∈ alt(t i ) with t ′ i .X = t ′ .X} and Π ′ = max</formula><p>Bi {Π i } where:</p><formula xml:id="formula_5">B i = {Π i | t ′ i : Π i</formula><p>where t ′ i ∈ alt(t i ) and t i ∈ r and t ′ i .X = t.X}. We also set:</p><formula xml:id="formula_6">λ(t ′ .X) = ∨ Ci id(t ′ i ) where C i = {id(t ′ i ) | t ′ i ∈ alt(t i )</formula><p>where t ′ i ∈ alt(t i ) and t i ∈ r and t ′ i .X = t.X}. We project the set of attributes X from every alternative and we perform alternative duplicate elimination. Thus the necessity of each resulting x-tuple is equal to the maximum necessity of each original x-tuple that includes an alternative that has the same projected value as the one alternative of our resulting x-tuple has. The same holds for the new possibility as well. Finally we set as lineage the disjunction of alternatives that give the same projected value. The proof that our system is closed under projection is easy. Let us just mention that the use of lineage allows duplicate elimination without losing the correct possible worlds. In addition for the possibilities we can easily use the maximum for the union of two alternatives with same data when we perform duplicate elimination. Join join(r 1 , r 2 , A = B) = {restrict(alt(t 1 ) ⊕ alt(t 2 ), A = B) such that: t 1 : N 1 ∈ r 1 and t 2 : N 2 ∈ r 2 where:</p><formula xml:id="formula_7">restrict(alt(t 1 ) ⊕ alt(t 2 ), A = B) = &lt; t ′ 1 ⊕ t ′ 2 : Π ′ , λ ′ (t ′ 1 ⊕ t ′ 2 )</formula><p>&gt;: N ′ such that: t 1 ∈ r 1 and t ′ 1 ∈ alt(t 1 ) and t 2 ∈ r 2 and t ′ 2 ∈ alt(t 2 ) and</p><formula xml:id="formula_8">t ′ 1 ⊕ t ′ 2 |= (A = B) and Π ′ = min{Π(t ′ 1 ), Π(t ′ 2 )} and N ′ = min{1 − max t1 ′′ i ∈alt(t1)/t ′ 1 {Π(t ′′ i1 )}, 1 − max t ′′ i2 ∈alt(t2)/t ′ 2 {Π(t ′′ i2 )}, N 1 , N 2 } and λ ′ (t ′ 1 ⊕ t ′ 2 ) = id(t ′ 1 ) ∧ id(t ′ 2 )</formula><p>. We note that ⊕ denotes the concatenation of tuples. Also the above definition can be easily adopted to the case where the join condition involves a conjunction of attribute equalities. We restrict in the join results only the tuples that satisfy the join condition and we perform duplicate elimination on alternatives. The new possibility of each alternative of the result is equal to the minimum of the possibilities of the original alternatives that contributed to its value. The necessity of each resulting x-tuple is the minimum of: i) 1 minus the maximum possibility of each other alternative that exists in the original contributing x-tuples and ii) the necessities of the original contributing x-tuples. We also set as lineage the conjunction of the initial contributing alternatives.</p><p>We now show that our system with Trio's lineage, x-tuples, possibilities and necessities is closed for the join operation. Moreover it follows from the definitions of our operators that their complexity is polynomial to the size of the data (alternatives) of our initial uncertain database.</p><p>Theorem 1: The possibilistic database model with provenance is closed under the join operation.</p><p>Proof: We want to prove that P W (join(r 1 , r 2 , A = B)) = join(P W (r 1 , r 2 ), A = B). Suppose that r 1 and r 2 both contain a single x-tuple. So suppose that r 1 has x-tuple t 1 :N 1 and r 2 has x-tuple t 2 :N 2 . Note that we have no loss of generality: The possibilities that alternatives have in every x-tuple in base relations form a possibilistic distribution. As a result in every base x-tuple always exists (at least one) alternative with possibility equal to 1. Suppose now that t ′ is an alternative in the result of a join query, resulting from two alternatives t ′ 1 of t 1 and t ′ 2 of t 2 . The possibility of t ′ in the join result according to our definition is equal to the minimum of possibilities of t ′ 1 and t ′ 2 . If r 1 and r 2 had more x-tuples then t ′ 1 and t ′ 2 would exist in more possible worlds resulting from the choices of alternatives from the other x-tuples. According to our semantics in the join result t ′ should have the possibility of the union of all its occurrences in every possible world. From the definition of possibility union this would be equal to the maximum of the possibilities of all possible worlds in which t ′ 1 and t ′ 2 both exist. But the maximum possibility exists in the possible world where t ′ 1 and t ′ 2 are selected from t 1 and t 2 and for all the other x-tuples the alternative with possibility equal to 1 has been selected. Hence the possibility of this possible world is equal to min{Π(t ′ 1 ), Π(t ′ 2 ), 1, . . . , 1} = min{Π(t ′ 1 ), Π(t ′ 2 )}, so equal to the case where r 1 and r 2 had only one x-tuple.</p><p>So suppose that r 1 has x-tuple t 1 :N 1 and r 2 has xtuple t 2 :N 2 . We remind that with alt(t 1 ) we denote the set of alternatives that exist in x-tuple t 1 (respectively for t 2 ). We first show that P W (join(r 1 , r 2 , A = B)) ⊂ join(P W (r 1 , r 2 ), A = B). Let W k be a possible world of P W (join(r 1 , r 2 , A = B)) and π k its possibility. We want to show that W k is also a world of join(P W (r 1 , r 2 ), A = B) with the same possibility. We consider two cases:</p><p>• W k 񮽙 = ∅: We denote with t ′ an arbitrary alternative in W k . From the definition of join the data of t ′ comes from the concatenation of two alternatives t ′ 1 of x-tuple t 1 and t ′ 2 of t 2 that satisfy the join condition (i.e., t ′ = t 1 ⊕ t 2 ). These two alternatives also exist in a P W (r 1 , r 2 ), let us denote it with W ′ k 2 . On the other hand if there exists a combination of two alternatives of x-tuples of r 1 and r 2 in a possible world W ′ k of P W (r 1 , r 2 ) that satisfy the join condition then the join answer resulting from them appears in join(P W (r 1 , r 2 ), A = B). So there exists a possible world exactly equal to W k as concerns data (and with lineage pointing to the same base data) in P W (join(r 1 , r 2 , A = B)). Note that as concerns data (and lineage) a similar result was also proven in <ref type="bibr" target="#b0">[1]</ref>. Now for the possibilities of W k and W ′ k : Again let t ′ be an arbitrary alternative in W k ∈ P W (join(r 1 , r 2 , A = B)). As we just showed, a tuple with same data also appears in W ′ k ∈ join(P W (r 1 , r 2 ), A = B). Its possibility in W ′ k is associated with the possibilities of t ′ 1 ∈ P W (r 1 ) and t ′ 2 ∈ P W (r 2 ). Specifically it is equal to the minimum of possibilities of t ′ 1 and t ′ 2 since a possible world that produces t ′ must include them both (conjunction of possibilities). The same choices have been made in W k to derive t ′ and according to our join definition the possibility degrees of the join query is equal to the minimum of possibilities of alternatives that produce the result. So the possibilities are the same in W ′ k and W k .</p><p>• W k = ∅: We can have two subcases: either join(r 1 , r 2 , A = B) is empty (t ′ does not exist) or the necessity N ′ of t ′ is less than 1. If it is empty then (P W (r 1 , r 2 ), A = B) is also empty and the possibility of the empty world is in both cases equal to the maximum possibility of any possible world, i.e., : min{ max</p><formula xml:id="formula_9">t ′′ i1 ∈alt(t1) {Π(t ′′ i1 )}, max t ′′ i2 ∈alt(t2) {Π(t ′′ i2 )}}.</formula><p>If join(r 1 , r 2 , A = B) is not empty then the necessity degree N ′ of t ′ is less than 1 and the empty world W k has possibility 1 − N ′ . The possibility of W k must correspond to a world of P W (r 1 , r 2 ) with the most possible choices of alternatives t ′ 1 of r 1 and t ′ 2 of r 2 that do not satisfy the join condition, i.e., with possibility: max{ max</p><formula xml:id="formula_10">t1 ′′ i ∈alt(t1)/t ′ 1 {Π(t ′′ i1 )}, max t ′′ i2 ∈alt(t2)/t ′ 2 {Π(t ′′ i2 )}, 1 − N 1 , 1 − N 2 }.</formula><p>From our definition of join we see than indeed this would be the possibility of the empty world W k . Using a similar logic it is now easy to also prove that join(P W (r 1 , r 2 ), A = B) ⊂ P W (join(r 1 , r 2 , A = B)).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Examples of Operators</head><p>We present in this subsection that if our join and project operators are posed over the initial data of our running example, their result directly computes the results Q 1 (U ) and Q 2 (Q 1 (U )) with the correct data and provenance that we expected and presented in subsection 2.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Join</head><p>We illustrate the use of our operators join and project though our running example. Query Q 2 is a projection of attribute person on the result of query Q 1 which is the join of Saw and Drives over common attribute car. We begin with join query Q 1 . According to our definition we have the query join(Saw, Drives, car = car).</p><p>In our result we naturally restrict the combinations of all possible alternatives of the two relations Saw and Drives to the ones that satisfy the condition car = car.</p><p>In our example there exist three such combinations. For the first one we have: Alternatives 11, 1 and 21, 1 from x-tuples 11, with necessity N 11 = 1 and 21 with necessity N 21 = 1, yield alternative (Amy, M azda, Hank). According to our join definition its possibility is Π ′ = min{Π(11, 1), Π(21, 1)} = min{1, 0.6} = 0.6. Respectively its necessity is N ′ = min{1 − max{Π(11, 2)}, 1 − max{Π(21, 2)}, N 11 , N 21 } = min{1 − max{0.8}, 1 − max{1}, 1, 1} = min{1 − 0.8, 1 − 1, 1, 1} = min{0.2, 0, 1, 1} = 0. The lineage of (Amy, M azda, Hank) is equal to the conjunction of the identifiers of the alternatives that produce it, i.e., with (11, 1) ∧ (21, 1). For the other two combinations of alternatives that satisfy our join condition, the procedure is similar. In order to succinctly denote lineage we attach a new fresh identifier to each tuple-alternative of the answer. The final result is: Q 1 (U)={31&lt;Amy, Mazda, Hank:0.6&gt;:0, 32&lt;Billy, Mazda,Hank:0.4&gt;:0 33&lt;Amy, Toyota,Hank:0.8&gt;:0} λ(31) = (11, 1) ∧ (21, 1) λ(32) = (12, 1) ∧ (21, 1) λ(33) = (11, 2) ∧ (21, 2)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Projection</head><p>We continue with query Q 2 which is a projection of attribute person from the result Q 1 (U ), i.e., project(Q 1 (U ), person).</p><p>Our result has a singe x-tuple with one alternative Hank. Its necessity, according to our definition is equal to the maximum of the necessities of the x-tuples that produce the same result Hank (we perform duplicate elimination). In our case all x-tules 31, 32 and 33 produce Hank, so the set A i includes the necessities of all of them. So the necessity of Hank in the result is: N ′ = max{N (31), N (32), N (33)} = max{0} = 0. The possibility of Hank is equal to the maximum of the possibilities of all the alternatives that give result Hank.</p><p>In our case the set B i of such alternatives includes (31, 1), (32, 1) and (33, 1). So the possibility of Hank in the result is: Π ′ = max{Π(31, 1), Π(32, 1), Π(33, 1)} = max{0.4, 0.8, 0.6} = 0.8. The lineage of Hank is equal to the disjunction of the identifiers of the alternatives that have Hank in the data of the projection result. In order to succinctly denote lineage we attach new identifier 41 to x-tuple Hank of the answer. So we have: λ(41) = {(31, 1) ∨ (32, 1) ∨ (33, 1)}. As noted in <ref type="bibr" target="#b0">[1]</ref> we can use the lineage information of the initial Q 1 (U ) and expand with polynomial complexity lineage back to base data. Hence we can replace, e.g., (31, 1) with its lineage in Q 1 (U ), which is: {(11, 1) ∧ (21, 1)}. The final result is: Q 2 (Q 1 (U))={41&lt;Hank:0.8&gt;:0} λ(41) = {((11, 1) ∧ (21, 1)) ∨ ((12, 1) ∧ (21, 1)) ∨ ((11, 2) ∧ (21, 2))}</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Saw(witness,car)=</head><label></label><figDesc>{11&lt;Amy, Mazda:1||Amy, Toyota:0.8&gt;:1, 12&lt;Billy, Mazda:0.4 || Billy, Lexus:1&gt;:1} Drives(person,car)= {21&lt;Hank, Mazda:0.6||Hank,Toyota,:1&gt;:1}</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Saw and Drives over common attribute car, i.e.: Q 1 = Saw 1 car=car Drives and Q 2 = π person (Q 1 (U )). Only five of the possible worlds include answers over Q 1 (and Q 2 ). Those worlds are:For example the possibility of P W 1 is equal to the min- imum of the possibilities of its alternatives, so with min{1, 0.4, 0, 6} = 0.4. Its necessity is equal to 1 minus the maximum possibility from the possibilities of alternatives which do not belong to this world have: 1−max{0.8, 1, 1} = 1−1 = 0. The necessity of x-tuple (11, 1) is equal to 1 minus the maximum possibility of the other alternatives (in our case only alternative 11, 2) of initial x-tuple 11, i.e., equal to 1 − max{0.8} = 0.2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>For the answers of queries we have similar semantics with the ones defined for probabilities in [5]: The answer of a query Q is a set of alternatives and their possibil- ities. Intuitively for the answer of Q 1 we should have: Q 1 (U)={31&lt;Amy, Mazda, Hank:0.6&gt;:0, 32&lt;Billy, Mazda,Hank:0.4&gt;:0 33&lt;Amy, Toyota,Hank:0.8&gt;:0} For example alternative (Amy, M azda, Hank) appears in W 1 , a world with possibility 0.4 and in W 2 with pos- sibility 0.6 (while both necessities are 0 -note that only a world whose all tuples have possibility 1 has necessity greater than 0). As a result in the answer of query Q 1 we want to have a tuple with data (Amy, M azda, Hank) with possibility the union of the events that this tuple appears in W 1 or in W 2 . So with the maximum of the possibilities of 0.4 and 0.6. According to Trio's semir- ing provenance we attach the following lineage on each alternative: λ(31) = (11, 1) ∧ (21, 1) λ(32) = (12, 1) ∧ (21, 1) λ(33) = (11, 2) ∧ (21, 2).</figDesc></figure>

			<note place="foot" n="2"> Unless they have extraneous lineage, but in that case they also not exist in P W (join(r 1 , r 2 , A = B), we refer to [1] for more details).</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Databases with uncertainty and lineage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjelloun</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sarma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Halevy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theobald</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Widom</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="243" to="264" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">About projection-selection-join queries addressed to possibilistic relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bosc</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pivert</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE T. Fuzzy Systems</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="124" to="139" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A model based on possibilistic certainty levels for incomplete databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bosc</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pivert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prade</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SUM</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="80" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Provenance in databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Buneman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMOD Conference</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1171" to="1173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Efficient query evaluation on probabilistic databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dalvi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Suciu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VLDB</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="864" to="875" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Probability-possibility transformations, triangular fuzzy sets, and probabilistic inequalities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dubois</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Foulloy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Mauris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prade</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reliable Computing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="273" to="297" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Provenance semirings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karvounarakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tannen</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODS</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="31" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Models for incomplete and probabilistic information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tannen</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EDBT Workshops</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="278" to="296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Incomplete information in relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Imielinski</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lipski</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ACM</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="761" to="791" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Querying data provenance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karvounarakis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ives</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tannen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMOD Conference</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="951" to="962" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Faster query answering in probabilistic databases using read-once functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roy</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Perduca</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tannen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDT</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="232" to="243" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Exploiting lineage for confidence computation in uncertain and probabilistic databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Sarma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theobald</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Widom</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1023" to="1032" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
