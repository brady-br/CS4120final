<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">NFCGate: Opening the Door for NFC Security Research with a Smartphone-Based Toolkit</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steffen</forename><surname>Klee</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandros</forename><surname>Roussos</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Maass</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Hollick</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="laboratory">Secure Mobile Networking Lab TU</orgName>
								<orgName type="institution">Secure Mobile Networking Lab TU</orgName>
								<address>
									<settlement>Darmstadt, Darmstadt</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Secure Mobile Networking Lab TU</orgName>
								<address>
									<settlement>Darmstadt</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">Secure Mobile Networking Lab TU</orgName>
								<address>
									<settlement>Darmstadt</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">NFCGate: Opening the Door for NFC Security Research with a Smartphone-Based Toolkit</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Near Field Communication (NFC) is being used in a variety of security-critical applications, from access control to payment systems. However, NFC protocol analysis typically requires expensive or conspicuous dedicated hardware, or is severely limited on smartphones. In 2015, the NFCGate proof of concept aimed at solving this issue by providing capabilities for NFC analysis employing off-the-shelf Android smartphones. In this paper, we present an extended and improved NFC toolkit based on the functionally limited original open-source codebase. With in-flight traffic analysis and modification, relay, and replay features this toolkit turns an off-the-shelf smartphone into a powerful NFC research tool. To support the development of countermeasures against relay attacks, we investigate the latency incurred by NFCGate in different configurations. Our newly implemented features and improvements enable the case study of an award-winning, enterprise-level NFC lock from a well-known European lock vendor, which would otherwise require dedicated hardware. The analysis of the lock reveals several security issues, which were disclosed to the vendor.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>With the continuous advance of contactless applications, including payment and access control systems, the potential for abuse and security breaches is on the rise. This is exemplified by the recent increase of smartphone-based contactless payment transactions using Near Field Communication (NFC) <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b57">58]</ref> and the expansion of NFC capabilities for apps on popular mobile platforms <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b8">9]</ref>. Contactless payment systems have been shown to be susceptible to various attacks <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b47">48,</ref><ref type="bibr" target="#b48">49,</ref><ref type="bibr" target="#b54">55]</ref>. Research of potential attacks on NFC protocols commonly uses Android devices or dedicated hardware to capture NFC traffic. While dedicated hardware provides several advantages in versatility as well as advanced features, * Both authors contributed equally to this research. such as supported technologies, it is also expensive and can be difficult to use <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b44">45]</ref>. In contrast, ordinary Android devices look less suspicious in public, are readily available, generally affordable, but usually limited in its set of features compared to dedicated hardware.</p><p>NFCGate, whose proof of concept (PoC) was originally presented as a demo by <ref type="bibr">Maass et al. in 2015 [42]</ref>, is a research toolkit for active NFC protocol analysis compatible with the Android platform, which can take advantage of the NFC stack and act as a programmable NFC device. It provides both the basic features for ordinary Android devices as well as advanced features similar to those found on dedicated hardware, while maintaining availability and affordability. Even though the original PoC was able to relay NFC traffic, clone card identifiers, and provided basic logging functionality, it had limited compatibility with NFC technologies and chipsets.</p><p>In this work, we describe the updated version of NFCGate <ref type="bibr" target="#b52">[53]</ref>, including its original and new functionality, with regards to networking and NFC communication. In particular, our contributions include:</p><p>• New modes: replay capabilities for captured NFC traffic, on-device mode for capturing traffic system-wide.</p><p>• Python-based plugin system for analyzing and modifying traffic on-the-fly.</p><p>• Improvements to the clone mode for duplicating static tag data of different NFC technologies.</p><p>• Extension of the relay mode for wormhole attacks.</p><p>Using NFCGate, we also conduct a security analysis of an NFC-based smart lock as a case study and evaluate the security of its protocol and implementation to demonstrate the toolkit. Since the lock is not compatible with Android's NFC stack by default, this case study would not be possible without NFCGate, which enables active attacks on the underlying protocol. Finally, we evaluate the additional latency generally introduced by the use of NFCGate in multiple real-world scenarios and discuss potential countermeasures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>In this section, we provide background information on the techniques and technologies used in NFCGate. We discuss NFC standards, the NFC software stack, and function hooking on Android.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">NFC Standards</head><p>The Android NFC stack currently supports four basic types of technologies: NFC-A, NFC-B, NFC-F, and NFC-V <ref type="bibr" target="#b7">[8]</ref>.</p><p>Terminology While NFC endpoints come in various shapes and sizes, e.g. passive cards, active tags, or even card emulators, the communication in standards is usually defined between two endpoints: Proximity Integrated Circuit Card (PICC) and Proximity Coupling Device (PCD). A PICC is a device in the tag role and a PCD is an endpoint in the reader role. While establishing a connection between these endpoints, the PICC exchanges some static tag data with the PCD to initialize the communication. This data depends on the type of NFC technology and can be used to help the PCD decide between multiple available tags. To exchange data after initialization, messages are sent with the Application Protocol Data Unit (APDU) encapsulated in their payload.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>NFC-A/B</head><p>The ISO/IEC 14443 family of standards consists of four parts, describing the different layers in standardized NFC communication. While Part 1 describes the physical properties of NFC at the lowest level <ref type="bibr" target="#b28">[29]</ref>, Part 4 specifies the "half-duplex block transmission protocol" <ref type="bibr" target="#b29">[30]</ref> used to transfer APDUs between NFC-enabled endpoints of type A and B. Several open and proprietary protocols are built on top of this protocol and allow for higher-level operations such as authentication, file access, and cryptographic computations to be performed on the tag. For example, one of these open protocols is defined in the ISO/IEC 7816-4 Interindustry Card Standard (ICS) <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b32">33]</ref>, while the widely used Mifare DESFire is a proprietary protocol <ref type="bibr" target="#b43">[44]</ref>.</p><p>The transport layer also includes the negotiation of a Frame Waiting Time (FWT), which is specified by the PICC as i, and allows the PCD to retransmit a message if no response was received within the interval <ref type="bibr">[30, Section 7.2]</ref>. It is defined as follows:</p><formula xml:id="formula_0">FW T i = 256 · 16 13.56 MHz · 2 i 0 ≤ i ≤ 14</formula><p>NFC-F Similarly, the JIS X 6319-4 standard specifies, among other things, the physical properties and the transmission protocol for "high-speed proximity cards" <ref type="bibr" target="#b33">[34]</ref>  NFC-V In contrast to the previous technologies, the vicinity standard ISO/IEC 15693 (NFC-V) <ref type="bibr" target="#b30">[31]</ref> achieves significantly more distance than ISO/IEC 14443, but trades some throughput for it. Due to its different physical properties resulting from the operation at a greater distance, this standard is incompatible to ISO/IEC 14443 and does not mandate the implementation of any transport protocol beyond exchanging the static tag data.</p><p>NCI The NFC Controller Interface (NCI) standard <ref type="bibr" target="#b42">[43]</ref> specifies the high-level communication protocol between an NCI-conforming NFC controller and the application processor using various underlying transport mechanisms, e.g., I 2 C. Most importantly, NCI defines sending configuration streams to the NFC Controller (NFCC), which modify a standardized setting with each option in the stream. Setting these options can change the way the NFCC presents itself to other readers during card emulation, including emulating static tag data. While the sending of such streams is not supported as an API by Android, it exists internally and could be accessed through binary instrumentation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Android NFC Stack</head><p>The Android NFC stack in general consists of multiple layers ranging from the underlying NFC chipset to the high-level programming interfaces available through the Android SDK. <ref type="figure" target="#fig_0">Figure 1</ref> outlines the architecture of the Android NFC stack. The lowest level consists of the NFC chipset and the NFC controller, which interacts with the controller-specific kernel driver, usually via a transport bus like I 2 C or UART. The communication then leaves the kernel-space and continues in the user-space with the hardware abstraction layer (HAL) that chipset manufacturers are required to implement. This eliminates the need for chipset-specific adjustments of the user-space NFC stack. As of now, the Android Open Source Project ships with Broadcom and NXP HAL implementations <ref type="bibr" target="#b0">[1]</ref>. It consists of native libraries and Java framework classes. Of those native libraries, the NCI library communicates with the HAL and delivers results to the NFC service using the Java Native Interface (JNI). When using the NFC API in the Android SDK, every app communicates with the privileged NFC service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Android HCE</head><p>Host Card Emulation (HCE) allows Android-based smartphones with NFC to emulate tags for all use-cases where the phone takes the role of the tag, e.g. Google Pay <ref type="bibr" target="#b1">[2]</ref>. In order to support multiple HCE applications for different purposes on a single smartphone, Android employs a complex Application Identifier (AID) routing mechanism. This requires Android to terminate the ISO/IEC 7816-4 ICS connection and intercept the initial SELECT message containing the AID, which is then used to route the requests to the correct application registered for the AID. This artificial limitation prevents Android from accepting any requests not conforming to ICS or not starting with the expected SELECT message.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Android Function Hooking</head><p>Hooking is used to intercept regular function calls within foreign applications to modify or extend existing functionality. By injecting instructions into the target function, hooking allows the modification of its control-flow, parameters, return value, and behavior <ref type="bibr" target="#b40">[41]</ref>. Because Android applications consist of Java code with optional native code connected via the JNI, two types of function hooking exist. Java Function Hooking. Since the Java byte code is executed in a Java virtual machine, it is independent of the underlying platform architecture. As a consequence, function hooking in Java is also platform-independent. While the complex process architecture on Android requires significant engineering effort to allow modifications to its virtual machine, the well-known hooking frameworks Xposed <ref type="bibr" target="#b49">[50]</ref> and EdXposed <ref type="bibr" target="#b50">[51]</ref> accomplish general Java function hooking by replacing the virtual machine entirely. These frameworks enable application extensions to alter the behavior of any other application on the system.</p><p>Native Function Hooking. In contrast to Java code, native instructions are tied to the processor architecture. Android applications using native code have to provide binaries for all targeted architectures. Consequently, hooking native code requires platform-specific techniques as well. In order to hook native functions, a hooking application substitutes instructions in the target process with the desired behavior. Of the several options that exist for function hooking techniques <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b40">41,</ref><ref type="bibr" target="#b55">56]</ref>, the method we use is procedure linkage table hooking provided by the xHook library <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>While many software-based tools for the analysis of NFCbased protocols have been developed, these tools are mostly tied to their specific use-case. In addition, they operate on high levels in the NFC software stack, so that their control of the underlying chipset is limited to that of the available operating system APIs. One of the first software-based NFC tools for relaying APDUs over the network dates back to 2011 <ref type="bibr" target="#b20">[21]</ref> and uses a Nokia 6131 as the reader and a BlackBerry 9900 as the card emulator. It shows the applicability of relay attacks on applications using ISO/IEC 14443 APDUs and compares timings of smart cards and the relay.</p><p>Another software-based tool <ref type="bibr" target="#b54">[55]</ref> uses HCE on the widely available Android operating system to passively (unmodified) relay APDUs over the network. With this approach, the tool is able to successfully relay a MasterCard contactless transaction from New York (USA) to Madrid (Spain). Due to limitations on the Android platform, the tool requires the first APDU to be a ICS SELECT command with a previously registered AID. While a separate Xposed module can be used to circumvent the AID restriction, the tool cannot bypass the ICS requirement. Additionally, the tool cannot emulate static tag data due to a lack of platform support.</p><p>In a similar way, the discontinued NFCProxy tool <ref type="bibr" target="#b39">[40]</ref> uses basic Android HCE to relay NFC traffic. Due to its short development time, NFCProxy lacks advanced features and bypasses for Android platform restrictions. Despite its shortcomings, NFCProxy is used in a PoC attack on the payment systems Visa payWave (qVSDC) and EMV contactless <ref type="bibr" target="#b9">[10]</ref>. <ref type="table" target="#tab_1">Table 1</ref> gives a quick comparison of the aforementioned tools with respect to their features and properties.</p><p>Since the introduction of Google Wallet, NFC-based mobile payment systems have become a point of interest for security researchers. One particular analysis of Google Wallet <ref type="bibr" target="#b48">[49]</ref> uses a combination of software-and hardware-based tools to relay APDUs from the phone's secure element to a dedicated hardware-based card emulator. This approach requires nontrivial modifications to the operating system in order to access the secure element. Since its publication, Google has fixed this particular attack vector and introduced HCE, eliminating the need for using the secure element. Google Wallet (now Google Pay) has since moved to HCE <ref type="bibr" target="#b23">[24]</ref>, which has seen widespread usage <ref type="bibr" target="#b57">[58]</ref>.</p><p>With the rise of electronic vehicles in Germany, a surge of integrated and cheap charging stations from different providers attracts the interest of security researchers. Due to the simplicity of the charging stations, they do not feature regular payment processing. Instead, many providers rely on lightweight customized billing systems with a supplied token for user authentication. For example, some providers use NFC-based smartcards as hardware tokens as analyzed by Dalheimer <ref type="bibr" target="#b17">[18]</ref>. He shows that despite the usage of Mifare Classic tags supporting cryptographic operations, some systems only use static tag data as authentication for billing. This allows cloning the tag using a hardware-based NFC tool <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b44">45]</ref>, which emulates the static tag data. The security of contactless payment systems generally relies on the assumption of the limited range of NFC. However, the ReCoil attack <ref type="bibr" target="#b51">[52]</ref> shows that this premise does not hold. Using a passive (unpowered) relay consisting of antenna coils and a waist band, the NFC communication range can be extended up to 49.6 cm. This allows an attacker to relay the NFC traffic over a distance, thus bypassing physical security measures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation</head><p>While the Android operating system acts as an integrated NFC reader enabling apps to communicate with tags freely, tag emulation is much more limited. The HCE functionality of Android allows the emulation of applications based on ISO/IEC 7816 ICS, but has no option to mimic static tag data, which restricts its functionality for NFC security analysis. NFCGate is an Android application that circumvents these restrictions by using symbol hooking in managed (Java) and native (C/C++) code to gain low-level access to the Android NFC stack. It is compatible with devices supporting the Xposed <ref type="bibr" target="#b49">[50]</ref> or EdXposed <ref type="bibr" target="#b50">[51]</ref> hooking framework.</p><p>As the code of NFCGate has undergone many changes, we focus on the technical implementation of the following features of NFCGate, where <ref type="table" target="#tab_2">Table 2</ref> distinguishes the original PoC from the current version of NFCGate:</p><p>• Standardized logging format. Logging NFC traffic in the standardized packet capture format pcapng <ref type="bibr" target="#b53">[54]</ref> enables the use of packet analyzers with advanced dissectors, such as Wireshark <ref type="bibr" target="#b15">[16]</ref>.</p><p>• Clone mode. The clone mode allows the emulation of static tag data for NFC-A, NFC-B, and NFC-F technologies.</p><p>• Relay mode. The relay mode features a server software with a Python plugin system for analyzing and modifying traffic on-the-fly.</p><p>• Replay mode. This mode replays previously recorded or imported traffic in either reader or tag role locally without a relay setup, or remotely with on-the-fly traffic modifications.</p><p>• On-device capture mode. Capturing system-wide NFC traffic from other apps running on the Android device allows the analysis of HCE-based applications as well as NFC reader applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Logging and Interoperability</head><p>When NFCGate processes NFC traffic, it is logged to the app's private storage in a database. The app provides an overview of these logs, their timestamps, and the mode they have been recorded in. A single log shows APDUs of the NFC traffic with their timestamp, a hexadecimal binary dump of data, and an indicator of the originator device (reader or tag).</p><p>NFCGate allows exporting and importing logs in the pcapng file format, providing interoperability with other tools such as the protocol analyzer Wireshark <ref type="bibr" target="#b15">[16]</ref>. In order to encode captured APDUs, ISO/IEC 14443 framing is used with the predefined DLT_ISO_14443 link type. Since no predefined link type exists for storing static tag data, the user-defined link type DLT_USER_0 is used instead. Because APDUs are captured without their associated header or checksum, NFCGate creates an artificial header of type I_BLOCK with a direction indicator of either PICC→PCD or PCD→PICC and a flag bit   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Clone Mode</head><p>Despite the HCE API on Android not supporting static tag data emulation, the lower-level NCI stack allows setting arbitrary tag data. Using symbol hooking, NFCGate gains access to the lower-level NCI stack, which allows the clone mode to emulate any captured static tag data. Note that while even some dedicated hardware restricts the range of values allowed to be manually set, no such restrictions were encountered using the Android NCI stack. The NCI standard defines the CORE_SET_CONFIG_CMD command to configure the NFC discovery in poll and listen mode. When emulating a tag (listen mode), the NFCC uses the supplied configuration stream to initialize itself. In the NCI implementation <ref type="bibr" target="#b4">[5]</ref>, the NFC_SetConfig function is used for sending a configuration stream to the NFCC. Using this function with custom configuration options allows NFCGate to set the static tag data. <ref type="figure" target="#fig_1">Figure 2</ref> shows the format of the configuration stream. n is the total number of options in the stream, while ID i , Len i , and Val i specify the identifier, length in octets, and value of the configuration parameter. <ref type="table" target="#tab_3">Table 3</ref> lists the relevant parameter IDs for the emulation of static tag data in any technology supported by Android HCE.</p><p>The NCI library also invokes NFC_SetConfig at different times, such as when starting RF discovery, overwriting the configuration set by NFCGate. In order to protect its custom set configuration and increase reliability, this function is al- tered using symbol hooking. The hook removes configuration parameters that would overwrite the custom values before passing them to the original function. This not only ensures that the custom configuration stays active at all times, but also allows NFCGate to save the rejected values and apply them after closing clone mode to restore the NFCC to its normal operating state.</p><p>While this mode allows the emulation of static tag data, it does not support responding to any APDU commands. Despite this restriction, clone mode is useful when static tag data (i.e., the NFCID) is used for access control as seen in <ref type="bibr" target="#b17">[18]</ref>, since it only requires one device running NFCGate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Relay Mode</head><p>Extending clone mode, the relay mode forwards received APDUs and static tag data to a server, as well as sending APDUs received from the server back to the tag or reader. <ref type="figure" target="#fig_2">Figure 3</ref> shows the interaction of a legitimate tag (A), a legitimate reader (E), and two devices running NFCGate in reader (B) and tag mode (D) connected to the server (C). When the server receives data from NFCGate, it now processes the data by filtering it through all enabled plugins before broadcasting the potentially modified data to all other connected NFCGate devices in the same session. Plugins are invoked in a userspecified order and able to fully modify data, in accordance with the Dolev-Yao model <ref type="bibr" target="#b18">[19]</ref>. The server is written in the Python programming language and does not require external dependencies, which enables hosting the server directly on smartphones with any Python interpreter.</p><p>In relay mode, NFCGate devices choose between the two roles reader and tag, while logging all data in the pcapng format (see Section 4.1). Using two connected NFCGate devices, one as the reader and one as the tag, in a setup similar to <ref type="figure" target="#fig_2">Figure 3</ref>, enables a user to capture NFC traffic between a legitimate tag and reader in NFC-enabled systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Replay Mode</head><p>In replay mode, NFCGate uses previously captured logs to communicate with an NFC device. As in relay mode, it supports the two roles reader and tag. The role specifies which side of the recorded NFC traffic to replay to the device. For example, when using the tag role, NFCGate emulates a tag, similar to clone mode. When the reader sends APDUs to NFCGate, it responds with the corresponding tag APDU taken from the selected log. Multiple options exist for the selection of the APDU to replay: In index-based mode, the selection is only based on the position in the log, while the data-based replay selects responses based on the contents of the request APDU. All replay traffic is recorded in a new log for further analysis. In addition to replaying unmodified traffic from the log, NFCGate supports advanced replay over the network. This setting routes all traffic over the server, allowing for modifications or replacements of the replayed traffic by server plugins before sending it to the NFC device. By not requiring a second device running NFCGate, active attacks on an NFC protocol using replay mode have a lower response latency than attacks in relay mode, which could potentially bypass relay countermeasures based on timing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">On-Device Capture</head><p>The on-device capture mode supports capturing low-level NFC traffic of the Android device while reading or emulating an NFC tag. NFCGate hooks central functions in the NFC service, allowing it to capture the entire traffic without interfering with other apps. This enables undetected capturing of the NFC traffic from other apps without requiring any relay setup, thus avoiding problems with latencies introduced by a relay.</p><p>We hook the transceive method of the NFCService [7] after its execution to capture NFC traffic of the device while reading a tag. This method receives data to be sent to the currently active tag, with the tag's response in the return value. When the device discovers a tag, it invokes the dispatchTag method of NfcDispatcher <ref type="bibr" target="#b5">[6]</ref>, which is hooked to enable capturing the static tag data.</p><p>In HCE mode, the HostEmulationManager [3] manages the routing of data to apps registered with different AIDs. On discovery of the tag device by an external reader, onHostEmulationActivated is called. Whenever the reader transmits data, onHostEmulationData receives this data and routes it to the correct application. Hooking this method captures NFC traffic from a reader to the device in HCE mode, even if no AID is registered or the APDU is not compatible with ISO/IEC 7816-4. This circumvents the Android system restriction on the initial reader APDU. Any response of the HCE application is routed through the NFCService.sendData function, hence hooking this function also enables capturing NFC traffic from the device to the reader.</p><p>All hooks collect the captured data locally within the context of the NFC service. The NFCGate app requests these captures from the service through broadcasts and intents. In order to be exported and used in any other NFCGate mode, the capture is logged in the context of the app.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Case Study: Smart Door Lock</head><p>In order to demonstrate the capabilities of NFCGate in analyzing NFC protocols using off-the-shelf smartphones, we conduct a case study on an NFC-based locking system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Overview</head><p>The subject of our case study is an enterprise-level electronic access control system manufactured by a well-known European security vendor 1 . We choose this product based on the existing reputation of the vendor for physical locking mechanisms, the security award the product had received, and the fact that it was available as an off-the-shelf solution unlike, for example, NFC-based hotel door locking systems. The system consists of a base station and cylinder locks, with permissions for each component bound to user accounts manageable via a web interface. A user issues actions such as unlocking doors with a transponder or an app compatible with the Android and iOS operating systems. In this paper, we focus on the NFC-based cylinder unlocking mechanisms, leaving aside communication with the base station. Our hardware setup consists of the base station, one cylinder lock, and two DESFire transponders. In addition to the hardware, we use the reader software, which is capable of adding transponders to the deployment.</p><p>The base station contains the web-based user, cylinder, and permission management. The lock connects to the base station wirelessly with a proprietary protocol in the 868.3 MHz band, requesting authorization and configuration parameters. The transponder presents itself to the lock using the NFC protocol described in Section 5.2 when in range. Then, the lock checks the unique identifier UID obtained from the transponder by sending this information to the base station. If this UID is authorized to access the lock, it accepts the transponder and unlocks the cylinder.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Unlocking Procedure</head><p>Using the relay mode of NFCGate, several communications between lock and transponder were recorded and exported in the pcapng format. Even though the locking protocol does not conform to ICS, NFCGate circumvents the Android limitation and allows us to receive arbitrary APDUs. Analyzing the captured traffic using a combination of Wireshark and the libfreefare source code <ref type="bibr" target="#b16">[17]</ref> as a reference, we were able to reverse-engineer the protocol used by the locking system.</p><p>The lock uses a modified DESFire AES authentication protocol to derive a session key and to establish an authenticated and encrypted channel to the transponder. It is not immediately clear why the protocol was modified. Using the established channel, the transponder transmits its UID to the lock securely. <ref type="figure" target="#fig_4">Figure 4</ref> shows the protocol for the unlocking procedure. Deviations from the DESFire AES authentication protocol are marked in red. The key k is a pre-shared 128-bit AES key. The encryption and decryption routines, Enc and Dec, use AES-128 in CBC mode. The initialization vector (IV) for the cryptographic operations is stored in the variables IV A and IV B . The secure channel uses AES-128 in CBC mode with CMAC for authentication in the routines AEnc and ADec.</p><p>Initially, the PICC picks a random nonce r B and sends it to the PCD encrypted with the pre-shared key k. Receiving this message, PCD decrypts r B and sends its own nonce r A and the rotated r * B to PICC. At this point, the protocol deviates from DESFire authentication by using a static value for r A and not updating the IV used for encryption. This results in message   session key k s . Since the PICC only knows r A , the session key must be derived from it instead of r A .</p><formula xml:id="formula_1">r B ← Dec k (m 4 ) m 4 ← Enc k (r B ) IV A not updated r * B ← Rot (r B ) m 5 = (m 5.1 , m 5.2 ) ← Enc k (r A ||r * B ) IV B ← m 4 IV A ← m 5.2 (r A , r * B ) ← Dec k (m 5 ) Check Rot (r B ) = r * B IV B ← m 5.2 r * A ← Dec k (m 6 ) m 6 ← Enc k (r * A ) r * A ← Rot (r A ) r A ← r A ⊕ m 4 Check Rot (r A ) = r * A . .</formula><p>Concluding the interaction, the PICC sends its UID over the encrypted and authenticated channel using the established session key k s . All encrypted channel communication contains a CMAC-based authentication tag alongside the plaintext, in accordance with the DESFire AES authentication protocol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Security Issues</head><p>In this section, we discuss security-related issues in the design and implementation of the cylinder unlocking procedure. Proof of concept attacks facilitate NFCGate's features to demonstrate their applicability in real-world scenarios using off-the-shelf hardware. <ref type="figure" target="#fig_6">Figure 5</ref> shows the different attack setups. We consider the adversary A in the Dolev-Yao model <ref type="bibr" target="#b18">[19]</ref>, who can capture, block, modify, and resend captured messages all without breaking the cryptographic primitives.</p><p>Relay Attack. With NFCGate's relay mode we are able to forward the NFC traffic between PICC and PCD over a network. A employs two smartphones running NFCGate connected to the server, one acting as the reader and the other as the tag. They communicate with the transponder and cylinder while transmitting NFC traffic to the server. As long as the unlocking procedure takes less than ≈ 1.8 s, it leads to a successful unlocking of the cylinder. Considering the average network delay around half the globe [Frankfurt/Main (Germany) to Sydney (Australia)] is ≈ 360 ms <ref type="bibr" target="#b56">[57]</ref> we could successfully unlock the cylinder from around the world. This demonstrates that the time limit imposed by the cylinder is not an effective countermeasure to these kinds of attacks. In addition to tightening the timings, distance bounding techniques could be used as further mitigations (see Section 7).</p><p>Replay Attack. Using messages previously captured during an unlocking procedure between the cylinder and an authorized transponder, A replays the traffic employing NFCGate in the tag role. As a result of the protocol modifications outlined in <ref type="figure" target="#fig_4">Figure 4</ref> and in contrast to the replay-protected DESFire authentication protocol, the unlocking procedure used by the cylinder is vulnerable to replaying the communication. Due to the static nonce r A used by the PCD and the zero-initialized IV A and IV B , the randomness of the protocol entirely depends on the nonce r B chosen by the PICC as shown in <ref type="figure" target="#fig_4">Figure 4</ref>.</p><p>Replaying PICC messages to the PCD results in the same randomness, leading to the same session key k s . Since the encrypted channel relies only on k s and the content of the messages, which is always the same UID, an identical k s leads to the exact same messages. This replay attack does not require knowledge of any encryption key or breaking any primitive in the protocol. Conforming to the DESFire protocol by choosing the nonce r A randomly instead of statically mitigates replay attacks.  Walk-By Attack. Because the secret key k used for encryption in the authentication phase is static for all cylinders and transponders, we can extract this key from the freely available utility software. This application allows the registration of new transponders to the system without requiring the physical presence of a cylinder by using a separately sold USB NFC reader. The slightly obfuscated key k can be extracted from the software by reverse-engineering the application binary.</p><p>Therefore, we now consider k to be known to A and adapt our model to include the encryption and decryption of protocol messages.</p><p>The static key allows the implementation of the PCD role in the unlocking procedure as an NFCGate server plugin. Since the plugin reads the UID of transponders without requiring access to a cylinder, it simplifies the relay attack discussed earlier. In this walk-by attack, A can obtain the authorization by requesting the UID from a transponder, without needing an active connection to the cylinder. Additionally, this allows the creation of multiple copies of a single transponder, thus violating the software design where every transponder is uniquely mapped to exactly one user.</p><p>Walk-by attacks could be mitigated by using individual keys for each deployment, since the key is only available to users of this particular system. Even if an adversary A had access to the key k of their own system, no attacks on other systems would be possible. In addition, extracting k from a transponder or cylinder is not trivial because it requires destructive physical access to the hardware.</p><p>Privilege Escalation and Brute-Force Attack. Comparing UIDs obtained from different transponders in consecutive production batches indicates the presence of a pattern. The UIDs have 7 bytes, where the first byte specifies the tag's manufacturer, in our case 04 for NXP. The remaining 6 bytes do not seem to be chosen at random, instead tags from the same batch have similar byte sequences. This suggests a serial number pattern. The numerical difference between the examined UIDs of our two transponders with the same production date and consecutive batches is 3596.</p><p>If A has access to a transponder in a system without authorization to unlock a specific cylinder, they can use the static key k to extract the UID of their transponder. This significantly reduces the number of guesses required for other UIDs since tags of the system were likely produced in the same or close production batches. Guessing a UID correctly escalates privileges of A to other cylinders. A plugin for the NFCGate server implements brute-forcing UIDs, optionally starting from a known value. It achieves a throughput of approximately three tries per second since the cylinder implements no limit on the number of authorization tries. In our example, it would take around 20 minutes to execute such an attack.</p><p>These attacks can be mitigated by using a random number as authorization instead of the predictable UID. This random number would be stored on the tag protected by the existing authentication protocol. Furthermore, using individual keys per base station instead of a static key k hinders the execution of this attack. Adding brute-force countermeasures by limiting the number of authorization tries in a specific time frame significantly slows down any brute-force attempt.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Responsible Disclosure</head><p>We contacted the vendor to report our findings, and received an initial response within four hours. After providing the vendor with our report, we discussed the discovered issues in a telephone conference and an in-person meeting. The issues will be fixed in the next revision of the system, and the vendor aims to provide patches to existing customers. The entire process was handled in a professional and collaborative manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Performance Evaluation</head><p>After demonstrating the capabilities of the software in this case study, we also evaluate the delays induced by NFCGate in relay and replay mode for more general cases. In this section, we investigate whether an upper bound on the response time imposed by the PCD could be a viable protection mechanism against relay attacks by determining the additional latency in comparison to a direct communication between a PCD and a PICC. One such upper bound could be imposed by the Frame Waiting Time (FWT) as defined in ISO/IEC 14443.</p><p>The evaluation consists of measuring the response time of a common command sequence for retrieving a value of a card in various PICC configurations. We use a PN532 chipset connected to a computer via USB/UART as the PCD and measure the command response time of the PICC. The original Mifare DESFire tag operates in ISO/IEC 7816 ICS mode. In particular, the measured commands are:</p><formula xml:id="formula_2">1. ICS SELECT file: DESFire AID (0xA4) 2. Select Application (0x5A) 3. Get FileSettings (0xF5) 4. Get Value (0x6C)</formula><p>The NFCGate app runs on one Nexus 5X (Android 7) smartphone in the tag role and one OnePlus 6 (Android 9) smartphone in the reader role, while the NFCGate server is hosted directly on the Nexus 5X or a computer. In addition to a baseline measurement, where the PCD communicates with the original tag (TAG), we measure the latency in the following configurations: Every configuration using wireless technologies is conducted in an urban environment with multiple other wireless networks in active use. <ref type="figure">Figure 6</ref> depicts the total latency of command responses for the different configurations as a box plot (n = 20) with outliers, minima, maxima, median, and the lowest/highest values within 1.5 interquartile range. Dashed lines show values for the FW T , where FW T j is only drawn for 8 ≤ j ≤ 11, because FW T 8 is the minimum FW T specified by the original tag and any FW T j with j ≥ 12 is out of bounds. For FW T ≥ FW T 11 ≈ 619 ms, the latency stays within FW T bounds for all tested configurations, excluding some outliers. We note that the replay mostly stays within the FW T of the original tag and is in some cases indistinguishable from it.</p><formula xml:id="formula_3">RP</formula><p>All network configurations using the IEEE 802.11 wireless network standard with both smartphones exhibit a high variance in latency measurements while Bluetooth-based configurations appear to be more stable. We attribute the high variance to interference in the IEEE 802.11 wireless network and the stable Bluetooth measurements to the low data throughput in our evaluation. Therefore, we recommend a Bluetooth PAN configuration for close proximity relays.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Countermeasures</head><p>The FW T has been proposed as a potential countermeasure to relay attacks <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b54">55]</ref>, although it was primarily designed as a safety measure. Despite its standardization, the FW T has not been enforced in our experiments, which seems to be very common <ref type="bibr" target="#b9">[10]</ref>. Even if it was enforced, the FW T could be increased by the PICC up to ≈ 5 s. In the event of a loose mandatory FW T enforced by the PCD, our measurements show that it is possible to relay the communication even if FW T j for j ≥ 10 is in use. Assuming the use of the original tag's FW T is mandatory, a replay could be performed nevertheless. Especially in the case of a cryptographically intensive operation, a replay could be indistinguishable in timing from the original tag, since it does not use cryptography. Despite some configurations exceeding the FW T , a relay could still be performed, because the FW T was designed as a safety measure, not a security feature. The PCD simply retransmits a block after the FW T expires, allowing even more time for a relay to respond <ref type="bibr">[30, Section 7.2]</ref>. This shows that FW T is not just an ineffective countermeasure but no countermeasure at all. Mandatory Response Timeouts. One possible countermeasure against relay attacks is the implementation of a tight mandatory response timeout on the reader side. In contrast to the FWT, this cannot be influenced by the tag and constitutes a definitive communication timeout. Since this countermeasure requires knowing an upper limit on the response latency to any connectable tag beforehand, it only works in closed ecosystems, where all involved readers and tags are controllable. The duration of cryptographic operations in particular depends on hardware instruction support and performance, so low-end HCE devices might raise the upper limit on response latency, which would in turn reduce the effectiveness of this countermeasure.</p><p>Distance Bounding Protocols. First introduced by Brands and Chaum <ref type="bibr" target="#b12">[13]</ref>, distance bounding (DB) protocols solve the general issue of relay attacks. In a DB protocol, physical properties of a connection are used to prove that one endpoint is within a specified distance of the other. In addition to timing and freshness, some DB protocols employ cryptography to ensure the authenticity of endpoints <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref>. DB for NFC can be implemented on either the protocol or application layer. An implementation on the protocol layer requires an extension to the ISO/IEC 14443 standard and performs DB independently of the application <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b46">47]</ref>. While this simplifies the usage for many applications, it only measures the distance to some recipient, not necessarily the intended one. In contrast, an implementation on the application layer can ensure the correct recipient, but requires every application to implement their own, incompatible DB protocol <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b38">39]</ref>.</p><p>One example for an application layer DB protocol is the DESFire EV2 Proximity Check <ref type="bibr" target="#b26">[27]</ref>. The check uses cryptography to ensure mutual authentication at the end of the timing phase. Despite these engineering efforts, an attack against the DB protocol has already been discovered <ref type="bibr" target="#b13">[14]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>With NFCGate, we have enhanced the original PoC to an extensive NFC research toolkit that is compatible with any Android smartphones supporting the Xposed or EdXposed hooking framework and requires no changes to the system image. The interoperability proved invaluable in the case study, since it allowed us to further inspect the captured traffic in Wireshark with its existing NFC protocol dissectors. Using the toolkit, we analyzed a well-known NFC-based door locking system and uncovered several security issues of various severities. We launched a brute-force attack against the UID used as authorization employing the NFCGate server plugin feature. By informing the vendor of our case study, several security issues could be fixed, which helped secure a currently deployed product. The evaluation showed that the relay latency is low enough to bypass many countermeasures, while the negligible replay latency makes it almost indistinguishable from the original tag.</p><p>As future work, the Wireshark remote capturing protocol could be implemented, streaming the captured data from NFCGate to a running live capture to simplify the use of the pcapng export. Finally, we suggest using the on-device capture mode to further analyze HCE-based apps such as Google Pay, or inspect NFC reader apps, e.g. public transport services.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Availability</head><p>We make the source code of NFCGate available to the public under a free software license <ref type="bibr" target="#b52">[53]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Architecture of the Android NFC stack.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Format of NCI configuration parameters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: NFCGate relay setup with external server.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Figure 4 shows the protocol for the unlocking procedure. Deviations from the DESFire AES authentication protocol are marked in red. The key k is a pre-shared 128-bit AES key. The encryption and decryption routines, Enc and Dec, use AES-128 in CBC mode. The initialization vector (IV) for the cryptographic operations is stored in the variables IV A and IV B . The secure channel uses AES-128 in CBC mode with CMAC for authentication in the routines AEnc and ADec. Initially, the PICC picks a random nonce r B and sends it to the PCD encrypted with the pre-shared key k. Receiving this message, PCD decrypts r B and sends its own nonce r A and the rotated r * B to PICC. At this point, the protocol deviates from DESFire authentication by using a static value for r A and not updating the IV used for encryption. This results in message m 5.1 being encrypted under IV = 0 while PICC expects IV = m 4 . Therefore, PICC decrypts m 5.1 with IV = m 4 and obtains r A = r A ⊕ m 4 with r A = r A . If the decrypted r * B matches the local rotation of r B the PICC accepts the authentication and derives the session key k s . Finally, it sends the rotated r * A to the PCD. In order to reconcile the difference between r * A and the expected r * A , the PCD needs to calculate r A = r A ⊕ m 4 . After checking that the received r * A matches the local rotation of r A , the PCD accepts the authentication and derives the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Cylinder unlocking procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Replay Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unlocking protocol messages Replay previously recorded messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Walk-By Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Get UID Save UID from PICC. UID Unlocking protocol messages PICC role with UID. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Privilege Escalation/Brute-Force Attack . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Unlocking protocol messages PICC role with guessed UID.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Attack setups with cylinder (PCD), transponder (PICC), and adversary A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true"><head>Table 1 : Feature comparison of NFCGate to other NFC tools.</head><label>1</label><figDesc></figDesc><table>Tool 
Protocols 
Availability 
Usability and Handling 
Price 

NFCProxy [40], [21, 55] Only ISO/IEC 7816 APDUs Android 
Inconspicuous, no additional hardware 
$ 
Proxmark3 [45] 
Any on ISO/IEC 14443 
Dedicated hardware Suspicious, requires USB host 
$$$ 
ChameleonMini [37] 
Any on ISO/IEC 14443 
Dedicated hardware Suspicious, requires USB host 
$$ 
NFCGate 
Any on ISO/IEC 14443 
Android (rooted) 
Inconspicuous, no additional hardware $ 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 : Comparing original PoC to current NFCGate version.</head><label>2</label><figDesc></figDesc><table>PoC 
Current version of NFCGate 

OS version 
max. 6 
max. 10 
Architecture 
ARMv7 
Added ARM64 
Chipsets 
Broadcom 
Any NCI 
Technologies 
A 
Added B, F 
Modes 
Clone, relay Added replay, on-device capture 
Interoperability -
Added logging, import/export, 
Python plugin system 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 3 :</head><label>3</label><figDesc></figDesc><table>Available NCI config parameters per technology. 

Tech. 
Prefix Parameter IDs 

NFC-A LA_ 
NFCID1, SEL_INFO, BIT_FRAME_SDD, 
PLATFORM_CONFIG, HIST_BY 
NFC-B LB_ 
NFCID0, APPLICATION_DATA, SFGI, 
SENSB_INFO, ADC_FO, H_INFO_RSP 
NFC-F LF_ 
T3T_IDENTIFIERS_1, T3T_FLAGS, 
T3T_PMM 

to ignore the missing checksum. This framing of APDUs with 
ISO/IEC 14443 headers enables the use of Wireshark's proto-
col dissector [35] and its sub-dissectors such as ISO/IEC 7816 
[36] for analysis. 

</table></figure>

			<note place="foot" n="1"> Results published with consent of the vendor.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work has been co-funded by the DFG as part of project C.1 within the RTG 2050 "Privacy and Trust for Mobile Users", and by the German Federal Ministry of Education and Research and the Hessen State Ministry for Higher Education, Research and the Arts within their joint support of the National Research Center for Applied Cybersecurity ATHENE, and by the LOEWE initiative (Hesse, Germany) within the emergenCITY centre.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<ptr target="https://cs.android.com/android/_/android/platform/hardware/nxp/nfc/+/65c90b3:halimpl" />
		<title level="m">Android Open Source Project. Halimpl -source. February 10</title>
		<imprint>
			<date type="published" when="2020-02-20" />
		</imprint>
	</monogr>
	<note>visited on</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Android Open Source Project. Host-based card emulation overview. Android developers</title>
		<ptr target="https://developer.android.com/guide/topics/connectivity/nfc/hce(visitedon" />
		<imprint>
			<date type="published" when="2019-12-27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<ptr target="https://cs.android.com/android/_/android/platform/packages/apps/Nfc/+/ac65163:src/com/android/nfc/cardemulation/HostEmulationManager.java(visitedon" />
		<title level="m">Android Open Source Project. HostEmulationManager.java -source</title>
		<imprint>
			<date type="published" when="2019-05-15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Near field communication overview. Android developers</title>
		<ptr target="https://developer.android.com/guide/topics/connectivity/nfc" />
		<imprint>
			<date type="published" when="2019-12-27" />
			<biblScope unit="volume">12</biblScope>
		</imprint>
	</monogr>
	<note>Android Open Source Project. visited on February</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Android Open Source Project. Nfc -source</title>
		<ptr target="https://cs.android.com/android/" />
		<imprint>
			<date type="published" when="2020-04-16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<ptr target="https://cs.android.com/android/_/android/platform/packages/apps/Nfc/+/68fe178:src/com/android/nfc/NfcDispatcher.java;l=270" />
		<title level="m">Android Open Source Project. NfcDispatcher.javasource</title>
		<imprint>
			<date type="published" when="2020-03-24" />
		</imprint>
	</monogr>
	<note>visited on</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
				<ptr target="https://cs.android.com/android/_/android/platform/packages/apps/Nfc/+/b9d4425:src/com/android/nfc/NfcService.java;l=1470" />
		<title level="m">Android Open Source Project. NfcService.javasource</title>
		<imprint>
			<date type="published" when="2020-04-09" />
		</imprint>
	</monogr>
	<note>visited on</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Android Open Source Project</title>
		<ptr target="https://cs.android.com/android/_/android/platform/frameworks/base/+/3eb265a:core/java/android/nfc/tech" />
		<imprint>
			<date type="published" when="2020-01-22" />
		</imprint>
	</monogr>
<note type="report_type">Tech -source</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Apple developer documentation</title>
		<ptr target="https://developer.apple.com/documentation/corenfc(visitedon" />
		<imprint>
			<date type="published" when="2019-02-12" />
			<publisher>Apple Inc. Core NFC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An NFC relay attack with offthe-shelf hardware and software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Bocek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Killer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christos</forename><surname>Tsiaras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burkhard</forename><surname>Stiller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Management and Security in the Age of Hyperconnectivity</title>
		<editor>Rémi Badonnel, Robert Koch, Aiko Pras, Martin Drašar, and Burkhard Stiller</editor>
		<meeting><address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="978" to="981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Practical and provably secure distancebounding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ioana</forename><surname>Boureanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aikaterini</forename><surname>Mitrokotsa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Serge</forename><surname>Vaudenay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Security</title>
		<editor>Yvo Desmedt</editor>
		<meeting><address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="978" to="981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Towards secure distance bounding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ioana</forename><surname>Boureanu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aikaterini</forename><surname>Mitrokotsa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Serge</forename><surname>Vaudenay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Fast Software Encryption</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="55" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Distance-bounding protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Brands</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Chaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on the Theory and Application of of Cryptographic Techniques</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="344" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Overclocking Proximity Checks in Contactless Smartcards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dominic</forename><surname>Celiano</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
		<respStmt>
			<orgName>University of Cambridge</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Relay cost bounding for contactless EMV payments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Chothia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Flavio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joeri</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jordi</forename><surname>De Ruiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Van Den Breekel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Financial Cryptography and Data Security</title>
		<editor>Rainer Böhme and Tatsuaki Okamoto</editor>
		<meeting><address><addrLine>Berlin, Heidelberg; Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="978" to="981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><surname>Combs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gilbert</forename><surname>Ramirez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Harris</surname></persName>
		</author>
		<ptr target="https://www.wireshark.org/(visitedonFebruary13" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Nfc-tools/libfreefare. A convenience API for NFC cards manipulations on top of libnfc</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Romuald</forename><surname>Conty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Romain</forename><surname>Tartière</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philippe</forename><surname>Teuwen</surname></persName>
		</author>
		<ptr target="https://github.com/nfc-tools/libfreefare/(visitedon" />
		<imprint>
			<date type="published" when="2020-03-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mathias</forename><surname>Dalheimer</surname></persName>
		</author>
		<ptr target="https://media.ccc.de/v/34c3-9092-ladeinfrastruktur_fur_elektroautos_ausbau_statt_sicherheit" />
		<title level="m">Warum das Laden eines Elektroautos unsicher ist</title>
		<imprint>
			<date type="published" when="2017-12-27" />
			<biblScope unit="volume">17</biblScope>
		</imprint>
	</monogr>
	<note>visited on February</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">On the security of public key protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Danny</forename><surname>Dolev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><forename type="middle">C</forename><surname>Yao</surname></persName>
		</author>
		<idno type="doi">DOI:10.1109/TIT.1983.1056650</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1557" to="9654" />
			<date type="published" when="1983-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Keep your enemies close: distance bounding against smartcard relay attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saar</forename><surname>Drimer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">J</forename><surname>Murdoch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 16th USENIX Security Symposium on USENIX Security Symposium, SS&apos;07</title>
		<meeting>16th USENIX Security Symposium on USENIX Security Symposium, SS&apos;07<address><addrLine>Boston, MA. USENIX Association</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page">1113335555779</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Practical relay attack on contactless transactions by using NFC mobile phones. English. In Radio Frequency Identification System Security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lishoy</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerhard</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keith</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Konstantinos</forename><surname>Markantonakis</surname></persName>
		</author>
		<idno type="doi">9781614991427.DOI:10.3233/978-1-61499-143-4-21</idno>
	</analytic>
	<monogr>
		<title level="j">Cryptology and Information Security Series</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="21" to="32" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leigh-Anne</forename><surname>Galloway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Yunusov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aleksei</forename><surname>Stennikov</surname></persName>
		</author>
		<ptr target="https://leigh-annegalloway.com/presentation-materials/" />
		<title level="m">First contact: new vulnerabilities in contactless payments</title>
		<imprint>
			<date type="published" when="2019-12-04" />
		</imprint>
	</monogr>
	<note>visited on February 13</note>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Security analysis of Near-Field Communication (NFC) payments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dennis</forename><surname>Giese</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tahin</forename><surname>Syed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Linda</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1904.10623</idno>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note>cs.CR</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Set up Google Pay -Android. Google Pay help</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Llc</forename><surname>Google</surname></persName>
		</author>
		<ptr target="https://support.google.com/pay/answer/7625055?co=GENIE.Platform%3DAndroid" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note>visited on February 13</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">An RFID distance bounding protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerhard</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><forename type="middle">G</forename><surname>Kuhn</surname></persName>
		</author>
		<idno type="doi">10.1109/SECURECOMM.2005.56</idno>
		<idno>ISBN: 0769523692. DOI: 10 . 1109/SECURECOMM.2005.56</idno>
		<ptr target="https://doi.org/10.1109/SECURECOMM.2005.56" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First International Conference on Security and Privacy for Emerging Areas in Communications Networks, SE-CURECOMM &apos;05</title>
		<meeting>the First International Conference on Security and Privacy for Emerging Areas in Communications Networks, SE-CURECOMM &apos;05<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="67" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Efficient, secure, private distance bounding without key updates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Hermans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roel</forename><surname>Peeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cristina</forename><surname>Onete</surname></persName>
		</author>
		<idno type="doi">ISBN:9781450319980.DOI:10.1145/2462096.2462129</idno>
		<ptr target="https://doi.org/10.1145/2462096.2462129" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth ACM Conference on Security and Privacy in Wireless and Mobile Networks, WiSec &apos;13</title>
		<meeting>the Sixth ACM Conference on Security and Privacy in Wireless and Mobile Networks, WiSec &apos;13<address><addrLine>Budapest, Hungary</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="207" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Measuring the distance: investigating the DESFire EV2 distance bounding protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Darren</forename><surname>Hurley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julio</forename><surname>Hernandez-Castro</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A PLT hook library for Android native ELF</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iqiyi Inc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xhook</surname></persName>
		</author>
		<ptr target="https://github.com/iqiyi/xHook" />
		<imprint>
			<date type="published" when="2020-05-24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Identification cards -Contactless integrated circuit(s) cards -Proximity cardsPart 1: Physical characteristics. Standard, International Organization for Standardization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iso/Iec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-04" />
			<pubPlace>Geneva, CH</pubPlace>
		</imprint>
	</monogr>
	<note>5 pages</note>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Identification cards -Contactless integrated circuit(s) cards -Proximity cards -Part 4: Transmission protocol. Standard, International Organization for Standardization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iso/Iec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-02" />
			<biblScope unit="volume">34</biblScope>
			<pubPlace>Geneva, CH</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Identification cards -Contactless integrated circuit cards -Vicinity cards -Part 1: Physical characteristics. Standard, International Organization for Standardization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iso/Iec</surname></persName>
		</author>
		<idno>15693-1:2010</idno>
		<imprint>
			<date type="published" when="2010-10" />
			<pubPlace>Geneva, CH</pubPlace>
		</imprint>
	</monogr>
	<note>5 pages</note>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Identification cards -Integrated circuit cards -Part 3: Cards with contacts -Electrical interface and transmission protocols. Standard, International Organization for Standardization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iso/Iec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-11" />
			<biblScope unit="volume">58</biblScope>
			<pubPlace>Geneva, CH</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Identification cards -Integrated circuit cards -Part 4: Organization, security and commands for interchange. Standard, International Organization for Standardization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Iso/Iec</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005-01" />
			<biblScope unit="volume">90</biblScope>
			<pubPlace>Geneva, CH</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">X 6319-4. Specification of implementation for integrated circuit(s) cards -Part 4: High speed proximity cards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jsa -Jis</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Japanese Standards Association</title>
		<imprint>
			<date type="published" when="2016-03" />
		</imprint>
	</monogr>
	<note>129 pages</note>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Wireshark/packet-iso14443.c at wireshark-3.2.1. Wireshark/wireshark</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Harris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><surname>Combs</surname></persName>
		</author>
		<ptr target="https://github.com/wireshark/wireshark/blob/wireshark-3.2.1/epan/dissectors/packet-iso14443.c" />
		<imprint>
			<date type="published" when="2019-01-27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Wireshark/packet-iso7816.c at wireshark-3.2.1. Wireshark/wireshark</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Harris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><surname>Combs</surname></persName>
		</author>
		<ptr target="https://github.com/wireshark/wireshark/blob/wireshark-3.2.1/epan/dissectors/packet-iso7816.c" />
		<imprint>
			<date type="published" when="2019-01-27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oswald</forename><surname>Kasper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gmbh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chameleonmini</surname></persName>
		</author>
		<ptr target="https://kasper-oswald.de/gb/chameleonmini/(visitedonFebruary13" />
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A brief survey on rootkit techniques in malicious codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sungkwan</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junyoung</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyungroul</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilsun</forename><surname>You</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kangbin</forename><surname>Yim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Internet Serv. Inf. Secur</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3/4</biblScope>
			<biblScope unit="page" from="134" to="147" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Contactless access control based on distance bounding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Handan</forename><surname>Kılınç</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Serge</forename><surname>Vaudenay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Security</title>
		<editor>Phong Q. Nguyen and Jianying Zhou</editor>
		<meeting><address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="978" to="981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">NFC hacking: the easy way</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eddie</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Defcon hacking conference</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="63" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A survey on function and system call hooking approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Juan</forename><surname>Lopez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonardo</forename><surname>Babun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hidayet</forename><surname>Aksu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Uluagac</surname></persName>
		</author>
		<idno type="doi">DOI:10.1007/s41635-017-0013-2</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Hardware and Systems Security</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="114" to="136" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">DEMO: NFCGate: an NFC relay application for Android</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Maass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Uwe</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Schons</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Wegemer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Schulz</surname></persName>
		</author>
		<idno type="doi">10.1145/2766498.2774984</idno>
		<idno>ISBN: 9781450336239. DOI: 10 . 1145 / 2766498 . 2774984</idno>
		<ptr target="https://doi.org/10.1145/2766498.2774984" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM Conference on Security &amp; Privacy in Wireless and Mobile Networks, WiSec &apos;15</title>
		<meeting>the 8th ACM Conference on Security &amp; Privacy in Wireless and Mobile Networks, WiSec &apos;15<address><addrLine>New York, New York</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Technical Specification</title>
	</analytic>
	<monogr>
		<title level="m">NFC Forum. NFC Controller Interface (NCI)</title>
		<imprint>
			<date type="published" when="2016-11" />
		</imprint>
	</monogr>
	<note>206 pages</note>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">MI-FARE DESFire EV1 contactless multi-application IC. Product short data sheet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">V</forename><surname>Nxp Semiconductors</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mf3icdx21_41_81</surname></persName>
		</author>
		<ptr target="https://www.nxp.com/docs/en/data-sheet/MF3ICDX21_41_81_SDS.pdf" />
		<imprint>
			<date type="published" when="2005-12-09" />
			<biblScope unit="volume">18</biblScope>
		</imprint>
	</monogr>
	<note>visited on February 23</note>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Proxgrind</surname></persName>
		</author>
		<idno>Rdv4.0 development. 2020</idno>
		<ptr target="https://proxgrind.com/prototyping/proxmark3-rdv4-0-development/" />
		<imprint>
			<date type="published" when="2020" />
			<biblScope unit="volume">13</biblScope>
		</imprint>
	</monogr>
	<note>visited on February</note>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Apple Pay is on pace to account for 10% of all global card transactions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Quartz</surname></persName>
		</author>
		<ptr target="https://qz.com/1799912/apple-pay-on-pace-to-account-for-10-percent-of-global-card-transactions/" />
		<imprint>
			<date type="published" when="2020-02-11" />
			<biblScope unit="volume">12</biblScope>
		</imprint>
	</monogr>
	<note>visited on February</note>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Detecting relay attacks with timingbased protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Reid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Juan</forename><forename type="middle">M</forename><surname>Gonzalez Nieto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tee</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bouchra</forename><surname>Senadji</surname></persName>
		</author>
		<idno type="doi">1595935746.DOI:10.1145/1229285.1229314</idno>
		<ptr target="https://doi.org/10.1145/1229285.1229314" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd ACM Symposium on Information, Computer and Communications Security, ASIACCS &apos;07</title>
		<meeting>the 2nd ACM Symposium on Information, Computer and Communications Security, ASIACCS &apos;07<address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="204" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Cloning credit cards: a combined pre-play and downgrade attack on EMV Contactless</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Roland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josef</forename><surname>Langer</surname></persName>
		</author>
		<ptr target="https://www.usenix.org/conference/woot13/workshop-program/presentation/Roland" />
	</analytic>
	<monogr>
		<title level="m">Presented as part of the 7th USENIX Workshop on Offensive Technologies, Washington, D.C. USENIX</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Applying relay attacks to Google Wallet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Roland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josef</forename><surname>Langer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josef</forename><surname>Scharinger</surname></persName>
		</author>
		<idno type="doi">DOI:10.1109/NFC.2013.6482441</idno>
	</analytic>
	<monogr>
		<title level="m">5th International Workshop on Near Field Communication (NFC)</title>
		<imprint>
			<date type="published" when="2013-02" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Welcome to the Xposed module repository. Xposed module repository</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thungstwenty</forename></persName>
		</author>
		<ptr target="https://xposed.info" />
		<imprint>
			<date type="published" when="2020-02-24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">EdXposed framework official website. MeowCat Studio</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Solohsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wu</surname></persName>
		</author>
		<ptr target="https://edxp.meowcat.org/(visitedon" />
		<imprint>
			<date type="published" when="2020-02-24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">You foot the bill! Attacking NFC with passive relays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuyi</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Swarun</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shibo</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiming</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiguo</forename><surname>Shi</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2001.08143</idno>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note>cs.CR</note>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
				<ptr target="https://github.com/nfcgate/nfcgate" />
		<title level="m">The NFCGate Team. NFCGate. An NFC research toolkit application for Android. 2020</title>
		<imprint>
			<date type="published" when="2020-03-19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">PCAP Next Generation (pcapng) capture file format</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Tuexen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fulvio</forename><surname>Risso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jasper</forename><surname>Bongertz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><surname>Combs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Harris</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020-01-26" />
		</imprint>
		<respStmt>
			<orgName>Network Working Group</orgName>
		</respStmt>
	</monogr>
<note type="report_type">draft-tuexen-opsawgpcapng. Internet-Draft</note>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Practical experiences on NFC relay attacks with Android</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">José</forename><surname>Vila</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricardo</forename><forename type="middle">J</forename><surname>Rodríguez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Radio Frequency Identification</title>
		<editor>Stefan Mangard and Patrick Schaumont</editor>
		<meeting><address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="978" to="981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Dynamic hooks: hiding control flow changes within non-control data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sebastian</forename><surname>Vogl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Gawlik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Behrad</forename><surname>Garmany</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Kittel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Pfoh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudia</forename><surname>Eckert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thorsten</forename><surname>Holz</surname></persName>
		</author>
		<idno>ISBN: 978-1-931971-15-7</idno>
		<ptr target="https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/vogl" />
	</analytic>
	<monogr>
		<title level="m">23rd USENIX Security Symposium (USENIX Security 14)</title>
		<meeting><address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2014-08" />
			<biblScope unit="page" from="813" to="328" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title level="m" type="main">Ping time between Frankfurt and other cities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wondernetwork</surname></persName>
		</author>
		<ptr target="https://wondernetwork.com/pings/Frankfurt(visitedon" />
		<imprint>
			<date type="published" when="2020-02-06" />
		</imprint>
	</monogr>
<note type="report_type">Wondernetwork. 2020</note>
</biblStruct>

<biblStruct xml:id="b57">
	<monogr>
		<title level="m" type="main">Mobile wallet profiles 2019: Apple Pay, Google Pay, Samsung Pay</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">Kg</forename><surname>Co</surname></persName>
		</author>
		<ptr target="https://www.ystats.com/market-reports/google-pay-profile-2019" />
		<imprint>
			<date type="published" when="2019-03-18" />
			<biblScope unit="volume">12</biblScope>
		</imprint>
	</monogr>
	<note>visited on February</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
