<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:50+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">ENVI: Elastic resource flexing for Network function VIrtualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lianjie</forename><surname>Cao</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>Hewlett Packard Enterprise</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Puneet</forename><surname>Sharma</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>Hewlett Packard Enterprise</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hewlett</forename><forename type="middle">Packard</forename><surname>Labs</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>Hewlett Packard Enterprise</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sonia</forename><surname>Fahmy</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>Hewlett Packard Enterprise</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinay</forename><surname>Saxena</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Purdue University</orgName>
								<address>
									<settlement>Hewlett Packard Enterprise</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">ENVI: Elastic resource flexing for Network function VIrtualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Dynamic and elastic resource allocation to Virtual Network Functions (VNFs) in accordance with varying workloads is a must for realizing promised reductions in capital and operational expenses in Network Functions Virtualization (NFV). However, workload hetero-geneity and complex relationships between resources allocated to a VNF and the resulting capacity makes elastic resource flexing a challenging task. We propose an NFV resource flexing system, ENVI, that uses a combination of VNF-level features and infrastructure-level features to construct a machine-learning-based decision engine for detecting resource flexing events. ENVI also extracts the dependence relationship among VNFs in deployed Service Function Chains (SFCs) to carefully plan the sequence of resource flexing steps upon scaling detection. We present preliminary results for the accuracy of ENVI&apos;s resource flexing decision engine with two different VNFs, namely, the caching proxy Squid and the intrusion detection system Suricata. Our preliminary results show that using a combination of features to train a neural network model is a promising approach for scaling detection.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Motivated by the success of cloud computing, Communication Service Providers (CSPs) are adopting Network Functions Virtualization (NFV) to virtualize network functions (NFs) and deploy them on commodity compute, storage and networking resources. The goal of NFV is to bring agility to NF deployment and leverage elastic scaling to reduce overall operational expenses. Elastic resource flexing in the NFV ecosystem allows an orchestrator to provision appropriate resources to a particular VNF for matching workload dynamics, either by increasing (or reducing) the resource allocations of already deployed VNF instances or increasing (or reducing) the number of VNF instances. This paper considers elastic resource flexing mechanisms for VNF management.</p><p>NFV deployments comprise sets of VNF instances implementing network services (e.g., intrusion detection systems (IDSes), load balancers, caching proxies) hosted on private or public cloud platforms such as virtual machines (VMs) or containers. It is common to connect VNF instances in a particular order that network traffic needs to traverse, referred to as a Service Function Chain (SFC). Virtualization allows each VNF to be elastically scaled to use more (or less) virtualized resources on demand. We observe that resource consumptionbased thresholds for detecting overload in standard cloud computing environments are insufficient for NFV deployments. Accuracy and timeliness of scaling detection allow balancing the tradeoffs associated with VNF resource allocation. Detecting scaling long before actual overload causes under-utilization of resources allocated to a VNF (and hence higher operational expenses). Alternatively, detection after the fact can incur penalties associated with service disruption.</p><p>Several challenges complicate the design of effective VNF scaling detection mechanisms. First, unlike hardware implementations, VNF vendors may not provide detailed capacity/performance specifications of VNFs. This is because system performance/capacity of VNFs depends on underlying NFV infrastructure, resource sizing and workload dynamics <ref type="bibr" target="#b5">[5]</ref> which makes it challenging for VNF vendors to provide complete performance/capacity information. For instance, the maximum throughput of an IDS running in a VM is related to the configuration of the physical server, e.g., a vCPU mapped to an Intel Xeon processor offers different traffic processing power from an AMD Opteron processor. Second, each VNF has a distinct processing logic depending on incident network traffic and events. Even if certain VNFs share packet processing functionality such as packet header analysis, the differences in upper-layer processing and implementation can exhibit unique resource usage patterns. Third, the dynamics of network traffic in volume and composition may trigger different processing units of the same VNF (e.g., rule match in IDS) and hence consume different amounts of resources. As an example, <ref type="table" target="#tab_0">Table 1</ref> shows different capacity values (number of completed HTTP requests per second) and CPU usage on our testbed for Squid, a caching proxy NF, when varying HTTP response size from 10 KB to 100 KB. Fourth, unlike similar scenarios (e.g., cloud applications), network traffic (constituting the VNF workload) is forwarded through VNFs based on the SFC forwarding graph. In this paper, we describe ENVI, a modular VNF resource management system that periodically collects VNF-specific and infrastructure resource utilization information, and detects VNF scaling using this information and pre-trained machine learning models. ENVI generates resource flexing plans considering SFC relationships. ENVI makes three novel contributions:</p><p>(i) Composition of VNF-specific information and infrastructure resource usage information for detection of VNF scaling. Most VNFs (actively or passively) report internal statistics to administrators for debugging, monitoring and security. This internal information (such as request queue size) is critical to ensure optimal functioning. Although VNFs of the same type may differ in implementation, they usually use similar metrics. For instance, both Snort and Suricata, as IDSes, report packet classification, throughput, and rule matching statistics. We argue that combining VNF-specific information with resource utilization information (referred to as VNF-level features and infrastructure-level features, respectively) can enhance our understanding of VNF dynamics at runtime, and hence yield more accurate scaling detection.</p><p>(ii) Modeling scaling detection as a classification problem. Most systems today use a static policy-based mechanism on one or multiple resource usage statistics to detect overload. This approach fails to consider the impact of the VNF processing logic, implementation details, and traffic dynamics. While it is almost impossible to establish precise mathematical relationships among all factors, it is feasible to train machine learning models to detect scaling online. ENVI uses machine learning models to capture sophisticated relationships between VNF runtime status and system scaling.</p><p>(iii) Resource flexing planning based on service chain relationships. ENVI's resource provisioning system not only captures the VNF status, workload and infrastructure information in real-time, but also considers the chaining relationship between VNF instance sets. This consideration allows concerted resource flexing across all components of a service function chain, thus reducing transition times and service disruptions.</p><p>In this paper, we demonstrate the use of VNF-level and infrastructure-level information as input features to train machine learning models for scaling detection. We report preliminary experimental results on the caching proxy Squid and the IDS Suricata.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Previous work (e.g.,, <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b7">7,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b30">32,</ref><ref type="bibr" target="#b15">16]</ref>) considered VNF resource allocation together with VNF placement, and modeled them as an optimization problem (e.g., Integer Linear Programing (ILP)) that minimizes the total number of VNF instances, communication cost, or deployment cost under constraints of network traffic and physical network topology. This line of work assumes VNF capacities are known and static, ignoring the performance characterization challenges. The work does not consider the impact of dynamic network traffic on different types of VNFs. Hence, the resource allocation solutions may not work well in real-world deployments.</p><p>Stratos <ref type="bibr" target="#b12">[12]</ref> and E2 <ref type="bibr" target="#b24">[25]</ref> propose comprehensive NFV orchestration frameworks which manage VNF instances and distribute flows efficiently. However, E2 <ref type="bibr" target="#b24">[25]</ref> relies on the VNF developer to give the overload indicator for scaling a VNF with more instances. The resource provisioning strategy in Stratos <ref type="bibr" target="#b12">[12]</ref> is the closest to our solution. However, Stratos monitors OS-level statistics only and does not specify how they are used to detect overload.</p><p>In the cloud computing domain, resource allocation is an important problem. However, on the public cloud, neither the provider nor the user is willing to share information, which limits the ability to make efficient resource allocation decisions. In addition, the strict chaining requirements in NFV introduces special constraints. Most cloud platforms and third-party developers simply provide policy-based interfaces (e.g., OpenStack Heat <ref type="bibr" target="#b23">[24]</ref>, Amazon AWS AutoScaling <ref type="bibr" target="#b2">[2]</ref>, Google Compute Engine AutoScaler <ref type="bibr">[15]</ref> and RightScale <ref type="bibr" target="#b25">[26]</ref>) to users to scale their application by monitoring basic infrastructure-level information. Some research work (e.g., <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b26">[27]</ref> and <ref type="bibr" target="#b29">[31]</ref>) assumes certain workload patterns exist, and identifies and stores resource assignment solutions for future use.</p><p>Learning approaches have proven effective in solving system problems. Nagaraj et al. <ref type="bibr" target="#b21">[22]</ref>, Liu et al. <ref type="bibr" target="#b16">[17]</ref> and Arzani et al. <ref type="bibr" target="#b0">[1]</ref> apply machine learning techniques to investigate system/network anomalies. Nagaraj et al. <ref type="bibr" target="#b21">[22]</ref> compare distributed system logs using statistical tests and dependency networks to identify performance degradation. Liu et al. <ref type="bibr" target="#b16">[17]</ref> and Arzani et al. <ref type="bibr" target="#b0">[1]</ref> train random forest models on historical network data to determine network anomalies and root causes of failures, respectively. Gao et al. <ref type="bibr" target="#b11">[11]</ref> predict power usage effectiveness (PUE) in Google data centers. Bao et al <ref type="bibr" target="#b3">[3]</ref> guide cellular network resource allocation using user experience prediction. Mao et al. <ref type="bibr" target="#b18">[19]</ref> solve the multi-resource allocation problem in a reinforcement learning framework. These approaches are orthogonal to our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ENVI Design</head><p>ENVI introduces three novel mechanisms to VNF resource management: (i) combination of VNF-specific information (VNF-level features) and system resource utilization (infrastructure-level features) for a deeper understanding of VNF runtime dynamics, (ii) application of machine learning to detect VNF scaling, and (iii) resource adjustment leveraging chaining relations.</p><p>As shown in <ref type="figure" target="#fig_0">Fig. 1</ref>, we design ENVI with four decoupled modules leveraging the NFV architecture from ETSI <ref type="bibr" target="#b10">[10]</ref>: VNF monitor, scaling decision engine, resource flexing engine and placement engine. We intentionally decouple these building blocks to test different algorithms and reuse existing solutions. In this section, we explain each module and how it interacts with other modules. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Detecting Scaling</head><p>Prior work (e.g., <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b31">34]</ref>) reports improved performance when leveraging application information in scheduling. Such information, however, is not always available due to privacy concerns. Fortunately, in NFV, the infrastructure and VNFs are typically owned by the same administrator who has access to both. In ENVI, a VNF monitor queries each VNF instance to collect VNF-level and infrastructure-level feature information using two separate lightweight monitoring threads every time interval T . ENVI uses a distinct monitoring agent for each VNF. Most VNFs report key metrics through log files or APIs which are inexpensive to query. The VNF monitor converts and stores all metric values in a key-value format as VNF-level feature time-series information.</p><p>Our goal is to determine the appropriate time when a VNF needs to be scaled and allocate additional resources to it at that time. If we are too late, the VNF gets overloaded, leading to service quality violations. If we are too early, we allocate unnecessary resources which causes inefficient resource usage. To this end, we must formulate the relation among VNF runtime status, resource utilization, and scaling decision. We find that it is infeasible to formulate exact mathematical models that consider the inherent heterogeneity in VNF functionality and implementation and the physical infrastructure. We propose to use machine learning models for our scaling decision engine (SDE) to learn how to make scaling decisions based on data collected from offline performance tests, and then use and update the learned models in our operational environment.</p><p>The SDE module pulls the values of VNF-level and infrastructure-level features from the VNF monitor every time window W = nT to avoid overreaction (n is set to 10 by default) and converts these values to numerical values (if needed). The module then computes statistical measures (e.g., max, min, mean, median and variance) over W to capture temporal dynamics and use these values as a data point. SDE includes two phases: an offline training phase and an online operation phase.</p><p>During the offline training phase, we conduct a series of training experiments covering as many types of workloads as possible using our VNF performance testing framework <ref type="bibr" target="#b5">[5]</ref>. We label each data point for time window W in the collected training data with a 0 or 1 meaning "do not scale" and "scale," respectively. Extending the methodology in our previous work <ref type="bibr" target="#b5">[5]</ref>, our tests determine the maximum capacity C i for VNF i. We label a data point 1 if the input workload rate R i j &gt; αC i , 0 &lt; α ≤ 1 during the jth time window T j , which means that we attempt to scale the VNF before reaching its maximum capacity. The parameter α controls the time to enforce the scaling decision and appropriate resource allocation.</p><p>Note that the labeling process can be VNF-specific, since users can define service quality violations for different VNFs differently. We then use the collected data to train an initial model. We evaluate our initial model on different workload types in Section 4.</p><p>The initial model is used to predict scaling events during the online operation phase. To cope with workload variations that were not captured during offline training, ENVI continues collecting and labeling new operational data and updating the initial model in a background process using online learning algorithms. In some cases, the SDE may be late in generating "scale" events due to model inaccuracies. To address this contingency, we allow the SDE to generate a third type of event, "urgent scale" (with value 2), if VNF failure or severe overload is detected. This event is pushed to the resource flexing engine immediately, and the SDE performs a model update immediately as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Neural Network Model</head><p>We explored multiple machine learning models (e.g., decision tree, random forest, logistic regression, Lasso and na¨ıvena¨ıve Bayes) for the SDE. we selected a fully connected neural network model with four layers: input layer, two hidden layers and output layer. We select this approach because: (1) a neural network is able to construct new features through customizable hidden layers and fit nonlinear functions when an explicit mathematical formulation is unavailable, and (2) the neural network can model dependence of input features and data points, which is important for VNF-level features and VNF operational data. For instance, for Suricata, VNF-level feature decoder.bytes is related to decoder.pkts, decoder.max pkt size and decoder.avg pkt size. Our experiments show that the neural network model is able to effectively capture VNF scaling behavior if we label data points appropriately, and VNFs report relevant features. However, interpreting a trained neural network and feature importance remain open problems.</p><p>Machine learning models need retraining when the underlying hardware used for initial training changes. <ref type="figure" target="#fig_1">Fig. 2</ref> shows the cross-test of initial neural network models on different hardware configurations. The results demonstrate that 90% to 95% of the accuracy is achieved on the same hardware configuration by standardizing the values of input features with composite features. The initial models can be improved during operation. However, the initial models may not perform well if VNFs undergo major software updates that affect their capacity and performance. For example, we have observed that Suricata, starting with version v3.1, significantly improved its pattern matching performance. In such cases, retraining the initial neural network model is important. During the online operation phase, the SDE updates the initial neural network models periodically based on newly collected data. We use the previous values as initial weights to train the model on new data. If the workload shows significant difference, we increase the weight of new data to keep up with workload variations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Flexing Resources</head><p>When "scale" or "urgent scale" events are generated, the SDE pushes a scale array indicating scaling requirements for each instance to the resource flexing engine (RFE), along with related VNF-level and infrastructurelevel feature information. We extend the strategy in Stratos <ref type="bibr" target="#b12">[12]</ref> to a "multi-stage resource adjustment" strategy. On receiving the scale array from the SDE, the RFE first scales VNF instances that are labeled "urgent scale." It then reduces the multi-VNF adjustment (e.g., more than one VNF needs to be scaled) to multiple single-VNF adjustments by leveraging the chaining relation defined by the SFC policy graph. For each single-VNF adjustment, the RFE first attempts to adjust the VNF status by redistributing the workload among all instances of a VNF. If this is possible, we redistribute flows by reconfiguring traffic forwarding rules. Otherwise, the RFE scales out/up the affected VNF based on the scaling preferences obtained during the offline phase.</p><p>Once the resource flexing plan is generated, the RFE pushes it to the placement engine (PE). The PE converts the received plan to executable and platform-dependent commands (e.g., OpenStack Heat templates) and sends these commands to the NFV orchestrator to enforce. This stage involves optimization to determine how to place new VNF instances to reduce costs and processing overhead. PE details are beyond the scope of this work: users can plug in existing solutions (e.g., <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b4">4,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b7">7,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b30">32,</ref><ref type="bibr" target="#b15">16]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Prototype Evaluation</head><p>We implemented a prototype of ENVI and evaluated it on a testbed with three HP DL360p blade servers and two HP Z420 workstations, connected by an HPE 3500yl Gigabit switch (for the management network) and an HPE 5820X 10 Gigabit switch (for the instance network). All the compute and network resources are managed by OpenStack Kilo <ref type="bibr" target="#b22">[23]</ref>.</p><p>Due to the lack of public traces for VNF benchmarking, we synthetically generate the workload by extending the methodology used in NFV-VITAL <ref type="bibr" target="#b5">[5]</ref> to evaluate ENVI with two VNFs: caching proxy Squid <ref type="bibr">[29]</ref> (version 3.3.8) and IDS software Suricata <ref type="bibr" target="#b28">[30]</ref> (version 3.2.1). Each VNF is tested with ten different workloads: different HTTP response sizes (10 to 100 KB) for Squid and different malicious traffic fractions (0 to 90%) for Suricata. For each workload, we first gradually increase the workload generation rate until the VNF reaches the maximum system capacity where System T hroughput Input Workload ≥ 99%. Then, we randomly pick a workload generation rate that is smaller than the maximum system capacity to collect data to train and test the SDE. We do not overload the VNF frequently in our experiments, since the goal of the SDE is to generate "scale" notifications prior to VNF overload. We collected over 1000 data points over 10 workload types for each VNF in our experiments.</p><p>Ideally, we want to train an initial model for each VNF using offline experimental data and gradually improve it online as more workload patterns are observed. In this section, we evaluate the performance of a neural network model that is trained and tested on disjoint workload types. More specifically, we train the neural network model on n workload types and test it on the remaining 10 − n workload types, where n = 1, 2, · · · , 9. For each n, we enumerate all possible combinations of workload types and run 5-fold cross-validation on selected data sets to avoid overfitting before testing on the remaining 10 − n workload types. We compare the performance of the neural network (NN) with three other machine learning (ML) classification models: decision tree (DT), random forest (RF) and logistic regression (LR), using different performance measures: accuracy, precision, recall, receiver operating characteristic (ROC) and area under ROC curve (AUROC). We also compare with a baseline method that uses a scaling policy based on a CPU usage threshold. A similar training and evaluation methodology is used for other classification models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Suricata Results</head><p>We configure Suricata with the latest Emerging rule set <ref type="bibr">[9]</ref> and generate UDP traffic as benign traffic. For malicious traffic, we target a single rule which matches UDP port number and payload content. Suricata reports 100 quantities in its log file which are used as VNF-level features. Our resource monitor collects 8 basic resource utilization metrics as infrastructure-level features. <ref type="figure" target="#fig_2">Fig. 3</ref> compares the performance of different classification models trained with three different feature sets: VNF-level only, infrastructure-level only, and composite features. Compared to VNF-level features, infrastructure-level features yield up to 6% higher accuracy, 8% higher precision, 3% higher recall, and 6% higher AUROC. For Suricata, infrastructure-level features are generally better indicators for detecting "scale" events. This is because Suricata is a simple VNF that captures packets and generates alerts based on rule sets. The performance of Suricata is highly correlated to CPU utilization. This is consistent with the observed 72% accuracy of the baseline method, which only uses a CPU threshold to detect scaling. With composite features, all machine learning models give performance close to that with infrastructure-level features. The neural network model outperforms other classification models and consistently yields close to 90% accuracy even with only VNF-level features. The standard error for all measures is small, indicating that machine learning models are stable when trained on different numbers and types of workloads. This increases our confidence that the initial neural network model can offer a reasonable starting point for the online phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Squid Results</head><p>We use a caching proxy benchmarking tool, Web Polygraph <ref type="bibr">[33]</ref>, to generate HTTP requests from clients and simulate different types of workload by varying HTTP response sizes from 10 to 100 KB. We use squidclient (provided by Squid) to monitor the runtime status of Squid and collect 150 VNF-level features.</p><p>As shown in <ref type="figure">Fig. 4</ref>, infrastructure-level features yield significantly worse performance for all measures, unlike what we observed with Suricata. Squid is a more complex VNF than Suricata, and its performance is not highly correlated to CPU usage. To handle an HTTP request, Squid must accept a connection from a client, establish a connection with a server, and forward data from the server to the client. Therefore, infrastructurelevel features are inadequate for accurate scaling detection. The baseline method also reports poor performance (44% accuracy). Performance with composite features and VNF-level features is better. The neural network model again outperforms other models in all measures by 5%˜19% with small standard error. The baseline method reports a high recall value for both Suricata and Squid even when accuracy and precision are low: the baseline method generates more positive results than other models using our labeling mechanism. Reducing its CPU usage threshold increases its performance in some cases, but it still performs worse than other models, especially for complex VNFs like Squid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>Model Feature Set. The performance of any machine learning (ML) model is limited by the availability of the right feature set for decision making. ENVI's decision engine will suffer if VNF vendors do not expose appropriate operational information. It is worth exploring the possibility of supplementing infrastructure-level information with OS-level information, such as memory allocation statistics, page fault information, device I/O information and system call information. Are there indirect mechanisms for extracting VNF specific features if they are not readily available? Model Training Overhead. Our evaluation (Sec. 4) shows that the neural network model outperforms other classification models such decision tree, random forest and logistic regression. However, tuning a neural network model with the right set of features/parameters is a challenging task. Creating deep neural network models may also suffer from lack of training data and high training overhead. We believe that temporal correlation among features can be exploited for improved overload prediction. How should temporality be captured in ENVI's ML models? Could convolutional neural networks (CNN) or recurrent neural networks (RNN) improve the results?</p><p>Model Evolution. False negatives and false positives have different impacts on operation. False negatives mean that a VNF does not scale when it is should and result in service disruption. False positives lead to resource overprovisioning since a VNF unnecessarily scales. We need a utility/scoring function to capture the impact of both in terms of service quality and resource efficiency. While offline models are a good starting point, monitoring overload and failures in production environments can be used for online-training. What mechanisms are required for handling imbalanced labeling and using utility functions to bias model evolution during operation?</p><p>Finer-grained Resource Flexing. Currently the resource flexing engine performs coarse-grained search over a limited set of VM sizing options. More flexible resource allocation strategies are possible in highly customized or containerized deployments. Can reinforcement learning approaches, based on monitoring the impact of fine-grained resource allocation, benefit ENVI?</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: ENVI Architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Cross-testing initial neural network models (using composite, infrastructure-level and VNF-level features) for Suricata on different hardware configurations. Each bar represents normalized values over the same measure derived from 5-fold cross-validation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Statistical measures of Suricata tests.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>Squid capacity for different HTTP response 
sizes 
Response Size 
10 KB 50 KB 90 KB 
Capacity 
(requests/sec) 
2767 
1232 
723 

CPU Usage (%) 
74 
51 
54 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Taking the blame game out of data centers operations with netpoirot</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Arzani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ciraci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">T</forename><surname>Loo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Outhred</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 conference on ACM SIGCOMM</title>
		<meeting>the 2016 conference on ACM SIGCOMM</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Conference</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<publisher>ACM</publisher>
			<biblScope unit="page" from="440" to="453" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aws -Auto</forename><surname>Amazon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Scaling</surname></persName>
		</author>
		<ptr target="https://aws.amazon.com/autoscaling/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">From prediction to action: A closed-loop approach for data-guided network resource allocation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1425" to="1434" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On orchestrating virtual network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Bari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Service Management (CNSM), 2015 11th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="50" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">NFVVital: A framework for characterizing the performance of virtual network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fahmy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Saxena</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network Function Virtualization and Software Defined Network</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="93" to="99" />
		</imprint>
		<respStmt>
			<orgName>NFV-SDN</orgName>
		</respStmt>
	</monogr>
	<note>2015 IEEE Conference on</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient coflow scheduling with varys</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIG-COMM Computer Communication Review</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="443" to="454" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The dynamic placement of virtual network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Clayman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Maini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Galis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Manzalini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mazzocca</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network Operations and Management Symposium (NOMS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Near optimal placement of virtual network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lewin-Eytan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Naor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Raz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Communications (INFO-COM), 2015 IEEE Conference on</title>
		<imprint>
			<biblScope unit="page">1346</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
				<ptr target="http://www.etsi.org/deliver/etsi_gs/NFV/001_099/002/01.02.01_60/gs_NFV002v010201p.pdf" />
		<title level="m">ETSI Network Functions Virtualisation (NFV) Architectural Framework</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Machine learning applications for data center optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jamidar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
			<publisher>Google White Paper</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Stratos: A network-aware orchestration layer for middleboxes in the cloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gember</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grandl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Anand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Benson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Akella</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Sekar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Elastic virtual network function placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ghaznavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shahriar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Alsubhi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 4th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="255" to="260" />
		</imprint>
	</monogr>
	<note>Cloud Networking (CloudNet)</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Press: Predictive elastic resource scaling for cloud systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Gong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilkes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Service Management (CNSM), 2010 International Conference on</title>
		<imprint>
			<publisher>Ieee</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An nfv orchestration framework for interference-free policy enforcement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Qian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Distributed Computing Systems (ICDCS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="649" to="658" />
		</imprint>
	</monogr>
	<note>IEEE 36th International Conference on</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Opprentice: towards practical and automatic anomaly detection through machine learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Pei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 ACM Conference on Internet Measurement Conference</title>
		<meeting>the 2015 ACM Conference on Internet Measurement Conference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="211" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Piecing together the nfv provisioning puzzle: Efficient placement and chaining of virtual network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Luizelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">R</forename><surname>Bays</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">S</forename><surname>Buriol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Barcellos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Gaspary</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Integrated Network Management (IM), 2015 IFIP/IEEE International Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="98" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Resource management with deep reinforcement learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alizadeh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Menache</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kandula</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th ACM Workshop on Hot Topics in Networks</title>
		<meeting>the 15th ACM Workshop on Hot Topics in Networks</meeting>
		<imprint>
			<biblScope unit="page" from="50" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Performant deployment of a virtualised network functions in a data center environment using resource aware scheduling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Mcgrath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Riccobene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Petralia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xilouris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-A</forename><surname>Kourtis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IFIP/IEEE International Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1131" to="1132" />
		</imprint>
	</monogr>
	<note>Integrated Network Management (IM)</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Vnf-p: A model for efficient placement of virtualized network functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Moens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>De Turck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Service Management (CNSM)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="418" to="423" />
		</imprint>
	</monogr>
	<note>10th International Conference on</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Structured comparative analysis of systems logs to diagnose performance problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Nagaraj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Killian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Neville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th USENIX conference on Networked Systems Design and Implementation</title>
		<meeting>the 9th USENIX conference on Networked Systems Design and Implementation</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="26" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Openstack</surname></persName>
		</author>
		<ptr target="http://www.openstack.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Openstack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Heat</surname></persName>
		</author>
		<ptr target="https://www" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">E2: a framework for nfv applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Palkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Jang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Panda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ratnasamy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rizzo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th Symposium on Operating Systems Principles</title>
		<meeting>the 25th Symposium on Operating Systems Principles</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="121" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rightscale</surname></persName>
		</author>
		<ptr target="http://www.rightscale.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Cloudscale: elastic resource scaling for multi-tenant cloud systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Subbiah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilkes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd ACM Symposium on Cloud Computing</title>
		<meeting>the 2nd ACM Symposium on Cloud Computing</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Mdp and machine learning-based cost-optimization of dynamic resource allocation for network function virtualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Services Computing (SCC), 2015 IEEE International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="65" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Suricata</surname></persName>
		</author>
		<ptr target="https://suricata-ids.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Dejavu: accelerating resource allocation in virtualized environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Vasi´cvasi´c</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Novakovi´cnovakovi´c</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Miučin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kosti´ckosti´c</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bianchini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGARCH computer architecture news</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="423" to="436" />
			<date type="published" when="2012" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lau</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1604.01136</idno>
		<title level="m">Online vnf scaling in datacenters</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Sandpiper: Black-box and gray-box resource management for virtual machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shenoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Venkataramani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yousif</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Computer Networks</publisher>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="2923" to="2938" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
