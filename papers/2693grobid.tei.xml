<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:50+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Time-based Coordination in Geo-Distributed Cyber-Physical Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sandeep</forename><surname>D&amp;apos;souza</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ragunathan</forename></persName>
							<affiliation key="aff0">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raj</forename><forename type="middle">)</forename><surname>Rajkumar</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Carnegie Mellon University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Time-based Coordination in Geo-Distributed Cyber-Physical Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Emerging Cyber-Physical Systems (CPS) such as connected vehicles and smart cities span large geographical areas. These systems are increasingly distributed and interconnected. Hence, a hierarchy of cloudlet and cloud deployments will be key to enable scaling, while simultaneously hosting the intelligence behind these systems. Given that CPS applications are often safety-critical, existing techniques focus on reducing latency to provide real-time performance. While low latency is useful, a shared and precise notion of time is key to enabling coordinated action in distributed CPS. In this position paper, we argue for a global Quality of Time (QoT)-based architecture , centered around a shared virtualized notion of time, based on the timeline abstraction [1]. Our architecture allows applications to specify their QoT requirements , while exposing timing uncertainty to the application. The timeline abstraction with the associated knowledge of QoT enables scalable geo-distributed coordination in CPS, while providing avenues for fault tolerance and graceful degradation in the face of adversity.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Cyber-Physical Systems (CPS) <ref type="bibr" target="#b1">[2]</ref> involve the cyber components of computing and communication interacting with and controlling elements in the physical world. Emerging CPS are connected to the Internet, and consist of multiple networked sensing, actuation and computational components spanning large geographical areas. These systems range from small-scale multi-robot systems <ref type="bibr" target="#b2">[3]</ref> <ref type="bibr" target="#b3">[4]</ref>[5] to city-scale connected vehicles and planetary-scale collaborative augmented reality <ref type="bibr" target="#b5">[6]</ref>. The scale of these systems makes the cloud well-suited for enabling coordination among multiple smaller entities <ref type="bibr" target="#b7">[8]</ref>.</p><p>The future holds promise for CPS with possibly even inter-planetary-scale coordination. Consider the recently launched Breakthrough Starshot Initiative <ref type="bibr" target="#b8">[9]</ref>. The initiative proposes to send laser-propelled nano-spacecraft to Alpha Centauri. While there are a number of engineering challenges still to be solved, one can envision a global network of laser arrays being used to send such nano-spacecraft into deep space. To propel fleets of nanospacecrafts, it will be essential to precisely coordinate the direction and intensity of these geographically-distributed laser arrays, while taking into account the effects of the earth's rotation and atmospheric interference.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1: The scale of coordination in time and space</head><p>Reliable planetary-scale coordination requires a shared and precise notion of time <ref type="bibr" target="#b0">[1]</ref>. However, existing cloudenabled CPS design methodologies <ref type="bibr" target="#b9">[10]</ref> focus on reducing the latency of computation, and overlook the importance of shared time. While technologies likes GPS and the Precision Time Protocol <ref type="bibr" target="#b10">[11]</ref> have enabled networked devices to share a precise notion of time, trends like networking delays <ref type="bibr" target="#b11">[12]</ref>, multi-core processors <ref type="bibr" target="#b12">[13]</ref> and virtualization <ref type="bibr" target="#b13">[14]</ref> introduce greater timing uncertainty. This uncertainty is rarely visible to applications, and most systems rely on best-effort time synchronization.</p><p>In <ref type="bibr" target="#b0">[1]</ref>, we introduced the concept of Quality of Time (QoT) as the end-to-end uncertainty in the notion of time delivered to an application by the system. Building on the notion of QoT, the QoT Architecture <ref type="bibr" target="#b0">[1]</ref>, centered around a shared virtualized notion of time, allows applications to specify their timing requirements, while delivering the required QoT and exposing timing uncertainty to applications. We argue that the knowledge of QoT enables applications to adapt and be fault-tolerant, while allowing the system to manage resources efficiently. <ref type="figure">Figure 1</ref> shows CPS applications with diverse QoT requirements, spanning different geographical scales. Hence, we posit that there is a strong need for a QoT-based CPS framework for distributed coordination at scale, with APIs based on a shared notion of time.</p><p>The contributions of this paper are as follows:</p><p>1. We argue for a global shared-time architecture to enable local to planetary-scale coordination in CPS. 2. We illustrate the utility of Quality of Time in providing fault tolerance and reliable performance in geo-distributed and coordinated CPS. 3. We discuss the challenges in extending our timelinebased QoT Architecture in the context of enabling reliable cloud-based coordination at scale in CPS. We build on prior work <ref type="bibr" target="#b0">[1]</ref>, and focus on the requirements and architectural choices which would enable cloudbased scalable coordination in geo-distributed CPS, using a shared notion of time along with the associated QoT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>In this section, we review the trends in cloud-enabled CPS, and describe the QoT Architecture proposed in <ref type="bibr" target="#b0">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Cyber-Physical Systems and the Cloud</head><p>Embedded platforms enable the deployment of computation and data-intensive CPS applications in resourceconstrained environments. These platforms range from low-power micro-controllers <ref type="bibr" target="#b14">[15]</ref> <ref type="bibr" target="#b15">[16]</ref> and sensor nodes <ref type="bibr" target="#b16">[17]</ref>[18] to powerful multi-core platforms <ref type="bibr" target="#b18">[19]</ref>[20] <ref type="bibr" target="#b20">[21]</ref>.</p><p>While these platforms in conjunction with available software enable rapid prototyping and deployment, they are not sufficient to enable the deployment of complex applications at large geographical scale. This is especially true when coordinated action must be performed by multiple distributed nodes <ref type="bibr" target="#b2">[3]</ref>. To achieve coordination at scale, it is essential that an intelligent controller, which may be centralized or distributed, dictate coordination policies and perform the required orchestration.</p><p>The emergence of the public cloud has made possible the deployment of elastically-scalable software services. Public cloud <ref type="bibr">[22]</ref>[23] providers such as Amazon, Microsoft and Google offer a range of virtualized computing services, thus lowering the entry bar for innovation in the software services domain. A similar trend is emerging for the Internet of Things (IoT) <ref type="bibr" target="#b22">[24]</ref>, with major cloud service providers offering specialized services for IoT <ref type="bibr" target="#b23">[25]</ref> <ref type="bibr" target="#b24">[26]</ref>.</p><p>Most commercially available frameworks focus on directly connecting sensing/actuation endpoints to the Internet <ref type="bibr" target="#b23">[25]</ref> <ref type="bibr" target="#b24">[26]</ref>. Given that the number of such endpoints is poised to grow faster than network bandwidth, this approach is inherently not scalable <ref type="bibr" target="#b25">[27]</ref>. Rather, application functionality needs to be partitioned among different components. Additionally, most CPS are safety-critical, and require low-latency computation <ref type="bibr" target="#b1">[2]</ref>. In the mobile computing domain, cloudlets <ref type="bibr" target="#b6">[7]</ref> have been proposed to provide high-performance low-latency computation. Cloudlets are trusted, resource-rich computational clusters that are in close physical proximity to the mobile user <ref type="bibr" target="#b6">[7]</ref>. The low-latency requirements of CPS make the use of a hierarchy of cloudlets and the cloud useful <ref type="bibr" target="#b9">[10]</ref>. Additionally, deploying cloudlets at the edge reduces the upstream bandwidth demand at the cloud <ref type="bibr" target="#b26">[28]</ref>.</p><p>While low latency is critical for real-time performance, very few guarantees on latency can be provided in the Internet <ref type="bibr" target="#b6">[7]</ref>. On the other hand, advances in clock synchronization <ref type="bibr" target="#b10">[11]</ref> have made it possible to provide precise time over a network with good reliability <ref type="bibr" target="#b27">[29]</ref>. Programming applications based on a shared notion of time enables distributed components to specify timing constraints in terms of the shared notion of time, enabling fine-grained coordination with fewer messages exchanged <ref type="bibr" target="#b28">[30]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>System Services</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Userspace Kernel</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Synchronization</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Timeline-based QoT Architecture</head><p>As proposed in <ref type="bibr" target="#b0">[1]</ref>, a timeline is a virtual reference time base that is not necessarily tied to a specific reference device or time system. This abstraction enables developers to implement coordinated applications easily. Consider an application that needs to perform coordinated actions by its distributed components. All of these components bind to a common timeline, each specifying its respective QoT requirements. The timeline abstraction <ref type="bibr" target="#b0">[1]</ref> abstracts away low-level synchronization details, while the underlying framework orchestrates the clocksynchronization services and clocks to ensure that QoT requirements are met, while making the actually achieved QoT visible to the application. This is fundamentally different from existing best-effort clock-synchronization techniques <ref type="bibr" target="#b10">[11]</ref> <ref type="bibr" target="#b11">[12]</ref>. Application-specified QoT requirements open up the possibility of network and system orchestration to ensure that application requirements are met, while managing resources efficiently.</p><p>The QoT Architecture supports multiple timelines. This enables different coordinating sub-groups with varying QoT requirements to each have their own virtual time reference and co-exist on the same infrastructure <ref type="bibr" target="#b0">[1]</ref>. The QoT Architecture consists of three distinct components:</p><p>1. Clocks are used to expose timekeeping hardware, and provide timekeeping and time-stamping capabilities. Clocks also expose their parameters such as accuracy, precision and drift, which enable uncertainty calculations.</p><p>2. System Services are responsible for distributing timeline meta-data, message passing, quantifying timing uncertainties, and synchronizing clocks across nodes.</p><p>3. QoT Core acts as a bridge between all the system components, applications and the operating system. It is responsible for application scheduling as well as maintaining synchronization and timeline state.</p><p>The architectural components present on each node along with their interactions are illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>. Based on this architecture, we developed a prototype QoT Stack for Linux <ref type="bibr" target="#b0">[1]</ref>, which focused on implementing necessary functionality over a Local-Area Network (LAN). The existing version of our stack supports the Beaglebone Black <ref type="bibr" target="#b20">[21]</ref> embedded platform, with clocksynchronization support for PTP <ref type="bibr" target="#b10">[11]</ref> and NTP <ref type="bibr" target="#b11">[12]</ref> over Ethernet. The stack consists of kernel modules and system services, and does not modify the Linux kernel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Coordination in Cyber-Physical Systems</head><p>This section outlines the key concerns to be addressed from the standpoint of enabling coordination in CPS.</p><p>1. Scalability: As illustrated in <ref type="figure">Figure 1</ref>, many emerging CPS applications will scale large geographical areas. Cisco predicts that the number of connected sensing/actuation endpoints will exceed 50 billion by 2020 <ref type="bibr" target="#b29">[31]</ref>. We believe that CPS frameworks which support coordinated action among a large number of geo-distributed components, will enable new classes of applications.</p><p>2. Fault Tolerance and Reliability: Most CPS applications are safety-critical <ref type="bibr" target="#b1">[2]</ref>, making fault tolerance necessary. In the software services domain, fault tolerance is concerned with reducing down time, and preventing information loss <ref type="bibr" target="#b30">[32]</ref>. Hence, most services are replicated across different fault-tolerance domains. Most CPS also utilize replication techniques to ensure fault tolerance. However, CPS interact with the real world, where the safety of humans and infrastructure is critical. Therefore, CPS may also rely on analytical redundancy <ref type="bibr" target="#b31">[33]</ref>, involving graceful degradation modes. When multiple components fail, the system must be able to gracefully degrade and stop without causing any harm <ref type="bibr" target="#b32">[34]</ref>.</p><p>3. Security: The presence of malicious nodes can severely impact local behavior and global coordination, which can have consequences in safety-critical applications. As compared to software services, which are hosted in a secure data center, many CPS have physical nodes deployed in public spaces. Hence, malicious nodes need to be detected and isolated from the coordination subgroup, without violating safety constraints.</p><p>4. Ease of Programmability: In the software services domain, the availability of cloud APIs enables developers to easily deploy and elastically scale applications in the cloud. Similarly, the emergence of frameworks like Map-Reduce <ref type="bibr" target="#b33">[35]</ref> and Spark <ref type="bibr" target="#b34">[36]</ref> have enabled scalable parallel computation over clusters in the cloud. In the CPS domain, enabling coordination across heterogeneous platforms, ranging from sensor networks to the cloud, is a challenge. Hence, there is a need for a framework, which is easy to use, and has expressive power to support coordinated CPS from local to planetary scales.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Case for Shared Time and QoT</head><p>We now argue for designing coordinated CPS using a shared notion of time with the associated knowledge of QoT. In distributed software systems, a shared notion of time enables increased performance and better coordination, along with decreasing the number of messages which need to be exchanged <ref type="bibr" target="#b28">[30]</ref>. However, there are inherent uncertainties associated with synchronizing clocks over a network. Hence, in <ref type="bibr" target="#b28">[30]</ref>, Liskov reasons that systems should rely on clock synchronization for performance but not correctness. This is true for most software systems. For example, reducing timing uncertainty decreases the transaction commit wait in Spanner, leading to better performance <ref type="bibr" target="#b27">[29]</ref>. However, in CPS, the uncertainty tolerances are dictated by the application and the environment. If the required QoT cannot be met, then the application should be aware of it, and gracefully degrade to satisfy safety and reliability requirements.</p><p>We highlight the benefits of coordination using a shared notion of time by presenting an emerging CPS application utilizing an idealized solution called TimeNet. Subsequently, we present the practical challenges in enabling scalable coordination in CPS using shared time and QoT.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Connected Vehicles using TimeNet</head><p>Coordinating fleets of connected autonomous vehicles for city-wide dynamic traffic management is an example of a geo-distributed application which can benefit from using a shared notion of time. The proposed application hierarchy is illustrated in <ref type="figure" target="#fig_1">Figure 3</ref>, and consists of autonomous vehicles, Vehicle-to-Infrastructure (V2I) nodes <ref type="bibr" target="#b38">[40]</ref>, cloudlets and the cloud.</p><p>In an ideal world, we can assume that all components of this application are connected to a network which provides instantaneous access to an ideal source of time with no associated uncertainty. For the sake of simplicity, let's call this hypothetical network TimeNet. Let's assume that TimeNet can be used to perfectly time-stamp all events and messages with zero uncertainty. Hence, using TimeNet, a unique total ordering on all events can be derived.</p><p>In the context of our application, the infrastructure nodes can precisely measure the location of the vehicles, along with the exact timestamp associated with a vehicle's presence at that location. This timestamped information can be then forwarded to a nearby cloudlet, which receives state information from multiple infrastructure nodes in a small geographical area. Multiple such cloudlets can then forward their respective state information to the cloud, which sits atop the application hierarchy. In this hierarchy, the cloud is responsible for shaping traffic flow at a macroscopic level. Based on the macroscopic policy, the cloudlets make local decisions for their respective regions. Lastly, infrastructure nodes decide microscopic traffic policy and convey instructions to the autonomous vehicles, which implement these instructions.</p><p>In an ideal world, accurate information can be inferred from these timestamped events, which can be used to formulate plans of action, such that vehicles coordinate their actions using this ideal notion of time. Thus, vehicular traffic is dynamically managed at city scale. In the worst case, if timing constraints are violated or messages delayed, then by using the current time, components can detect failures, and take corrective action <ref type="bibr" target="#b28">[30]</ref>.</p><p>Unfortunately, a perfect source of time does not exist, and practical systems introduce uncertainty in timing measurements. Hence, to determine the validity of timestamps, the knowledge of its associated uncertainty is essential. Based on this uncertainty information, coordination policies can order events with different degrees of confidence. If the uncertainty exceeds tolerable limits, systems can fail-over or gracefully degrade. For example, in the context of the dynamic traffic management application, if the uncertainty exceeds tolerable limits, the coordination policy can instruct all or some vehicles to temporarily change their speeds, or come to a safe halt.</p><p>Exposing the notion of QoT to applications also allows timing requirements to be explicitly specified. This enables the system to optimize for application QoT requirements, and manage resources efficiently. Hence, in the context of CPS, synchronized clocks along with QoT can deliver both performance and reliability.</p><p>The present-day GPS is a close approximation to TimeNet, ideally providing synchronization in the order of tens of nanoseconds. However, GPS is not accesible indoors and inaccurate in urban canyons <ref type="bibr" target="#b35">[37]</ref>. This limits its use in many applications <ref type="bibr" target="#b36">[38]</ref>. Hence, a practical realization of TimeNet may involve multiple outdoor GPS receivers equipped with chip-scale atomic clocks <ref type="bibr" target="#b37">[39]</ref>. These receivers can distribute accurate time to subscribers both wirelessly and over the Internet <ref type="bibr" target="#b11">[12]</ref>. To support the notion of QoT, it is crucial that each node in TimeNet quantify the uncertainty in its notion of time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">A QoT-based CPS-Cloud Architecture</head><p>We now address the various challenges involved in designing a practical extension of our QoT Architecture, in the context of using a hierarchy of cloudlets and the cloud as an enabler of scalable CPS coordination.</p><p>1. Global Timeline Service: The timeline abstraction is key to forming different scalable coordination subgroups on the same infrastructure. Additionally, a timeline enables different coordinating components of an application to specify their QoT requirements and subscribe to a shared notion of time. These different components may be running on nodes that are interconnected by heterogeneous networking technology. For example, in the dynamic traffic management application shown in <ref type="figure" target="#fig_1">Figure 3</ref>, the vehicles and the infrastructure nodes may be connected by a Dedicated Short-Range Communications (DSRC) V2I network <ref type="bibr" target="#b38">[40]</ref>. On the other hand, the infrastructure nodes, cloudlets and the cloud are connected by the Internet (using 4G/5G, Wi-Fi or Ethernet). Hence, there is a need for a global timeline service, which provides a common protocol to coordinate these components interconnected by heterogeneous technologies.</p><p>2. Scalable Synchronization Service: In CPS, it is common to find platforms ranging from ARM-based micro-controllers to server-grade x86 machines. These platforms have different resource constraints and capabilities. Hence, while most edge devices use wireless networking technologies like Wi-Fi, BLE <ref type="bibr" target="#b39">[41]</ref>, UWB <ref type="bibr">[42]</ref> and Zigbee <ref type="bibr" target="#b40">[43]</ref>, gateways and cloudlets have both wireless and wired links, and servers in the cloud mostly rely on wired technologies like Ethernet. The plethora of these networking technologies implies that multiple clock synchronization protocols, such as NTP <ref type="bibr" target="#b11">[12]</ref>, PTP <ref type="bibr" target="#b10">[11]</ref>, RBS <ref type="bibr" target="#b41">[44]</ref> and FTSP <ref type="bibr" target="#b42">[45]</ref>, might be in use within the same distributed application. Additionally, distributed application components will have different QoT requirements. For example, tight clock synchronization is required among the sensing/actuation endpoints, while computational components (cloudlets and the cloud) have less stringent QoT requirements. These factors make maintaining a shared notion of time, as well as calculating and transferring timing uncertainty information across these multiple networking domains, challenging. Given the heterogeneity in applications, platforms, networks and protocols, there is a need for a service which orchestrates the system to ensure that QoT guarantees are met.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Fault-Tolerance Support:</head><p>The notion of QoT will facilitate fault tolerance. Hence, it is crucial that each coordinating component maintain its own notion of QoT, based on the synchronization and system uncertainties. Thus, during network or synchronization outages, each component can calculate the delivered QoT, using previously computed worst-case uncertainty estimates <ref type="bibr" target="#b0">[1]</ref>. When the calculated QoT exceeds the specified tolerance, or timing constraints are violated, application components can fail-over to a replica or gracefully degrade.</p><p>4. Pub/Sub Messaging: The publish/subscribe paradigm has emerged as the method of choice for communicating among coordinating nodes <ref type="bibr" target="#b43">[46]</ref>, and is commonly used for coordination in many real-world applications <ref type="bibr" target="#b32">[34]</ref> <ref type="bibr" target="#b44">[47]</ref>. Additionally, publish/subscribe technologies support a variety of communication media, and have been shown to scale. Hence, in our architecture, we allow all components bound to a timeline to publish their messages to all other nodes. Individual nodes can subscribe to subsets of messages based on content or type.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Applications</head><p>QoT Architecture</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Distributed CPS Infrastructure</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Required QoT</head><p>Global  <ref type="bibr" target="#b45">[48]</ref>. Virtualization adds additional timing uncertainty due to relatively high jitter in clock-read and timer-interrupt latencies <ref type="bibr" target="#b13">[14]</ref>. Thus, scheduling computations precisely on global time in a virtualized environment is challenging. Additionally, the possibility of VM/container migration raises the question of storing synchronization state in the hyperviser or the guest <ref type="bibr" target="#b13">[14]</ref>. Hence, the use of virtualization in the cloud presents a challenge in terms of observing and guaranteeing the QoT delivered to an application.</p><p>6. QoT-Aware Cloud Scheduling: The presence of multiple virtualized units running applications with different QoT requirements adds an additional layer of complexity to the QoT-aware cloud scheduling problem. We envision our QoT scheduler working in conjunction with existing multi-level scheduling frameworks <ref type="bibr" target="#b46">[49]</ref> <ref type="bibr" target="#b47">[50]</ref>. Hence, there is a need to provide probabilistic QoT-based Service Level Agreements (SLAs). Additionally, as indicated in the case of Spanner <ref type="bibr" target="#b27">[29]</ref>, modern data centers may have access to a GPS receiver for precise timing. We believe that placing a VM or container on a host in proximity to this receiver would enable a higher level of QoT. Hence, the QoT requirements of applications would dictate the host to which they are allocated.</p><p>7. Security: Given that our architecture involves coordination between sets of nodes, we envision using publickey based authentication <ref type="bibr" target="#b48">[51]</ref>. Only nodes with appropriate public keys can join the timeline. Additionally, messages can be encrypted using this key.</p><p>8. Coordination APIs: To enable distributed coordination at scale, it is essential to have a core set of APIs that are independent of the platform and OS. At the same time, the APIs should be extensible to support platformspecific extensions. The APIs enable applications to (i) bind/unbind from a timeline, (ii) specify/update their QoT requirements, (iii) schedule computation, sensing and actuation based on shared time, (iv) timestamp events, and (v) pub/sub messaging for coordination. All API calls return the QoT actually delivered to the application, providing the ability to adapt to changes in QoT. <ref type="figure" target="#fig_2">Figure 4</ref> illustrates how the QoT Architecture can enable a host of coordinated CPS applications, running on distributed heterogeneous networked infrastructure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>Most of the existing work in the literature on cloudenabled CPS, focus on reducing latency, by bringing resource-rich computing closer to the edge of the network <ref type="bibr" target="#b6">[7]</ref>[10] <ref type="bibr" target="#b25">[27]</ref> <ref type="bibr" target="#b49">[52]</ref>. All these frameworks focus on proper partitioning of functionality among different tiers of nodes, ranging from the cloud to cloudlets, gateways and edge devices. We believe that using a shared notion of time along with the knowledge of QoT is complementary to these techniques. While low latency is crucial to achieve real-time performance, using shared time provides scalability, while the knowledge of QoT provides applications the ability to adapt, and be fault-tolerant.</p><p>The idea of using a shared notion of time in distributed systems is not new. In <ref type="bibr" target="#b28">[30]</ref>, Liskov analyzed the performance benefits of using clock synchronization in many distributed algorithms. In the embedded domain, PTIDES <ref type="bibr" target="#b50">[53]</ref> provides a framework to model, design and deploy time-critical embedded applications, using a shared notion of time. However, these prior work do not consider the utility of the knowledge of timing uncertainty, and rely on best-effort clock synchronization. While Google Spanner utilizes uncertainty information for achieving global-scale consistency and performance <ref type="bibr" target="#b27">[29]</ref>, the use of uncertainty as an enabler of performance, scalability and fault tolerance has not been explored.</p><p>The use of cloudlets and the cloud entail the use of virtualized computing units which introduce additional timing uncertainty. In <ref type="bibr" target="#b13">[14]</ref>, Broomhead et al. experimentally characterized the timekeeping properties of the Xen paravirtualization platform. To the best of our knowledge, no similar study exists in the context of hardware-accelerated virtualization and container-based frameworks. Additionally, scheduling virtualized units based on application QoT requirements needs to be explored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>Deploying Cyber-Physical Systems at scale is of increasing interest to researchers. In this position paper we highlight the merits of designing scalable coordinated CPS using a shared notion of time, along with the associated knowledge of Quality of Time. We identify the challenges involved in designing a practical QoT-based CPS framework, and believe that by incorporating the proposed design choices, our stack can support cloudlets and the cloud to achieve geo-distributed CPS coordination at scale. Additionally, we believe that our architecture would also be useful for distributed software systems <ref type="bibr" target="#b27">[29]</ref> which can reap scalability and better performance using shared time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discussion</head><p>Our position paper argues for coordination in cloudenabled geo-distributed Cyber-Physical Systems using a shared notion of time, along with the associated idea of Quality of Time. Recent trends in networking hardware and clock synchronization, coupled with the availability of chip-scale atomic clocks and low-cost good-quality oscillators, have enabled distributed nodes to precisely synchronize their clocks. Hence, we posit that the use of shared-time with the added notion of QoT, will enable planetary-scale coordination, while providing additional avenues for application-level fault tolerance. This approach is fundamentally different from traditional techniques, which mostly rely on low-latency message passing to achieve coordination. We believe that this is of significant interest to the research community.</p><p>We also illustrate the design choices needed to realize a practical global shared-time based framework, to support coordination in CPS, ranging from local to planetary scales. This paper does not delve into the intricate details of our proposed framework, and focuses on the high-level requirements needed to achieve scalable coordination. Future work includes overcoming multiple challenges related to QoT-based cloud scheduling and system orchestration. Additionally, another area of future research is the possibility of our framework being useful for enabling better performance and scalability in software systems.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Timeline-based QoT Architecture [1]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 : Hierarchy of the dynamic traffic manage- ment application</head><label>3</label><figDesc>Figure 3: Hierarchy of the dynamic traffic management application</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: A QoT-based CPS-Cloud Architecture 5. Virtualization Support: Most clouds and cloudlets provide virtualized units of computing, which may be Virtual Machines (VMs) or containers [48]. Virtualization adds additional timing uncertainty due to relatively high jitter in clock-read and timer-interrupt latencies [14]. Thus, scheduling computations precisely on global time in a virtualized environment is challenging. Additionally, the possibility of VM/container migration raises the question of storing synchronization state in the hyperviser or the guest [14]. Hence, the use of virtualization in the cloud presents a challenge in terms of observing and guaranteeing the QoT delivered to an application. 6. QoT-Aware Cloud Scheduling: The presence of multiple virtualized units running applications with different QoT requirements adds an additional layer of complexity to the QoT-aware cloud scheduling problem. We envision our QoT scheduler working in conjunction with existing multi-level scheduling frameworks [49][50]. Hence, there is a need to provide probabilistic QoT-based Service Level Agreements (SLAs). Additionally, as indicated in the case of Spanner [29], modern data centers may have access to a GPS receiver for precise timing. We believe that placing a VM or container on a host in proximity to this receiver would enable a higher level of QoT. Hence, the QoT requirements of applications would dictate the host to which they are allocated. 7. Security: Given that our architecture involves coordination between sets of nodes, we envision using publickey based authentication [51]. Only nodes with appropriate public keys can join the timeline. Additionally, messages can be encrypted using this key. 8. Coordination APIs: To enable distributed coordination at scale, it is essential to have a core set of APIs that are independent of the platform and OS. At the same time, the APIs should be extensible to support platformspecific extensions. The APIs enable applications to (i) bind/unbind from a timeline, (ii) specify/update their QoT requirements, (iii) schedule computation, sensing and actuation based on shared time, (iv) timestamp events, and (v) pub/sub messaging for coordination. All API calls return the QoT actually delivered to the application, providing the ability to adapt to changes in QoT.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors would like to thank Fatima Anwar, Andrew Symington, Adwait Dongare, Anthony Rowe and Mani Srivastava for their efforts on the QoT Stack for Linux. This research is funded in part by the National Science Foundation under award CNS-1329644. The U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright notation thereon. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of NSF, or the U.S. Government.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Timeline: An Operating System Abstraction for Time-Aware Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Anwar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>D&amp;apos;souza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Symington</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dongare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rajkumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rowe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Real-Time Systems Symposium</title>
		<meeting>of IEEE Real-Time Systems Symposium</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">CyberPhysical Systems: The Next Computing Revolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rajkumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stankovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Design Automation Conference</title>
		<meeting>of Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Formation control of a large group of UAVs with safe path planning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">G</forename><surname>Regula</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Mediterranean Conference on Control &amp; Automation</title>
		<meeting>of IEEE Mediterranean Conference on Control &amp; Automation</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Optimization and Coordinated Autonomy in Mobile Fulfillment Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Enright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wurman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of AAAI Workshop</title>
		<meeting>of AAAI Workshop</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Cloud computing for industrial automation systems -A comprehensive overview</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Givehchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Trsek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jasperneite</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Conference on Emerging Technologies &amp; Factory Automation</title>
		<meeting>of IEEE Conference on Emerging Technologies &amp; Factory Automation</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">SURGNET: An Integrated Surgical Data Transmission System for Telesurgery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Natarajan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ganz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Journal of Telemedicine and Applications</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">435849</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Case for VM-Based Cloudlets in Mobile Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Satyanarayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Pervasive Computing</title>
		<imprint>
			<date type="published" when="2009-12" />
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Vision of Cyber-Physical Cloud Computing for Smart Networked Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Simmons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIST Interagency/Internal Report</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">7951</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
		<ptr target="https://breakthroughinitiatives.org/Initiative/3" />
	</analytic>
	<monogr>
		<title level="j">Starshot Breakthrough Initiative</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Fog computing and its role in the Internet of Things</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bonomi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Milito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Addepalli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the MCC workshop on Mobile cloud computing</title>
		<meeting>of the MCC workshop on Mobile cloud computing</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">IEEE 1588-standard for a precision clock synchronization protocol for networked measurement and control systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Eidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Weibel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mohl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Instrumentation and Measurement Society Standard</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Internet time synchronization: the network time protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Mills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Communication</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">39</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Analysing the fidelity of measurements performed with hardware performance counters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kuperberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Reussner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the ACM/SPEC International Conference on Performance engineering</title>
		<meeting>of the ACM/SPEC International Conference on Performance engineering</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Virtualize everything but time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Broomhead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cremean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ridoux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Veitch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of OSDI</title>
		<meeting>of OSDI</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K22</forename><surname>Nxp Kinetis</surname></persName>
		</author>
		<ptr target="http://www.nxp.com/assets/documents/data/en/fact-sheets/KINK2XFS.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Arduino</surname></persName>
		</author>
		<ptr target="https://www.arduino.cc/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">FireFly: A Time Synchronized Real-Time Sensor Networking Platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rowe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mangharam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rajkumar</surname></persName>
		</author>
		<ptr target="http://nanork.org/attachments/148/nrk-chapter06.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Experiences from a Decade of TinyOS Development</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Levis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of OSDI</title>
		<meeting>of OSDI</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<ptr target="http://magazine.odroid.com/wp-content/uploads/odroid-xu4-user-manual.pdf" />
	</analytic>
	<monogr>
		<title level="j">ODROID XU-4</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title/>
		<ptr target="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/" />
	</analytic>
	<monogr>
		<title level="j">Raspberry Pi</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Making Infrastructure-as-a-Service in the Enterprise a Reality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beaglebone</forename><surname>Black</surname></persName>
		</author>
		<ptr target="http://www.oracle.com/us/products/enterprise-manager/infrastructure-as-a-service-wp-1575856.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Platform-as-a-Service</title>
		<ptr target="http://www.intel.com/content/dam/www/public/us/en/documents/white-papers/cloud-computing-paas-cloud-demand-paper.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<ptr target="http://www.cisco.com/c/dam/en_us/about/ac79/docs/innov/IoT_IBSG_0411FINAL.pdf" />
		<title level="m">The Internet of Things: How the Next Evolution of the Internet Is Changing Everything</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title/>
		<ptr target="https://aws.amazon.com/iot" />
	</analytic>
	<monogr>
		<title level="j">AWS Internet of Things</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<ptr target="https://www.microsoft.com/en-us/cloud-platform/internet-of-things-azure-iot-suite" />
	</analytic>
	<monogr>
		<title level="j">Azure IoT Suite</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">The Cloud is Not Enough: Saving IoT from the Cloud</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HotCloud</title>
		<meeting>of HotCloud</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Scalable Crowd-Sourcing of Video from Mobile Devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Simoens</surname></persName>
		</author>
		<idno>CMU-CS-12-147</idno>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
<note type="report_type">Tech Report</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Spanner: Google&apos;s globally distributed database</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Corbett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Transactions on Computer Systems (TOCS)</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">31</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Practical Uses of Synchronized Clocks in Distributed Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Liskov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM symposium on Principles of distributed computing</title>
		<meeting>of ACM symposium on Principles of distributed computing</meeting>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">The Internet of Things: How the next evolution of the Internet is changing everything</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>CISCO white paper</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Implementing Fault-Tolerant Services Using the State Machine Approach: A Tutorial</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schneider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computing Surveys</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">22</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Analytical Redundancy Methods in Fault Detection and Isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gertler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Preprints of IFAC/IMACS Symposium on Fault Detection, Supervision and Safety for Technical Processes</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Towards a Viable Autonomous Driving Research Platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Intelligent Vehicles Symposium</title>
		<meeting>of IEEE Intelligent Vehicles Symposium</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">MapReduce: Simplified Data Processing on Large Clusters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ghemawat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Prov. of OSDI</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Spark: Cluster Computing with Working Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zaharia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chowdhury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HotCloud</title>
		<meeting>of HotCloud</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Vision: Cloud and Crowd Assistance for GPS Urban Canyons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM MCS</title>
		<meeting>of ACM MCS</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Beacon Placement for Range-Based Indoor Localization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Rajagopal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chayapathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sinopoli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rowe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of International Conference on Indoor Positioning and Indoor Navigation</title>
		<meeting>of International Conference on Indoor Positioning and Indoor Navigation</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
				<ptr target="https://www.microsemi.com/products/timing-synchronization-systems/embedded-timing-solutions/components/sa-45s-chip-scale-atomic-clock" />
		<title level="m">Quantum SA.45s Chip Scale Atomic Clock</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sae J2735</forename><surname>Standard</surname></persName>
		</author>
		<ptr target="https://ntl.bts.gov/lib/51000/51100/51167/DE156ECC.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Introduction to Bluetooth Low Energy</title>
		<ptr target="https://cdn-learn.adafruit.com/downloads/pdf/introduction-to-bluetooth-low-energy.pdf[42" />
	</analytic>
	<monogr>
		<title level="m">Comparison of Narrowband and Ultra Wideband Channels</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>Decawave White Paper</note>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Zigbee: Setting Standards for Energy-Efficient Control Networks</title>
		<imprint>
			<date type="published" when="2011" />
			<publisher>Schneider Electric White Paper</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Fine-Grained Network Time Synchronization using Reference Broadcasts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Elson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Girod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Estrin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of OSDI</title>
		<meeting>of OSDI</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">The Flooding Time Synchronization Protocol</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Maroti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kusy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Simon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ledeczi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SenSys</title>
		<meeting>of ACM SenSys</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title/>
		<ptr target="http://www.omg.org/spec/DDS/" />
	</analytic>
	<monogr>
		<title level="j">OMG Data Distribution Service Standard</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">Delivering High-Performance, Scalable and Safe Data Distribution in Next Generation Air Traffic Control and Management</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>PrismTech White Paper</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">An Updated Performance Comparison of Virtual Machines and Linux Containers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Felter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Technical Report</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hindman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of NSDI</title>
		<meeting>of NSDI</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Apache Hadoop YARN: yet another resource negotiator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vavilapalli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Annual Symposium on Cloud Computing</title>
		<meeting>of the Annual Symposium on Cloud Computing</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Practical Cryptography</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schneier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Intel Architecture at the Edge for Greater Flexibility and Scalability</title>
		<ptr target="http://www.intel.com/content/dam/www/public/us/en/documents/solution-briefs/communicationsintel-architecture-brief.pdf" />
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Execution Strategies for PTIDES, a Programming Model for Distributed Embedded Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Matic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Derler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE RealTime and Embedded Technology and Applications Symposium</title>
		<meeting>of the IEEE RealTime and Embedded Technology and Applications Symposium</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
