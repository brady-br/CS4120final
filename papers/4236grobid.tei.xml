<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:06+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Secure Multi-party Computation of Differentially Private Median Secure Multi-party Computation of Differentially Private Median</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 12-14, 2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Böhler</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Florian Kerschbaum</orgName>
								<orgName type="department" key="dep2">SAP Security Research</orgName>
								<orgName type="institution" key="instit1">SAP Security Research</orgName>
								<orgName type="institution" key="instit2">University of Waterloo</orgName>
								<orgName type="institution" key="instit3">University of Waterloo</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Böhler</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Florian Kerschbaum</orgName>
								<orgName type="department" key="dep2">SAP Security Research</orgName>
								<orgName type="institution" key="instit1">SAP Security Research</orgName>
								<orgName type="institution" key="instit2">University of Waterloo</orgName>
								<orgName type="institution" key="instit3">University of Waterloo</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Florian</forename><surname>Kerschbaum</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Florian Kerschbaum</orgName>
								<orgName type="department" key="dep2">SAP Security Research</orgName>
								<orgName type="institution" key="instit1">SAP Security Research</orgName>
								<orgName type="institution" key="instit2">University of Waterloo</orgName>
								<orgName type="institution" key="instit3">University of Waterloo</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Secure Multi-party Computation of Differentially Private Median Secure Multi-party Computation of Differentially Private Median</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 29th USENIX Security Symposium</title>
						<meeting>the 29th USENIX Security Symposium						</meeting>
						<imprint>
							<date type="published">August 12-14, 2020</date>
						</imprint>
					</monogr>
					<note>This paper is included in the Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this work, we consider distributed private learning. For this purpose, companies collect statistics about telemetry, usage and frequent settings from their users without disclosing individual values. We focus on rank-based statistics, specifically, the median which is more robust to outliers than the mean. Local differential privacy, where each user shares locally perturbed data with an untrusted server, is often used in private learning but does not provide the same accuracy as the central model, where noise is applied only once by a trusted server. Existing solutions to compute the differentially private median provide good accuracy only for large amounts of users (local model), by using a trusted third party (central model), or for a very small data universe (secure multi-party computation). We present a multi-party computation to efficiently compute the exponential mechanism for the median, which also supports, e.g., general rank-based statistics (e.g., p th-percentile, interquartile range) and convex optimizations for machine learning. Our approach is efficient (practical running time), scaleable (sublinear in the data universe size) and accurate, i.e., the absolute error is smaller than comparable methods and is independent of the number of users, hence, our protocols can be used even for a small number of users. In our experiments we were able to compute the differentially private median for 1 million users in 3 minutes using 3 semi-honest computation parties distributed over the Internet.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>We consider the problem of distributed private learning. Specifically, how multiple users can compute rank-based statistics over their sensitive data, with high accuracy, a strong privacy guarantee, and without resorting to trusted third parties. Rank-based statistics include the median, p th -percentiles, and interquartile ranges, and we present a protocol to compute the differentially private median, which is extensible to any k th ranked element. We use differential privacy (DP) <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b27">28]</ref>, a rigorous privacy notion, restricting what can be inferred about any individual in the data, used by Google <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b30">31]</ref>, Apple <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b65">66]</ref>, Microsoft <ref type="bibr" target="#b22">[23]</ref> and the US Census bureau <ref type="bibr" target="#b1">[2]</ref>. The median is a robust statistical method used to represent a "typical" value from a data set, e.g., insurance companies use the median life expectancy to adjust insurance premiums.</p><p>Previous work on DP median computation either require a large number of users to be accurate <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b62">63]</ref>, rely on a trusted third party <ref type="bibr" target="#b50">[51,</ref><ref type="bibr" target="#b57">58]</ref>, or cannot scale to large universe or data set sizes <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b58">59]</ref>. We present a novel alternative that is superior in accuracy, requires no trusted party, and is efficiently computable. Our protocol provides high accuracy even for a small number of users. Note that small sample size is the most challenging regime for DP <ref type="bibr" target="#b55">[56]</ref>. Even Google's large-scale data collection (billions of daily reports via <ref type="bibr" target="#b30">[31]</ref>) is insufficient if the statistical value of interest is not a heavy hitter <ref type="bibr" target="#b14">[15]</ref>, e.g., the median.</p><p>We present a secure multi-party computation (MPC) of the exponential mechanism <ref type="bibr" target="#b51">[52]</ref> for decomposable aggregate functions. Such functions, as used in MapReduce-style algorithms <ref type="bibr" target="#b21">[22]</ref>, allow efficient aggregation in parallel over distributed data sets, and application examples include convex loss functions and rank-based statistics. The exponential mechanism can implement any differentially private algorithm by computing selection probabilities for all possible output elements. Its computation complexity is linear in the size of the data universe <ref type="bibr" target="#b51">[52]</ref> and efficiently sampling it is non-trivial <ref type="bibr" target="#b28">[29]</ref>. Also, the exponential mechanism requires exponentiations, increasing the MPC complexity. However, as it is a universal mechanism, a scalable, secure implementation can be widely applied. Eigner et al. <ref type="bibr" target="#b29">[30]</ref> also implement the exponential mechanism in MPC. They compute the exponential function with MPC, whereas we provide a more efficient alternative for decomposable functions. Their approach, while more general, is only practical for a universe size of 5 elements, whereas our protocol is sublinear in the size of the universe and handles billions of elements. We achieve this via divide-and-conquer and optimizing our protocol for decomposable functions that enable efficient alternatives to expensive secure computation of exponentiations <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b42">43]</ref>.</p><p>In summary, our contribution is a protocol for securely computing the differentially private median</p><p>• with high accuracy even for small data sets (few users) and large universe sizes (see Section 3.4 for our theoretical errors bounds, Appendix F for a comparison of that bound to related work, and Section 5.3 for empirical comparison to related work),</p><p>• that is efficient (practical running time for millions of users) and scalable (sublinear in the data universe size) (Sections 4, 5),</p><p>• secure in the semi-honest model with an extension to the malicious model (Section 4.6) and outputs the differentially private median according to the exponential mechanism by McSherry and Talwar <ref type="bibr" target="#b51">[52]</ref>,</p><p>• evaluated using an implementation in the SCALE-MAMBA framework <ref type="bibr" target="#b5">[6]</ref>, for 1 million users using 3 semi-honest computation parties with a running time of seconds in a LAN, and 3 minutes in a WAN with 100 ms network delay, 100 Mbits/s bandwidth (Section 5).</p><p>The remainder of this paper is organized as follows: In Section 2 we describe preliminaries for our protocol. In Section 3 we explain our protocol and introduce definitions. We present our protocol and implementation details for the secure multi-party computation of the differentially private median in Section 4. We provide a detailed performance evaluation in Section 5, describe related work in Section 6 and conclude in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>In the following, we introduce preliminaries for differential privacy and secure multi-party computation.</p><p>We consider a set of input parties P = {P 1 , . . . , P n }, where party P i holds a datum d i , and D denotes their combined data set. We model a data set as D = {d 1 , . . . , d n } ∈ U n with underlying data universe U. We also consider m semi-honest computation parties, e.g., m ∈ {3, 6, 10}, who run the computation on behalf of the input parties. To simplify presentation, we assume the size n of D to be even, which can be ensured by padding. Then, the median's position in sorted D is n/2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Differential Privacy</head><p>Differential privacy (DP), introduced by Dwork et al. <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b27">28]</ref>, is a strong privacy guarantee restricting what a mechanism operating on a sensitive data set can output. Informally, when the input data set changes in a single element, the effect on the output is bounded. The formal definition is as follows:</p><p>Definition 1 (Differential Privacy). A mechanism M satisfies ε-differential privacy, where ε ≥ 0, if for all neighboring data sets D D , i.e., data sets differing in a single entry, and all sets S ⊆ Range(M )</p><formula xml:id="formula_0">Pr[M (D) ∈ S] ≤ exp(ε) · Pr M (D ) ∈ S ,</formula><p>where Range(M ) denotes the set of all possible outputs of mechanism M .</p><p>The above definition holds against an unbounded adversary, however, due to our use of cryptography we assume a computationally bounded adversary. A formal definition is presented in Appendix A based on MPC preliminaries from Section 2.2.</p><p>Randomization is essential for differential privacy to hide an individual's inclusion in the data <ref type="bibr" target="#b28">[29]</ref>. Noise, added to the function output, is one way to achieve differential privacy, e.g., via the Laplace mechanism <ref type="bibr" target="#b28">[29]</ref>:</p><formula xml:id="formula_1">Definition 2 (Laplace Mechanism). Given a function f : U n → R with sensitivity max ∀DD | f (D) − f (D )|, privacy</formula><p>parameter ε, and a database D, the Laplace mechanism releases f (D) + r, where r is drawn from the Laplace distribution (centered at 0) with density ε</p><formula xml:id="formula_2">2∆ f e −ε ∆ f .</formula><p>The alternative to additive noise is probabilistic output selection via the exponential mechanism, introduced by McSherry and Talwar <ref type="bibr" target="#b51">[52]</ref>. The exponential mechanism expands the application of differential privacy to functions with nonnumerical output, or when the output is not robust to additive noise, e.g., the median function <ref type="bibr" target="#b47">[48]</ref>. The mechanism is exponentially more likely to select "good" results where "good" is quantified via a utility function u(D, r) which takes as input a database D ∈ U n , and a potential output r ∈ R from a fixed set of arbitrary outputs R . Informally, higher utility means the output is more desirable and its selection probability is increased accordingly.</p><p>Definition 3 (Exponential Mechanism). For any utility function u : (U n × R ) → R and a privacy parameter ε, the exponential mechanism EM ε u (D) outputs r ∈ R with probability proportional to exp( εu <ref type="figure">(D,r)</ref> 2∆u ), where</p><formula xml:id="formula_3">∆u = max ∀r∈R ,DD u(D, r) − u D , r</formula><p>is the sensitivity of the utility function. That is,</p><formula xml:id="formula_4">Pr[EM ε u (D) = r] = exp εu(D,r) 2∆u ∑ r ∈R exp εu(D,r ) 2∆u .<label>(1)</label></formula><p>We omit u, ε, D, i.e., write EM, if they can be derived from the context. DP algorithms M can be implemented in different models, visualized in <ref type="figure">Figure 1</ref>. Next, we describe the models and explain which model we implement. . . .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C n</head><p>Trusted Server</p><formula xml:id="formula_5">d 1 d n M ( f (d 1 , . . . , d n )) (a) Central Model C 1 . . .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C n</head><p>Untrusted Server</p><formula xml:id="formula_6">r 1 =M (d 1 ) r n =M (d n ) f (r 1 , . . . , r n ) (b) Local Model C 1 . . .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C n</head><p>Shuffler Untrusted Server</p><formula xml:id="formula_7">r 1 =M (d 1 ) r n =M (d n ) r π(1) . . . r π(n) f r π(1) , . . . , r π(n)</formula><p>(c) Shuffle Model with permutation π <ref type="figure">Figure 1</ref>: Models for DP mechanism M . Client C i sends a message (raw data d i or randomized r i ) to a server, who computes function f over the messages, and releases the result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">Why We Consider the Central Model</head><p>In the central model ( <ref type="figure">Figure 1a</ref>) every client sends their unprotected data to a trusted, central server which runs M on the clear data. The central model provides the highest accuracy as the randomization inherent to DP algorithms, is only applied once. In the local model <ref type="figure">(Figure 1b</ref>), introduced by <ref type="bibr" target="#b43">[44]</ref>, clients apply M locally and sent anonymized values to an untrusted server for aggregation. The accuracy is limited as the randomization is applied multiple times. Hence, it requires a very large number of users to achieve accuracy comparable to the central model <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b43">44,</ref><ref type="bibr" target="#b49">50]</ref>. Specifically, an exponential separation between local and central model for accuracy and sample complexity was shown by <ref type="bibr" target="#b43">[44]</ref>. Recently, an intermediate shuffle model ( <ref type="figure">Figure 1c</ref>) was introduced <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18]</ref>: A trusted party is added between client and server in the local model, the shuffler, who does not collude with anyone.</p><p>The shuffler permutes and forwards the randomized client values. The permutation breaks the mapping between a client and her value, which reduces randomization requirements. The accuracy of the shuffle model lies between the local and central model, however, in general it is strictly weaker than the central model <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b17">18]</ref>. As our goal is high accuracy without trusted parties even for small number of users, we simulate the central model in a distributed setting via secure multi-party computation (MPC), which is often used in DP literature <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b58">59,</ref><ref type="bibr" target="#b59">60,</ref><ref type="bibr" target="#b64">65]</ref>. MPC, further described in Section 2.2, is a cryptographic protocol run by clients over their sensitive data that only reveals the computation output without requiring a trusted server. General MPC incurs high computation and communication overhead which reduce efficiency and scalability <ref type="bibr" target="#b17">[18]</ref>. However, MPC combines the  respective benefits of the models, namely, high accuracy and strong privacy, i.e., no disclosure of values to a third party, and we present an efficient and scaleable MPC protocol.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Why We Use the Exponential Mechanism</head><p>Next, we illustrate why the exponential mechanism offers better accuracy than additive noise w.r.t. the DP median. Recall, the noise depends on the sensitivity of function f and the privacy parameter ε. The sensitivity is the largest difference a single change in any possible database can have on the function result. Smooth sensitivity, developed by Nissim et al. <ref type="bibr" target="#b57">[58]</ref>, additionally analyzes the data to provide instancespecific additive noise that is often much smaller. (See Appendix F for a formal description.) However, computation of smooth sensitivity requires access to the entire data set, otherwise the error increases further 1 , which prohibits efficient (secure) computation with high accuracy. <ref type="bibr">Li et al. [48]</ref> note that the Laplace mechanism is ineffective for the median as (smooth) sensitivity can be high. Additionally, they present a median utility function for the exponential mechanism with low, data-independent sensitivity, which we use in our protocol. To illustrate that additive noise can be high, we empirically evaluated the absolute error of the Laplace mechanism with smooth sensitivity, the exponential mechanism, and our protocol in <ref type="figure" target="#fig_1">Figure 2</ref> on real-world data sets <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b66">67]</ref>. Our protocol uses the exponential mechanism in multiple steps, and while the accuracy is not the same as for (single use of) the exponential mechanism, we do not require a trusted third party. Overall, we achieve better accuracy than additive noise for low ε (corresponding to high privacy protection) with better scalability than the exponential mechanism. We provide our accuracy bounds in Section 3.4, further empirical evaluations w.r.t. related work in Section 5.3, and describe related work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Secure Multi-party Computation</head><p>Secure multi-party computation (MPC) <ref type="bibr" target="#b35">[36]</ref> allows a set of three or more parties P = {P 1 , . . . , P n }, where party P i holds sensitive input d i , to jointly compute a function y = f (d 1 , . . . , d n ) while protecting their inputs. The computation must be correct, i.e., the correct y is computed, and secret, i.e., only y and nothing else is revealed. There are two main implementation paradigms for MPC <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b45">46]</ref>: garbled circuits <ref type="bibr" target="#b67">[68]</ref> 2 , where the parties construct a (large, encrypted) circuit and evaluate it at once, and secret sharing <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b56">57,</ref><ref type="bibr" target="#b61">62]</ref>, where the parties interact for each circuit gate. In general, the former allows for constant number of rounds but requires larger bandwidth (as fewer, but bigger messages are sent), and the latter has low bandwidth (small messages per gate) and high throughput, where the number of rounds depends on the circuit depth. We will focus on secret-sharing-based MPC as our goal is an efficient implementation in a network with reasonable latency. Informally, a (t, n)-secret sharing scheme splits a secret s into n shares s i and at least t shares are required to reconstruct the secret. We use s = (s 1 , . . . , s n ) to denote the sharing of s among n parties (for a formal definition see, e.g., Evans et al. <ref type="bibr" target="#b31">[32]</ref>). Recent works, e.g., SCALE-MAMBA <ref type="bibr" target="#b5">[6]</ref>, BDOZ <ref type="bibr" target="#b11">[12]</ref>, SPDZ <ref type="bibr" target="#b20">[21]</ref>, improve MPC performance by combining a computationally secure offline phase, to exchange correlated randomness (e.g., Beaver triples <ref type="bibr" target="#b10">[11]</ref>), with an information-theoretic secure online phase. The former is generally more efficient since the latter requires asymmetric cryptography <ref type="bibr" target="#b46">[47]</ref>. MPC can be implemented in two models with different trust assumptions: in the semi-honest model (passive) adversaries do not deviate from the protocol but gather everything created during the run of the protocol, in the malicious model (active) adversaries can deviate from the protocol (e.g., alter messages).</p><p>In this work we consider n input parties with sensitive input, and m (e.g., m ∈ {3, 6, 10}) semi-honest computation parties, i.e., non-colluding untrusted servers. The input parties create and send shares of their input to the computation parties, which run the secure computation on their behalf. We assume semi-honest parties but explain how to extend our protocol to malicious parties and implement our protocol with the SCALE-MAMBA framework <ref type="bibr" target="#b5">[6]</ref>.</p><p>(i) the running time complexity is linear in the size of the data universe, |U|, as selection probabilities for all possible outputs in U are computed,</p><p>(ii) the general mechanism is too inefficient for general secure computation as selection probability computation requires |U| exponentiations over floating-point numbers.</p><p>We solve these challenges by (i) recursively dividing the data universe into subranges to achieve sublinear running time in |U|, and (ii) focusing on utility functions which allow efficient selection probability computation. We call such utility functions decomposable, which we formalize in Section 3.1, and give example applications.</p><p>In the following, we describe an overview of our solution. We efficiently compute the exponential mechanism with running time complexity sublinear in the size of the data universe U by dividing U into k subranges. We select the best subrange and also split it into k subranges for the next iteration, until the last subrange is small enough to directly select the final output from it. After log k |U| iterations the selected subrange contains only one element. Each subrange selection increases the overall privacy loss ε, and we enable users to select a trade-off between running time, privacy loss and accuracy by presenting three protocols to compute unnormalized selection probabilities, which we call weights, w.r.t. ε:</p><p>• Weights ln(2) fixes ε = ln(2) to compute exp(εy) as 2 y ,</p><p>• Weights ln(2)/2 d allows ε = ln(2) 2 d for some integer d &gt; 0, • Weights * supports arbitrary ε.</p><p>On a high-level, we have three phases in each iteration:</p><p>1. Evaluate: Each party locally computes the basis for utility scores for each subrange.</p><p>2. Combine: They combine their results into a global result and compute selection probabilities.</p><p>3. Select: Finally, they select an output based on its selection probabilities.</p><p>The results of the evaluation step are computed over sensitive data and might also be sensitive (e.g., utility functions for median and mode leak exact counts <ref type="bibr" target="#b47">[48]</ref>). Therefore, we combine them via MPC to preserve privacy. To ensure efficient implementation of the combination step we require utility functions to have a certain structure as detailed next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Decomposability &amp; Applications</head><p>Recall, each party P i holds a single value d i (we can generalize to data sets D i ). To combine local utility scores per party into a global score for all, we require utility functions to be decomposable:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Application</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Utility</head><p>Convex optimization: find x that minimizes ∑ n i=1 l(x, d i ) with convex loss function l defined over D; e.g., empirical risk minimization in machine learning <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b62">63]</ref>, and integer partitions (password frequency lists) <ref type="bibr" target="#b15">[16]</ref> </p><formula xml:id="formula_8">− ∑ n i=1 l(x, d i )</formula><p>Unlimited supply auction: find price x maximizing revenue x ∑ i b i (x), where bidder demand curve b i indicates how many goods bidder i will buy at price x; e.g., digital goods <ref type="bibr" target="#b51">[52]</ref> x ∑ i b i (x)</p><formula xml:id="formula_9">Frequency: select x based on its frequency in D; e.g., mode [48] ∑ n i=1 1 x=d i</formula><p>Rank-based statistics: select x based on its rank in sorted D; e.g., k th -ranked element <ref type="bibr" target="#b47">[48]</ref> See Section 3.2 <ref type="table">Table 1</ref>: Applications with decomposable utility functions.</p><formula xml:id="formula_10">Definition 4 (Decomposability). We call a function u : (U n × R ) → R decomposable w.r.t. function u : (U n × R ) → R if u(D, x) = ∑ n i=1 u (d i , x) for x ∈ R and D = {d 1 , . . . , d n }.</formula><p>We use decomposability to easily combine utility scores in Weights ln(2) , Weights ln(2)/2 d , and to avoid secure evaluation of the exponential function in Weights * 3 . If u is decomposable, users can compute weights locally, and securely combine them via multiplications:</p><formula xml:id="formula_11">∏ i exp(u (d i , x)ε) = exp( ∑ i u (d i , x)ε) = exp(u(D, x)ε).</formula><p>Decomposability is satisfied by a wide range of selection problems. Counts are clearly decomposable and so are utility functions that can be expressed as a sum of utility scores. Applications with decomposable utility functions are listed in <ref type="table">Table 1</ref>. One use case for the median is a software company collecting private usage statistics, e.g., number of times a procedure was run or the size of database tables, in a mediumsized installed base. Reporting the median in addition to the mean allows the collector to detect skew in the distribution. Another example is private federated learning with network resource constrained parties, e.g., mobile phones on cellular networks. Gradient compressed federated learning, e.g., signSGD <ref type="bibr" target="#b12">[13]</ref>, enables to reduce the update message size for these parties, but uses the median instead of the mean to aggregate the gradients. The additional communication stemming from our secure median computation can be shifted to few parties who are not network resource constrained, e.g., mobile phones on WiFi networks.</p><p>To be sublinear in the size of the universe we consider decomposability w.r.t. ranges instead of elements: parties only report one utility score per range, instead of one score per element. Decomposability for elements x ∈ U does not imply decomposability for ranges R ⊂ U 4 . However, we present a decomposable utility function w.r.t. ranges for rank-based statistics next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Decomposable Median Utility Function</head><p>First, we describe the median utility function <ref type="bibr" target="#b47">[48]</ref>. Then, we present a reformulation more convenient for secure implementation and show that it is decomposable.</p><p>Li </p><formula xml:id="formula_12">(x) = |{d | d ∈ D : d &lt; x}|.</formula><p>Note that for the median we have R = U, which means every universe element is a potential output. As U can be large, we divide U in k equal-sized ranges, and define utility per range next.</p><p>Definition 5 (Median Utility Function). The median utility function u µ : (U n ×U) → Z gives a utility score for a range</p><formula xml:id="formula_13">R = [r l , r u ) where r l , r u ∈ U w.r.t. D ∈ U n as u µ (D, R) = − min rank D (r l )≤ j≤rank D (r u ) j − n 2 .</formula><p>We focus on MPC of the differentially private median with rank n/2 but Definition 5 supports any k th -ranked element. The sensitivity of u µ is 1/2 since adding an element increases n/2 by 1/2 and j either increases by 1 or remains the same <ref type="bibr" target="#b47">[48]</ref>. Thus, the denominator 2∆u in the exponents of (1) equals 1, and we will omit it in the rest of this work.</p><p>To compute u µ one needs to find rank j minimizing the distance between the median and all range elements by iterating over all j where rank D (r l ) ≤ j ≤ rank D (r u ). However, a naive implementation of u µ leaks information as the iteration count depends on the number of duplicates in the data. We adapt u µ next to remove this leakage. To avoid iterating over range elements observe that the utility for a range R = [r l , r u ) is defined by the element in the range closest to the median µ. Thus, it suffices to consider three cases: The range is either positioned "before" the median (r u ≤ µ), contains it, or comes "after" it (r l &gt; µ). This observation leads us to the following definition without iterations:</p><formula xml:id="formula_14">Definition 6 (Simplified Median Utility Function). The me- dian utility function u c µ : (U n ×U) → Z gives a utility score for a range R = [r l , r u ) of U w.r.t. D ∈ U n as u c µ (D, R) =      rank D (r u ) − n 2 if rank D (r u ) &lt; n 2 n 2 − rank D (r l ) if rank D (r l ) &gt; n 2 0</formula><p>else . 1. Set s = log k |U| and split privacy budget ε into ε 1 , . . . , ε s 2. Initialize S = U and repeat below steps s times:</p><p>(a) Every party p ∈ P divides S into k equal-sized subranges</p><formula xml:id="formula_15">{R i = [r i l , r i u )} k i=1 i. if ε j = ln(2)/2 d in step j (with integer d ≥ 0), input rank D p (r i l ), rank D p (r i u ) k i=1 , d ii. else input e ε j (rankD p (r i u )−|D p |/2) , e ε j (|Dp|/2−rankD p (r i l )) k i=1 , ε j (b)</formula><p>The functionality combines the inputs (Section 3.2) and outputs S = R i with probability proportional to</p><formula xml:id="formula_16">exp(u c µ (D, R i )ε j ) Figure 3: Ideal functionality F EM * for EM * .</formula><p>In the following, we generalize from a single value per (input) party, d i , to multiple values, i.e., data set D i , as computation parties operate on data sets later on. Definition 5 and 6 are equivalent as can be seen by proof by cases (see Appendix B), and u c µ is decomposable w.r.t.:</p><formula xml:id="formula_17">u (D i , R) =      rank D i (r u ) − |D i | 2 if rank D (r u ) &lt; n 2 |D i | 2 − rank D i (r l ) if rank D (r l ) &gt; n 2 0 else , where rank D (r) = ∑ n i=1 rank D i (r)</formula><p>for range endpoints r. We will use both utility definitions interchangeably. Specifically, we use u µ to simplify notation in our accuracy proofs (Section 3.4), and u c µ in our implementation (Section 4). For implementations Weights ln(2) , Weights ln(2)/2 d the parties input ranks for lower and upper range endpoints (as in u above), which we combine (as u c µ ) to efficiently compute weights. For Weights * we let the parties input weights, i.e., exp(εu ), which we can efficiently combine via multiplication. In more detail, weights for u are:</p><formula xml:id="formula_18">e ε·u (D i ,R) =        e ε rank D i (r u )− |D i | 2 if e ε(rank D (r u )− n 2 )) &lt; 1 e ε |D i | 2 −rank D i (r l ) if 1 &gt; e ε( n 2 −rank D (r l )) 1 else , where, e.g., e ε(rank D (r)− n 2 )) = ∏ n i=1 e ε rank D i (r)− |D i | 2</formula><p>for range endpoints r. Given these inputs, we are ready to describe an idealized version of our protocol next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Ideal Functionality F EM *</head><p>The ideal functionality F EM * in <ref type="figure">Figure 3</ref> describes our DP median protocol EM * as executed by a trusted third party, which we later replace by implementing F EM * with MPC. We iteratively select subranges of universe U w.r.t. DP median via the exponential mechanism. After s = log k |U| steps the last selected subrange contains only the DP median. We split ε, also called privacy budget, into s parts such that ε = ∑ s j=1 ε j , and consume ε j for each subrange selection. (We describe the budget composition in Section 3.4 and provide a heuristic in Section 5.) Overall, F EM * provides ε-differential privacy: Theorem 1. F EM * , with privacy parameter ε j in step j ∈ {1, . . . , s}, is ε-differentially private for ε = ∑ s j=1 ε j .</p><p>Proof. F EM * performs s sequential steps, and each step applies the exponential mechanism</p><formula xml:id="formula_19">EM ε i u c µ . Since EM ε i u c µ is (2ε i ∆u c µ )-DP [52]</formula><p>, with sensitivity ∆u c µ = 1/2 <ref type="bibr" target="#b47">[48]</ref>, we have ε i -DP per step. Thus, according to the composition theorem <ref type="bibr" target="#b28">[29]</ref>, the total privacy budget after all steps is ∑ s j=1 ε j .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Accuracy of Differentially Private Median</head><p>We express accuracy as the absolute error between differentially private and actual median. In more detail, the absolute error is bounded by α with probability at least 1 − β, known as (α, β)-accuracy. Next, we discuss how the data distribution influences accuracy and present worst-case bounds on the accuracy of the exponential mechanism for median selection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1">Data Distribution</head><p>Accuracy depends on the data distribution, specifically, on gaps d i+1 − d i , and duplicates d i = d j with i = j 5 . Recall, a DP mechanism bounds the probability that data set D and its neighbor D can be distinguished from the mechanism output. As neighbor D may contain values from the gaps of D, these gap values must be output with a non-zero probability. This is why bounds for absolute error depend on such gaps between data elements in this and related work (Appendix F). As a worst-case example, consider a data set with universe U = {0, 1, . . . , 10 9 } containing only an equal number of duplicates for 0 and 10 9 . Then, smooth sensitivity is extremely large with 10 9 and the exponential mechanism outputs a value at uniform random. However, for such pathological, worstcase data even the actual median does not provide much insight. On the other hand, the number of duplicates in the data can increase accuracy dramatically. For example, consider a data set where the median has 2c duplicates: d n/2±i = d n/2 for i ∈ {1, . . . , c}. Then, the probability that the exponential mechanism outputs the median is exp(cε) times higher than for any other element. Such duplicates also fit the intuition that the median is a "typical" value from the data that represents it well. In general, the probability to output a "bad" element x decreases exponentially in ∑ c i , where c i ≥ 1 are duplicate counts of "good" elements y i , which are closer to the median than x.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">Accuracy Bounds</head><p>In the following, we show that the output of EM ε u (D, R ) contains an element at most ln(|R |/β) ε positions away from the median in the sorted data. Note that |R | is k if we select among k subranges or |U| if we output elements directly.</p><p>For our accuracy proofs we structure the universe as a tree: we set U as the root of a tree of height log b |U|, for some base b, with k child nodes per parent. The child nodes are equal-sized subranges of the parent node and R j i denotes the i th subrange in level j. </p><formula xml:id="formula_20">R = {R j 1 , . . . , R j k } of data universe U. Then, output of EM ε u (D, R )</formula><p>contains an element at most ln(k/β) ε positions away from median position n 2 with probability at least 1 − β. Our proof uses Corollary 3.12 from <ref type="bibr" target="#b28">[29]</ref>, which we restate as the following Lemma:</p><p>Lemma 1 (Accuracy of the Exponential Mechanism). Fixing a database D, and let OPT = max r∈R u(D, r) denote the maximum utility score of any element r ∈ R , we have</p><formula xml:id="formula_21">Pr u(D, EM ε u (D, R )) ≤ OPT − 2∆u ε (ln |R | + t) ≤ exp(−t).</formula><p>Proof of Theorem 2. First, we bound the utility difference between optimal and selected output. Then, we translate this to a bound on the output's rank. The complementary of Lemma 1 with ∆u = 1 2 is</p><formula xml:id="formula_22">Pr OPT − u(D, EM ε u (D, R )) &lt; ln |R | + t ε &gt; 1 − exp(−t). Let R j i = [r l , r u ) be the output of EM ε u (D, R ). Recall, that</formula><p>for median utility OPT = 0, then,</p><formula xml:id="formula_23">OPT − u(D, EM ε u (D, R )) = 0 − u(D, R j i ) = min rank D (r l )≤ j≤rank D (r u ) j − n 2 .</formula><p>Next, we consider different cases for R j i to bound the rank difference between the selected range and the range that contains the median. Assume median µ / ∈ R j i , as otherwise the bound holds trivially, and let d denote the utility difference</p><formula xml:id="formula_24">OPT − u(D, EM ε u (D, R )). For r u &lt; µ we have d = |rank D (r u ) − n 2 | = n 2 − rank D (r u ) from which we obtain rank D (r u ) &gt; n 2 − ln |R |+t ε</formula><p>with probability at least 1 − exp(−t). Analog, for r l &gt; µ we have d = rank D (r l ) − n 2 , and obtain rank D (r l ) &lt; n 2 + ln |R |+t ε with the same probability. Altogether, R j i is at most ln |R |+t ε rank positions away from median rank n/2 with probability at least 1 − exp(−t). We have k = |R | and setting β = exp(−t) concludes the proof.</p><p>To obtain an absolute error with regards to data elements, consider universe elements instead of subranges as the output of the exponential mechanism.</p><p>Corollary 1 (Median Accuracy). Fixing a sorted database D of size n, let µ be the median of D, and µ the output of EM ε u (D,U). Then, absolute error |µ − µ| is at most</p><formula xml:id="formula_25">max i∈{+1,−1}· ln(|U|/β) ε d n 2 +i − d n 2</formula><p>with probability at least 1 − β.</p><p>The proof follows directly from Theorem 2 with |R | = |U|. Note that it is more likely to select a "good" subrange as it is to directly select a "good" element from the entire universe (as k |U|). However, sequential (subrange) selections consumes ε j per selection step j which adds up to a total privacy budget of ε = ∑ j ε j as described in Section 3.3. We now show how to choose ε j to select the subrange containing the median in each iteration step with probability at least 1 − β.</p><formula xml:id="formula_26">Theorem 3 (Choice of ε). Let R = {R j 1 , . . . , R j k },</formula><note type="other">where R j i = [r l , r u ) contains the median, and n</note><formula xml:id="formula_27">i j = min{|rank D (µ) − rank D (r l )|, |rank D (r u + 1) − rank D (µ + 1)|} is the minimum count of data elements in R j i smaller resp. larger than the median. Then, EM ε u (D, R ) selects R j i with probability at least 1 − β if ε j ≥ ln(k/β) n i j .</formula><p>Proof. Ranges R j h without the median have a rank at least n i j positions away from median rank. More formally,</p><formula xml:id="formula_28">OPT − u(D, R j h ) ≥ n 2 ± n i j − n 2 = n i j .</formula><p>According to Lemma 1 we have Pr n i j ≥ ln |R |+t ε j ≤ exp(−t). Thus, for ε j ≥ ln |R |+t n i j the probability that any range R j h is selected is at most exp(−t). We have k = |R | and setting β = exp(−t) concludes the proof.</p><p>Parameter ε j is undefined for n i j = 0, i.e., when the median is a range endpoint 6 . Note that the exact value of n i j is datadependent. E.g., for the uniform distribution n i j ≈ |D|/k j . A differentially private n i j can be efficiently computed by distributed sum protocols <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b59">60,</ref><ref type="bibr" target="#b64">65]</ref> as it is just a count of data elements. However, a differentially private count also consumes a portion of the privacy parameter. For low epsilon (e.g., ε = 0.1) we want to use the entire privacy budget on the actual median selection to achieve high accuracy. Thus, we use a heuristic in our evaluation: larger subranges, that hold exponentially more elements, receive exponentially smaller portions ε j of the privacy budget (see Section 5 for details).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MPC protocol</head><p>Output / Functionality</p><formula xml:id="formula_29">Rec(a) a, reconstructed from a Add(a, b) a + b Sub(a, b) a − b Mul(a, b) a · b Mod2m(a, b) a mod 2 b ,</formula><note type="other">where b is public Trunc(a, b) a/2 b , where b is public Rand(b) r with uniform random b-bit value r Choose(a, b, c) a if bit c = 1 otherwise b LT(a, b) 1 if a &lt; b else 0 Int2FL(a)</note><p>converts integer a to secret shared float </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MPC for Differentially Private Median</head><p>In the following, we describe details of our protocol EM * , which implements ideal functionality F EM * , analyse its running time and security. On a high-level, our protocol recursively selects the best subrange until the DP median is found: First, each party locally evaluates a utility score (or weight) for each subrange. They combine their results into a global result. Then, they select a subrange based on the combined result. We use upper case letters to denote arrays in our protocol, and A[ j] denotes the j th element in array A. Our protocol uses integers as well as floating point numbers. We adopt the notation from Aliasgari et al. <ref type="bibr" target="#b4">[5]</ref> and represent a floating-point number f as (1 − 2s)(1 − z) · v · 2 x with sign bit s set when the value is negative, zero bit z only set when the value is zero, l v -bit significand v, and l x -bit exponent x. The sharing of a floating point value f is a 4-tuple (v, x, s, z), which we abbreviate as f FL . To refer to, e.g., the significand v of f we will write f.v. (Privacy violations and mitigations w.r.t. limited machine precision are discussed in Appendix D.) The basic MPC protocols used in our protocol are listed in <ref type="table" target="#tab_2">Table 2</ref>. We prefix MPC protocols for integers with Int and floating point versions with FL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Subrange Selection</head><p>On a high level, protocol EM * , implemented in Algorithm 1, computes selection weights for possible outputs (via Algorithm 2) and selects an output according to these weights (via Algorithm 3 or 4). We assume that the universe U and combined data size n are known to all parties (note that the latter can be hidden via padding <ref type="bibr" target="#b2">[3]</ref>). Recall, that efficient weight computation and selection are the main challenges for our secure exponential mechanism. Straightforward selection over all universe elements is linear in the size of U. To achieve a running time sublinear in the size of U we selects subranges instead: Algorithm 1 selects one of k subranges based on their median utility. The selected subrange is recurAlgorithm 1 Algorithm EM * .</p><p>Input: Number of subranges k, size n of combined data D, number of selection steps s ∈ [1, log k |U|], and (ε 1 , . . . , ε s ). Data universe U is known to all parties. Output: Differentially private median of D.</p><p>1: r l , r u ← 0, |U| 2: for j ← 1 to s do 3:</p><formula xml:id="formula_30">r # ← max{1, r u −r l k } 4:</formula><p>k ← min{k, r u − r l }</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>Define array W of size k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6:</head><p>if ε j = ln(2)/2 d for some integer d then 7: sively divided into k subranges until the last subrange, after at most log k |U| iterations, contains only one element: the differentially private median <ref type="bibr" target="#b6">7</ref> . Alternatively, one can use fewer selection steps s and select an element from the last subrange at uniform random (line 15 in Algorithm 1). We discuss the running time vs. accuracy trade-offs of reduced selection steps in Section 5. We implement selection with inverse transform sampling (ITS) via binary search in Algorithm 2 similar to <ref type="bibr" target="#b29">[30]</ref>. ITS uses the uniform distribution to realize any distribution based on its cummulative distribution function. Formally, one draws r ∈ (0, 1] at uniform random and outputs the first R j ∈ R with ∑</p><formula xml:id="formula_31">W FL ← Weights ln(2)/2 d (r l , r u , r # , k, n, d) //</formula><formula xml:id="formula_32">j−1 i=1 Pr[EM ε u (D, R ) = R i ] ≤ r &lt; ∑ j i=1 Pr[EM ε u (D, R ) = R i ].</formula><p>Recall, we compute unnormalized probabilities (weights), which do not require division for normalization, thus, reducing computation complexity. To use weights instead of probabilities in ITS we only need to multiply r with normalization N = ∑ o∈R exp(u(D, o)ε).</p><p>We use decomposable utility functions to combine local evaluations over each party's data into a global utility score for the joint data. Next, we present three solutions to efficiently compute weights for decomposable utility functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Weights ln(2)</head><p>We implement Weights ln(2) as a special case of our approach Weights ln(2)/2 d in Algorithm 3 (with d = 0 in line 16). Here, parties locally compute ranks which are combined into global utility scores. Weights for these scores use a fixed ε of ln <ref type="formula">(2)</ref> to let us compute 2 u instead of exp(ε · u). Solutions for secure exponentiation of 2 u exist where u is an integer or a float Algorithm 2 Algorithm Select.</p><p>Input: List W FL of weights with size k. Output: Index j ∈ <ref type="bibr">[1, k]</ref>  </p><formula xml:id="formula_33">M[ j] FL ← FLAdd(W [ j] FL , M[ j − 1] FL ) 5: end for 6: t ← IntRand(b) //Bitlength b 7: f FL ← Int2FL(t) 8: x ← IntSub( f.x, b) 9: f FL ← ( f.v, x, f.z, f.s) 10: r FL ← FLMul(M[k] FL , f FL ) 11: i l ← 1; i u ← k 12: while i l &lt; i u do 13: i m ← i l +i u 2 14: c ← FLLT(M[i m ] FL , r FL ) 15:</formula><p>c ← Rec(c)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>16:</head><p>i l ← i m + 1 if c = 1 else i u ← i m 17: end while 18: return i l <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b42">43]</ref>. When u is an integer (resp. a float) the result 2 u is an integer (resp. float) as well. The complexity of the integer-based solution is linear in the bit-length of u, however, this is not sufficient for us: Recall, that the utility is based on ranks, i.e., counts of data elements, thus u can be roughly as large as the size of the data. An integer representation of 2 u has bit-length u, which is potentially unbounded. Eigner et al. <ref type="bibr" target="#b29">[30]</ref> use the float-based solution from <ref type="bibr" target="#b4">[5]</ref> but we present a more efficient computation in the following. Although our exponent u is an integer, we do not require the result to be an integer as well. We use the representation of floating point numbers as a 4-tuple to construct a new float to represent 2 u as (2, u, 0, 0), where sign and zero bit are unset, as 2 u cannot be negative or zero. Note that we require no interaction as each party can construct such a float with their share of u. Also, a naive approach requires 2k total inputs per party (one per endpoint per k ranges). However, with half-open ranges [r i l , r i u ) in each step i, they overlap for i &gt; 1: r i−1 u = r i l . Thus, the parties only input k + 1 ranks (Algorithm 3 lines 5, 7).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Weights ln(2)/2 d</head><p>Next, we generalize the weight computation to support ε = ln(2)/2 d for integers d ≥ 1. To illustrate our approach, we implement Weights ln(2)/2 d in Algorithm 3 for d = 1, and describe the approach for any integer d: Recall, our goal is to compute the weight exp(εu) with efficient MPC protocols. As we can efficiently compute 2 εu if εu is an integer, we approximate the weight by truncating εu to an integer before exponentiation with base 2. To avoid a loss of precision we correct this approximation with a multiplicative term based on the truncated remainder. More formally, with ε as above Algorithm 3 Algorithm Weights ln(2)/2 d .</p><p>Input: Range [r l , r u ), subrange size r # , number k of subranges, data size n, and parameter d ∈ {0, 1}. Subrange ranks rank D p (·) are input by each party p ∈ {1, . . . , m}. Output: List of weights.</p><p>1: Define arrays R of size k + 1, W of size k; initialize R with zeros 2: for p ← 1 to m do //Get input from each party</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3:</head><p>for j ← 1 to k do //Divide range into k subranges 4:</p><formula xml:id="formula_34">i l ← r l + ( j − 1) · r # 5: R[ j] ← IntAdd(R[ j], rank D p (U[i l ])) 6:</formula><p>end for 7:</p><formula xml:id="formula_35">R[k + 1] ← IntAdd(R[k + 1], rank D p (U[r u ])) 8: end for 9: for j ← 1 to k do 10: u u ← IntSub(R[ j + 1], n 2 )</formula><p>11:</p><formula xml:id="formula_36">u l ← IntSub( n 2 , R[ j]) 12: c u ← IntLT(R[ j + 1], n 2 )</formula><p>13:</p><formula xml:id="formula_37">c l ← IntLT( n 2 , R[ j]) 14: t ← IntChoose(u u , 0, c u ) 15:</formula><p>u ← IntChoose(u l , t, c l )</p><formula xml:id="formula_38">16: if d = 0 then 17: W [ j] FL ← (2, u, 0, 0) //float 2 u 18:</formula><p>else 19:</p><formula xml:id="formula_39">t ← IntTrunc(u, d) 20:</formula><p>e FL ← (2, t, 0, 0)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>21:</head><p>c ← IntMod2m(u, d)</p><p>22: </p><formula xml:id="formula_40">s FL ← FLChoose(1 FL , √ 2 FL , c) 23: W [ j] FL ← FLMul(e FL ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Weights *</head><p>We implement Weights * in Algorithm 4. To allow arbitrary values for ε we avoid costly secure exponentiation for weight computation altogether: Utility u, decomposable w.r.t. u , allows for efficient combination of local weights for D i , input by the parties, into global weights for D via multiplication (as described in Section 3.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Running Time Complexity Analysis</head><p>We analyse the running time of EM * w.r.t. MPC protocols from for j ← 1 to k do //Divide range into k subranges 4:</p><formula xml:id="formula_41">i l ← r l + ( j − 1) · r # 5: i u ← r u if j = k else r l + j · r # 6: W l [ j] FL ← FLMul(W l [ j] FL , e ε |Dp | 2 −rank Dp (U[i l ]) FL ) 7: W u [ j] FL ← FLMul(W u [ j] FL , e ε rank Dp (U[i u ])− |Dp | 2 | FL )</formula><p>8:</p><p>end for 9: end for 10: for j ← 1 to k do 11:</p><formula xml:id="formula_42">c u ← FLLT(W u [ j] FL , 1 FL ) 12: c l ← FLLT(W l [ j] FL , 1 FL ) 13: t FL ← FLChoose(W u [ j] FL , 1 FL , c u ) 14: W [ j] FL ← FLChoose(W l [ j] FL , t FL , c l ) 15: end for 16: return W FL</formula><p>and their complexity is given in Appendix C. We measure the running time of our implementation in Section 5.</p><p>Theorem 4. EM * with Weights ln(2) or Weights ln(2)/2 d requires O(klog k |U|) MPC protocol calls, with Weights * we require O(mklog k |U|). Note that complexity of these MPC protocols is at most O(l v log l v + l x ) for bit-lengths l v , l x (Appendix C).</p><p>Proof. EM * invokes the weight computation and Select at most log k |U| times. An invocation of Weights ln(2) or Weights ln(2)/2 d performs k truncations IntTrunc, 2k comparisons IntLT and 2k selections IntChoose. Additionally, Weights ln(2)/2 d also requires one truncation IntTrunc, modulo IntMod2m, float selection FLChoose and float multiplication FLMul. Weight computation via Weights * requires 2km float multiplications FLMul, 2k float comparisons FLLT and 2k float selections FLChoose. Each invocation of Select requires k − 1 float additions FLAdd, only one random draw IntRand, conversion Int2FL and float multiplication FLMul. Also, Select performs at most log 2 (k) comparisons FLLT and share reconstruction steps during binary search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Security</head><p>We consider the semi-honest model introduced by Goldreich <ref type="bibr" target="#b35">[36]</ref> where corrupted protocol participants do not deviate from the protocol but gather everything created during the run of the protocol. Our protocol consists of multiple subroutines realized with MPC protocols listed in <ref type="table" target="#tab_2">Table 2</ref> (for details and security proof references we refer to <ref type="bibr" target="#b5">[6]</ref>). To analyze the security of the entire protocol we rely on the well-known composition theorem <ref type="bibr">[36, Section 7.3.1]</ref>. Basically, MPC protocols using an ideal functionality (a subroutine provided by a trusted third party) remain secure if the ideal functionality is replaced with an MPC protocol implementing the same functionality. We implement such ideal functionality with the maliciously secure SCALE-MAMBA framework <ref type="bibr" target="#b5">[6]</ref> (which was faster than its semi-honest fork in a WAN, as detailed in Appendix E). Our protocol performs multiple subrange selections and each selection round is maliciously secure. Overall, we only provide semi-honest security as malicious adversaries can deviate from inputs provided in previous rounds. We later show how to extend our protocol to malicious adversaries, but first we proof semi-honest security for EM * :</p><p>Theorem 5. Protocol EM * realizes F EM * in the presence of semi-honest adversaries.</p><p>Proof. To prove semi-honest security we show the existence of a simulator Sim according to <ref type="bibr">Goldreich [36]</ref> such that the distributions of the protocol transcript EM * is computationally indistinguishable from simulated transcript using F EM * produced in an "ideal world" with a trusted third party.</p><p>Note that an adversary in the ideal world learns nothing except the protocol inputs and outputs, hence, if he cannot distinguish simulated transcripts (from ideal world) and actual transcripts (in the real world), he learns nothing in our realworld implementation. Next, we formalize the ideal and realworld executions, ideal and real, with notation from Evans et al. <ref type="bibr" target="#b31">[32]</ref>: Consider a subset of corrupted parties C ⊂ P , and let VIEW i denote the view of party i ∈ C during the execution of EM * implementing ideal functionality F EM * , including all exchanged messages and internal state, and let x i denote the protocol input of party P i and µ the final output of all parties. The parameters s, k,U are public. Then, real EM * , on input security parameter κ, C and all x i , runs protocol EM * (where each party P i behaves honestly using its own input x i ) and outputs {VIEW i |i ∈ C}, µ. And ideal F EM * ,Sim , with the same inputs, computes µ ← F EM * (x 1 , . . . , x m ) and outputs Sim(C, µ, {x i | i ∈ C}), µ. Now, simulator Sim produces a transcript for real EM * as follows: As we operate on secret shares, which look random to the parties <ref type="bibr" target="#b31">[32]</ref>, Sim replaces all secret shares with random values to create VIEW i . Likewise, the secret-shared output of the weight computations (Algorithm 3 and 4) are replaced with randomness. Sim can simulate Algorithm 2 by recursively splitting U into k subranges, and outputting the subrange containing µ in each selection step. Finally, Sim outputs a uniform random element from the last subrange (Algorithm 1). Altogether, a semi-honest adversary cannot learn more than the (ideal-world) simulator as this information is sufficient to produce a transcript of our (real-world) protocol.</p><p>For malicious adversaries, we need to ensure consistency between rounds based on Aggarwal et al. <ref type="bibr" target="#b2">[3]</ref>, who securely compute the (non-DP) median via comparison-based pruning rounds. Informally, we have two consistency constraints: First, valid rank inputs must be monotone within a step. Second, for consistency between steps, valid inputs are contained in the subrange output in the previous step. Formally, let {R i 1 , . . . , R i k } denote the set of subranges in the i th step of EM * and let l i j , u i j denote the lower resp. upper range endpoint of</p><formula xml:id="formula_43">R i j . Then, rank D p (l i 1 ) ≤ rank D p (l i 2 ) ≤ · · · ≤ rank D p (l i k ) ≤ rank D p (u i</formula><p>k ) describes monotone input in step i for party p. Consistency between step i and i + 1, if the j th range was selected, is expressed as rank</p><formula xml:id="formula_44">D p (l i+1 1 ) = rank D p (l i j ) and rank D p (u i+1 k ) = rank D p (u i j )</formula><p>. In other words, the subrange output in the previous step is used in the current step. Analogously, we can enforce consistency for weights as they are based on rank values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">Scaling to Many Parties</head><p>Recall, we distinguish two sets of parties: Input parties send shares of their input to computation parties which run the secure computation on their behalf. The latter can be a subset of the input parties or non-colluding untrusted servers (e.g., multiple cloud service providers). This scales nicely as the number of computation parties is independent of the number of input parties and can be constant, e.g., 3. In our evaluation (Section 5) m ∈ {3, 6, 10} computation parties perform the computation for 10 6 input parties, each holding a single datum. Addition suffices for Weights ln(2) and Weights ln(2)/2 d to combine local rank values into a global rank. Addition is essentially "free" as it requires no interaction between the computation parties. For Weights * we require multiplication to combine the local weights, which requires interaction during the preprocessing step. However, log n rounds suffice to combine the inputs by building a tree of pairwise multiplications with 2 i multiplications at level i <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation</head><p>Our implementation is realized with the SCALE-MAMBA framework <ref type="bibr" target="#b5">[6]</ref> using Shamir secret sharing with a 128-bit modulus and honest majority. Next, we evaluate the running time, privacy budget and accuracy of our solution and refer to Appendix E for additional evaluations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Running Times</head><p>We performed our evaluation on t2.medium AWS instances with 2GB RAM, 4 vCPUs <ref type="bibr" target="#b7">[8]</ref> and the Open Payments data set from the Centers for Medicare &amp; Medicaid Services (CMS) <ref type="bibr" target="#b32">[33]</ref>. Our evaluation uses 10 6 records from the Open Payments data set, however, our approach scales to any data set size as we consider universe subranges. We used the maximum number of selection steps, i.e., s = log k |U|, with k = 10 ranges per step. We evaluated the average running time of 20 runs of the entire protocol EM * , i.e., offline as well as online phase (see Appendix E), in a LAN and a WAN. LAN: We measured our running time for 3 parties in a LAN with 1 Gbits/s bandwidth to compare it to Eigner et al. <ref type="bibr" target="#b29">[30]</ref> who only report LAN running times. We support universe sizes of more than 5 orders of magnitude larger with comparable running times: They compute weights per elements and require around 42 seconds for |U| = 5, whereas our protocol EM * using Weights ln(2) / Weights ln(2)/2 d / Weights * runs in approx. 11 / 33 / 64 seconds for |U| = 10 5 . For detailed measurements see <ref type="table" target="#tab_8">Table 4</ref> in Appendix E.</p><p>WAN: We consider m computation parties, which already received and combined secret-shared inputs from 10 6 users (Section 4.7), and report the average running time of our protocol. We split the m parties into two regions, Ohio (us-east-2) and Frankfurt (eu-central-1), and measured an inter-region round time trip (RTT) of approx. 100 ms with 100 Mbits/s bandwidth. We evaluated all weight computation subroutines in <ref type="figure" target="#fig_3">Figure 4</ref> for m ∈ {3, 6, 10} computation parties and |U| ∈ {10 5 , 10 6 , 10 7 }. The results are very stable, as the 95% confidence intervals deviate by less than 0.5% on average. Weights ln <ref type="formula">(2)</ref>  <ref type="figure" target="#fig_3">(Figure 4a</ref>) is the fastest with running times around 3 minutes for 3 parties, whereas Weights ln(2)/2 d <ref type="figure" target="#fig_3">(Fig- ure 4b)</ref> and Weights * <ref type="figure" target="#fig_3">(Figure 4c</ref>) require around 13 and 14 minutes respectively. However, we consider large universe sizes (billions of elements) in a real-world network with large latency. The choice of weight computation enables a trade-off between faster running times, i.e., Weights ln(2) with fixed ε, and smaller privacy loss ε, i.e, Weights * , with Weights ln(2)/2 d positioned in the middle (faster running time than Weights * with smaller ε compared to Weights ln <ref type="formula">(2)</ref> ). The number k of subranges allow a similar trade-off, as discussed next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Privacy Budget vs. Running Time</head><p>The privacy budget is the sum of privacy parameters consumed per step, i.e., the overall privacy loss. how the privacy budget and the running time are affected by the number k of subranges. Larger k leads to larger running times, as the number of costly secure computations depends on the number of ranges times the number of selection steps (k · log k |U|), which increases proportionally to k. However, smaller values for k require more selection steps (log k |U|), which lead to an increase in the privacy budget. Overall, for k = 10 subranges, as used in our evaluation, the consumed privacy budget is small with an acceptable running time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Accuracy Comparison to Related Work</head><p>EM * performs multiple selection steps s, each consume a portion ε i of the overall privacy budget ε = ∑ s i=1 ε i . How to optimally split ε (optimal composition) is #P-complete <ref type="bibr" target="#b54">[55]</ref>. Thus, we use the following heuristic to divide ε among the selection steps: Initial steps cover exponentially larger subranges, and require exponentially less of the privacy budget. After a while an equal split is more advantageous, as the subranges become smaller and contain fewer elements. Altogether, we use ε i = ε/2 s−i+1 if i ≤ s/2 and ε i = ε /(s − s/2) else, where ε is the remaining privacy budget. We used s = log k |U|−1 for our accuracy evaluation. We found in our experiments that performing one selection step less increases accuracy, as the privacy budget can be better divided among the other remaining steps and the last subrange is already small enough (at most k elements).</p><p>Related work computing DP median in the central model shows a strong data dependence which makes straightforward comparison difficult (Appendix F). Therefore, we empirically evaluated the different approaches closest to ours, i.e., supporting more than 2 parties, on real-world data sets <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b63">64,</ref><ref type="bibr" target="#b66">67]</ref> as well as the normal distribution in <ref type="figure" target="#fig_6">Figure 6</ref> 8 for 100 averaged runs with 95%-confidence intervals. Low ε (as evaluated) is desirable as it provides more privacy or allows the remaining privacy budget to be spend on additional queries. The 8 "Small" data is the most challenging regime for DP <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b55">56]</ref>, thus, we use small data sets to better illustrate the accuracy differences.  evaluation for smooth sensitivity <ref type="bibr" target="#b57">[58]</ref> and exponential mechanism per element assume a trusted party with full access to the data set, whereas our approach and <ref type="bibr" target="#b58">[59]</ref> use MPC instead of a trusted party. Nissim et al. <ref type="bibr" target="#b57">[58]</ref> (SS in <ref type="figure" target="#fig_6">Figure 6</ref>) compute instance-specific additive noise, requiring full data access, and achieve good accuracy, however, the exponential mechanism can provide better accuracy for low ε. <ref type="bibr">Pettai &amp; Laud [59]</ref> (SA in <ref type="figure" target="#fig_6">Figure 6</ref>) securely compute the noisy average of the 100 values closest to the median within a clipping range. Recall, the median is the 0.5 th -percentile. To minimize the error from clipping range [c l , c u ], we choose c l = 0.49 thpercentile, c u = 0.51 th -percentile, i.e., we presume to already know a tight range for the actual median. Nonetheless, in our experiments the absolute error of SA is the largest. Overall, no solution is optimal for all ε and data sets. However, the exponential mechanism EM, and our protocol EM * , provide the best accuracy for low ε, i.e., high privacy, compared to additive noise approaches <ref type="bibr" target="#b57">[58,</ref><ref type="bibr" target="#b58">59]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Next, we describe related work for secure computation of the exponential mechanism, DP median and decomposability.</p><p>Secure Exponential Mechanism: Alhadidi et al.</p><p>[4] present a secure 2-party protocol for the exponential mechanism for max utility functions. It uses garbled circuits and oblivious polynomial evaluation to compute Taylor series for the exponential function. Our work is more general as we support more parties and a broader class of utility functions, including max utility functions. Eigner et al. <ref type="bibr" target="#b29">[30]</ref> present a carefully designed secure exponential mechanism in the multiparty setting. Their work is more general, supporting arbitrary utility functions and malicious parties, but they are linear in the size of the universe, and securely compute the exponential function. We provide a sublinear solution without costly secure exponentiation, supporting at least 5 orders of magnitude more elements than them. <ref type="bibr">Böhler and Kerschbaum [14]</ref> also securely compute the DP median with the exponential mechanism. They optimize their protocol for the 2-party setting, compute the utility over (sorted) data, and provide DP for small data (sublinear in the size of the universe). They initially prune large data sets via <ref type="bibr" target="#b2">[3]</ref> (who securely compute the exact median), requiring a relaxation of DP <ref type="bibr" target="#b38">[39]</ref>, to achieve running time sublinear in the universe size. We consider the multi-party setting and provide pure differential privacy.</p><p>DP Median: Pettai and Laud <ref type="bibr" target="#b58">[59]</ref> securely compute DP statistics, including the DP median, via sample-and-aggregate <ref type="bibr" target="#b57">[58]</ref>. Their implementation is based on secret sharing in a 3-party setting. <ref type="bibr">Pettai and Laud [59]</ref> compute the DP median as noisy average of 100 values closest to the median within a clipping range, which limits accuracy, especially, if the data contains outliers or large gaps (see Section 5.3). Dwork and Lei <ref type="bibr" target="#b26">[27]</ref> consider robust privacy-preserving statistics with a trusted third party where data samples are known to be drawn i.i.d. from a distribution. They present the first DP median algorithm that does not require bounds for the data but aborts if the data are not from a "nice" distribution with small sensitivity. Their DP median algorithm first estimates scale s via DP interquartile range and the noise magnitude sn −1/3 can be large. <ref type="bibr">Nissim et al.</ref> [58] present smooth sensitivity, which analyzes the data to provide instance-specific noise. For the DP median, the exponential mechanism provides better accuracy for low epsilon and can be efficiently computed, whereas computation of smooth sensitivity requires full data access in clear or the error increases (see Section 2.1.2).</p><p>PINQ, a DP query framework developed by McSherry <ref type="bibr" target="#b50">[51]</ref>, also computes the DP median via the exponential mechanism, however, they rely on a trusted third party with access to the data in clear. Cryptε <ref type="bibr" target="#b18">[19]</ref> employs two non-colluding untrusted servers and cryptographic primitives to compute noisy histograms (Laplace mechanism) for SQL queries (e.g., count, distinct count) in the central model, which can be extended to compute the median. However, we show that the exponential mechanism is more accurate for the median with low ε. Also, Cryptε has a running time linear in the data size, whereas our work is independent of the data size. Smith et al. <ref type="bibr" target="#b62">[63]</ref> and <ref type="bibr">Gaboardi et al. [34]</ref> consider the restrictive non-interactive local model, where at most one message is sent from client to server, and achieve optimal local model error. However, local DP requires more samples to achieve the same accuracy as central DP. (No non-interactive LDP-protocol <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b62">63]</ref> can achieve asymptotically better sample complexity than O(ε −2 α −2 ) for error α <ref type="bibr" target="#b23">[24]</ref>.) We, on the other hand, are interested in high accuracy, as in the central model, even for small sample sizes. We give accuracy bounds for related work for the DP median in the central model in Appendix F. As these data-dependent bounds are hard to compare we provide an empirical comparison in Section 5.3.</p><p>Decomposability: MapReduce is a programming paradigm for distributed data aggregation where a mapper produces intermediary results (e.g., partial sums) that a reducer combines into a result (e.g., total sum). Airavat <ref type="bibr" target="#b60">[61]</ref> provide a Hadoop-based MapReduce programming platform for DP statistics based on additive noise (Laplace mechanism) with an untrusted mapper but trusted reducer. We consider decomposable utility functions for the exponential mechanism without any trusted parties. The secure exponential mechanisms <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b29">30]</ref> use decomposable utility functions (max and counts), but do not classify nor provide optimizations for such functions. Blocki et al. <ref type="bibr" target="#b15">[16]</ref> minimize cummulative error for DP password frequency lists employing (decomposability of) frequencies for their dynamic programming, which has access to all the data in the clear. We use decomposable aggregate functions to efficiently and securely combine inputs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>We presented a novel alternative for differentially private median computation with high accuracy (even for small number of users), without a trusted party, that is efficiently computable (practical running time) and scaleable (sublinear in the size of the universe). Our semi-honest multi-party protocol implements the exponential mechanism for decomposable aggregate functions (e.g., rank-based statistics) as used in MapRedue-style algorithms, and can be extended to malicious parties. For the median, the exponential mechanism provides the best utility vs. privacy trade-off for low ε in our evaluations of related work in the central model.</p><p>We optimize our protocol for decomposable functions (allowing efficient MPC on distributed data), and use efficient alternatives to exponentiations for floating-point numbers. We implemented our protocol in the SCALE-MAMBA framework <ref type="bibr" target="#b5">[6]</ref>, and evaluated it for 1 million users using 3 semihonest computation parties achieving a running time of seconds in a LAN, and 3 minutes in a WAN (100 ms latency, 100 Mbits/s bandwidth).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Distributed Differential Privacy</head><p>The original definition of Differential Privacy considers the central model with unbounded adversaries <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b27">28]</ref> (see Definition 1), later work expanded it to a distributed setting <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b43">44]</ref>, and considered computationally-bounded parties <ref type="bibr" target="#b53">[54]</ref>.</p><p>We consider multiple computationally-bounded, semihonest parties performing a joint secure computation realized with (t, m)-secret sharing. The following definition from <ref type="bibr" target="#b29">[30]</ref> fits our setting, where VIEW p Π (D) denotes the view of party p during the execution of protocol Π on input D, including all exchanged messages and internal state, and λ is a security parameter:</p><p>Definition 7 (Distributed Differential Privacy). A randomized protocol Π implemented among m computation parties P = {P 1 , . . . , P m }, achieves distributed differential privacy w.r.t. a coalition C ⊂ P of semi-honest computation parties of size t, if the following condition holds: for any neighbors D, D and any possible set S of views for protocol Π,</p><formula xml:id="formula_45">Pr VIEW C Π (D) ∈ S ≤ exp(ε)·Pr VIEW C Π (D ) ∈ S +negl(λ).</formula><p>The definition can be expanded to a malicious setting by replacing the semi-honest parties P and semi-honestly secure protocol Π with malicious parties and a maliciously secure protocol. Note that the negligible function negl(λ) can be omitted for protocols providing information-theoretic security (such as standard secret sharing), however, our implementation in SCALE-MAMBA provides computational security (due to the online phase as described in Section 2.2).  <ref type="table">Table 3</ref>: Complexity of MPC protocols for b-bit integers, t-bit truncation modulus, and floats with v-bit significand and x-bit exponent <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b29">30]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Equality of Definitions 5 and 6</head><p>We show equality of Definitions 5 and 6 with proof by cases. Consider range R = [r l , r u ) and its position relative to the median µ for Definition 5: Case i) For r u &lt; µ we have rank D (r u ) &lt; n/2, thus, u µ = −|rank D (r u ) − n/2| = rank D (r u )−n/2. Case ii) For r l &gt; µ we have rank D (r l ) &gt; n/2, thus, u µ = n/2−rank D (r l ). Case iii) Otherwise, the range contains the median, i.e., u µ = 0. Note that it suffices to look at r l in case i) (resp., r u in case ii)), as rank D (r l ) ≤ rank D (r u ) and the range endpoint closest to µ defines the utility for the range. Definition 6 uses the same cases and is an alternative way to express Definition 5. <ref type="table">Table 3</ref> lists the complexities for MPC protocols typically measured in the number of rounds and interactive operations, where rounds describes the count of sequential interactive operations, and interactive operations (e.g., reconstruct sharing, multiplications) require each party to send messages to all other parties. We omit integer addition/subtraction as these operations are non-interactive and the parties can perform them locally. Share reconstruction is denoted with Rec. Note that Choose(a, b, c) is implemented with one multiplication and two additions (b + (a − b) · c), and that IntRand uses correlated randomness already exchanged in the offline phase (hence zero interaction and rounds).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Complexity of MPC Protocols</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Precision and Privacy</head><p>In general, DP mechanisms operate on reals, whereas actual implementations are limited to the precision of physical machines. However, limited precision can lead to privacy violations: As shown by <ref type="bibr">Mironov [53]</ref>, the Laplace mechanism is vulnerable to finite precision as the set of possible outcomes can differ between neighboring databases due to irregularities  caused by floating point implementations. Their proposed mitigation is to perform "snapping", roughly, they clamp the noisy result to a fixed range and ensure that they output is evenly spaced. Recent work by Ilvento <ref type="bibr" target="#b40">[41]</ref> extend this line of study to the exponential mechanism, which is also vulnerable to finite precision. The suggested mitigation is switching from base e to base 2 to perform precise arithmetic by, e.g., for integer utility functions, approximating ε as η = − log 2 (x/2 y ) for integers x, y such that x/2 y ≤ 1. Interestingly, their mitigation is similar to our efficient secure computation. Our implementation is based on an integer utility function and Weights ln(2) uses base 2 for efficiency reasons and is not vulnerable to such attacks. We can strengthen Weights ln(2)/2 d , with ε = ln(2)/2 d , by using randomized rounding for non-interger utilities as described in [41, Section 3.2.2] if we omit 1/2 d from ε and include it as a factor in the utility definition (making the utility nonintegers). For Weights * , which supports arbitrary ε, careful choices for ε as described above mitigate attacks on limited precision.</p><p>Implementation Note: SCALA-MAMBA's floating point numbers (sfloat) are associated with a statistical security parameter κ satisfying κ &lt; b − 2 · l v where b is the bit-length of the modulus and l v is the bit-length of the significand. Security with κ = 40 is the default for b = 128 and we use l v = 40 in our evaluation, to support large utility values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E Additional Evaluation</head><p>The online and offline phase are integrated in newer versions of SCALE-MAMBA, thus, we only provide measurements for the total protocol, i.e., offline as well as online phase.</p><p>Running time in a LAN: We compare our running time to</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Absolute errors, averaged for 100 differentially private median computations via Laplace mechanism with smooth sensitivity, this work, and the exponential mechanism.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Theorem 2 (</head><label>2</label><figDesc>Median Accuracy for Ranges). Fixing a database D of size n with a set of k subranges</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Average running time of EM * -with weight computation subroutines Weights ln(2) , Weights ln(2)/2 d , or Weights * -for 20 runs on t2.medium instances in Ohio and Frankfurt (100 ms delay, 100 Mbits/s bandwidth).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Privacy vs. running time trade-off: For increasing number k of subranges the running time (left axis) increases whereas the consumed privacy budget (right axis) decreases. (Illustrated for EM * with Weights ln(2) and |U| = 10 5 ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Avg. Abs. Errors EM EM * SS SA (d) Normal distribution with σ = 3, 10 5 samples (as integers with scaling factor 1000).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Comparing exponential mechanism (EM) as baseline, this work (EM * ), smooth sensitivity (SS) [58], sampleand-aggregate (SA) [59] on different data, 100 averaged runs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Basic MPC protocols [5, 6] used in EM  *  . We prefix 
protocols for integers with Int and floats with FL. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>Table 2 (omitting non-interactive addition/subtraction),</head><label>2</label><figDesc></figDesc><table>USENIX Association 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>Table 4 :</head><label>4</label><figDesc></figDesc><table>Running times for 3 parties in a 1 Gbits/s LAN for 
this work and Eigner et al. [30]. We report the average of 20 
runs on t2.medium instances with 4 vCPUs, 2 GB RAM (and 
r4.2xlarge instances with 8 vCPUs, 61 GB RAM). Eigner et 
al. [30] evaluated on a 3.20 GHz, 16 GB RAM machine. 

</table></figure>

			<note place="foot" n="1"> Smooth sensitivity approximations exist that provide a factor of 2 approximation in linear-time, or an additive error of max(U)/poly(|D|) in sublinear-time [58, Section 3.1.1]. Note that this error e is w.r.t. smooth sensitivity s, the additive noise is even larger with Laplace((s + e)/ε).</note>

			<note place="foot" n="3"> Secure EM for Median Selection We implement a multi-party computation of the exponential mechanism EM for rank-based statistics enabling distributed parties to learn the differentially private median of their joint data. There are two challenges for multi-party computation of the exponential mechanism: 2 Yao described a garbled circuit for two parties in an oral presentation about secure function evaluation [68], the first written description is from [37], and the first proof was given in [49].</note>

			<note place="foot" n="3"> Secure exponentiation is complex [5,7,20,43], requiring many interactive rounds, and we want to avoid the expensive computational overhead.</note>

			<note place="foot" n="4"> Consider the mode, i.e., the most frequent element. E.g., for two parties with data sets D 1 = {1, 1, 1, 2, 2}, D 2 = {2, 2, 3, 3, 3} the mode per data set is 1 resp. 3 but the mode for the combined data is 2.</note>

			<note place="foot" n="5"> To simplify the explanation, assume the universe consists of consecutive integers, i.e., U = {x ∈ Z | a ≤ x ≤ b} with a, b ∈ Z.</note>

			<note place="foot" n="6"> An undefined ε j can be avoided by using an additional discretization of the universe, with different subrange endpoints, and switching to it if a (differentially private) check suggests n i j = 0 [27].</note>

			<note place="foot" n="7"> To simplify presentation, assume that log k |U| is an integer. Otherwise the last subrange might contain less than k elements, and fewer weight computations are needed in the last step. 2154 29th USENIX Security Symposium USENIX Association</note>

			<note place="foot" n="9"> The related works draw additive noise r from zero-centered Laplace distribution with scale s/ε and sensitivity s (Laplace mechanism, Definition 2). Since Pr[|r| &lt; t · s/ε] = 1 − exp(−t) [29, Fact 3.7], we can bound the absolute error |r| as in Table 6 by setting β = exp(−t), γ = t/ε = ln(1/β)/ε.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work has received funding from the European Union's Horizon 2020 research and innovation programme under grant agreement No 825333 (MOSAICrOWN).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F Accuracy Bounds: Related Work for Multiparty DP Median</head><p>We list theoretical accuracy bounds for related work, i.e., computation of the DP median in the central model supporting many parties, in <ref type="table">Table 6</ref>. Note that the table entries, except for this work, are the sensitivity of the method multiplied by factor γ 9 (and with an additional error term for <ref type="bibr" target="#b58">[59]</ref>). Hence, the first entry is the definition of smooth sensitivity for the median (multiplied by γ). For an empirical comparison of this work with related work we refer to Section 5.3.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Engineering privacy for your users</title>
	</analytic>
	<monogr>
		<title level="m">WWDC 2016</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The u.s. census bureau adopts differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">M</forename><surname>Abowd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining, KDD</title>
		<meeting>the annual ACM SIGKDD International Conference on Knowledge Discovery &amp; Data Mining, KDD</meeting>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Secure computation of the median (and other elements of specified ranks)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gagan</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nina</forename><surname>Mishra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benny</forename><surname>Pinkas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Secure distributed framework for achieving ε-differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dima</forename><surname>Alhadidi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noman</forename><surname>Mohammed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Benjamin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mourad</forename><surname>Fung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Debbabi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Privacy Enhancing Technologies Symposium</title>
		<imprint>
			<publisher>PETS</publisher>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Secure computation on floating point numbers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mehrdad</forename><surname>Aliasgari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marina</forename><surname>Blanton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yihua</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Steele</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
			<publisher>NDSS</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Scale-mamba documentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdelrahaman</forename><surname>Aly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dragos</forename><surname>Rotaru</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Scholl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nigel</forename><forename type="middle">P</forename><surname>Smart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Wood</surname></persName>
		</author>
		<ptr target="https://homes.esat.kuleuven.be/~nsmart/SCALE/,2020" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Benchmarking privacy preserving scientific operations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdelrahaman</forename><surname>Aly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Smart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Applied Cryptography and Network Security, ACNS</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<ptr target="https://aws.amazon.com/ec2/pricing/on-demand/" />
	</analytic>
	<monogr>
		<title level="j">Amazon.com. Amazon Web Services</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Separating local &amp; shuffled differential privacy via histograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Victor</forename><surname>Balcer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Albert</forename><surname>Cheu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Private empirical risk minimization: Efficient algorithms and tight error bounds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raef</forename><surname>Bassily</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abhradeep</forename><surname>Thakurta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual IEEE Symposium on Foundations of Computer Science, FOCS</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Efficient multiparty protocols using circuit randomization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donald</forename><surname>Beaver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<publisher>CRYPTO</publisher>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Semi-homomorphic encryption and multiparty computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rikke</forename><surname>Bendlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Damgård</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Orlandi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sarah</forename><surname>Zakarias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Conference on the Theory and Applications of Cryptographic Techniques, EUROCRYPT</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremy</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu-Xiang</forename><surname>Wang</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1802.04434</idno>
		<title level="m">Kamyar Azizzadenesheli, and Anima Anandkumar. signsgd: Compressed optimisation for non-convex problems</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Secure sublinear time differentially private median computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Böhler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Florian</forename><surname>Kerschbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Distributed Systems Security Symposium, NDSS</title>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Prochlo: Strong privacy for analytics in the crowd</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Bittau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulfar</forename><surname>Erlingsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Petros</forename><surname>Maniatis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ananth</forename><surname>Raghunathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Lie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mitch</forename><surname>Rudominer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ushasree</forename><surname>Kode</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julien</forename><surname>Tinnes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernhard</forename><surname>Seefeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Operating Systems Principles, SOSP</title>
		<meeting>the Symposium on Operating Systems Principles, SOSP</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Differentially private password frequency lists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremiah</forename><surname>Blocki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anupam</forename><surname>Datta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joseph</forename><surname>Bonneau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Network and Distributed Systems Security Symposium, NDSS</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Improved primitives for secure multiparty integer computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Octavian</forename><surname>Catrina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sebastiaan De</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hoogh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Security and Cryptography for Networks, SCN</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Distributed differential privacy via shuffling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Albert</forename><surname>Cheu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Ullman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Zeber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maxim</forename><surname>Zhilyaev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Conference on the Theory and Applications of Cryptographic Techniques, EUROCRYPT</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Cryptε: Cryptoassisted differential privacy on untrusted servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chenghong</forename><surname>Amrita Roy Chowdhury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xi</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM SIGMOD International Conference on Management of data, SIGMOD</title>
		<meeting>the annual ACM SIGMOD International Conference on Management of data, SIGMOD</meeting>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note>Ashwin Machanavajjhala, and Somesh Jha</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Unconditionally secure constant-rounds multi-party computation for equality, comparison, bits and exponentiation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Damgård</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Fitzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eike</forename><surname>Kiltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jesper</forename><surname>Buus Nielsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Toft</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory of Cryptography Conference, TCC</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Multiparty computation from somewhat homomorphic encryption</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Damgård</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Pastro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nigel</forename><surname>Smart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sarah</forename><surname>Zakarias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<publisher>CRYPTO</publisher>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Mapreduce: simplified data processing on large clusters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanjay</forename><surname>Ghemawat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Collecting telemetry data privately</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Janardhan</forename><surname>Bolin Ding</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Yekhanin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Local privacy and statistical minimax rates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Duchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin J</forename><surname>Michael I Jordan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wainwright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual IEEE Symposium on Foundations of Computer Science, FOCS</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Colloquium on Automata, Languages, and Programming, ICALP</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Our data, ourselves: Privacy via distributed noise generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Krishnaram</forename><surname>Kenthapadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moni</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Conference on the Theory and Applications of Cryptographic Techniques, EUROCRYPT</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Differential privacy and robust statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Lei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM symposium on Theory of Computing, STOC</title>
		<meeting>the annual ACM symposium on Theory of Computing, STOC</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Calibrating noise to sensitivity in private data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kobbi</forename><surname>Nissim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory of Cryptography Conference, TCC</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">The algorithmic foundations of differential privacy. Foundations and Trends in Theoretical Computer Science</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Roth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Differentially private data aggregation with optimal utility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabienne</forename><surname>Eigner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aniket</forename><surname>Kate</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matteo</forename><surname>Maffei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Francesca</forename><surname>Pampaloni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Pryvalov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual Computer Security Applications Conference, ACSAC</title>
		<meeting>the Annual Computer Security Applications Conference, ACSAC</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Rappor: Randomized aggregatable privacy-preserving ordinal response</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Úlfar</forename><surname>Erlingsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vasyl</forename><surname>Pihur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aleksandra</forename><surname>Korolova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM conference on computer and communications security, CCS</title>
		<meeting>the annual ACM conference on computer and communications security, CCS</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">A pragmatic introduction to secure multi-party computation. Foundations and Trends® in Privacy and Security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vladimir</forename><surname>Kolesnikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Rosulek</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Centers For Medicare &amp;amp; Medicaid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Services</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note>program year open payments dataset</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Empirical risk minimization in the non-interactive local model of differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Gaboardi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jinhui</forename><surname>Xu</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Preserving differential privacy under finite precision semantics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Gazeau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dale</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Catuscia</forename><surname>Palamidessi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theoretical Computer Science, TCS</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Oded Goldreich. Foundations of Cryptography</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">How to play any mental game</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oded</forename><surname>Goldreich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Silvio</forename><surname>Micali</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Avi</forename><surname>Wigderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM symposium on Theory of Computing, STOC</title>
		<meeting>the annual ACM symposium on Theory of Computing, STOC</meeting>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A comprehensive comparison of multiparty secure additions with differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Slawomir</forename><surname>Goryczka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li</forename><surname>Xiong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on Dependable and Secure Computing</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Composing differential privacy and secure computation: A case study on scaling private record linkage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xi</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashwin</forename><surname>Machanavajjhala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheryl</forename><surname>Flynn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Divesh</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM conference on Computer and Communications Security, CCS</title>
		<meeting>the annual ACM conference on Computer and Communications Security, CCS</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Distributed private heavy hitters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanjeev</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Colloquium on Automata, Languages, and Programming</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Implementing the exponential mechanism with base-2 differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christina</forename><surname>Ilvento</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">Walmart supply chain: Import and shipment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kaggle</surname></persName>
		</author>
		<ptr target="https://www.kaggle.com/sunilp/walmart-supply-chain-data/data,2018.Re-trieved" />
		<imprint>
			<date type="published" when="2019-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Privacy-preserving statistical analysis using secure multi-party computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liina</forename><surname>Kamm</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
		<respStmt>
			<orgName>University of Tartu</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">What can we learn privately?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shiva Prasad Kasiviswanathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Homin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kobbi</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sofya</forename><surname>Nissim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Raskhodnikova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Mp-spdz: A versatile framework for multi-party computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel</forename><surname>Keller</surname></persName>
		</author>
		<ptr target="https://eprint.iacr.org/2020/521" />
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Overdrive: making spdz great again</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Pastro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dragos</forename><surname>Rotaru</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Conference on the Theory and Applications of Cryptographic Techniques, EUROCRYPT</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Reducing communication channels in mpc</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcel</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dragos</forename><surname>Rotaru</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nigel</forename><forename type="middle">P</forename><surname>Smart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Security and Cryptography for Networks, SCN</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Differential privacy: From theory to practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ninghui</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min</forename><surname>Lyu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dong</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weining</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Synthesis Lectures on Information Security</title>
		<imprint>
			<date type="published" when="2016" />
			<publisher>Privacy, &amp; Trust</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">A proof of security of yao&apos;s protocol for two-party computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yehuda</forename><surname>Lindell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benny</forename><surname>Pinkas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Cryptology</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">The limits of two-party differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Mcgregor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Toniann</forename><surname>Pitassi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Omer</forename><surname>Reingold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kunal</forename><surname>Talwar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Salil</forename><surname>Vadhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual IEEE Symposium on Foundations of Computer Science, FOCS</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Privacy integrated queries: an extensible platform for privacy-preserving data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Mcsherry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM SIGMOD International Conference on Management of data</title>
		<meeting>the annual ACM SIGMOD International Conference on Management of data</meeting>
		<imprint>
			<publisher>SIGMOD</publisher>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Mechanism design via differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kunal</forename><surname>Talwar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual IEEE Symposium on Foundations of Computer Science, FOCS</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">On significance of the least significant bits for differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Mironov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM conference on computer and communications security</title>
		<meeting>the annual ACM conference on computer and communications security</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Omer Reingold, and Salil Vadhan. Computational differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Omkant</forename><surname>Pandey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<publisher>CRYPTO</publisher>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">The complexity of computing the optimal composition of differential privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jack</forename><surname>Murtagh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Salil</forename><surname>Vadhan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory of Cryptography Conference, TCC</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">Differentially private objective perturbation: Beyond smoothness and convexity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seth</forename><surname>Neel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aaron</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giuseppe</forename><surname>Vietri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiwei Steven</forename><surname>Wu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">A new approach to practical active-secure two-party computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Jesper Buus Nielsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Sebastian Nordholt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sai Sheshank</forename><surname>Orlandi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Burra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual International Cryptology Conference</title>
		<imprint>
			<publisher>CRYPTO</publisher>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Smooth sensitivity and sampling in private data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kobbi</forename><surname>Nissim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sofya</forename><surname>Raskhodnikova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM symposium on Theory of Computing, STOC</title>
		<meeting>the annual ACM symposium on Theory of Computing, STOC</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">Combining differential privacy and secure multiparty computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Pettai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peeter</forename><surname>Laud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual Computer Security Applications Conference</title>
		<meeting>the Annual Computer Security Applications Conference</meeting>
		<imprint>
			<publisher>ACSAC</publisher>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Differentially private aggregation of distributed time-series with transformation and encryption</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vibhor</forename><surname>Rastogi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Suman</forename><surname>Nath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the annual ACM SIGMOD International Conference on Management of data, SIGMOD</title>
		<meeting>the annual ACM SIGMOD International Conference on Management of data, SIGMOD</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
		<title level="m" type="main">Airavat: Security and privacy for mapreduce</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Indrajit</forename><surname>Roy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">V</forename><surname>Srinath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ann</forename><surname>Setty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vitaly</forename><surname>Kilzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emmett</forename><surname>Shmatikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Witchel</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">How to share a secret</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adi</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Is interaction necessary for distributed private learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abhradeep</forename><surname>Thakurta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jalaj</forename><surname>Upadhyay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Security and Privacy</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<monogr>
		<title level="m" type="main">California Public Salaries Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gaurav</forename><surname>Sood</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Differentially private distributed data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hassan</forename><surname>Takabi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samir</forename><surname>Koppikar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saman Taghavi</forename><surname>Zargar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Collaboration and Internet Computing, CIC</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<monogr>
		<title level="m" type="main">Apple&apos;s Differential Privacy Team. Learning with privacy at scale</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Credit card fraud detection</title>
	</analytic>
	<monogr>
		<title level="j">Machine Learning Group ULB</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">How to generate and exchange secrets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew Chi-Chih</forename><surname>Yao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Annual IEEE Symposium on Foundations of Computer Science, FOCS</title>
		<imprint>
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
