<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T03:00+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Real-time Edge Analytics for Cyber Physical Systems using Compression Rates Real-time Edge Analytics for Cyber Physical Systems using Compression Rates</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>June 18-20. 2014</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sokratis</forename><surname>Kartakis</surname></persName>
							<email>s.kartakis13@imperial.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computing</orgName>
								<orgName type="institution" key="instit1">Imperial College London https://www</orgName>
								<orgName type="institution" key="instit2">Imperial College London</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julie</forename><forename type="middle">A</forename><surname>Mccann</surname></persName>
							<email>j.mccann@imperial.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computing</orgName>
								<orgName type="institution" key="instit1">Imperial College London https://www</orgName>
								<orgName type="institution" key="instit2">Imperial College London</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sokratis</forename><surname>Kartakis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computing</orgName>
								<orgName type="institution" key="instit1">Imperial College London https://www</orgName>
								<orgName type="institution" key="instit2">Imperial College London</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julie</forename><forename type="middle">A</forename><surname>Mccann</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computing</orgName>
								<orgName type="institution" key="instit1">Imperial College London https://www</orgName>
								<orgName type="institution" key="instit2">Imperial College London</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Real-time Edge Analytics for Cyber Physical Systems using Compression Rates Real-time Edge Analytics for Cyber Physical Systems using Compression Rates</title>
					</analytic>
					<monogr>
						<title level="m">â€¢ Philadelphia, PA USENIX Association 11th International Conference on Autonomic Computing</title>
						<imprint>
							<biblScope unit="page">153</biblScope>
							<date type="published">June 18-20. 2014</date>
						</imprint>
					</monogr>
					<note>This paper is included in the Open access to the Proceedings of the 11th International Conference on Autonomic Computing (ICAC &apos;14) is sponsored by USENIX.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>There is a movement in many practical applications of Cyber-Physical Systems to push processing to the edge. This is particularly important were the CPS is carrying out monitoring and control, where the latency between the decision making and control message reception should be minimal. However, CPS are limited by the capabilities of the typically battery powered low re-sourced devices. In this paper we present a self-adaptive scheme that both reduces the amount of resources required to store high sample rate data at the edge and at the same time carries out initial data analytics. Using out Smart Water datasets, plus a selection from other real world CPS applications, we show that our algorithm reduces computation by 98%; data volumes by 55%; while requiring only 11KB of memory at runtime (in-cluding the compression algorithm). In addition we show that our system supports self-tuning and automatic re-configuration which means that manual tuning is alleviated and the scheme can be both applied to any kind of raw data automatically and is able self-optimize as the nature of the incoming data changes over time.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The work presented in this paper is part of a Smart Water project that both monitors water distribution networks (WDN) and controls its valves to optimize water network performance and lifetime over varying demands. ICT to support WDN typically consist of remote or online battery-powered telemetry units (data loggers) that record water data such as flow and pressure etc periodically over numbers of minutes and aggregate this data and send to a server periodically; typically via the mobile phone networks or 3G. Contemporary approaches use Wireless Sensor Network (WSN) <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b4">[5]</ref> technologies to monitor the status of the water network and detect leakage or water bursts. The main drawbacks of these approaches are: (a) the analysis of the data takes place off-line, in base stations or servers meaning that optimal real time decision-making for control would be unrealistic and (b) the sensor nodes require a lot of energy, which places upper bounds on the amounts of data that can be sensed and relayed for analysis. There is a move to make WDN more dynamic and intelligent using wireless sensors and actuation effecting a CPS to monitor and optimally control the water network in real time, by pushing analytics to the edge and increasing the decision-making capacities of energy-constrained sensor nodes.</p><p>Typically such CPS projects monitor the dynamical conditions of the water distribution network. Traditionally this data is sensed at the edge of the network then sent to off-line servers to identify potential failures. Here further analysis via fusion with other data sets, such as customer data may take place. To do this, high precision pressure and flow data, at rates that can exceed 100 samples a second per sensor which can equate to high-precision data averaging at over 512bytes per sec or 0.45Mbytes per 15 minutes. If the system has to transmit this amount of data in 15-minute intervals then the communication process alone will drain the battery of the sensor node rapidly. Therefore, our aim is to reduce the energy cost related to the communication without sacrificing the precision of the data. To this end we evaluated a number of lossless compression algorithms.</p><p>During this evaluation, using real data, we observed a correlation between compression rate and data value fluctuation, and from this derived a scheme that enables the identification of transients or failures in the WDN. This means that instead of compressing raw sensor data and sending it to servers to be decompressed and then analyzed for anomalies, we can use the compression rate to detect anomalies and outliers directly on the sensor node. This is faster, more lightweight and provides early indications of an issue, which can be fed directly into the control function without having to communicate via servers saving time and energy. Furthermore, we have expanded the system using ideas inspired from active learning to support optimal selection of the algorithms input parameters to enable self-tuning and automatic reconfiguration.</p><p>This paper is organized as follows: Section 2 contains our evaluation setup of the compression algorithm and presents our correlation observations. Section 3 describes our anomaly detection algorithm showing that the compression rate can be used in the indirect analysis of raw data. Section 4 presents the cross-evaluation system for the selection of optimal parameters. Section 5 describes the execution of the system using other kind of datasets, and section 6 discusses future work and concludes the paper.</p><p>2 Compression Rate and Raw Data Correlation In order to reduce the energy consumption that would be consumed by high data rate transmissions, while maintaining a high data precision, each sensor node uses lossless compression. Our choice takes memory and energy constraints of our devices into account, so computation and memory intensive algorithms are inappropriate, in spite of their potentially better compression rates. For example, current ultra low power MCUs have 64Kbytes memory <ref type="bibr" target="#b5">[6]</ref>, therefore we limit compression to 10K.</p><p>MiniLZO <ref type="bibr" target="#b6">[7]</ref> (coding method is sliding window -LZ77), requires 8.192KB memory at runtime, and S-LZW-MC <ref type="bibr" target="#b7">[8]</ref> (coding method is dictionary -LZ78), requires 3.250KB of memory <ref type="figure" target="#fig_0">(Figure 1)</ref>. We evaluated the compression rate of each algorithm which we adapted to use in embedded platforms. Three different real datasets (Datasets A, B, and C - <ref type="figure" target="#fig_1">Figure 2</ref> black line), provided by a large UK water company from their loggers were used <ref type="bibr" target="#b0">1</ref> . Each data set consists of 5.5 million data pairs. In the evaluation the input stream is converted into 512-byte packets with the following structure: (a) timestamp (8-byte double data type), (b) 62 measurements (8-byte double * 62 = 469 bytes), and (c) CRC (8-byte double data type). <ref type="bibr" target="#b0">1</ref> We anonymize the company and dataset names for privacy reasons. Using the miniLZO compression algorithm, the results of the compression rate per packet can be seen in the three charts of <ref type="figure" target="#fig_1">Figure 2</ref>. Note that the original water pressure data is also overlaid on the same graphs in black. It is clear from <ref type="figure" target="#fig_1">Figure 2</ref>, that these traces highlight data anomalies as indicated by the orange arrows. From this, we formed the hypothesis that we could use the correlation of the compression rate and raw data.</p><p>We verified offline that the anomalies indicated on our graphs were true. From water technician logs we observed that they were valve position changes which were used to simulate water bursts, causing significant pressure data fluctuation. At these points the compression algorithm is unable to compress the data so the compression rate falls to 0%. In <ref type="figure" target="#fig_1">Figure 2</ref>, the drop in compression rate isolates the areas of raw data where the fluctuation pattern is changeable. The Dataset C is more problematic and the water pressure fluctuation is quite high (see <ref type="figure" target="#fig_1">Figure 2c</ref>) resulting in the compression rate averaging at 16%. Further, in the same dataset a great drop in water pressure occurs (because the local valve was closed for a small period) which impacts compression rate, which increases to 70%.</p><p>Confident that our hypothesis was confirmed and we could use compression rate fluctuation to detect instabilities in high sample rate data, we derived an analytics algorithm that is performed at the end of the compression stage. This has the added advantage that the analytics cost m times less in terms of scale and complexity, where m is the number of measurements per packet. Because each packet contains 62 measurements (m = 62), the produced compression rates are approximately 89,000 (5,518,000 total measurements / 62 measurements per packet). Thus, the analysis is applied to 98% less values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Anomaly Detection Algorithm</head><p>We produce a scheme to automatically detect significant changes in compression rate and therefore identify the timestamps of anomalies. To maximize the anomaly detection while minimizing the number of false-positive results, noise is removed from the compression rate stream using a one-dimensional Kalman Filter <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b9">[10]</ref> indicated in <ref type="figure">Figure 3b</ref> with a blue line. The use of Kalman filters is motivated by: (a) its support of streaming analysis using only the current input measurement (and therefore is memory efficient), (b) no matrix calculations are required (therefore it is computationally efficient), (c) ease of the algorithm tuning process, and (d) implementation simplicity.</p><p>For every new data value input, the Kalman Filter algorithm uses and updates the Kalman state. The Kalman state consists of the process noise covariance q, the measurement noise covariance r, the actual value x after noise removal, the estimation error covariance p, and the Kalman gain k. During the initialization process the parameters which need tuning are the noise q, the sensor noise r, the initial estimated error p and the initial value of x. The Kalman filter was manually initialized using the following parameters: q = 0.005, r = 25, p = 0, and x = the first compression rate measurement. In every new measurement, the algorithm updates the Kalman state using the following steps: the x value of Kalman Filter state and raw data) the anomalies are presented as great drops (orange arrows). The drops are being detected by using the average and the standard deviation of the compression rate moving average for a predefined window size w. We use this because it smoothes the states for easier analysis and reduces threshold computation to window sizes. Specifically, the algorithm computes the moving average of compression rate data with a window size w = 128 Kalman Filter x measurements, with the average avg and the standard deviation std of the moving average. In every Kalman state update, the algorithm checks if: Where l represents the elasticity of the outlier detection (smaller values mean that the system is more sensitive -in <ref type="figure" target="#fig_4">Figure 4a l=3</ref> and in b l=1.5). As can be observed in <ref type="figure" target="#fig_4">Figure 4a</ref> (Dataset C), the algorithm suffers from a cold start effect (it identifies the first values to be outliers because the moving average is not calculated). To solve this problem, the algorithm initializes the avg and computes std by using the current compression rate value. Furthermore, another problem occurs when a significant variation of compression rate data is detected <ref type="figure" target="#fig_4">(Figure 4a)</ref>. In that case, because the standard deviation has a high value, the algorithm needs more intervals for the moving average calculations to detect the outliers or anomalies. The solution is to reset the values, that is to initialize the avg and std, every time the distance between the boundaries created by the standard deviation become greater than a specific threshold t (in our system the threshold t = 35).  shows that this solves the cold start and large variation problems and illustrates the anomalies based on normalized data (green arrows). Furthermore, another benefit is that the algorithm can be adapted to changes in the behavior of the data stream. For example, <ref type="figure" target="#fig_4">Figure 4b</ref>, the algorithm detected the anomaly (red markers x value = timestamp) when the compression rate changes from 10% to 70% as there is no immediate drop (State A to new State B), the algorithm recognizes that the system has a new steady state (B) until the next drop from 70% to 10%. Therefore, this shows that the algorithm adapt extremely fast to new conditions/states.</p><p>We applied this approach to Dataset A and B, and  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Input Parameters Optimal Tuning</head><p>According to the above analysis, by tuning the input parameters, our algorithm can be applied to any case of high sample rate anomaly detection in hardwareconstrained sensor nodes. However, to maximise the performance of this, an element of tuning is required as observed in the previous section. <ref type="table" target="#tab_0">Table 1</ref> aggregates all the tuning parameters required by our algorithm. The initialization of input parameters using a manual approach is inappropriate because it requires permutations of all the different combinations of parameters val- ues. In order to optimize the algorithms tuning process, we borrow ideas from active learning techniques <ref type="bibr" target="#b10">[11]</ref>. This approach requires feedback from real users or an offline system to identify true anomalies, but this is not onerous 2 . Here true anomalies for a single representative training dataset are labeled.</p><p>For the results that we present here, we applied the active learning idea by asking water data technicians to manually label anomalies on a subset of our evaluation data. Then, we created an offline cross-evaluation system of <ref type="figure" target="#fig_8">Figure 6</ref>, which uses our algorithm and calculates the correct, false/positive (FP), and true/negative (TN) anomaly detections based on the initial labeling. This establishes the optimal input parameters as the combination that maximizes the following distance:</p><formula xml:id="formula_0">Distance D = [Correct -(FP + TN)] Detections</formula><p>Using this, one can imagine that a system would update parameters to re-configure the in-node anomaly detection algorithm over time. The data analysis component could recognize that the system requires reconfiguration using customer complains (anomalies are being missed) and system alarms (which increase when the water network is unstable).</p><p>Before the creation of the cross-evaluation system, the algorithm's input parameters for datesets were selected manually. In the previous section we show that correct anomalies were identified however here we show that the cross-evaluation system further improves the algorithms accuracy significantly. The reason is that manual observation of high sample rate data is difficult because the high density data. For example, <ref type="figure" target="#fig_10">Figure 7</ref> presents the results of the Distance D of each different combination of the following parameter sets for Dataset A:  The orange arrow on <ref type="figure" target="#fig_10">Figure 7</ref> are showing input parameters we derived manually, which were w = 128, q = 0.005, r = 25 <ref type="figure" target="#fig_10">(Figure 7</ref> orange combinations). The initial selection of parameters was made on a moving average window w = 128 because our intuition was that a smaller window used to calculate the thresholds, would provide greater accuracy. However, the cross-evaluation system shows that the optimal combination would have a window of w = 512, q = 0.005, r = 20 <ref type="figure" target="#fig_10">(Figure 7 green arrow)</ref> where the distance D indicates that accuracy will be increased by 15%. Because the cross-evaluation system uses an exhaustive approach, it always returns the optimal combination of input parameters reducing the effort and time to find the optimal combination manually. To understand the generality of the work beyond water applications, we applied our cross-evaluation system to datasets from St Bernard Mountain Pass sensor nodes in Switzerland <ref type="bibr" target="#b11">[12]</ref> reporting temperature, soil moisture and watermark measurements. <ref type="figure" target="#fig_11">Figure 8</ref> and <ref type="figure" target="#fig_12">Figure 9</ref> illustrates the results of our cross-evaluation system for the temperature dataset. During the labeling process, we defined two periods as anomalies and we executed our cross evaluation process which was initiated using the following:  <ref type="figure" target="#fig_12">Figure Figure 9</ref> we can infer that the anomalies are detected precisely and in order to verify our results we manually checked 125 cross evaluation runs. We repeated the same process for soil moisture, and watermark sensor measurements from ten different sensor nodes and we achieved similar results, but due to lack of space we do not include them in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Using Different Datasets</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Future Work &amp; Conclusion</head><p>This paper presents a scheme that combines lightweight compression and anomaly detection for Cyber-Physical Systems. The work has been developed as part of a Smart Water project and we show that it not only significantly reduces the amount of communications between sensor devices and the cloud, but also that early transient or event (such as water bursts) detection can run on lowresourced sensor nodes meaning that local control functions can occur with minimal latency. The main contribution is the innovative approach to analyzing high sample rate data by using compression rate rather than raw data. The main benefits of our system are: (a) the size of the program at run time, which can be applied in embedded systems, (b) data reduction (and proportional communication and energy costs) by 55%, (c) computation reduction by 98%, (d) the algorithm can be applied independently of the content of the raw data with an appropriate initial tuning, (e) the adaptation of our method to match trend/state changes in the raw data. We extend the system to be able to derive initialization parameters for selfconfiguration and to adjust said parameters as the nature of the underpinning data changes over time thus showing significant performance improvements over manual tuning by a further 15%.</p><p>Future work of our approach is to examine the effect of changes in data precision (e.g. by using float instead of double values), to test our algorithm with other lightweight compression algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Compression algorithms evaluation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Compression rate &amp; raw data comparison of Dataset A, B, and C.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure 3: Apply Kalman Filter to Dataset A and drop detection -(w = 128, q = 0.005, r = 25).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(</head><label></label><figDesc>Kalman state x) &gt; (avg + std * l) || (Kalman state x) &lt; (avg -std * l)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Dataset C -(a) "Cold Start", Large Variation and unelastic outliers detection (l = 1.5), and (b) fixed algorithm results (l=3) -(w = 128, q = 0.005, r = 25).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4b</head><label></label><figDesc>Figure 4b shows that this solves the cold start and large variation problems and illustrates the anomalies based on normalized data (green arrows). Furthermore, another benefit is that the algorithm can be adapted to changes in the behavior of the data stream. For example, Figure 4b, the algorithm detected the anomaly (red markers x value = timestamp) when the compression rate changes from 10% to 70% as there is no immediate drop (State A to new State B), the algorithm recognizes that the system has a new steady state (B) until the next drop from 70% to 10%. Therefore, this shows that the algorithm adapt extremely fast to new conditions/states. We applied this approach to Dataset A and B, and Figure 4 presents the results for Dataset A(raw data = black line). The red x markers are the anomalous values detected; the green arrows illustrate the process of matching the timestamps between compressed and raw data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Figure 4b shows that this solves the cold start and large variation problems and illustrates the anomalies based on normalized data (green arrows). Furthermore, another benefit is that the algorithm can be adapted to changes in the behavior of the data stream. For example, Figure 4b, the algorithm detected the anomaly (red markers x value = timestamp) when the compression rate changes from 10% to 70% as there is no immediate drop (State A to new State B), the algorithm recognizes that the system has a new steady state (B) until the next drop from 70% to 10%. Therefore, this shows that the algorithm adapt extremely fast to new conditions/states. We applied this approach to Dataset A and B, and Figure 4 presents the results for Dataset A(raw data = black line). The red x markers are the anomalous values detected; the green arrows illustrate the process of matching the timestamps between compressed and raw data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Algorithm results (l=3) for (a) Dataset A and (b) Dataset B -(w = 128, q = 0.005, r = 25).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Sensor node re-configuration process.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>w</head><label></label><figDesc>= {64, 128, 512, 1024} q = {0.001, 0.005, 0.05} 2 Data anomaly detection can be confirmed off-line automatically by correlating candidate stream data anomalies with other data sets such as customer or water technician records.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Cross evaluation distance calculation resultsDataset A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Cross evaluation distance calculation resultsTemperature Dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: Temperature data anomaly detection results -(w = 128, q = 0.5, r = 10).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 8</head><label>8</label><figDesc>Figure 8 presents the results of distance D per combination of input parameters, where the optimal combination (w = 128, q = 0.5, r = 10) with 170 correct and 21 error anomaly detection (D = 151). Furthermore, from Figure Figure 9 we can infer that the anomalies are detected precisely and in order to verify our results we manually checked 125 cross evaluation runs. We repeated the same process for soil moisture, and watermark sensor measurements from ten different sensor nodes and we achieved similar results, but due to lack of space we do not include them in this paper.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Algorithm input parameters</head><label>1</label><figDesc></figDesc><table>Process 
Parameters 
Input stream split 
Packet size m 
Input stream data precision 
Measurement bytes 

Kalman Filter initialization 

Noise q 
Sensor noise r 
Initial estimated error p 
Moving average computation 
Window size w 
Boundaries creation 
Elasticity l 
Great variation threshold 
Threshold t 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgments</head><p>This work forms part of the Big Data Technology for Smart Water Nets research project funded by NEC Corporation, Japan.</p><p>The hydraulic pressure datasets used in this paper have been provided by Dr Ivan Stoianov and Mr Asher Hoskins, Dept Civil Engineering, Imperial College London, UK.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Using wireless sensor network in water, electricity and gas industry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Babak</forename><surname>Aghaei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Electronics Computer Technology (ICECT), 2011 3rd International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="14" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A sensor network for non-intrusive and efficient leak detection in long pipelines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandre</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Younis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wireless Days (WD)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Remote water quality monitoring system based on wsn and gprs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Hao Xiao-Qiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>De-Bao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Instrument Technique and Sensor</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">18</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Water distribution system monitoring and decision support using a wireless sensor network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Allen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ami</forename><surname>Preis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mudasser</forename><surname>Iqbal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew J</forename><surname>Whittle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="641" to="646" />
		</imprint>
	</monogr>
	<note>14th ACIS International Conference on</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Pipenet: A wireless sensor network for pipeline monitoring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Stoianov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lama</forename><surname>Nachman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sam</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timur</forename><surname>Tokmouline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Processing in Sensor Networks, 2007. IPSN 2007. 6th International Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="264" to="273" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Atmel AVR 8-bit and 32-bit Microcontrollers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Atmel</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Optimal methods for data storage in performance measuring and monitoring devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Viktor</forename><surname>Bubla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Electronic Power Engineering Conference</title>
		<meeting>Electronic Power Engineering Conference</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Data compression algorithms for energy-constrained devices in delay tolerant networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Christopher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Margaret</forename><surname>Sadler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Martonosi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th international conference on Embedded networked sensor systems</title>
		<meeting>the 4th international conference on Embedded networked sensor systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="265" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<ptr target="http://interactive-matter.eu/blog/2009/12/18/filtering-sensor-data-with-a-kalman-filter/" />
		<title level="m">Interactive Matter Lab. Filtering Sensor Data with a Kalman Filter</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
	<note>Online; accessed 20-March-2014</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Distributed kalman filter with embedded consensus filters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reza</forename><surname>Olfati-Saber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Decision and Control, 2005 and 2005 European Control Conference. CDC-ECC&apos;05. 44th IEEE Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="8179" to="8184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Active learning literature survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burr</forename><surname>Settles</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="55" to="66" />
			<pubPlace>Madison</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Wisconsin</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Wireless sensor networks for environmental monitoring: the sensorscope experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guillermo</forename><surname>Barrenetxea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">FranÃ§ois</forename><surname>Ingelrest</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gunnar</forename><surname>Schaefer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Communications</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="98" to="101" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
