<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:27+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">IoTPOT: Analysing the Rise of IoT Compromises</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yin</forename><surname>Minn</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pa</forename><surname>Pa</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shogo</forename><surname>Suzuki</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Katsunari</forename><surname>Yoshioka</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tsutomu</forename><surname>Matsumoto</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Takahiro</forename><surname>Kasama</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Rossow</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">†1 Graduate School of Environment and Information Sciences/Institute of Advanced Sciences †1</orgName>
								<orgName type="institution">Yokohama National University</orgName>
								<address>
									<postCode>†2</postCode>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Institute of Advanced Sciences</orgName>
								<orgName type="institution">National Institute of Information and Communications Technology</orgName>
								<address>
									<postCode>†3</postCode>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Yokohama National University</orgName>
								<address>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution" key="instit1">†3 Cluster of Excellence</orgName>
								<orgName type="institution" key="instit2">MMCI</orgName>
								<orgName type="institution" key="instit3">Saarland University</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">IoTPOT: Analysing the Rise of IoT Compromises</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>We analyze the increasing threats against IoT devices. We show that Telnet-based attacks that target IoT devices have rocketed since 2014. Based on this observation , we propose an IoT honeypot and sandbox, which attracts and analyzes Telnet-based attacks against various IoT devices running on different CPU architectures such as ARM, MIPS, and PPC. By analyzing the observation results of our honeypot and captured malware samples, we show that there are currently at least 4 distinct DDoS malware families targeting Telnet-enabled IoT devices and one of the families has quickly evolved to target more devices with as many as 9 different CPU architectures.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Since years, it is known that many Internet of Things (IoT) devices are vulnerable to simple intrusion attempts, for example, using weak or even default passwords <ref type="bibr" target="#b0">[1]</ref>. In 2012, Carna botnet <ref type="bibr" target="#b1">[2]</ref> revealed that there were more than 1.2 million open devices that allowed logins with empty or default credentials. In January 2014, an Internet-connected fridge was discovered as a part of a botnet sending over 750,000 spam e-mails <ref type="bibr" target="#b2">[3]</ref>. In December 2014, online DDoS services (i.e. booters) knocked down Sony and Microsoft's gaming networks, presumably powered by thousands of compromised IoT devices such as home routers <ref type="bibr" target="#b3">[4]</ref>. From an attacker point of view, IoT devices are attractive playgrounds, as-as opposed to PCs-they are 24/7 online, have no antivirus installed, and weak login passwords give attackers easy access to powerful shells (such as <ref type="bibr">Busy- Box)</ref>. Seeing these trends, we believe that IoT devices are an important new area of security research.</p><p>In this paper, we investigate the threat of IoT device compromises in the masses. We first analyze Telnetbased scans in darknet, revealing that attacks on Telnet have rocketed since 2014. Moreover, by grabbing Telnet banners and web contents of the attackers, we</p><p>show that the majority of attacks indeed stem from IoT devices.</p><p>Motivated by this, we propose IoTPOT, a novel honeypot to emulate Telnet services of various IoT devices to analyze ongoing attacks in depth. IoTPOT consists of a frontend low-interaction responder cooperating with backend high-interaction virtual environments called IoTBOX. IoTBOX operates various virtual environments commonly used by embedded systems for different CPU architectures. During 39 days of operation, we observed 76,605 download attempts of malware binaries from 16,934 visiting IP. We also confirm that none of these binaries could have been captured by existing honeypots that handle Telnet protocol such as honeyd and telnet password honeypot because they are not able to handle different incoming commands sent by the attackers.</p><p>We manually downloaded 43 distinct malware samples and found out that they run on 11 different CPU architectures. Among 43 collected samples, 39 samples were new to the database of VirusTotal <ref type="bibr" target="#b4">[5]</ref> (as of 2015/05/13) showing a gap of capturing utilities for this type of threat. Out of 4 samples that were in VirusTotal, 2 of them were not detected by any of the 57 A/Vs of VirusTotal (as of <ref type="bibr">2015/05/13)</ref>.</p><p>In order to analyze these captured malware binaries, we propose IoTBOX, the first malware analysis environment for IoT devices. IoTBOX supports 8 CPU architectures, spanning MIPS, ARM, and PPC. The sandbox analysis of 17 samples by IoTBOX revealed that the samples are used to perform 10 different types of DDoS attacks and port 23 scans.</p><p>Finally, combining the observations results of IoTPOT with the sandbox analysis by IoTBOX, we confirm that i) there are at least four distinct malware families spreading via Telnet, ii) their common behavior is performing DDoS and further propagation over Telnet, iii) some families evolve quickly, updating frequently and shipping binaries for a variety of CPU architectures, even in the limited observation period of 39 days.</p><p>The dataset of captured malware, traffic of IoTPOT, list of compromised IoT device types from our darknet analysis are available upon request for interested researchers <ref type="bibr" target="#b5">[6]</ref>. We are going to make IoTPOT open source after finishing all documentation processes.</p><p>Following is the summary of our contributions: 1) We point out a huge increase of Telnet-based attacks and the involvement of IoT devices.</p><p>2) To analyze the scope and variety of the attacks, we propose a novel honeypot called IoTPOT, which mimics IoT devices and captures Telnet-based intrusions.</p><p>3) We further analyze the threats and propose IoT-BOX, which enables us to run captured malware on 8 different CPU architectures.</p><p>4) We reveal that there are at least four DDoS malware families targeting IoT devices.</p><p>The rest of the paper is organized as follows: Sect. 2 explains our preliminary investigations on Telnet-based attacks. Sect. 3 describes IoTPOT and Sect. 4 IoTBOX.</p><p>In Sect. 5, we describe the overview of ongoing attacks revealed by our analysis. In Sect. 6, related works are presented. Finally, in Sect. 7 conclusion and future works are explained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Investigation on Telnet-based Attacks</head><p>Until now, there are only anecdotal reports on Telnetbased compromises. In this section, we investigate how the situation of Telnet-based compromises has changed.</p><p>To this end, we analyze a darknet of NICTER [7] Japan's darknet monitoring system that monitors over 270,000 IP addresses presently. <ref type="figure" target="#fig_0">Figure 1</ref> shows the traffic on 23/TCP since 2005, both in terms of packets and source IP addresses per day (averaged over all IP addresses in the darknet). The data shows a recent increase of scans for Telnet. According to the previous study <ref type="bibr" target="#b7">[8]</ref>, the large peak in the end of 2012 is caused by the activities of Carna botnet, created by anonymous hacker for Internet Census by compromising a large number of IoT devices such as routers <ref type="bibr" target="#b1">[2]</ref>.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">IoT Honeypot (IoTPOT)</head><p>Our preliminary investigation on Telnet-based attacks implies that there are number of IoT devices being compromised and misused to search and attack other IoT devices. In order to study these attacks in depth, we propose IoTPOT, a novel honeypot that emulates interactions of Telnet protocol and a variety of IoT devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Telnet Protocol</head><p>Before explaining IoTPOT, we briefly revisit the Telnet protocol <ref type="bibr" target="#b9">[10]</ref>. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates the interactions between client and server on Telnet. After the TCP 3-way handshake, client and server can exchange Telnet options. Either Telnet server or client can initiate a request such as "Do Echo", a request for echo back and "Do NAWs" a request to Negotiate About Window size (NAWs). After exchanging options, the server sends a welcome message to the client, immediately followed by login prompt. For example, "BCM96318 Broadband Router" as welcome message and "Login:" as login prompt. In this paper, we call the above initial part of interactions banner interactions. Then, the client sends a pair of username/password to log in to the server. We call this part authentication. Finally, if the credentials are valid, the client logs in and instructs the server using various shell commands. We call this part command interactions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">IoTPOT Design</head><p>The Telnet protocol already highlights a few challenges for our honeypot design. First, we need to support options that the attacking clients choose to use. Second, we aim to provide realistic welcome message and login prompt, to deal with situations where an attacker specializes in compromising certain devices only. Third, we want to allow for logins, while we also want to observe characteristics in the authentication interactions (e.g., sequences of usernames/passwords). Finally, independent from the Telnet protocol, our honeypot should support multiple CPU architectures to capture malware across devices. Our honeypot is designed to support these features.</p><p>In order to emulate different devices, we collected these banners from the Internet by performing Telnet scans with masscan tool <ref type="bibr" target="#b10">[11]</ref> . From all collected banners, we prioritized banners of hosts that have accessed our honeypot. Considering a self-spreading nature of these attacks, these attacking hosts can also be considered as already compromised victims, which should be emulated by our honeypot.</p><p>In the next step, during authentication, IoTPOT supports various tactics. For example, it can be configured to reject any authentication credentials to observe login attempts, to allow immediate authentication regardless of the login, to accept only certain credentials, or reject the first attempts and eventually accept a login. Finally, IoTPOT chooses from a set of environments during the command interactions. As each IoT device runs on different CPU architecture, we prepare a set of embedded linux OS on different CPU architectures to handle the interactions of various devices. <ref type="figure" target="#fig_2">Figure 3</ref> is the overview of IoTPOT. The heart of IoT-POT is Frontend Responder, which acts as different IoT devices by handling incoming TCP connection requests, banner interactions, authentication, and command interactions with a set of device profiles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">IoTPOT Implementation</head><p>A device profile consists of a banner profile, an authentication profile, and a command interaction profile. Banner profiles determine the responses of the honeypot for banner interactions, namely Telnet options, welcome message, and login prompt. Authentication profiles determine how to respond to incoming authentication challenges. Command interaction profile determines the responses to incoming commands, consisting of a set of commands and their corresponding responses.</p><p>When an incoming command is not known yet, Frontend Responder establishes a Telnet connection with a backend IoTBOX and forwards the command to it. IoTBOX is a set of sandbox environments that run Linux OS for embedded devices with different CPU architectures. The detailed explanation of IoTBOX is in Section 4. Frontend Responder forwards a response from IoTBOX to the client. Note that the incoming commands forwarded to IoTBOX may cause malware  The Downloader component examines the interactions for download triggers of remote files, such as malware binaries. In particular, we download from all URLs we observed via commands such as wget, ftp, and tftp.</p><p>Finally, the Manager handles configuration of IoTPOT. Namely, it links IP addresses to specific Device Profiles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Observation Results</head><p>IoTPOT </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>General Flow of Telnet Attacks:</head><p>We observed three typical steps of compromise: 1) The first stage of attack is intrusion, in which attackers attempt to login to our honeypot.</p><p>2) The second stage is infection, in which attackers send a series of commands over Telnet to check and customize the environment and download and execute the external binaries.</p><p>3) The third stage is monetization, in which executed binaries are controlled by the attackers through C&amp;C to conduct the intended malicious activities, such as DDoS attacks and spreading. The following subsections highlight some points noticed for each attack stage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.1">Stage 1: Intrusion</head><p>We recognize two major intrusion behaviors: login attempts with a fixed or a random order of credentials. <ref type="table" target="#tab_3">Table 2</ref> shows the major four login patterns observed by IoTPOT. For the fixed login sequences, we can reasonably infer that these challenges are from malware sharing the same implementation of dictionary attacks.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">Stage 2: Infection</head><p>After successfully logged in to honeypot, attackers check and customize the environment to prepare download of malware binary by sending series of commands over Telnet. <ref type="table" target="#tab_1">Table 3</ref> summarizes the 6 major patterns of command sequences observed by IoTPOT. Note that some of the patterns were observed only in the trial operation period for parameter tuning and we do not have credible counts of these patterns. We believe most infection activities are automated as exactly the same pattern of commands are repeatedly observed and also the intervals between the commands are very short.</p><p>We name each pattern by characteristic string it contains. For example, the patterns named ZORRO 1, ZORRO 2 and ZORRO 3 all have common string "ZORRO" in their command sequences. Moreover, we can see attacker's common intension among them. Namely, all three patterns of ZORRO try to remove many existing commands and files under /usr/bin, /bin/, etc, and prepare customized command for downloading external malware binary file. With this setup, other intruders would have difficulty to abuse the system. Similar intension of attackers can be seen in case of pattern named Bashlite. Although it does not alter the commands, instead it activates iptables to drop incoming telnet connection requests. Bashlite also has functionality to kill other existing malicious processes. All these activities explained above come in a form of commands over Telnet except that Bashlite downloads and executes shell script file to do it. Although there are diversities in attackers' behavior at the infection stage, they all have a common goal of downloading and executing malware binary file. One more common behaviors we found is checking whether shell is usable properly or not by echoing a particular string in all families. If the appropriate reply for the echo command is not received, attacker stops the attacks.</p><p>Comparison with honeyd: We confirmed that honeyd <ref type="bibr" target="#b12">[13]</ref> cannot handle these commands in <ref type="table" target="#tab_1">Table 3</ref> and therefore cannot capture malware binaries observed by IoTPOT. Namely, honeyd failed to respond to very first few commands such as "cat /bin/sh" in case of ZORRO family and appropriate reply for the first echo command of Bashlite, nttpd and KOS family and so the attacker stopped sending any further commands.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.3">Stage 3: Monetization</head><p>Finally, the attacker tries to monetize the compromised devices. We thus analyzed the 43 malware binaries collected by IoTPOT. We show the list of samples in Appendix. The sandbox analysis results of some of the binaries are described in Section 4. As none of the collected samples are obfuscated, we classified the binaries based on the hardcoded strings, such as strings for C&amp;C commands. <ref type="table">Table 4</ref> summarizes results of manual clustering of the collected samples based on the characteristic strings in the binaries.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.4">Coordinated intrusions</head><p>In the trial period, we noticed a coordinated intrusion by ZORRO family, in which reconnaissance and the actual malware infection were done by different hosts in coordination. Namely, we observed a reconnaissance host attempting logins to our honeypot which had been configured to accept only a single pair of username/ password. Eventually, this reconnaissance host successfully logged in by guessing a valid login, and sent several commands over Telnet for information gathering of the compromised host, including the architecture of CPU it ran. However, it disconnected the session without downloading nor executing any malware binary file. After a while, we observed another host who visited our honeypot and successfully logged in with just one challenge implying that it already knew the valid credential from the earlier reconnaissance. This intrusion host then sent series of commands to download and execute external malware binary. The downloaded binary file was indeed of the CPU architecture of the honeypot and so we think that this host knew the CPU architecture of the honeypot from the reconnaissance.</p><p>We then set a new login credential and kept observation. We had a visit of another reconnaissance host and it succeeded to log in and identify the new credential. After a while, the same intrusion host from the previous intrusion visited us again with the newly obtained credential and infected the malware. After all, we observed a group of over 100 reconnaissance hosts and only a single intrusion host in coordination. <ref type="figure" target="#fig_4">Figure 4</ref> depicts the coordinated attack.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">IoT Sandbox (IoTBOX)</head><p>IoTPOT has shown that there is a clear rise of Telnetspreading malware that has already compromised thousands of IoT devices. In this section, we present our multi-architecture sandbox called IoTBOX.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">IoTBOX Design</head><p>IoTBOX supports analysis of malware on 8 different CPU architectures, namely as MIPS, MIPSEL, PPC, SPARC, ARM, MIPS64, sh4 and X86. The design of IoTBOX is shown in <ref type="figure">Figure 5</ref>. To run malware binaries of different CPU architectures, we need a cross compilation environments. We thus chose to run respective platforms (OS) on an emulated CPU using QEMU, an open source processor emulator. Then, we use the respective OpenWRT platform to run on the emulated CPU environment. OpenWRT is a highly extensible GNU/Linux distribution for embedded devices (typically wireless routers) <ref type="bibr" target="#b13">[14]</ref>. To install OpenWRT, we use OpenWRT Builtroot, which is a build system for the distribution and it works on Linux, BSD or MacOSX. Next to OpenWRT, IoTBOX also supports Debian Linux.</p><p>Finally, the Access Controller controls all network related operations such as NAT and outbound traffic such as C&amp;C communication, DNS resolution and attack traffic such as DoS. We block all outgoing DoS traffic from malware except allowing some DNS and HTTP traffic of maximum 5 packets per minutes. 23/TCP scans are redirected to Dummy Server, which is indeed IoTPOT. With this way, we can monitor how propagation over Telnet is done.</p><p>Analysis Report outputs the results of pcap analysis results for every 24 hours showing total number of packets, start time and end time of packet captures, data byte/bite rate, average packet size and rate and total number of victim IP address for each attack. In addition, summary of commands strings from C&amp;C are summarized if any. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Analysis Results</head><p>Using IoTBOX, we analyzed 17 malware binaries of 8 CPU architectures. We observed 8 of them performed 10 different types of DoS attacks and 2 performed 23/TCP scans. Please refer to Appendix for the information of analyzed malware samples. A summary of the observed attacks is illustrated in <ref type="figure" target="#fig_5">Figure 7</ref>. Most attacks we observed were UDP floods and many different types of TCP floods. We also observed UDP floods against multiple destination ports, which seemed to aim at flooding target network. Interestingly, we also observed DNS water torture attack <ref type="bibr" target="#b14">[15]</ref>, SSL attacks <ref type="bibr" target="#b15">[16]</ref> and other two unknown DNS based attacks in which a large number of queries to unknown type of DNS resource records (RR) were sent to an authoritative name server of a popular ISP. Sample Bin 43 exhibits unique functionality of a fake web hosting. Namely, it starts hosting a web page that looks like a top page of a popular Chinese search engine "baidu.com". In order to avoid any misuse of the fake web page in real attack, we carefully monitor if any incoming connections appear although nothing has been seen yet. One more point we notice is that Bin 13, 19, and 22 of <ref type="figure" target="#fig_5">Figure 7</ref> have a backdoor port 5000/UDP open for further remote control of the compromised host because the initial intrusion route, the Telnet, would already have been blocked by iptables <ref type="bibr" target="#b16">[17]</ref> during the infection phase to prevent other attackers from compromising the host.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Monetization</head><p>(behaviors in sandbox in <ref type="figure" target="#fig_5">Fig. 7</ref>) <ref type="figure">Figure 6</ref> depicts the overview of Telnet-based attacks observed by IoTPOT and IoTBOX. Following are our findings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Overview of Observed Attacks</head><p>1) We have observed four malware families whose intrusion, infection, and malware binaries are independent from each other.</p><p>2) From viewpoint of monetization, the different families share the same goal of performing DoS attacks and Telnet scans. The only exception is Bin 43 that starts to host a fake search engine.</p><p>3) Some families seem to spread more aggressively than others. Namely, as in <ref type="figure">Figure 6</ref>, ZORRO family has updated its command sequences twice during observation period. Also, the Bashlite family has increased the diversity of binaries to support more CPU architectures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Related Works</head><p>We implemented the first honeypot tailored for IoT devices, IoTPOT, and to the best of our knowledge, there is still no honeypot like IoTPOT that mimics IoT devices of many different CPU architectures while listening on 23/TCP with the ability to learn unknown command interactions. Although Honeyd [13] listens on 23/TCP, it is a low-interaction honeypot and cannot handle not only Telnet options but also command interactions interactively, as explained in Sect. 3.4.2. Although there is another honeypot known as Telnet password honeypot <ref type="bibr" target="#b17">[18]</ref>, its main focus is collecting Telnet password and command interactions are not supported. Other popular low interaction honeypots such as Dionaea <ref type="bibr" target="#b18">[19]</ref> and Nepenthes <ref type="bibr" target="#b19">[20]</ref> do not support Telnet.</p><p>We also implemented IoTBOX, the first sandbox that handle to run malware of different CPU architectures. Out of more than 15 surveyed sandbox systems in <ref type="bibr">[21]</ref>, none supports different CPU architecture such as MIPS, ARM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusion and Future Works</head><p>We have shown that IoT devices are susceptible to compromises and increasingly are also target for malware on the masses. We identified four malware families, which show worm-like spreading behavior, all of which are actively used in DDoS attacks.</p><p>As future work, we plan to extend IoTPOT to support more protocols that are likely the target by attacks, such as SSH. Furthermore, we aim to extend the sandbox with capabilities to stimulate even more architectures and environments that are common on IoT devices.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 -Host Counts Per IP of Darknet Packet Counts Per IP</head><label>1</label><figDesc>Figure 1 -Packets and hosts on 23/TCP per day per darknet IP</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 -</head><label>2</label><figDesc>Figure 2 -Telnet Protocol</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 -</head><label>3</label><figDesc>Figure 3 -Overview of IoTPOT Table 2 -Major log in patterns observed by IoTPOT.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>1. Check type of victim shell with command "sh" 2 . Check error reply of victim by running non-existing command such as ZORRO. 3 . Check whether wget command is usable or not. 4 . Check whether busybox shell can be used or not by echoing ZORRO. # 5 . Remove various command and files under /usr/bin/, /bin, var/run/, /dev. 6 . Copy /bin/sh to random file name 7. Append series of binaries to random file name of step 6 and make attacker's own shell 8. Using attacker's own shell, download binary . IP Address and port number of malware download server can be seen in the command. 9 . Run binary ZORRO 2 1. Check type of victim shell with command "sh" 2 . Check error reply of victim by running non-existing command such as ZORRO. 3 . Check whether wget command is usable or not. 4 . Check whether busybox shell can be used or not by echoing ZORRO. # 5 . Remove various command and files under /usr/bin, /bin, var/run, /dev. 6 . Copy /bin/sh to random file name 7. Append series of binaries to random file name of step 6 and make attacker's own shell 8. Using attacker's own shell, download binary . IP Address and port number of malware download server cannot be seen in the command because it is hard coded in the attacker's own shell. 9 . Run binary ZORRO 3 1. Check type of victim shell with command "sh" 2 . Check error reply of victim by running non-existing command such as ZORRO. 3 . Check whether wget command is usable or not. 4 . Check whether busybox shell can be used or not by echoing ZORRO. 174 5. Remove all under /var/run, /dev, /tmp, /var/tmp 6. Copy /bin/sh to random file name 7. Append series of binaries to random file name of step 6 and make attacker's own shell 8. Using attacker's own shell, download binary. IP Address of malware download server can be seen in the command and port number cannot be seen in the command 9 .</head><label>234569223456932341749</label><figDesc>Run binary</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 -</head><label>4</label><figDesc>Figure 4 -Coordinated attack of ZORRO family observed by IoTPOT</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 -</head><label>7</label><figDesc>Figure 7 -Observed attacks by IoTBOX</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>3 -­-way handshakeoccasionally. The Profiler parses the interaction between Frontend Responder and IoTBOX, extracts the incoming com- mand and corresponding response, and updates</head><label>3</label><figDesc></figDesc><table>Telnet options 

Welcome Message 
&amp; Login Prompt 

username /pass 

command 

response 

......... 

Banners 

Authentication 

Command 
Interactions 

Telnet Client 
Telnet Server 

infections or system alteration. Therefore, we reset the 
OS image the 
command interaction profile so that Frontend Respond-
er can further handle the same command without inter-
acting with IoTBOX. Another important function of 
Profiler is the collection of banners from devices in the 
Internet. The Profiler operates in two banner grabbing 
modes: active scan mode and visitor scan mode. In ac-
tive scan mode, Profiler scans different networks to 
collect banners from various devices. In visitor scan 
mode, it only connects back to hosts who visit our 
honeypot. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><head>Table 2 -Major log in patterns observed by IoTPOT.</head><label>2</label><figDesc></figDesc><table>Pattern 
Name 
Challenge Order 
Username/Pass 
Number of Observed Attacks Per Day 
(Average) 

Fixed Order 
1 
Fixed Order 

root/root 
root/admin 
root/1234 
root/12345 
root/123456 
root/1111 
root/password 
root/dreambox 
root/vizxv 
root/system 
admin/admin 

174 

Random Order 
1 
Random Order 

root/root 
root/admin 
root/12345 
root/123456 
admin/root 
admin/admin 
support/support 
… 

606 

Fixed Order 
2 

Fixed Order 

admin/admin 
admin/362729 
admin/m4f6h3 
admin/n3wporra 
admin/263297 
admin/fdpm0r 
admin/1234 
root/1234 
… 

3.2 

Random Order 
2 
Random Order 

root/xc3511 
root/123456 
root/12345 
root/root 
… 

3.5 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><head>Table 3 -Patterns of command sequences observed by IoTPOT</head><label>3</label><figDesc></figDesc><table>The column with # in Table 3 indicates that the patterns are observed only in 

trial period and no credible counts of the patterns can be provided. Steps 1 -4 

of ZORRO 1, ZORRO 2, and ZORRO 3 are done by a group of reconnaissance 

hosts and Steps 5 -9 are done by a single intrusion host repeatedly. See Section 

3.4.4 for details. 
Table 4 -Clustering results of collected samples by 
characteristic strings in the binaries 

Family Name 
Keywords 

Bin 42 

sh -­-c "cd /tmp ; rm -­-f .nttpd ; wget -­-O .nttpd 
http://%d.%d.%d.%d:%d ; chmod +x .nttpd ; 
./.nttpd" 

bin.sh 
bin2.sh 
bin3.sh 
echo -­-e '\x67\x61\x79\x66\x67\x74' 

Bin 10 to Bin 41 

YESHELLO 
killattk 

0916.davinci 
0923.davinci 
0923.8196 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><head>Table 2 )</head><label>2</label><figDesc></figDesc><table>Infection 

(command 
sequences patterns 
in Table 3) 

Downloaded 
Binaries (grouped 

by characteristic 
strings in Table 4 ) 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>A part of this was conducted under the auspices of the MEXT Program for Promoting Reform of National Universities and supported by PRACTICE (Proactive Response Against Cyber-attacks Through International Collaborative Exchange) project by the Ministry of Internal Affairs and Communications, Japan.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix</head><p>Note that all samples in the table and corresponding honeypot traffic are available for interested researchers upon request <ref type="bibr" target="#b5">[6]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Malware binary files captured by IoTPOT</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A quantitative analysis of the insecurity of embedded network devices: results of a wide-area scan</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Salvatore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<ptr target="http://ids.cs.columbia.edu/sites/default/files/paper-acsac.pdf" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<ptr target="http://internetcensus2012.bitbucket.org/paper.html" />
	</analytic>
	<monogr>
		<title level="j">Internet Census</title>
		<imprint>
			<biblScope unit="page">24</biblScope>
			<date type="published" when="2012-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">DailyTech -Hackers Use Refrigerator, Other Devices to Send 750,000 Spam Emails</title>
		<ptr target="http://www.dailytech.com/Hackers+Use+Refrigerator+Oter+Devices+to+Send+750000+Spam+Emails+/article34161.htm" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Lizard Stresser Runs on Hacked Home RoutersKrebs on Security</title>
		<ptr target="http://krebsonsecurity.com/2015/01/lizard-stresser-runs-on-hacked-home-routers/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">VirusTotal -Free Online Virus, Malware and URL Scanner</title>
		<ptr target="https://www.virustotal.com/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">IoT Security -Research Center for Information and Physical Security</title>
		<ptr target="http://ipsr.ynu.ac.jp/iot/index.html" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">nicter: a large-scale network incident analysis system: case studies for understanding threat landscape</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Inoue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nakazato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ohtaka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Nakao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BADGERS 11 Proc. First Workshop Build. Anal. Datasets Gather. Exp. Returns Secure</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The Carna Botnet Through the Lens of a Network Telescope</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename><surname>Malécot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Inoue</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th</title>
		<meeting>6th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Int. Symp. Found. Pract. Secur. FPS</title>
		<imprint>
			<date type="published" when="2003-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">RFC 854 -Telnet Protocol Specification</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">&amp;quot;</forename><surname>Robertdavidgraham/Masscan · Github</surname></persName>
		</author>
		<ptr target="https://github.com/robertdavidgraham/masscan.[Ac-cessed:24" />
		<imprint>
			<date type="published" when="2015-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Remote Code Execution in Popular Hikvision Surveillance DVR | Threatpost | The first stop for security news</title>
		<ptr target="https://threatpost.com/remote-code-execution-in-popular-hikvision-surveillance-dvr/109552" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Developments of the Honeyd Virtual Honeypot</title>
		<ptr target="http://www.honeyd.org/.[Ac-cessed:24" />
		<imprint>
			<date type="published" when="2015-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">OpenWrt</title>
		<ptr target="https://openwrt.org/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Water Torture: A Slow Drip DNS DDoS Attack «Cybersecurity «Cyber Trust Matters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Secure64</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">DDoS Attacks on SSL: Something Old, Something New</title>
		<ptr target="http://asert.arbornetworks.com/ddos-attacks-on-ssl-something-old-something-new/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">netfilter/iptables project homepage -The netfilter.org project</title>
		<ptr target="http://www.netfilter.org/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">zx2c4/telnet-password-honeypot · GitHub</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">dionaea -catches bugs</title>
		<ptr target="http://dionaea.carnivore.it/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Nepenthes -finest collection</title>
		<ptr target="http://nepenthes.carnivore.it/" />
		<imprint>
			<date type="published" when="2015-05" />
			<biblScope unit="page">24</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
