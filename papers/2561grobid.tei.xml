<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:46+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">CloudViews: Communal Data Sharing in Public Clouds</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roxana</forename><surname>Geambasu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Washington</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">D</forename><surname>Gribble</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Washington</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><forename type="middle">M</forename><surname>Levy</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Introduction</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">CloudViews: Communal Data Sharing in Public Clouds</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Web services are undergoing an exciting transition from in-house data centers to public clouds. Attracted by automatic scalability and extremely low compute, storage, and management costs, Web services are increasingly opting for public cloud deployment over traditional in-house datacenters. For example, Amazon's S3 provides storage and backup services for numerous applications <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b16">17]</ref>, a number of mature services have recently migrated to Amazon EC2 <ref type="bibr" target="#b17">[18]</ref>, and many startups are adopting the cloud as their sole viable solution to achieve scale <ref type="bibr" target="#b21">[22]</ref>. While predictions regarding cloud computing vary, most of the community agrees that public clouds will continue to grow in the number and importance of their tenants <ref type="bibr" target="#b9">[10]</ref>.</p><p>This paper focuses on a new opportunity introduced by the cloud environment: specifically, rich data sharing among independent Web services that are co-located within the same cloud. In the future, we expect that a small number of giant-scale shared clouds -such as Amazon AWS, Google AppEngine, or Microsoft Azurewill result in an unprecedented environment where thousands of independent and mutually distrustful Web services share the same runtime environment, storage system, and cloud infrastructure. One could even imagine that most of the Web will someday be served from a handful of giant-scale clouds. What will that new sharedcloud environment look like? What are the opportunities and challenges created by this integration and consolidation? While challenges raised by the multi-tenant environment, such as isolation, security, and privacy, have received significant recent attention <ref type="bibr" target="#b19">[20]</ref>, we believe that identifying untapped opportunities is equally important, as it enables innovation and advancement in the new shared-cloud world.</p><p>In particular, we argue that co-location creates an auspicious environment for Web service composition, which in turn spawns immense opportunities for simplifying Web service construction. Three key technological features differentiate the shared-cloud world from the traditional in-house datacenter and enable these opportunities: (1) free, efficient, and plentiful network bandwidth that supports tighter and larger-scale Web service integration than is possible over wide-area networks; (2) a shared storage system that can provide powerful abstractions for convenient, efficient, and large-scale interservice data sharing; and (3) the potential for a rich runtime ecosystem consisting of many "utility" Web services that act as building blocks for other services and facilitate their implementation greatly. This paper is divided into two parts. The next section describes the opportunities for collaborative Web services in the new cloud world. It also examines the three technological features described above and both the potentials and the challenges that they bring. Section 3 presents CloudViews, a cloud storage system we are developing to facilitate collaboration through protected inter-service data sharing. CloudViews is one example of the kinds of functions public clouds must offer to facilitate Web service development. Overall, our goal is to provide a high-level glimpse of the potential impact of co-location on low-level cloud infrastructure and service development.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Opportunities in Public Clouds</head><p>The vision of facilitating Web service construction through seamless integration of existing Web services has existed since the dawn of Web 2.0. Similarly, Web hosting has existed for years. What is new is the intersection of three key technological features of the public cloud environment: a faster and cheaper network fabric; a common storage infrastructure; and the potential for a richer-than-ever runtime environment. After a brief background on composition, we analyze each feature and the new opportunities and challenges that it creates. <ref type="figure">Fig- ure</ref> 2 provides a summary of these technology trends.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Web Service Composition Background</head><p>Web service composition is the defining feature of Web 2.0. The ability to combine existing Web services into new composite services (or mashups) has proven momentous for advancing the Web and deriving new value from it. The simplest mashup example is a map-based mashup like toEat.com, which overlays restaurant information on a Google map to provide the user with a convenient view of close-by restaurants. Such a mashup is termed a client-side mashup, as the contents from the composing services are aggregated in the client's browser. Server-side mashups also exist. In their case, the mashup site aggregates information from other services and its own database and returns the result to the client. Server-side mashups are typically data-driven. Popular examples of server-side mashups include Facebook applications such as iLike.com and comparison shopping sites such as PriceGrabber.com. The focus of this paper is on server-side, data-centric mashups.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Technological Shifts, Opportunities, and Challenges</head><p>Figure 1 compares the traditional in-house datacenter environment to public, shared clouds, pointing out the technological advances brought on by the cloud. The figure shows three existing photo-related Web services: Flickr (photo sharing service storing over 3 billion photos <ref type="bibr" target="#b13">[14]</ref>), Photosynth <ref type="bibr" target="#b14">[15]</ref> (3D scene re-composition from photos), and ALIPR <ref type="bibr" target="#b0">[1]</ref> (automatic tagging of photos using image recognition). All of these services currently operate inside their own private datacenters ( <ref type="figure" target="#fig_0">Figure 1</ref>(a)). Composition is extremely valuable for these services. For example, Photosynth leverages Flickr to create 3D models from photos of tourist attractions. Similarly, Flickr could benefit from ALIPR, which could automatically add tags to its photos.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">The Free and Fast Network</head><p>In the traditional in-house datacenter model <ref type="figure" target="#fig_0">(Fig- ure 1</ref>(a)), each service runs inside its own datacenter and stores its data within its own storage system (labeled DB in the <ref type="figure">figure)</ref>. Communications among services are done over high-delay, low-bandwidth, and expensive WANs (denoted by dashed lines). These impose severe constraints on the scale, frequency, and latency achievable by Web service compositions. Upon their migration to a public cloud <ref type="figure" target="#fig_0">(Figure 1(b)</ref>), the services become residents of the same cloud environment. Consequently, services now enjoy a largely free, fast, and high-bandwidth interweb-service network. For example, 10Gbps switches are</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>T echnological change Opport unit y Challenges</head><p>Efficient and cheap networks</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rich runtime ecosystem</head><p>Tight, large-scale integration.</p><p>Datacenter-level co-location.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Common storage infrastructure</head><p>Convenient composition through storage.</p><p>Sharing abstraction, protection, perf. isolation, billing.</p><p>Utility services provide building blocks.</p><p>Business models and incentives, common formats. common in today's datacenters <ref type="bibr" target="#b10">[11]</ref>. Additionally, much work is being done to ensure uniform bandwidth and latency between any two machines in a datacenter <ref type="bibr" target="#b10">[11]</ref>. We argue that this free, high-quality networking fabric will enable a new generation of large-scale, finelyintertwined Web service compositions that was infeasible over WANs. For example, in today's world, leveraging ALIPR to tag Flickr's 3B photos or Facebook's 10B photos would be utterly slow and expensive. Inside the cloud, however, these transfers can be absolutely free and significantly faster on the parallel high-speed network.</p><p>Challenges. To take full advantage of fast cloud networks, we must ensure that composing services co-reside in the same datacenter. Co-location is thus an important problem (first row of <ref type="figure" target="#fig_1">Figure 2</ref>). We believe that the high code mobility enabled by today's virtualized clouds, coupled with years of research in location-aware schedulers <ref type="bibr" target="#b15">[16]</ref>, will allow the mitigation of this challenge. Moreover, an extremely coarse-grained co-location system, which schedules composing services within the same region 1 , is enough to keep transfer costs zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">The Common Storage Infrastructure</head><p>In the traditional in-house datacenter, each service stores its data within its own database, however services in public clouds store all of their data in the cloud's common storage service (e.g., S3, Bigtable, etc.). Apart from the obvious benefit of not having to implement and manage an in-house, scalable, fault-tolerant storage system, the common storage infrastructure gives way to a second valuable opportunity. Specifically, the storage system can simplify data-centric Web service compositions by handling many sharing-related issues, such as protection, performance isolation, and billing. In the in-house datacenter environment, all of these difficult functions require in-house solutions.</p><p>As an example, our CloudViews system (described in Section 3) allows Flickr to conveniently grant access to all or a subset of its photos, e.g., to Photosynth. From that moment on, the storage infrastructure handles all of Photosynth's requests, ensuring that it can only access shared photos, that no sudden spike in its requests will disrupt Flickr's operation, and that Photosynth pays for the con- Web service construction in (a) in-house and (b) public-cloud environments. In the in-house datacenter, services cannot outsource their modules to other services over the WAN, leading to many services implementing entire software stacks redundantly. In public clouds, a Web service should be able to seamlessly leverage other services living in the cloud's ecosystem (e.g., media indexing and search, social networking data, etc.).</p><p>sumed data (assuming a billing contract was established). This way, Flickr can focus on its specific functions, ignoring all the complexity typically associated with maintaining an API in support of this sharing. Several Amazon S3 offerings have similar flavors as CloudViews. For example, with "Requester Pays" <ref type="bibr" target="#b2">[3]</ref>, an S3 user can "rent" some of his data and have whomever accesses that data pay a fee for it; with the "Authenticated query" feature <ref type="bibr" target="#b1">[2]</ref>, a user can provide temporary direct access to a bucket to another user. We believe that these features are rudiments of the properties that a cloud storage system must provide in support of mashups.</p><p>Challenges. We identify several requirements of the cloud storage that are essential to facilitating Web service compositions, but that receive inadequate support in today's clouds:</p><p>• A flexible sharing abstraction. Picking the appropriate abstraction is key to stimulating composition. The abstraction must allow services to efficiently share data at any granularity, from a few objects (e.g., the list of friends for a user on Facebook) to terabytes and billions of objects (e.g., Flickr shares all of its photos with ALIPR or Photosynth). Additionally, the sharing abstraction must provide some degree of logical independence from the specific formats and data layouts. Today's cloud sharing abstractions (e.g., buckets in S3) fall short in this latter requirement.</p><p>• Naming and protection. Naming and protection are decisive yet challenging aspects of any shared system. The protection mechanism must scale to a huge number of sharers and sharees (tens of thousands). None of today's cloud storage systems are equipped to handle such sharing. For example, Bigtable has a limited protection notion based on coarse, per-column-family ACLs. Similarly, S3's ACL mechanism limits the number of sharees for each bucket to 100.</p><p>• Resource allocation. Resource allocation is another key property of a shared system. Broadly speaking, resource allocation in today's cloud storage systems is done by partitioning data by service and assigning partitions evenly among storage servers <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b8">9]</ref>. This works well, provided no sharing is involved. However, when two services are operating directly on each other's data, how do we prevent a workload spike in one from disrupting the other's performance? Our preliminary experiments on Hadoop's Hbase indicate that data sharing does cause significant performance interference due to the absence of appropriate resource allocation. These requirements represent important but hard challenges that the storage system must overcome. Section 3 presents the design of a system we are working on, called CloudViews, which attempts to address these issues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.3">The Rich Runtime Ecosystem</head><p>The previous two technological features of public clouds -a fast network and a common storage -support convenient, large-scale, and efficient Web service compositions. This last feature paves the way for our ultimate goal: simplifying the development of Web services. We argue that a new generation of utility services (or building blocks for other services) is likely to emerge and flourish in public clouds. Evidence of this trend is visible in most clouds, where the cloud providers and sometimes third-parties already provide some utility services in support of consumer services (e.g., RightScale, Amazon's S3 and Map/Reduce, and Google's Bigtable).</p><p>Leading this trend much further, we foresee the emergence of a rich cloud ecosystem, consisting of tens of thousands of utility services, each of which offers some function that other services can rent and use. <ref type="figure">Figure 3</ref> uses an example to illustrate the enormous opportunities for simplifying Web service development hiding behind this concept. In this example, we use two services -one for sharing photos and the other one for sharing videosand identify common functions between them. We then compare the opportunities for code reuse in the in-house datacenter model versus in public clouds.</p><p>In-house datacenters can tolerate only limited outsourcing of functions to one another over the WAN. For example, suppose the photo service opened an API to its general media search engine, allowing other services to plug in their own data and search for it. Would the video service be able to use that API? As the entire video collection is stored inside its local database and is separated from the search engine by thin WAN links, this would be prohibitively expensive. Thus, services running in the traditional in-house environment have no choice but to implement entire software stacks. In fact, today's Web as a whole is architected as a stovepiped system. This may well be the reason why building even an intuitively simple service like Twitter is challenging at scale <ref type="bibr" target="#b7">[8]</ref>.</p><p>We now have a chance to correct this situation in public clouds, where a Web service developer can seamlessly leverage utility services from the cloud ecosystem.</p><p>Challenges. The success of the cloud ecosystem relies on two issues. First, collaboration is highly dependent on common or at least open data formats. For example, if Flickr stored its photos in a private format, then ALIPR would not be able to understand and tag them. Second, the emergence of utility services powering the cloud ecosystem is contingent upon the presence of incentives for providing functions "behind the scenes." Fortunately, business models are receiving significant attention from the cloud computing community <ref type="bibr" target="#b5">[6]</ref>, and unified APIs and common data formats are seeing ever-increasing adoption (e.g., microformats, OpenSocial, etc.).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Summary</head><p>This section described three technological shifts that arise in public clouds: faster, cheaper networks, a common storage infrastructure, and the potential for a rich ecosystem of utility services. These changes give rise to a set of new opportunities for convenient, large-scale Web service compositions within public clouds and, ultimately, to much simplified creation of Web services.</p><p>In the end, our hope is that creating a large-scale Web service can be made as easy as building some servicespecific functionality (e.g., the GUI), picking out some building blocks from the cloud's ecosystem, and combining those with a few "glue" scripts. The next section presents CloudViews, a system we are currently building as a first step in this direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CloudViews</head><p>We are currently designing and implementing CloudViews, a storage system that addresses several of the challenges identified in Section 2. In particular, CloudViews aims at facilitating data-centric Web service compositions by enhancing communal cloud storage systems with a database-style view abstraction for flexible, protected, efficient, and performance-isolated data sharing. We are currently building a prototype of CloudViews on top of Hadoop HBase.</p><p>The view abstraction. CloudViews facilitates composition by allowing services to create and share views over the common storage infrastructure. <ref type="figure" target="#fig_3">Figure 4</ref> illustrates how services access and share views in CloudViews using the Flickr-ALIPR-Photosynth example. Specifically, Flickr accesses its data stored within the communal storage system via its base view, called "Flickr's data."</p><p>The view is a query on the underlying database selecting all of the data whose owner is Flickr (e.g., photos, tags, user information, and other data). Similarly, ALIPR and Photosynth access their data using their own views. Views protect the data, i.e., the services cannot access each other's data by default. However, services can share restricted views of their data with other services. For example, in the figure, Flickr has shared with ALIPR the view denoted "Photos," which contains its photo information, but excludes any other data, such as Flickr's user database. ALIPR uses this view to retrieve Flickr's photos and update their tags in the database. Finally, services can share different views with different services. For example, Flickr has shared with Photosynth the view "Public photos," which contains only the public photos.</p><p>Views have long been recognized by the database community to enable flexible, scalable sharing and logical data independence. CloudViews leverages the view notion, applies it onto the cloud environment from which they are absent, and enhances it with additional properties, such as a scalable protection scheme and a resource management mechanism.</p><p>Protection. Protection in CloudViews is a primary goal.</p><p>A key challenge of the protection mechanism is scalability. CloudViews aims at handling tens of thousands of Web services sharing data through a mechanism called signed views. A signed view is an unforgeable token consisting of the view's query plus some metadata (including expiration, billing, and resource management information). Unforgeability is achieved through cryptographic signatures. A signed view is self-certifying, i.e., a service's mere possession of it is proof that it has the right to access the data specified by that view. A signed view is also self-sufficient, i.e., it carries all of the information required to be executed, tracked, billed for, etc. Intuitively, self-certification and self-sufficiency eliminate the need for centralized protection state, making protection based on signed views amenable to large scales.</p><p>Signed views are similar in flavor to S3's "authenticated queries" <ref type="bibr" target="#b1">[2]</ref> and, more generally, to capabilities <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b20">21]</ref>. Signed views differ from those mechanisms with additional properties, which we discuss next.</p><p>Resource allocation. In a world where services can access each other's data directly from the database, resource management is vital. In CloudViews, views are the unit of scheduling. At a conceptual level, queries atop each view are placed in a separate queue upon their entrance into the system. Queues are then scheduled for execution fairly. We are currently investigating the use of a distributed lottery scheduling scheme <ref type="bibr" target="#b18">[19]</ref> to achieve fairness.</p><p>Notifications. Update notifications are key when large amounts of data are being shared. As one example, the ALIPR or Photosynth would greatly benefit from being able to receive notifications whenever new photos are uploaded into Flickr. This would save them from doing inefficient scans of Flickr's giant photo set. As another example, imagine a future in which a significant portion of the Web resides in a cloud and a search engine service is co-located in the same cloud. What would that cloud search engine look like? One possibility is that Web sites share views of their public data with the search engine, which would use those views to access their pages. A tremendously valuable property of those views would be to allow the search engine to register for view update notifications. Although we are currently targeting smaller scales than those imagined in this example, we are considering leveraging techniques from pub/sub systems <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">7]</ref> to enable update notifications for our views.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>The transition to public clouds is consolidating a large number of Web services into a few giant-scale clouds. Consolidation creates an auspicious environment for Web service collaboration. The cheap, high-bandwidth, and low-latency networking fabric, the common storage infrastructure, and the potential for a rich computing ecosystem enable immense opportunities for sharing and composition in public clouds. This paper identified those opportunities, as well as the challenges associated with them. We argued that, through carefully crafted abstractions, the cloud can stimulate a new generation of tightly-coupled, large-scale Web service compositions. We presented CloudViews, a system we are currently designing to support convenient, efficient, and performance-isolated data sharing in public clouds. By doing so, we make a first step toward a new and simplified Web service construction model: seamlessly composing Web services living inside the cloud's ecosystem.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Photo Synth ALIPR</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Technological advantages, opportunities, and challenges in the public-cloud environment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Photo sharing service</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Photos Public photos</figDesc></figure>

			<note place="foot" n="1"> We refer here to Amazon&apos;s continent-wide regions, inside of which traffic is free.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alipr</forename><surname>Alipr</surname></persName>
		</author>
		<ptr target="http://alipr.com/" />
		<title level="m">Automatic Photo Tagging and Visual Image Search</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Query string authentication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Amazon</surname></persName>
		</author>
		<ptr target="http://docs.amazonwebservices.com/AmazonS3/latest/index.html?RESTAuthentication.html" />
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Amazon</surname></persName>
		</author>
		<ptr target="http://docs.amazonwebservices.com/AmazonS3/latest/index.html?RequesterPaysBuckets.html" />
		<title level="m">Requester pays buckets</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Herald: Achieving a global event notification service</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">F</forename><surname>Cabrera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Theimer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of HotOS</title>
		<meeting>of HotOS</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Bigtable: a distributed storage system for structured data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ghemawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Hsieh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Wallach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burrows</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Chandra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fikes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Gruber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of OSDI</title>
		<meeting>of OSDI</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Amazon Web Services Intros Business Model For Content Owners</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Claburn</surname></persName>
		</author>
		<ptr target="http://www.intelligententerprise.com/showArticle.jhtml?articleID=212701060" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">PNUTS: Yahoo!&apos;s hosted data serving platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">F</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Srivastava</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Silberstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bohannon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Jacobsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Puz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weaver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yerneni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of VLDB</title>
		<meeting>of VLDB</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Twitter at scale: Will it work?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cubrilovic</surname></persName>
		</author>
		<ptr target="http://www.techcrunch.com/2008/05/22/twitter-at-scale-will-it-work/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Dynamo: Amazon&apos;s highly available key-value store</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Decandia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hastorun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jampani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kakulapati</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lakshman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pilchin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sivasubramanian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Vosshall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vogels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SOSP</title>
		<meeting>of SOSP</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">10 cloud computing predictions for</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Towards a next generation data center architecture: scalability and commoditization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lahiri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sengupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of PRESTO</title>
		<meeting>of PRESTO</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<ptr target="http://www.jungledisk.com/" />
		<title level="m">Jungle Tools. JungleDisk -reliable storage on Amazon S3</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Capability-Based Computer Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<publisher>Digital Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Three Billion Photos At Flickr</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Arrington</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Microsoft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Photosynth</surname></persName>
		</author>
		<ptr target="http://livelabs.com/photosynth/" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Locality-aware request distribution in cluster-based network servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Aron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Banga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Svendsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zwaenepoel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nahum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ASPLOS</title>
		<meeting>of ASPLOS</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Smugmug -the ultimate in photo sharing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Smugmug</surname></persName>
		</author>
		<ptr target="http://www.smugmug.com/" />
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Techout</surname></persName>
		</author>
		<ptr target="http://www.techout.com" />
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Lottery scheduling: Flexible proportional-share resource management</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Waldspurger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Weihl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of OSDI</title>
		<meeting>of OSDI</meeting>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Cloud computing group to tackle security concerns</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westervelt</surname></persName>
		</author>
		<ptr target="http://searchsecurity.techtarget.com/news/article/0,289142" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
	<note>sid14 gci1352540,00. html</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">HYDRA: The kernel of a multiprocessor operating system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wulf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Corwin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Pierson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pollack</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. of the ACM</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1974-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xignite</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xignite Page</surname></persName>
		</author>
		<ptr target="http://www.xignite.com/" />
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
