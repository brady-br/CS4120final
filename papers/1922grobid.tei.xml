<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:17+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Glamdring: Automatic Application Partitioning for Intel SGX Glamdring: Automatic Application Partitioning for Intel SGX</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>July 12-14, 2017</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joshua</forename><surname>Lind</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Priebe</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Divya</forename><surname>Muthukumaran</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>O&amp;apos;keeffe</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre-Louis</forename><surname>Aublin</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Imperial College London;</roleName><forename type="first">Florian</forename><surname>Kelbert</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Reiher</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">U</forename><surname>Dresden</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Goltzsche</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joshua</forename><surname>Lind</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Priebe</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Divya</forename><surname>Muthukumaran</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Florian</forename><surname>Kelbert</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Reiher</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Goltzsche</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Eyers</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">RÃ¼diger</forename><surname>Kapitza</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christof</forename><surname>Fetzer</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Pietzuch</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">TU Braunschweig</orgName>
								<orgName type="department" key="dep2">David Eyers</orgName>
								<orgName type="institution">University of Otago</orgName>
								<address>
									<addrLine>Rudiger Kapitza</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Imperial College London Dan O&apos;Keeffe Imperial College London Pierre-Louis Aublin Imperial College London</orgName>
								<orgName type="institution" key="instit1">TU Braunschweig</orgName>
								<orgName type="institution" key="instit2">Imperial College London</orgName>
								<orgName type="institution" key="instit3">Imperial College London</orgName>
								<orgName type="institution" key="instit4">Imperial College London</orgName>
								<address>
									<settlement>Dresden, Braunschweig</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Otago</orgName>
								<address>
									<settlement>Braunschweig, Dresden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Imperial College London</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Glamdring: Automatic Application Partitioning for Intel SGX Glamdring: Automatic Application Partitioning for Intel SGX</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 2017 USENIX Annual Technical Conference (USENIX ATC &apos;17)</title>
						<meeting>the 2017 USENIX Annual Technical Conference (USENIX ATC &apos;17) <address><addrLine>Santa Clara, CA, USA</addrLine></address>
						</meeting>
						<imprint>
							<date type="published">July 12-14, 2017</date>
						</imprint>
					</monogr>
					<note>This paper is included in the Open access to the Proceedings of the 2017 USENIX Annual Technical Conference is sponsored by USENIX. Christof Fetzer, TU Dresden; Peter Pietzuch, Imperial College London https://www.usenix.org/conference/atc17/technical-sessions/presentation/lind</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Trusted execution support in modern CPUs, as offered by Intel SGX enclaves, can protect applications in untrusted environments. While prior work has shown that legacy applications can run in their entirety inside enclaves, this results in a large trusted computing base (TCB). Instead, we explore an approach in which we partition an application and use an enclave to protect only security-sensitive data and functions, thus obtaining a smaller TCB. We describe Glamdring, the first source-level partitioning framework that secures applications written in C using Intel SGX. A developer first annotates security-sensitive application data. Glamdring then automatically partitions the application into untrusted and enclave parts: (i) to preserve data confidentiality, Glamdring uses dataflow analysis to identify functions that may be exposed to sensitive data; (ii) for data integrity, it uses backward slicing to identify functions that may affect sensitive data. Glamdring then places security-sensitive functions inside the enclave, and adds runtime checks and cryptographic operations at the enclave boundary to protect it from attack. Our evaluation of Glamdring with the Mem-cached store, the LibreSSL library, and the Digital Bitbox bitcoin wallet shows that it achieves small TCB sizes and has acceptable performance overheads.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Applications are increasingly deployed in potentially untrusted third-party data centres and public cloud environments such as Amazon AWS <ref type="bibr" target="#b2">[3]</ref> and Microsoft Azure <ref type="bibr" target="#b3">[4]</ref>. This has a major impact on application security <ref type="bibr" target="#b0">[1]</ref>: applications must protect sensitive data from attackers with privileged access to the hardware or software, such as system administrators. Applications that rely on cryptographic techniques to protect sensitive data <ref type="bibr" target="#b60">[60,</ref><ref type="bibr" target="#b63">63,</ref><ref type="bibr" target="#b83">82]</ref> limit the operations that can be carried out; fully homomorphic encryption <ref type="bibr" target="#b32">[32]</ref> allows arbitrary operations but adds substantial overhead.</p><p>A new direction for securing applications in untrusted environments is to use trusted execution mechanisms offered by modern CPUs such as Intel's Software Guard Extensions (SGX) <ref type="bibr" target="#b42">[42]</ref>. With Intel SGX, user code and data are protected as part of secure enclaves. An enclave is a separate memory region that is encrypted transparently by the hardware and isolated from the rest of the system, including higher-privileged system software.</p><p>Haven <ref type="bibr" target="#b6">[6]</ref>, Graphene <ref type="bibr" target="#b55">[55,</ref><ref type="bibr" target="#b82">81]</ref> and SCONE <ref type="bibr" target="#b1">[2]</ref> have demonstrated the feasibility of executing entire applications inside enclaves by adding sufficient system support, such as a library OS or the C standard library, to the enclave. By placing all code inside the enclave, these approaches, however, have a large trusted computing base (TCB) that violates the principle of least privilege <ref type="bibr" target="#b67">[67]</ref>: all enclave code executes at a privilege level that allows it to access sensitive data. An attacker only needs to exploit one vulnerability in the enclave code to circumvent the security guarantees of trusted execution <ref type="bibr" target="#b79">[78]</ref>. The number of bugs even in well-engineered code is proportional to the size of the code <ref type="bibr" target="#b54">[54]</ref>.</p><p>To partially mitigate this problem, proposals for securing applications with enclaves <ref type="bibr" target="#b68">[68,</ref><ref type="bibr" target="#b73">72,</ref><ref type="bibr" target="#b74">73]</ref> introduce additional checks in enclave code to prevent it from compromising the confidentiality or integrity of enclave data. Such approaches, however, restrict the allowed behaviour of enclave code, e.g. prohibiting general enclave code from interacting with memory outside of the enclave <ref type="bibr" target="#b68">[68]</ref>. This limits the applicability of trusted execution mechanisms for arbitrary applications.</p><p>We want to explore a different design point for securing applications with trusted execution by placing only security-sensitive functions and data inside the enclave. We exploit the observation that only a subset of all application code is security-sensitive <ref type="bibr" target="#b11">[11,</ref><ref type="bibr" target="#b71">71,</ref><ref type="bibr" target="#b75">74]</ref>, and ask the question: "what is the minimum functionality of an application that must be placed inside an enclave to protect the confidentiality and integrity of its security-sensitive data?" Our goal is to develop a principled approach that (i) partitions applications into security-sensitive enclave and security-insensitive non-enclave parts; (ii) gives guarantees that the security-sensitive enclave code cannot violate the confidentiality or integrity of sensitive enclave data, even under attack; and (iii) has an acceptable performance overhead despite the limitations of current SGX implementations <ref type="bibr" target="#b16">[16]</ref>.</p><p>In our approach, we use static program analysis to identify a security-sensitive subset of the application code. Being conservative, it allows us to robustly identify the subset of functions that may be exposed to or modify sensitive data. This analysis is independent of application input, which may be controlled by an attacker, and thus is resilient against attacks on the enclave interface, as long as the assumptions made by the static analysis are enforced at runtime.</p><p>We describe Glamdring, a new framework for securing C applications using Intel SGX. Glamdring partitions applications at the source code level, minimising the amount of code placed inside an enclave. To partition an application, a developer first annotates input and output variables in the source code that contain sensitive data and whose confidentiality and integrity should be protected. Glamdring then performs the following steps:</p><p>(1) Static dataflow analysis. To prevent disclosure of sensitive data, functions that may potentially access sensitive data must be placed inside the enclave. Glamdring performs static dataflow analysis <ref type="bibr" target="#b65">[65]</ref> to detect all functions that access sensitive data or data derived from it. It tracks the propagation of sensitive data through the application, starting with the annotated inputs.</p><p>(2) Static backward slicing. To prevent an attacker from compromising the integrity of sensitive output data, functions that update sensitive data must be placed inside the enclave. Here Glamdring uses static backward slicing <ref type="bibr" target="#b85">[84]</ref>, starting from the set of annotated output variables, to identify functions that can affect the integrity of this data. It creates a backward slice with all source code that the sensitive output variables depend on. (3) Application partitioning. Glamdring now partitions the application by placing all of the security-sensitive functions identified above inside the enclave. This creates an enclave boundary interface that constitutes all parameters passed to enclave functions and accesses to untrusted global variables. Any sensitive data that crosses the enclave interface is transparently encrypted and signed by the enclave code or trusted remote client, respectively. For performance reasons, some security-insensitive functions may be moved inside the enclave. (4) Source code generation. Finally, Glamdring transforms the application using a source-to-source compiler based on the LLVM/Clang compiler toolchain <ref type="bibr" target="#b14">[14,</ref><ref type="bibr" target="#b49">49]</ref>. It (i) generates appropriate entry/exit points at the enclave boundary with the required cryptographic operations; (ii) ensures that memory allocations for data structures are performed inside or outside of the enclave depending on the nature of the data; and (iii) adds runtime checks at the enclave boundary to ensure that the invariants required for the soundness of the static analysis hold. The output of this phase is an untrusted binary and a trusted shared library that executes inside the enclave.</p><p>We evaluate the security and performance properties of Glamdring by applying it to three applications: the Memcached key/value store <ref type="bibr" target="#b24">[24]</ref>, the LibreSSL library <ref type="bibr" target="#b7">[7]</ref>, and the Digital Bitbox bitcoin wallet <ref type="bibr" target="#b70">[70]</ref>. Our experiments show that Glamdring creates partitioned versions of these applications with TCBs that contain 22%-40% of the lines of code of the applications. Despite their strong security guarantees, the partitioned applications execute with between 0.3Ã-0.8Ã of the performance of the original versions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Protecting application data is crucial. Past incidents have shown that data breaches <ref type="bibr" target="#b41">[41]</ref> and integrity violations <ref type="bibr" target="#b76">[75]</ref> can have a major impact on users <ref type="bibr" target="#b30">[30]</ref> and the reputation of application providers <ref type="bibr" target="#b59">[59]</ref>.</p><p>Today applications are deployed frequently in untrusted environments such as public clouds, controlled by third-party providers. In addition to the application being vulnerable, the underlying infrastructure (i.e. the operating system (OS) and hypervisor) may be untrusted by the application owner, and software-based solutions implemented as part of the OS <ref type="bibr" target="#b17">[17,</ref><ref type="bibr" target="#b46">46]</ref> or hypervisor <ref type="bibr" target="#b13">[13,</ref><ref type="bibr" target="#b20">20,</ref><ref type="bibr" target="#b39">39]</ref> cannot protect application data.</p><p>New hardware security features, such as Intel SGX, offer a solution through a trusted execution model. It supports memory and execution isolation of application code and data from the rest of the environment, including higher-privileged system software. In this work, we address the problem of how developers can protect only the security-sensitive code and data of an application using trusted execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Threat model</head><p>We consider code to be security-sensitive if it accesses sensitive data directly or can impact the confidentiality or integrity of data indirectly. For example, in the Memcached <ref type="bibr" target="#b24">[24]</ref> store, assuming that key/value pairs are sensitive, functions that store key/value pairs are securitysensitive, while ones for network handling are not.</p><p>The adversary's goal is to either disclose confidential data or damage its integrity. We consider a powerful and active adversary, such as a malicious system administrator, who has control over the hardware and software of the machine executing the application. The adversary may therefore (i) access or modify any data in memory or disk; (ii) view or modify the application code; and (iii) modify the OS or other system software.</p><p>We do not consider denial-of-service (DoS) attacks-an adversary with full control over the machine can decide to not run the application. Such attacks can be detected and potentially mitigated using replication <ref type="bibr" target="#b21">[21]</ref>. Similar to other work, we also ignore side-channel attacks that exploit timing effects <ref type="bibr" target="#b84">[83]</ref> or page faults <ref type="bibr" target="#b87">[86]</ref>, but there exist dedicated mitigation strategies <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b19">19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Trusted execution with Intel SGX</head><p>Intel's Software Guard Extensions (SGX) <ref type="bibr" target="#b42">[42]</ref> allow applications to protect the confidentiality and integrity of code and data, even when an attacker has control over all software (OS, hypervisor and BIOS) and physical access to the machine, including the memory and system bus. SGX provides applications with a trusted execution mechanism in the form of secure enclaves. Enclave code and data reside in a region of protected memory called the enclave page cache (EPC). Only application code executing inside the enclave is permitted to access the EPC. Enclave code can access the memory outside the enclave. An on-chip memory encryption engine encrypts and decrypts cache lines in the EPC that are written to and fetched from memory. As enclave code is always executed in user mode, any interaction with the OS through system calls, e.g. for network or disk I/O, must execute outside of the enclave.</p><p>Using Intel's SGX SDK <ref type="bibr" target="#b43">[43]</ref>, developers can create enclave libraries that are loaded into an enclave and executed by a CPU with SGX support. A developer defines the interface between the enclave code and other, untrusted application code: (i) a call into the enclave is referred to as an enclave entry call (ecall). For each defined ecall, the SDK adds instructions to marshal parameters outside, unmarshal the parameters inside the enclave and execute the function; and (ii) outside calls (ocalls) allow enclave functions to call untrusted functions outside. Added SDK code leaves the enclave, unmarshals the parameters, calls the function, and re-enters the enclave.</p><p>Any ecalls and ocalls introduce a performance overhead because the hardware must perform certain actions to maintain the security guarantees of SGX. Enclave code must also verify the integrity of accessed data, such as parameters of ecalls, return values of ocalls, and data read from untrusted memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Security with trusted execution</head><p>Next we explore the design space for securing application data using trusted execution and discuss the trade-offs with respect to (i) the size of the TCB; (ii) the complexity of the enclave interface; (iii) the development effort; and (iv) the generality of the approach.</p><p>With Intel SGX, the TCB consists of the enclave code and the trusted hardware. Following the principle of least privilege <ref type="bibr" target="#b67">[67]</ref>, only the parts of an application that require access to sensitive data should be executed within an enclave. As studies have shown <ref type="bibr" target="#b54">[54,</ref><ref type="bibr" target="#b69">69]</ref>  software bugs, and thus potential security vulnerabilities, increases proportionally with the code size. This makes it important to minimise the size of the TCB. The complexity of the enclave interface, however, impacts the security of enclave code and data. For example, security-sensitive application code inside the enclave must still interact with the untrusted environment to perform I/O. Return values from system calls must be checked to protect against Iago attacks <ref type="bibr" target="#b12">[12]</ref>, in which an attacker compromises the OS kernel to force enclave code to disclose or modify sensitive enclave data. Creating a principled enclave interface makes it easier to reason about the infeasibility of particular attacks.</p><p>Important factors that determine the adoption of a given approach for securing applications with secure enclaves are the development effort and whether it is generally applicable to any application. <ref type="figure" target="#fig_0">Fig. 1</ref> shows three design alternatives for protecting applications using secure enclaves: Complete enclave interface. As shown in <ref type="figure" target="#fig_0">Fig. 1a</ref>, the approach adopted by systems such as Haven <ref type="bibr" target="#b6">[6]</ref>, SCONE <ref type="bibr" target="#b1">[2]</ref> and Graphene <ref type="bibr" target="#b55">[55,</ref><ref type="bibr" target="#b82">81]</ref> provides isolation at a coarse granularity by executing a complete application inside an enclave. Haven runs unmodified Windows applications using the Drawbridge library OS <ref type="bibr" target="#b61">[61]</ref>; Graphene uses a library OS in the enclave to run Linux applications; and SCONE places a modified version of the standard C library in the enclave for supporting recompiled Linux applications. Both security-sensitive and insensitive application code and data reside within the enclave, increasing the TCB size.</p><p>The enclave interface supports a complete set of system/hyper calls, which cannot be handled inside the enclave. The interface is application-independent, but its complexity (in terms of number of distinct calls and their input parameters) depends on the adopted system abstraction. The required system support within the enclave further adds to the TCB size.</p><p>While this approach incurs low development effort, Static backward slicing p a th /to /file 1fu n c tio n 1 p a th /to /file 2fu n c tio n 2 p a th /to /file 3fu n c tio n 3 p a th /to /file 4fu n c tio n 4 p a th /to /file 5fu n c tio n 5 p a th /to /file 5fu n c tio n 5 p a th /to /file 6fu n c tio n6 p a th /to /file 7fu n c tio n 7 p a th /to /file 8fu n c tio n 8</p><p>Partition specification for confidentiality p a th /to /file 1fu n c tio n 1 p a th /to /file 2fu n c tio n 2 p a th /to /file 3fu n c tio n 3 p a th /to /file 4fu n c tio n 4 p a th /to /file 5fu n c tio n 5 p a th /to /file 5fu n c tio n 5 p a th /to /file 6fu n c tio n6 p a th /to /file 7fu n c tio n 7 p a th /to /file 8fu n c tio n 8</p><p>Partition specification for integrity</p><p>Creation of partition spec. p a th /to /file 1fu n c tio n 1 p a th /to /file 2fu n c tio n 2 p a th /to /file 3fu n c tio n 3 p a th /to /file 4fu n c tio n 4 p a th /to /file 5fu n c tio n 5 p a th /to /file 5fu n c tio n 5 p a th /to /file 6fu n c tio n6 p a th /to /file 7fu n c tio n 7 p a th /to /file 8fu n c tio n 8 as it can execute mostly unmodified applications, and is generic across applications, it cannot mask fundamental limitations of SGX when trying to provide a complete enclave interface. For example, SCONE cannot support applications that use the fork() system call. Predefined enclave interface. <ref type="figure" target="#fig_0">Fig. 1b</ref> shows an approach in which applications must adhere to a predefined restricted enclave interface <ref type="bibr" target="#b68">[68,</ref><ref type="bibr" target="#b73">72,</ref><ref type="bibr" target="#b74">73]</ref>. For example, VC3 <ref type="bibr" target="#b68">[68]</ref> protects map/reduce jobs using enclaves and forces map/reduce tasks to interact with the untrusted environment only through a particular interface. The enclave contains a small trusted shim library, resulting in a smaller TCB compared to the previous approach. This approach results in a minimal enclave interface-VC3's interface consists of only two calls, one to read encrypted key/value pairs and another to write them as the job output. This limited interaction of the enclave with the outside simplifies protection: it is possible to add dynamic checks that enforce security invariants <ref type="bibr" target="#b73">[72]</ref>, e.g. preventing enclave code from accessing untrusted memory except through the enclave interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Partition</head><p>The security benefits of this approach are offset by its limited applicability. Given the predefined enclave interface, the approach can only be used with applications that interact with the untrusted environment in specific ways, such as map/reduce tasks. Application-specific enclave interface. We explore another design point. We exploit the fact that, for many applications, only a subset of code handles sensitive data, while other code is not security-sensitive and does not need protection <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b71">71,</ref><ref type="bibr" target="#b75">74]</ref>. As shown in <ref type="figure" target="#fig_0">Fig. 1c</ref>, this makes it possible to partition the application to reduce the TCB size, leaving code and data that is not securitysensitive outside the enclave.</p><p>Past work has shown that partitioning can be done by hand so that complex applications can exploit enclaves <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b58">58]</ref>. Instead, we want to explore the hypothesis that it is feasible to use principled techniques, such as program analysis, to partition applications for secure enclaves, and provide security guarantees about the enclave code and its interface to the untrusted environment.</p><p>With this approach, the enclave interface now becomes application-specific: a set of ecalls and ocalls is required between trusted and untrusted application code. In contrast to a complete enclave interface, fewer system calls need ocalls because application code that is placed outside the enclave can issue system calls directly.</p><p>Since application data now also exists outside the enclave, enclave code must be allowed to access untrusted memory. This means that it is no longer possible to prohibit all memory accesses, as with the predefined enclave interface <ref type="bibr" target="#b73">[72]</ref>. Instead, it is important to give security guarantees that, despite the richer application-specific enclave interface, the untrusted environment cannot disclose sensitive enclave data or compromise its integrity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Glamdring Design</head><p>We present Glamdring, a framework for protecting existing C applications by executing security-sensitive code in an Intel SGX enclave. Glamdring targets the following requirements: it must protect the confidentiality of sensitive input data and the integrity of sensitive output data (R1); apply the principle of least privilege, minimising the code that can access sensitive data (R2); automate changes to the application code (R3); and impose an acceptable performance overhead (R4). To achieve these requirements, Glamdring operates in four phases (see <ref type="figure" target="#fig_2">Fig. 2</ref>):</p><p>(1) Code annotation: Glamdring must know which application data is sensitive (R1). The developer provides information about the sources (inputs) and sinks (outputs) of security-sensitive data by annotating variables whose values must be protected in terms of confidentiality and integrity ( Â§3.1).</p><p>(2) Code analysis: Based on the annotated source code, Glamdring identifies a subset of code that is securitysensitive (R2). It uses automatic static program analysis (R3) to find control and data dependencies on securitysensitive data. Glamdring thus obtains the minimal set of statements that either handle confidential data or affects its integrity (R1/R2) ( Â§3.2). (3) Code partitioning: Next Glamdring creates a partition specification (PS) that defines which parts of the code must be protected by the enclave. The PS enumerates the functions, memory allocations and global variables that are security-sensitive based on the program analysis. This defines the enclave boundary interface of the partitioned application, which includes ecalls, ocalls, and direct accesses to untrusted memory ( Â§3.3). (4) Code generation: Finally, Glamdring uses a sourceto-source compiler that, based on the PS, partitions the code into a secure enclave library and untrusted code. The enclave boundary interface is hardened with runtime checks that enforce invariants on the program state ( Â§4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Code annotation phase</head><p>The security-sensitive data that must be protected is application-dependent. To identify it, a developer must therefore annotate the source code. Glamdring relies on the fact that security-sensitive data is protected when it is exchanged between a trusted client and the application. For example, if data is received via the network, Glamdring requires the client to encrypt and sign the data. Both the client and the enclave code use symmetric AES-GCM encryption <ref type="bibr" target="#b22">[22]</ref>; the key is established upon enclave creation.</p><p>When encrypted security-sensitive data reaches the application through a source, such as an I/O channel, or leaves the application through a sink, a developer must annotate the corresponding variable using a compiler pragma. The annotation sensitive-source identifies a variable at a given source code location where securitysensitive data enters the application; analogously, the annotation sensitive-sink indicates a variable at which security-sensitive data leaves the application.</p><p>For example, for Memcached we assume that the security-sensitive data is the type of command submitted by the client (get/set) and its associated key/value data. This data is encrypted and signed by the trusted client when sent to the application. Using Glamdring, Memcached then requires two annotations:  An obvious location for the sensitive-source annotation might be the socket read() call from which a client request is received. However, this would be unnecessarily conservative because it would denote all network data as security-sensitive (and thus encrypted). Instead, the annotation in line 1 marks the content of the parameter command, which holds the request command and data, as security-sensitive. The sensitive-sink annotation in line 12 specifies that the output buffer for the client response also contains security-sensitive data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Code analysis phase</head><p>Next the code analysis phase identifies all securitysensitive statements in the program that have dependencies on the set of all annotated statements S A . This combines (a) for confidentiality, the set of all statements that are influenced by the ones in S A ; and (b) for integrity, the set of all statements that influence the ones in S A .</p><p>Glamdring uses static program analysis to identify all security-sensitive statements. Static analysis is workloadindependent and hence makes conservative decisions about dependencies. To ensure that an attacker cannot violate the invariants that static analysis infers from the untrusted code, Glamdring adds runtime checks during code generation (see Â§4).</p><p>Glamdring's analysis uses a program dependence graph (PDG) <ref type="bibr" target="#b23">[23]</ref>, referred to as P, in which vertices represent statements, and edges are both data and control dependencies between statements. PDGs are effective representations for program slicing <ref type="bibr" target="#b40">[40,</ref><ref type="bibr" target="#b56">56]</ref>. Using P, Glamdring finds the set of all security-sensitive statements as follows:</p><p>(1) Static dataflow analysis for confidentiality. Given S A and P, Glamdring uses graph-reachability to find a subgraph P c of P that contains all statements with a transitive control/data dependence on statements in S A (i.e. vertices reachable from statements in S A via edges in P).</p><p>For statements in S A that are annotated as a sensitive-sink, Glamdring encrypts/signs the data before the statement inside the enclave, making it unnecessary to perform dataflow analysis from these statements. (2) Static backward slicing for integrity. Given S A and P, Glamdring uses static backward slicing to find a subgraph P i with all statements in P on which statements in S A have a control/data dependence (i.e. all vertices from which statements in S A are reachable via P).</p><p>For these statements in S A that are annotated as sensitive-source, Glamdring employs client-side encryption of the data, making it unnecessary to perform backwards slicing from these statements.</p><p>Finally, the set of all security-sensitive statements S s is obtained by combining P c and P i .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Code partitioning phase</head><p>Although S s enumerates security-sensitive statements, Glamdring partitions the application at the granularity of functions rather than statements. This makes the enclave boundary coincide with the application's function interface, easing automatic code generation ( Â§4) and minimising the required code changes (R3).</p><p>Glamdring produces a partition specification (PS) from S s with the set of security-sensitive functions, memory allocations and global variables to protect:</p><p>(i) functions: the PS includes all functions whose definitions contain at least one statement in S s ;</p><p>(ii) memory allocations: the PS must identify allocated memory for security-sensitive data. Statements in S s with calls to malloc (or similar) are enumerated in the PS, and these allocations are placed inside the enclave;</p><p>(iii) global variables: the PS lists all global variables accessed in statements in S s , and these are allocated inside the enclave. Special accessor ecalls (with checks) are provided to the untrusted code to access these globals if needed. The PS specifies if the global was part of P c or P i or both, which determines what type of access (read, write or none) the outside code has.</p><p>Enclave boundary relocation (EBR). Glamdring's code analysis phase produces a lower bound on the code that must be inside the enclave to guarantee security. In practice, however, a partitioning may prove costly in terms of performance if program execution must frequently cross the enclave boundary interface. Glamdring improves performance by moving additional functions into the enclave in order to reduce the number of enclave crossings. Using a representative workload and the output of the gcov runtime profiling tool <ref type="bibr" target="#b28">[28]</ref>, Glamdring assigns a cost to each enclave boundary function according to the number of invocations. Up to a configurable threshold, Glamdring adds functions to the enclave. Adding extra functions to the enclave cannot violate the security guarantees of Glamdring, but it does increase the TCB size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Discussion</head><p>The security guarantees of Glamdring rely on (a) the soundness of the static analysis; (b) the modeling of external library calls whose source code is unavailable; and (c) the correctness of annotations.</p><p>Static analysis. To be tractable, static analysis infers invariants on program state based on the source code. These invariants must also hold at runtime, even when the untrusted code is under control of an attacker. As we describe in Â§4.2, Glamdring ensures this by adding runtime invariant checks to the enclave boundary.</p><p>Static pointer analysis is undecidable for C programs <ref type="bibr" target="#b64">[64]</ref> and thus fundamentally imprecise <ref type="bibr" target="#b33">[33,</ref><ref type="bibr" target="#b38">38]</ref>. The existence of false positives, however, does not compromise soundness: the partitioning phase may assign more functions to the enclave than necessary, but never excludes security-sensitive functions from the enclave.</p><p>Modelling external library calls. Static analyses must model the behaviour of all invoked functions, including those in external libraries with unavailable definitions. A conservative model makes all output parameters dependent on all input parameters and hence upholds the security guarantees; more precise models can consider actual function behaviour to specify dependencies <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b36">36]</ref>.</p><p>Annotations. Most static analysis tools for security rely on developer annotations of sources/sinks of securitysensitive data <ref type="bibr" target="#b35">[35,</ref><ref type="bibr" target="#b77">76]</ref>. While these are applicationspecific, in many cases they are easy to identify, e.g. when they are well-known library functions for I/O channels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Code Generation and Hardening</head><p>The code generation phase produces a source-level partitioning of the application based on the partition specification (PS) ( Â§4.1). In addition, it hardens the enclave boundary against malicious input, ensuring that the enclave upholds the confidentiality and integrity guarantees for sensitive data ( Â§4.2). The result is a set of enclave and outside source files, along with an enclave specification, which can be compiled using the Intel SGX SDK.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Code transformation</head><p>The code transformation must (a) handle calls into and out of the enclave; and (b) change the allocation, scope and lifetime of variables and functions in the generated enclave and non-enclave versions of the code.</p><p>Glamdring provides a code generator that relies on the LLVM/Clang compiler toolchain <ref type="bibr" target="#b14">[14,</ref><ref type="bibr" target="#b49">49]</ref> to rewrite the preprocessed C source code. It uses the Clang libraries to parse source code into an abstract syntax tree (AST), and traverses the AST to analyse and modify the source code. In addition to the enclave and outside source files, it produces an interface specification in the enclave definition language (EDL) required by the Intel SDK <ref type="bibr" target="#b43">[43]</ref>. The code generation proceeds in three steps: (i) Moving function definitions into the enclave. For each source file, the code generator creates an enclave and an outside version, which contain a copy of the original preprocessed input file. From the enclave version, it removes all functions not listed in the PS; from the outside version, it removes all listed enclave functions.</p><p>(ii) Generating ecalls and ocalls. Based on the set of enclave functions, the code generator identifies the ecalls and ocalls that are part of the enclave boundary interface. It traverses the direct call expressions in each function: (a) if the caller is an untrusted function and the callee is an enclave function, the callee is made an ecall; (b) if the caller is an enclave function and the callee is an untrusted function, the callee is made an ocall.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head><p>Adding stubs for encryption/decryption. As mentioned in Â§3.1, the security-sensitive data received from (and returned to) clients is encrypted (and integrity-protected) using a shared AES-GCM key. The code generator adds code to (a) decrypt security-sensitive data entering the enclave at locations annotated as sensitive-source, and (b) encrypt the security-sensitive data leaving the enclave at locations annotated as sensitive-sink. The application client must be modified to handle the corresponding encryption/decryption operations. Handling C library functions. Calls to C library functions are handled separately. A subset is supported by the Intel SDK inside the enclave and is handled in a polymor-phic manner: the enclave and untrusted code call their respective versions. <ref type="bibr" target="#b1">2</ref> For unsupported library functions, e.g. those making system calls, the code generator creates ocalls to the corresponding library function linked to the outside code. These ocalls violate the enclave boundary identified through static analysis and hence will be hardened with runtime checks (see Â§4.2).</p><p>Handling function pointers as interface arguments. Function pointer arguments to ecalls and ocalls are special cases because the target function may not exist at the point of invocation of the function pointer. For example, if an ecall passes a function pointer targeting a function on the outside, the program will fail when the enclave attempts to call that function pointer directly. Glamdring employs a static function pinter analysis <ref type="bibr" target="#b90">[89]</ref> to identify the possible target functions of function pointer arguments passed to ecalls and ocalls. The code generator then creates ecalls or ocalls for the target functions and uses a trampoline to jump to the correct one, as shown in the jump to func function: (iii) Handling memory allocation. The code generator also uses the PS to decide which memory allocations must be placed inside the enclave. For the memory allocations listed in the PS, nothing needs to be done because a malloc call inside the enclave allocates memory inside; for other memory allocations, a function must allocate memory outside, and the malloc is replaced by an ocall to the outside. This arises when placing non-sensitive code into the enclave when (i) partitioning at the function instead of statement level; and (ii) moving functions into the enclave using EBR (see Â§3.3).</p><formula xml:id="formula_0">/</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Code hardening</head><p>Next we analyse the attack surface of the enclave boundary interface and describe the protection techniques of the code generation phase against attacks (R1). Interface attacks. The security of the enclave code depends on the inputs that it receives from the enclave interface. An attacker may manipulate the parameters to ecalls, the results of ocalls, and accesses to globals. Secure by construction: The enclave code is, by construction, immune to input manipulation attacks. As long as 2 Linked calls to the few stateful C library functions (e.g. strtok)</p><p>typically do not span multiple functions, making it unlikely that such calls get partitioned into different regions.</p><p>Glamdring's static analysis is sound, it transitively identifies all code that can affect the confidentiality and integrity of security-sensitive data annotated by the developer, placing it inside the enclave (see Â§3.2).</p><p>However, static analysis infers invariants about the possible values of program variables at different program points, permitting it to prune unfeasible program paths from analysis. The soundness of the static analysis therefore depends on these invariants holding at runtime. Any invariant that relates to untrusted code or data may be compromised by an attacker. The following code snippet gives an example of a debug option that is deactivated in the source code: Static analysis infers that the value of dump flag cannot be 1, making it impossible to take the branch that does not include the declassify() call. Since the value of dump flag does not affect the control flow leading to sensitive data release, Glamdring would allocate it outside the enclave. An attacker could set dump flag to any value at runtime, including 1, to cause data disclosure. Runtime invariant checks. To prevent such attacks, Glamdring enforces the invariants assumed by the static analysis at runtime. It does this by extracting invariants from the analysis phase and adding them as runtime checks in the code generation phase. Glamdring applies checks on global variables and parameters passed into and out of ecalls and ocalls. In the above example, Glamdring adds a check assert(dump flag == 0).</p><p>Checks are also applied to pointers. The static analysis infers the subset of malloc calls that may allocate memory pointed to by each pointer. Glamdring distinguishes between two cases: (a) the analysis infers that a pointer may only point to untrusted memory. A runtime check upholds this and any other invariants on pointer aliasing; or (b) the pointer may point to enclave memory. Here, Glamdring's invariant checks prevent pointer-swapping attacks (i.e. a trusted pointer being replaced by another trusted pointer): Glamdring instruments the malloc calls inferred for that pointer inside the enclave, storing the addresses and sizes of allocated memory. When a trusted pointer is passed to the enclave via an ecall, it is checked to ensure that it points to a memory region allocated by one of the statically inferred malloc calls for that pointer. This upholds the results of the static pointer analysis at runtime with enclave checks.</p><p>For checks on global variables allocated outside, before each use, Glamdring copies the value inside and applies the check to the local copy. Enclave call ordering attacks. By construction, Glamdring prevents an attacker from subverting the security guarantees by changing the order in which ecalls are invoked. The transitivity of static analysis ensures that all functions that have a data/control flow dependence relationship (in either direction) with security-sensitive data are placed inside the enclave. Therefore, any change in the ordering of ecalls cannot affect the security guarantees as long as the statically-inferred enclave boundary is enforced. The EBR operation does change this boundary, but only by placing extra functions inside, and therefore cannot violate the security guarantees. Iago attacks. For applications that use C library functions unavailable in Intel SGX SDK, Glamdring adds ocalls (see Â§4.1). The arguments to such ocalls may expose security-sensitive data or their results may cause integrity violations, leading to Iago attacks <ref type="bibr" target="#b12">[12]</ref>. For these functions, Glamdring enforces statically inferred invariants on the return values at runtime. Further protection could be done similar to I/O shields in SCONE <ref type="bibr" target="#b1">[2]</ref>. Replay attacks. An attacker may tamper with the program state assumed by the enclave by replaying previously issued ecalls. Glamdring guarantees the freshness of encrypted sensitive data that is passed to ecalls. The client affixes a freshness counter to security-sensitive data as part of its encryption (see Â§3.3). The enclave stores the latest freshness counter for each data item, and validates freshness at ecalls. After an enclave restart, the freshness counters must be restored to their latest values <ref type="bibr" target="#b78">[77]</ref>. Enclave code vulnerabilities. Enclave code may contain vulnerabilities that can be exploited by an attacker. By reducing the amount of code executed in the enclave, Glamdring makes it more feasible to apply existing techniques to discover and rectify bugs such as bufferoverflows <ref type="bibr" target="#b37">[37,</ref><ref type="bibr" target="#b48">48]</ref>, data races <ref type="bibr" target="#b45">[45]</ref> and memory leaks <ref type="bibr" target="#b47">[47]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation</head><p>We evaluate Glamdring by applying it to the Memcached key/value store <ref type="bibr" target="#b24">[24]</ref>, the LibreSSL library <ref type="bibr" target="#b7">[7]</ref> and the Digital Bitbox bitcoin wallet <ref type="bibr" target="#b70">[70]</ref>. Â§5.1 describes the security objectives, the source code annotations and the resulting partitioning and its interface. The TCB (LOC) identified by Glamdring varies between 22% and 40%, and the size of the interface between 41-171 ecalls and 51-615 ocalls for the three applications. Â§5.2 presents performance results on SGX hardware: the partitioned applications execute with 0.3Ã-0.8Ã of the native performance. Glamdring implementation. Glamdring uses the Frama-C Aluminium <ref type="bibr" target="#b25">[25]</ref> static analysis framework, with the "Impact Analysis" <ref type="bibr" target="#b26">[26]</ref> and "Slicing" <ref type="bibr" target="#b27">[27]</ref> plug-ins and CodeSurfer 3.0.0 <ref type="bibr" target="#b34">[34]</ref>. The Glamdring code generator uses LLVM/Clang 3.9 and has approx. 5,000 LOC. Memcached <ref type="bibr" target="#b24">[24]</ref> is a distributed key/value store. It supports several operations: set(k,v), get(k), delete(k), and increment/decrement(k,i). We apply Glamdring to Memcached 1.4.25 that includes libevent 1.4.14 <ref type="bibr" target="#b62">[62]</ref>, an asynchronous event library. Memcached has 31,100 LOC and 655 functions. LibreSSL <ref type="bibr" target="#b7">[7]</ref> is a fork of the OpenSSL cryptographic library <ref type="bibr" target="#b18">[18]</ref>, with the goal to provide a simpler and more secure implementation. We apply Glamdring to LibreSSL 2.4.2 to secure its functionality when serving as a certificate authority (CA). LibreSSL has 176,600 LOC and 5,508 functions, which are divided into three libraries, libcrypto, libssl and apps/openssl. We compile LibreSSL without inline assembly because our static analysis does not support it. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Security evaluation</head><p>We evaluate the security of the partitioned application in terms of the TCB size and the exposed enclave interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Memcached</head><p>Security objectives. We want to protect the integrity and confidentiality of all key/value pairs in an untrusted Memcached deployment, preventing an attacker from reading or modifying the stored key/value data. For this, we use the source code annotations described in Â§3.1. Security-sensitive code. Tab. 1 shows that Glamdring places 40% of LOC, 42% of functions and 68% of global variables of Memcached inside the enclave. EBR moves a single additional function into the enclave, reducing the ocall crossings by an order of magnitude for get and set operations. We conclude that a large portion of the Memcached codebase (without libevent) is security-sensitive, as 87% of its functions and 85% of its global variables are assigned to the enclave. Partitioned architecture. Glamdring places the following Memcached functionality inside the enclave: (i) binary/ASCII protocol handling functions; (ii) slab and cache memory management functions that manipulate the data structures responsible for the internal storage of key/value pairs; and (iii) the hash functions over key/value pairs. The functionality placed outside includes: (i) thread initialization and registration functions; (ii) libevent functions for socket polling and network I/O; and (iii) signal handlers and string utility functions. Enclave interface. The enclave interface (see <ref type="table">Tab.</ref>   library functions unavailable inside the enclave; 64 ocalls are to application functions. To protect the security-sensitive data between the Memcached client and the enclave interface, Glamdring encrypts the following parameters at the client for each request: (i) the operation to perform; (ii) the key; and (iii) the value. The keys, values and the request outcome are encrypted in the client response.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">LibreSSL</head><p>Security objectives. Our goal is to protect the confidentiality of the private key of the root certificate of the LibreSSL CA. We annotate the private key as follows: Security-sensitive code. Tab. 1 shows that Glamdring places 22% of LOC, 17% of functions and 16% of global variables inside the enclave. EBR moves 2 functions into the enclave, thereby: (i) more than halving the number of ecall crossings; and (ii) reducing the number of ocall crossings by an order of magnitude for sign requests. The majority of functions and global variables assigned to the enclave originate from the libcrypto library, which contains most of the certificate signing logic. Partitioned architecture. Glamdring places only a subset of LibreSSL into the enclave: (i) the entropy/random number generator; (ii) the RSA and Big Numbers module; and (iii) the X509 module, which stores the certificates. The functionality placed outside includes: (i) the TLS/SSL modules for secure communication; (ii) digest algorithms (MD5, SHA256); and (iii) cryptographic protocols unrelated to certificate signing (DSA, AES) Enclave interface. LibreSSL exposes 171 ecalls and 613 ocalls (see Tab. 1). Out of those, only 23 ocalls provide access to C library functions; 49% of ocalls provide access to global variables; and the remaining 278 ocalls are used to execute outside LibreSSL functions.</p><p>Glamdring places the private key of the root certificate and any variables that depend on it inside the enclave. The communication between the client requesting a certificate signature and the enclave involves: (i) reading the certificate to be signed; and (ii) outputting the signature. We assume that the root certificate and its private key are given to the enclave during initialisation <ref type="bibr" target="#b44">[44]</ref>. Since the signed certificate is not confidential, no explicit declassification is needed before writing it to disk via an ocall.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Digital Bitbox</head><p>Security objectives. We want to secure Digital Bitbox in a remote deployment, such as an online bitcoin service. An attacker must not (i) read/modify the private keys in the wallet; and (ii) issue commands such as transactions.</p><p>We consider three API calls security-sensitive: (i) seed() to create a new wallet; (ii) sign() to sign a transaction and return the signature; and (iii) random() to return a random number. We annotate these API calls with security annotations. The listing below shows the annotation added to protect the transaction signature returned to the user for the seed() API call: int wallet_sign(char *message, char *keypath) { uint8_t sig <ref type="bibr" target="#b64">[64]</ref>; ... ecc_sign_digest(node.private_key, data, sig) ... #pragma glamdring sensitive-sink(sig) return commander_fill_signature_array(sig, pub_key); } Security-sensitive code. Glamdring places 38% of LOC, 42% of functions and 52% of global variables inside the enclave (see Tab. 1). EBR increases the TCB by 4 functions, reducing the number of ecall and ocall crossings at runtime by between 1 and 3 orders of magnitude, for the seed, sign and random API calls. Only half of the Digital Bitbox code itself is security-sensitive: 51% of functions and 60% of global variables. Partitioned architecture. The Digital Bitbox functionality placed inside the enclave includes: (i) command processing functions for specific API calls; (ii) code for generating seeds (using the SGX-provided hardware random    <ref type="table">Tab.</ref> 1). 36% of ocalls are to C library functions unavailable inside the enclave; 64% are to application functions outside the enclave. To protect the security-sensitive data between the client and the application, Glamdring encrypts: (i) the command to execute (seed()/sign()); (ii) the user-provided entropy for seed(); (iii) the transaction data for sign(); (iv) the value of seed(); (v) the signature of sign() returned to the client; and (vi) the generated random number. Performing data protection at this granularity prevents an attacker from issuing commands to Digital Bitbox, and permits Glamdring to move the majority of the JSON parsing functions outside the enclave, as only a subset of the API request/response is security-sensitive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.4">Discussion</head><p>Our security evaluation has led to several insights: First, Glamdring achieves small enclave sizes, protecting security-sensitive functionality for real-world applications. Tab. 2 compares the TCB for Memcached of Glamdring with SCONE <ref type="bibr" target="#b1">[2]</ref> and Graphene <ref type="bibr" target="#b55">[55,</ref><ref type="bibr" target="#b82">81]</ref>, which place the whole application inside the enclave. As can be seen, Glamdring is one-third the size of SCONE, and one order of magnitude smaller than Graphene in terms of enclave LOC; around 6,000 LOC are added by Glamdring to the TCB through the code generator and enclave interface hardening. In binary sizes, Glamdring is 4Ã and 5Ã smaller than SCONE and Graphene, respectively.</p><p>Second, EBR is effective at reducing the number of ecall and ocall crossings at runtime, despite only moving a few additional functions into the enclave. In the case of Digital Bitbox, moving four functions into the enclave reduces the number of enclave boundary crossings by up to three orders of magnitude.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Performance evaluation</head><p>We evaluate the performance of the three partitioned applications in terms of throughput and latency. Experimental set-up. All experiments are executed on an SGX-supported 4-core Intel Xeon E3-1280 v5 at 3.70 GHz with 64 GB of RAM, running Ubuntu 14.04 LTS with Linux kernel 3.19 and the Intel SGX SDK 1.7. We deactivate hyper-threading and compile the applications using GCC 4.8.4 with -O2 optimisations. Application benchmarks. We evaluate Memcached with the YCSB benchmark <ref type="bibr" target="#b15">[15]</ref>. Clients run on separate machines connected via a Gigabit network link. We increase the number of clients until the server is saturated. Memcached is initialised with the YCSB default of 1000 keys with 1 KB values. We then vary the percentage of get (read) and set (write) operations.</p><p>For LibreSSL, we measure the throughput and latency when signing certificates using SHA-256 and a 4096-bit RSA key. For Digital Bitbox, we observe the performance for the seed, sign, and random API calls using workloads from the Digital Bitbox test suite: (i) tests sign seeds a wallet and signs 64-byte transactions; (ii) tests aes cbc seeds a wallet with user-provided entropy, sets passwords and performs encryption/decryption with AES-256; and (iii) tests random returns random numbers. Results. We measure the throughput and latency for Memcached: (i) partitioned by Glamdring; (ii) executed by SCONE (without network encryption); (iii) by Graphene; and (iv) natively, as the request rate is increased. We consider three workloads: read-only, writeonly and 50%/50% read/write. <ref type="figure" target="#fig_9">Fig. 3</ref> shows that all three variants exhibit consistent behaviour across the workloads. Glamdring shows a throughput of 160k requests/s; SCONE (without encryption) achieves between 270k-330k requests/s; Graphene between 65k-95k requests/s; and the native Memcached achieves around 530k-600k requests/sec.</p><p>The reason for Glamdring's lower throughput com- pared to SCONE is that SCONE avoids all enclave transitions; it trades off TCB size for performance (see Â§2.</p><p>3) and requires user-level enclave threading to avoid transitions. Enclave transitions dominate the cost of processing a request; by batching multiple get requests together using multi-get, Glamdring achieves over 210k requests/sec. However, Glamdring has only a third of the TCB of SCONE (see <ref type="table">Tab.</ref> 2). The overhead of a library OS means that Memcached with Graphene exhibits worse performance than Glamdring. <ref type="figure" target="#fig_10">Fig. 4</ref> shows the performance of LibreSSL and Digital Bitbox with Glamdring compared to their native versions. The throughput of certificate signing in LibreSSL is 0.6Ã compared to native execution, decreasing from 63 to 36 signatures per second on each CPU core. The performance of LibreSSL is limited by a single ecall (bn sub part words), which is central to the RSA algorithm and accounts for 95% of all enclave transitions. As for Digital Bitbox, compared to native execution, the relative throughput is between 0.7Ã and 0.8Ã; the relative latency is between 1.3Ã and 1.4Ã. Effect of EBR. By comparing the performance of partitioned applications before and after applying the EBR optimisation, we found that the latter increased the throughput by 1.6Ã to 4.0Ã for the three applications, at the cost of at most 4 additional functions in the enclave.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Privilege separation. The attack surface of applications can be reduced in many ways <ref type="bibr" target="#b11">[11,</ref><ref type="bibr" target="#b31">31,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b51">51,</ref><ref type="bibr" target="#b66">66,</ref><ref type="bibr" target="#b86">85]</ref>. PrivTrans <ref type="bibr" target="#b11">[11]</ref> performs a least-privilege partitioning of an application into a privileged monitor and an unprivileged slave component using static analysis, without considering the integrity of sensitive data. ProgramCutter <ref type="bibr" target="#b86">[85]</ref> and Wedge <ref type="bibr" target="#b8">[8]</ref> rely on dynamic analysis to partition applications. SeCage <ref type="bibr" target="#b51">[51]</ref> combines static and dynamic analysis to partition applications, and the isolation is enforced using CPU virtualisation features. In contrast, Glamdring does not need a trusted OS or hypervisor and respects the constraints of trusted execution.</p><p>SOAAP <ref type="bibr" target="#b35">[35]</ref> helps developers to reason about the potential compartmentalisation of applications based on source annotations and static analysis. Unlike Glamdring, it does not support automated code partitioning. Rubinov et al. <ref type="bibr" target="#b66">[66]</ref> propose a partitioning framework for Android applications. It refactors the source code and adds a set of privileged instructions. However, it only supports typesafe Java applications and requires users to re-implement the security-sensitive functionality in C. Protecting applications from an untrusted OS. A number of approaches have been proposed to deal with an untrusted OS that spans millions of LOC. NGSCB <ref type="bibr" target="#b57">[57]</ref> and Proxos <ref type="bibr" target="#b80">[79]</ref> execute both an untrusted and a trusted OS using virtualisation, and security-sensitive applications are managed only by the trusted OS. The TCB, however, still includes a full OS. In more recent work, Overshadow <ref type="bibr" target="#b13">[13]</ref>, SP <ref type="bibr" target="#b2">3</ref> [87], InkTag <ref type="bibr" target="#b39">[39]</ref> and Virtual Ghost <ref type="bibr" target="#b20">[20]</ref> protect application memory from an untrusted OS by extending the virtual machine monitor (VMM). Such approaches put trust in the VMM, and cannot protect against attackers with privileged access, such as system administrators.</p><p>Trusted hardware. Use of trusted hardware, such as secure co-processors <ref type="bibr" target="#b50">[50]</ref> and trusted platform modules (TPM) <ref type="bibr" target="#b81">[80]</ref>, can protect against attackers with physical access. A TPM can measure system integrity and provide remote attestation to verify the software stack <ref type="bibr" target="#b29">[29]</ref>. Since the TPM measurement will include the OS and any system libraries, the TCB likely comprises millions of LOC.</p><p>Flicker <ref type="bibr" target="#b53">[53]</ref> reduces the integrity measurement to a TCB of just 250 LOC, but lacks relevant system support and suffers from slow TPM operations. TrustVisor <ref type="bibr" target="#b52">[52]</ref> is a special-purpose VMM that uses software-based ÂµTPMs for application integrity checking, but it focuses on small pieces of application logic and requires a trusted hypervisor. CloudVisor <ref type="bibr" target="#b89">[88]</ref> provides integrity and confidentiality protection for virtual machines using nested virtualisation, but this leads to VM-sized TCBs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>We described Glamdring, the first partitioning framework that helps developers leverage SGX enclaves for C applications. Glamdring uses static program analysis to decide which subset of the application code to protect, and offers guarantees that the confidentiality and integrity of application data cannot be compromised, even when an attacker has complete control over the machine. Our experimental evaluation demonstrates that Glamdring is sufficiently practical to handle real-world applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgements</head><p>This work has received funding from the European Union's Horizon 2020 programme under grant agreements 645011 (SERECA) and 690111 (SecureCloud), and from the UK Engineering and Physical Sciences Research Council (EPSRC) under the CloudSafetyNet project (EP/K008129) and the EPSRC Centre for Doctoral Training in High Performance Embedded and Distributed Systems (HiPEDS) (EP/L016796/1).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Design alternatives for the use of enclaves</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Overview of the Glamdring framework</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>1</head><label></label><figDesc>#pragma glamdring sensitive-source(command) 2 static void process_command(conn *c, char *command) { 3 token_t tokens[MAX_TOK]; 4 size_t ntokens; 5 ...</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>6</head><label></label><figDesc>ntokens = tokenize_command(command,tokens,MAX_TOK); 7 ... 8 process_update_command(c,tokens,ntokens,comm,false); 9 ... 10 } 11 12 #pragma glamdring sensitive-sink(buf) 13 static int add_iov(conn *c, void *buf, int len) { 14 ... 15 m = &amp;c-&gt;msglist[c-&gt;msgused -1]; 16 m-&gt;msg_iov[m-&gt;msg_iovlen].iov_base = (void *)buf; 17 ... 18 }</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>*</head><label></label><figDesc>Initialised to func_A and func_B outside */ int (*addrof_func_A)(int); int (*addrof_func_B)(int); int jump_to_func(int (*fptr)(int), int x) { if (fptr==addrof_func_A) return ocall_func_A(x); else if (fptr==addrof_func_B) return ocall_func_B(x); } int ecall_enclave_func(int (*fptr)(int),int y) { return jump_to_func(fptr, y); }</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Digital Bitbox [70] is a bitcoin wallet designed for high- security USB microcontrollers. It supports: (i) hierarchi- cal deterministic key generation; (ii) transaction signing; and (iii) encrypted communication. We apply Glamdring to Digital Bitbox 2.0.0 with Secp256k1 1.0.0, a crypto- graphic library, and Yajl 2.1.0, a JSON library. Digital Bitbox has 23,300 LOC and 873 functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 3 : Throughput versus latency for Memcached native, with SCONE and with Glamdring</head><label>3</label><figDesc>Figure 3: Throughput versus latency for Memcached native, with SCONE and with Glamdring</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 4 : Throughput and latency overhead for Digital Bitbox and LibreSSL</head><label>4</label><figDesc>Figure 4: Throughput and latency overhead for Digital Bitbox and LibreSSL</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>, the number of Enclave Application Standard librariesSensitive app code Non-sensitive app code Non-sensitive app data Sensitive app data (a) Complete enclave interface Enclave Application logic Host OS Read/ Write Trusted shim libraryHost OS Standard libraries Trusted shim library Function calls Sensitive app code Non-sensitive app code Non-sensitive app data Sensitive app data</head><label></label><figDesc></figDesc><table>Library OS 

Host OS 

System/ 
Hyper calls 

Sensitive 
app code 
Sensitive 
app data 

(b) Predefined 
enclave interface 

Enclave 

Application 

Application 

Untrusted 
memory 
accesses 

(c) Application-
specific interface 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head></head><label></label><figDesc>1) has 41 ecalls and 146 ocalls. Out of these, 82 ocalls are to C</figDesc><table>Application 

LOC Functions 
Global 
variables 

Security-
sensitive LOC 

Security-sensitive 
functions 

Security-sensitive 
global variables 

Ecalls Ocalls C lib. 
ocalls 

App. 
ocalls 

Ecall crossings per 
application request 

Ocall crossings per 
application request 

get 
set 
get 
set 
Memcached 
31,100 
655 
119 12,474 (40%) 
273 (42%) 
81 (68%) 
41 
146 
82 
64 
1 
1 
2 
2 
Memcached w/o EBR 
31,100 
655 
119 
272 (42%) 
81 (68%) 
41 
147 
82 
65 
1 
1 
18 
34 
Memcached v1.4.25 
13,800 
247 
84 
215 (87%) 
72 (85%) 
libevent v1.4.14 
17,300 
408 
35 
57 (14%) 
9 (26%) 
sign 
sign 
LibreSSL 
176,600 
5,508 
1,034 38,291 (22%) 
918 (17%) 
163 (16%) 
171 
613 
23 
312 
6,617 
110 
LibreSSL w/o EBR 
176,600 
5,508 
1,034 
916 (17%) 
163 (16%) 
171 
615 
23 
314 
16,545 
8,235 
libcrypto v2.4.2 
124,800 
4,550 
833 
654 (14%) 
91 (11%) 
libssl v2.4.2 
24,300 
628 
42 
83 (13%) 
7 (17%) 
apps v2.4.2 
27,500 
330 
159 
179 (54%) 
65 (41%) 
seed sign 
random seed sign random 
Digital Bitbox 
23,300 
873 
105 8,743 (38%) 
365 (42%) 
55 (52%) 
114 
51 
20 
31 
23 
4 
7 
4 
0 
0 
Digital Bitbox w/o EBR 23,300 
873 
105 
361 (42%) 
55 (52%) 
118 
55 
20 
35 3,252 6,937 
672 
59 
12 
11 
Digital Bitbox v2.0.0 
7,900 
382 
81 
195 (51%) 
48 (60%) 
Secp256k1 v1.0.0 
12,900 
112 
9 
52 (46%) 
1 (11%) 
Yajl v2.1.0 
2,500 
379 
15 
114 (30%) 
6 (40%) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table>TCB sizes, enclave interfaces and enclave crossings for Glamdring applications (Application requests are: 
(i) get, set for Memcached; (ii) sign for LibreSSL; and (iii) seed, sign, random for Digital Bitbox.) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>TCB sizes and performance for Memcached 
for Glamdring, SCONE and Graphene 

generator); and (iii) elliptic curve operations for transac-
tion signing. The functionality placed outside includes: 
(i) wallet management functions for retrieving the pub-
lic key and address formats; (ii) the command interface 
for handling API calls and constructing responses; and 
(iii) elliptic curve and JSON parsing utility functions. 
Enclave interface. Digital Bitbox exposes 114 ecalls and 
55 ocalls (see </table></figure>

			<note place="foot" n="1"> Pointers passed outside the enclave are only deep-copied if data in enclave-allocated memory needs to be declassified-the programmer needs to implement this manually.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A View of Cloud Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A R M B R U S T</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>F O X</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>G R I F F I T H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>J O S E P H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>At Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>K O N W I N S K I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>L E E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Pat T E R -S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>R A B K I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>S T O I C A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>A N D Z A H A R I A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A R N A U T O V</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>T R A C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>G R E G O R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>K N A U T H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>M A R T I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>P R I E B E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>L I N D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>M U T H U K U -M A R A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>O &amp;apos; K E E F F E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>S T I L L W E L L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>E T A L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Scone</surname></persName>
		</author>
		<title level="m">Secure Linux Containers with Intel SGX. In OSDI</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<ptr target="https://aws.amazon.com" />
	</analytic>
	<monogr>
		<title level="j">Amazon Web Services</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Microsoft</forename><surname>Azure</surname></persName>
		</author>
		<ptr target="https://azure.microsoft.com" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B A U D I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>F I L L I Ë A T R E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J . -C</forename><surname>M A R C H Â´ E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M O N At E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>M O Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>A N D P R E V O S T O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Acsl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>ANSI C Specification Language</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Shielding Applications from an Untrusted Cloud with Haven</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B A U M A N N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>P E I N A D O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A N D H U N T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">LibreSSL-An OpenSSL replacement. The first 30 days, and where we go from here</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B E C K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
			<publisher>BSDCAN</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Wedge: Splitting applications into reduced-privilege compartments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B I T Ta U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>M A R C H E N K O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>H A N D L E Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A N D K A R P</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 5th USENIX Symposium on Networked Systems Design and Implementation</title>
		<meeting>the 5th USENIX Symposium on Networked Systems Design and Implementation<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="309" to="322" />
		</imprint>
	</monogr>
	<note>NSDI&apos;08, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B R E N N E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>W U L F</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>L O R E N Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>W E I C H -B R O D T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>O Lt Z S C H E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>F E T Z E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>P I E T-Z U C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D K A P I T Z A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Securekeeper</surname></persName>
		</author>
		<title level="m">Confidential ZooKeeper using Intel SGX. In Middleware</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Software mitigations to hedge AES against cache-based software side channel vulnerabilities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B R I C K E L L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>G R A U N K E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>N E V E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A N D S E I F E R T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J . -P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IACR Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Privtrans: Automatically Partitioning Programs for Privilege Separation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B R U M L E Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>A N D S O N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Attacks: Why the System Call API is a Bad Untrusted RPC Interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E C K O Way</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>A N D S H A C H A M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASP-LOS</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Overshadow: A Virtualization-based Approach to Retrofitting Protection in Commodity Operating Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>G A R F I N K E L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>L E W I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>S U B R A H -M A N Ya M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wa L D S P U R G E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>B O N E H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>D W O S K I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>A N D P O R T S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOS</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<ptr target="http://clang.llvm.org" />
		<title level="m">C language family frontend for LLVM</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Benchmarking Cloud Serving Systems with YCSB</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O O P E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">F</forename><surname>S I L B E R S T E I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ta M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>R A -M A K R I S H N A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>A N D S E A R S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SoCC</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O S Ta N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>A N D D E Va D A S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O Wa N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>B E At T I E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>K R O A H -H A R T M A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>P U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wa G L E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D G L I G O R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SubDomain: Parsimonious Server Security. In LISA</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O X</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>E N G E L S C H A L L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>H E N S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>L A U R I E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>E T A L</surname></persName>
		</author>
		<ptr target="https://www.openssl.org/" />
	</analytic>
	<monogr>
		<title level="j">The OpenSSL Project</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Thwarting Cache SideChannel Attacks Through Dynamic Software Diversity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C R A N E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>H O M E S C U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>B R U N T H A L E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>L A R S E N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D F R A N Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NDSS</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Virtual Ghost: Protecting Applications from Hostile Operating Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C R I S W E L L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>D A U T E N H A H N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>A N D A D V E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOS</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">DDoS Attacks and Defense Mechanisms: Classification and State-of-theart</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>O U L I G E R I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>A N D M I T R O K O T S A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Netw</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D W O R K I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<title level="m">Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC. Tech. rep., National Institute of Standards and Technology (NIST)</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The Program Dependence Graph and Its Use in Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F E R R A N T E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>O T T E N S T E I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A N D</forename><surname>Wa R R E N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. Program. Lang. Syst</title>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Distributed Caching with Memcached</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F I T Z Pat R I C K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linux Journal</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C Software</forename><surname>Frama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Analyzers</surname></persName>
		</author>
		<ptr target="http://frama-c.com/whatis.html" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Impact analysis plug</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C</forename><surname>Frama</surname></persName>
		</author>
		<ptr target="http://frama-c.com/impact.html" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-C</forename><surname>Frama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Slicing</surname></persName>
		</author>
		<ptr target="http://frama-c.com/slicing.html" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Using the GNU Compiler Collection (GCC)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F R E E S O F T</forename><surname>Wa R E F O U N D At I O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I N C</forename><surname>Gcov</surname></persName>
		</author>
		<ptr target="https://gcc.gnu.org/onlinedocs/gcc/Gcov.html#Gcov" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Terra: A Virtual Machine-based Platform for Trusted Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G A R F I N K E L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>P F A F F</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H O W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>R O S E N B L U M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A N D B O N E H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOSP</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">No One is Immune to Breaches as 183 Million Accounts Compromised in Q3</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G E M A</forename><surname>Lt O N V</surname></persName>
		</author>
		<ptr target="https://safenet.gemalto.com/news/2014/q3-data-breaches-compromise-183-million-customer-accounts" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Adaptive Defenses for Commodity Software Through Virtual Application Partitioning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G E N E I Ata K I S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>P O R T O K A L I D I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>K E M E R L I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">P</forename><surname>A N D K E R O M Y T I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Fully Homomorphic Encryption Using Ideal Lattices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G E N T R Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Flow-and Context-Sensitive Points-To Analysis Using Generalized Points-To Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G H A R At</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>K H E D K E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">P</forename><surname>A N D M Y C R O F T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In SAS</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G R A M M At E C H</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I N C</forename><surname>Codesurfer</surname></persName>
		</author>
		<ptr target="https://www.grammatech.com/products/codesurfer" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G U D K A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wat S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>A N D E R S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>C H I S -N A L L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Av I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>L A U R I E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>M A R I N O S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>N E U M A N N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>A N D R I C H A R D S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Clean Application Compartmentalization with SOAAP. In CCS</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Larch: Languages and Tools for Formal Specification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G U T Ta G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">V</forename><surname>A N D H O R N I N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
			<publisher>Springer Science &amp; Business Media</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Dowsing for Overflows: A Guided Fuzzer to Find Buffer Boundary Violations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H A L L E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>S L O W I N S K A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>N E U G S C H Wa N D T N E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A N D B O S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Flow-sensitive Pointer Analysis for Millions of Lines of Code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H A R D E K O P F</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>A N D L I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CGO</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">InkTag: Secure Applications on an Untrusted Operating System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H O F M A N N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">S</forename><surname>K I M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>D U N N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>L E E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Z</forename><surname>A N D W I T C H E L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOS</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Interprocedural Slicing Using Dependence Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H O R W I T Z</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>R E P S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>A N D B I N K L E Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PLDI</title>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>D E N T I T Y T H E F T R E S O U R C E C E N T E R</surname></persName>
		</author>
		<ptr target="http://www.idtheftcenter.org/images/breach/ITRCBreachReport2016.pdf" />
	</analytic>
	<monogr>
		<title level="j">Breach List</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Software Guard Extensions Programming Reference</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>N T E L C O R P</surname></persName>
		</author>
		<idno>Ref. 329298-002US</idno>
		<ptr target="https://software.intel.com/sites/default/files/managed/48/88/329298-002.pdf" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>N T E L C O R P</surname></persName>
		</author>
		<ptr target="https://software.intel.com/sgx-sdk" />
		<title level="m">Intel Software Guard Extensions (Intel SGX) SDK</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J O H N S O N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>I M O N E T A L</surname></persName>
		</author>
		<ptr target="https://software.intel.com/en-us/blogs/2016/03/09/intel-sgx-epid-provisioning-and-attestation-services" />
		<title level="m">IntelÂ® Software Guard Extensions: EPID Provisioning and Attestation Services</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Deadlock immunity: Enabling systems to defend against deadlocks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J U L A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>T R A L A M A Z Z A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Z A M F I R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>A N D C A N -D E A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">A Fully Decentralized Data Usage Control Enforcement Infrastructure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K E L B E R T</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>A N D P R E T S C H N E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACNS</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Code-pointer integrity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K U Z N E T S O V</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>S Z E K E R E S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Pay E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>C A N -D E A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>S E K A R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>A N D S O N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI&apos;14</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Statically Detecting Likely Buffer Overflow Vulnerabilities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L A R O C H E L L E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>A N D E Va N S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">LLVM: A Compilation Framework for Lifelong Program Analysis &amp; Transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>At T N E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>A N D A D V E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CGO</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Building the IBM 4758 Secure Coprocessor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L I N D E M A N N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>P E R E Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>S A I L E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Va N D O O R N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>A N D S M I T H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Thwarting Memory Disclosure with Efficient Hypervisorenforced Intra-domain Isolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L I U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Z H O U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>A N D X I A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">TrustVisor: Efficient TCB Reduction and Attestation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M C C U N E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>L I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Q U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Z H O U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>G L I G O R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>A N D P E R R I G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">S&amp;P</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Flicker: An Execution Infrastructure for TCB Minimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M C C U N E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Pa R N O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">J</forename><surname>P E R R I G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>R E I T E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">K</forename><surname>A N D I S O Z A K I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurosys</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M I S R A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>A N D B H Av S A R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">C</forename></persName>
		</author>
		<title level="m">Relationships Between Selected Software Measures and Latent Bug-Density: Guidelines for Improving Quality</title>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page">724732</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>S C A R L A B. Graphene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Sgx</surname></persName>
		</author>
		<ptr target="https://github.com/oscarlab/graphene" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">The program dependence graph in a software development environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O T T E N S T E I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>A N D O T T E N S T E I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGPLAN Not</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="177" to="184" />
			<date type="published" when="1984-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">NGSCB: A Trusted Open System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P E I N A D O</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>E N G L A N D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D M A N -F E R D E L L I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">S&amp;P</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">Secure Content-Based Routing Using Intel Software Guard Extensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P I R E S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pa S I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>F E L B E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D F E T Z E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
	<note>In Middleware</note>
</biblStruct>

<biblStruct xml:id="b59">
	<monogr>
		<title level="m" type="main">The Aftermath of a Mega Data Breach: Consumer Sentiment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>O N E M O N I N S T I T U T E</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P O Pa</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>R E D F I E L D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M S</forename><surname>Z E L D O V I C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>A N D B A L A K R I S H N A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cryptdb</surname></persName>
		</author>
		<title level="m">Protecting Confidentiality with Encrypted Query Processing</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>SOSP</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Rethinking the Library OS from the Top Down</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P O R T E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>B O Y D -W I C K I Z E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>H O W E L L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>O L I N S K Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>A N D H U N T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASPLOS</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P R O V O S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>A N D M At H E W S O N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
		<ptr target="http://libevent.org/" />
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Silverline: Toward Data Confidentiality in Storageintensive Cloud Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P U T Ta S Wa M Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">P N</forename><surname>K R U E G E L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>A N D Z H A O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOCC</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">The Undecidability of Aliasing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R A M A L I N G A M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">TOPLAS</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Precise Interprocedural Dataflow Analysis via Graph Reachability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R E P S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>H O R W I T Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>A N D S A G I V</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">POPL</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Automated Partitioning of Android Applications for Trusted Execution Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R U B I N O V</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K O N S</forename><surname>Ta N T I N A N D R O S C U L E T E , L U C I A A N D M I T R A , T U L I K A A N D R O Y C H O U D H U R Y, A B H I K</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICSE</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">The protection of information in computer systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S A Lt Z E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>A N D S C H R O E D E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S C H U S T E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O S</forename><surname>Ta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>F O U R N E T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>G K A N T-S I D I S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>P E I N A D O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>M A I N A R -R U I Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>A N D R U S S I N O V I C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vc3</surname></persName>
		</author>
		<title level="m">Trustworthy Data Analytics in the Cloud Using SGX</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>S&amp;P</note>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T. -J</forename><surname>T H E B A U T</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A N D Pa U L S E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Identifying Error-Prone softwareAn Empirical Study. Trans. Softw. Eng</title>
		<imprint>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b70">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>H I F T D E V I C E S A G. Digital</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bitbox</surname></persName>
		</author>
		<ptr target="https://github.com/digitalbitbox/mcu" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b71">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S I N G A R Av E L U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>P U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>H Â¨ A R T I G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>A N D H E L -</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b72">
	<analytic>
		<title level="a" type="main">Reducing TCB Complexity for Security-sensitive Applications: Three Case Studies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M U T H</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroSys</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b73">
	<analytic>
		<title level="a" type="main">A Design and Verification Methodology for Secure Isolated Regions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S I N H A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O S</forename><surname>Ta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>L A L</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>L O P E S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">P</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R A J A -M A N I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>S E S H I A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A N D Va S Wa N I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PLDI</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b74">
	<analytic>
		<title level="a" type="main">Moat: Verifying Confidentiality of Enclave Programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S I N H A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>R A J A M A N I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>S E S H I A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A N D Va S Wa N I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b75">
	<analytic>
		<title level="a" type="main">Refactoring Programs to Secure Information Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S M I T H</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>A N D T H O B E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLAS</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b76">
	<monogr>
		<title level="m" type="main">Hackers Modify Water Treatment Parameters by Accident</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>O F T P E D I A</surname></persName>
		</author>
		<ptr target="http://news.softpedia.com/news/hackers-modify-water-treatment-parameters-by-accident-502043.shtml" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b77">
	<analytic>
		<title level="a" type="main">Protecting Users by Confining JavaScript with COWL</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S T E F A N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ya N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">Z</forename><surname>M A R C H E N K O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>R U S S O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>H E R M A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>K A R P</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>A N D M A Z I ` E R E S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation</title>
		<meeting>the 11th USENIX Conference on Operating Systems Design and Implementation</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="131" to="146" />
		</imprint>
	</monogr>
	<note>OSDI&apos;14, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b78">
	<analytic>
		<title level="a" type="main">Ariadne: A Minimal Approach to State Continuity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S T R A C K X</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>A N D P I E S S E N S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b79">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S Y N O P S Y S</forename></persName>
		</author>
		<ptr target="http://go.coverity.com/rs/157-LQW-289/images/2014-Coverity-Scan-Report.pdf" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
<note type="report_type">Coverity Scan -Open Source Report</note>
</biblStruct>

<biblStruct xml:id="b80">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ta -M I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>L I T T Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>A N D L I E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<title level="m">Splitting Interfaces: Making Trust Between Applications and Operating Systems Configurable. In OSDI</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b81">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>R U S T E D C O M P U T I N G G R O U P</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tpm Main</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Specifica</surname></persName>
		</author>
		<ptr target="http://www.trustedcomputinggroup.org/tpm-main-specification/" />
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>tion v1.2, rev 116</note>
</biblStruct>

<biblStruct xml:id="b82">
	<analytic>
		<title level="a" type="main">Cooperation and security isolation of library oses for multi-process applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T S A I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C . -C</forename><surname>A R O R A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>B A N D I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ja I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ja N N E N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J O H N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>K A L O D N E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>K U L K A -R N I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>O L I V E I R A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>A N D P O R T E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth European Conference on Computer Systems</title>
		<meeting>the Ninth European Conference on Computer Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b83">
	<analytic>
		<title level="a" type="main">Processing Analytical Queries over Encrypted Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>K A A S H O E K</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>M A D D E N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>A N D Z E L -D O V I C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB Endow</title>
		<meeting>VLDB Endow</meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b84">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W E I C H B R O D T</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>K U R M U S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>P I E T Z U C H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>A N D K A P I T Z A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AsyncShock: Exploiting Synchronisation Bugs in Intel SGX Enclaves. In ESORICS</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b85">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W E I S E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Program</forename><surname>Slicing</surname></persName>
		</author>
		<title level="m">ICSE</title>
		<imprint>
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b86">
	<analytic>
		<title level="a" type="main">Automatically Partition Software into Least Privilege Components Using Dynamic Data Dependency Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>S U N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>L I U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>A N D D O N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ASE</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b87">
	<analytic>
		<title level="a" type="main">Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>C U I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>A N D P E I N A D O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">S&amp;P</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b88">
	<monogr>
		<title level="m" type="main">Using Hypervisor to Provide Data Secrecy for User Applications on a Per-page Basis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ya N G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>A N D S H I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">G</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b89">
	<analytic>
		<title level="a" type="main">CloudVisor: Retrofitting Protection of Virtual Machines in Multitenant Cloud with Nested Virtualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z H A N G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C H E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>A N D Z A N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOSP</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b90">
	<monogr>
		<title level="m" type="main">Lightweight Function Pointer Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z H A N G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>A N D Z H A N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page">439453</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
