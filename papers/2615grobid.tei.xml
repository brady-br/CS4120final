<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:48+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">EyeQ: Practical Network Performance Isolation for the Multi-tenant Cloud</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vimalkumar</forename><surname>Jeyakumar</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Windows Azure</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohammad</forename><surname>Alizadeh</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Windows Azure</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Mazì</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Windows Azure</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balaji</forename><surname>Prabhakar</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Windows Azure</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Changhoon</forename><surname>Kim</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Windows Azure</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">EyeQ: Practical Network Performance Isolation for the Multi-tenant Cloud</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>The shared multi-tenant nature of the cloud has raised serious concerns about its security and performance for high valued services. Of many shared resources like CPU, memory, etc., the network is pivotal for distributed applications. Benign, or perhaps malicious traffic interference between tenants can cause significant performance degradation that hurts performance of applications , and hence, impacts their revenue. Network performance isolation is particularly hard because of the distributed nature of the problem, and the short (few RTT) timescales at which they manifest themselves. This problem is further exacerbated by the large number of competing entities in the cloud, and their volatile traffic patterns. In this paper, we motivate the design of our system called EyeQ, with the goal of providing predictable network performance to tenants. The enabler for EyeQ is the availability of high bisection bandwidth in data centers. The key insight is that by leaving a headroom of (say) 10% of access link bandwidth, EyeQ simplifies dealing with potentially a global contention problem into one that is mostly local, at the sender and receiver. This allows EyeQ to enforce predictable network sharing completely at the end hosts, with minimum support from the physical network.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The shared, multi-tenant nature of cloud providers has raised concerns about their security and performance. Many cloud customers have reported the "noisyneighbour" <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref> problem, where performance of the system is unpredictable if a colocated tenant tries to grab resources (CPU, disk, IO) disproportionately. While hypervisors are equipped with mechanisms ot deal with CPU, memory and disk isolation, network isolation has attracted attention only recently. To date, commercial <ref type="figure">Figure 1</ref>: Screenshot of an offering from Amazon EC2. CPU, disk and memory are allocated in familiar units. In contrast, the units of "IO," is unclear.</p><p>offerings of network performance document only reachability isolation. But, network performance isolation is particularly vital for scale-out distributed services which have a demanding network component, unlike CPU intensive jobs.</p><p>Many cloud service providers today have some means of allocating CPU, memory and disk resources, in familiar units such as "virtual" cores, GB of memory and disk capacity <ref type="figure">(Figure 1</ref>). When it comes to IO, which includes the network, the units are either absent, or nebulous: "low, moderate and high." Customers do not get a clear picture of their network resource guarantees, and are unable to cope with bad performance. Some of them either give up <ref type="bibr" target="#b2">[3]</ref> on the cloud citing bad performance, or significantly rearchitect their applications. For example, Netflix reported that their own data center networks offered good performance, which afforded them to build chatty applications; but on Amazon Web Services, they redesigned their infrastructure to deal with performance variability <ref type="bibr" target="#b0">[1]</ref>. Our experience in talking to customers suggests that they would like to have predictable performance, as if the network allocated to them were dedicated.</p><p>Conventially, network sharing has been enforced by making the network aware of competing classes of traffic, i.e., by configuring Class-Of-Service queues exposed by many commodity switches. However, as noted by Shieh et. al <ref type="bibr" target="#b17">[18]</ref>, the number of queues in switches has not evolved beyond 8 or 16 queues per port. Hence, we need a scalable mechanism to cope up with number of tenants in the cloud. In the rest of this paper, we focus on the problem of sharing the network at large scale: ∼10K tenants, ∼100K servers and ∼1M VMs. Providing predictable network performance-i.e. guarantees on bandwidth, latency, jitter-is hard because, (a) unlike CPU, memory and disk, network contention is a distributed problem: contention can occur anywhere in the network; (b) the number of contending entities and their traffic characteristics are diverse: tens of thousands of tenants with different flavours of TCP, UDP; (c) very short timescale (few milliseconds) contention can affect long term performance (as shown in <ref type="figure">Figure 2</ref>).</p><p>To enable a customer to set clear expectations of network performance, we envison that a cloud provider should be able to provision network resources for its tenants, starting with bandwidth, in familiar units: bits per second. The provider assures each instance (VM) a guaranteed minimum bandwidth, so that the VM is able to transmit and receive at least the chosen capacity. The provider then supports a simple performance abstraction where the customer's 'virtual' network of VMs, in aggregate, perform as if they were connected to a single switch with full bisection bandwidth. We asked ourselves, "What are the requirements of a mechanism that tries to enforce such guaranteed performance?" We arrived at the following requirements by talking to developers and operators of a cloud provider; the requirements are by no means complete, but some of these are highlighted by other proposals <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b17">18]</ref> as well.</p><p>1. Performance guarantee The mechanism should work in the worst case: it should guarantee bandwidth to VMs, irrespective of the application demands, traffic communication patterns, and network activity of VMs belonging to other tenants.</p><p>2. Simplicity The mechanism should be simple and should co-exist with network stacks of customers' VMs. It should not rely on any kind of extensive signalling from the application about its bandwidth demands, and should not require customers to overhaul their applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">High Utilization</head><p>The mechanism should retain the statistical multiplexing benefits of the cloud, and not statically allocate resources.</p><p>4. Scalability The mechanism should scale efficiently with the number of tenants, VMs, servers; the size and speed of the network, i.e. 1Gbps, 10Gbps, 40Gbps, and beyond.</p><p>Related Work: Recently, hypervisor based mechanisms have been proposed that mitigate the effect of many (possibly) malicious traffic patterns. Seawall <ref type="bibr" target="#b17">[18]</ref> tackled the problem by tunneling packets through endto-end congestion-controlled tunnels. On a link, this achieves weighted max-min fairness between multiple source VMs. The inherent problem of weighted sharing is that a tenant's bandwidth share depends on the unknown activity (i.e., number of senders) of other active tenants; this violates our first requirement. Oktopus <ref type="bibr" target="#b5">[6]</ref> also made the case for predictability in data center networks, and used an end-to-end mechanism combined with intelligent placement to provide strict bandwidth guarantees. However, Oktopus operated at fairly large timescales (2 seconds). As we will see in §2, it is important for performance isolation mechanisms to react quickly, within a few round trip times. Moreover, Oktopus (and SecondNet <ref type="bibr" target="#b12">[13]</ref>) statically reserve bandwidth, which violates our third requirement. The rest of the paper is organized as follows. Section 2 further elaborates the difficulties of sharing the network. Section 3 lays down some design choices that greatly simplify mechanisms for sharing network bandwidth, and Section 3.2 presents a preliminary design for enforcing predictable network performance. Finally, Section 4 concludes with some directions for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Why is network sharing hard?</head><p>In this section, we will first see why network sharing is a hard problem, and then discuss various scenarios in which performance interference can occur.</p><p>Distributed Nature: In a general network topology, contention (or congestion) for bandwidth and latency can happen at any hop inside the network. To cope with increasing application bandwidth demands, modern data center networks have very high bisection bandwidth. Even in such network topologies with large bisection bandwidth, congestion can happen anywhere if the traffic does not conform to the hose model <ref type="bibr" target="#b10">[11]</ref> (i.e., if the traffic matrix is non-admissible). This situation arises when any link in the network receives traffic at a sustained rate greater than its capacity. If the traffic matrix is admissible, then it is difficult to congest the network core, but it is easy to congest any single "port," i.e., an end-host. This happens if more than one host sends data simultaneously to a receiver (N to 1 traffic pattern).</p><p>Traffic diversity: Many cloud environments host tens of thousands of tenants, allowing them to bring their own code and OS. This allows customers to tweak settings in their network stack; use different TCP implementations that have better performance; use multiple TCP connections to boost throughput; disable congestion control, or even use an unreactive UDP session to transmit data. Figure 2: At large timescales (2 second intervals), the UDP tenant's demand is seemingly small. But, at a finer timescale, its bursty nature has an adverse effect on the dynamics of TCP. These finer timescale interactions put a stringent performance requirement on the reaction times of any isolation mechanism, and mechanisms that react at large timescales may not see the big picture.</p><p>This diverse nature of application traffic and unknown communication patterns present a significant challenge.</p><p>Fine timescales:</p><p>The maximum end-to-end latency within a data center is becoming smaller, and is currently of the order of few 100µs. Since a majority of applications use TCP-which operates at RTT timescales-interactions at small timescales could affect performance. To understand why timescales matter, consider an experiment where there are two tenants TCP (green) and UDP (red), and say we wish to share bandwidth between TCP and UDP in the ratio 2:1. Both tenants send traffic to their servers, that are colocated on an end-host. The TCP tenant starts one long lived flow, but the UDP tenant sends traffic in an ON-OFF bursty fashion so that its average rate is about 2.3Gbps (ON for 10ms, OFF for 20ms, at 7Gbps maximum). <ref type="figure">Figure 2(b)</ref> shows the per-tenant receive throughput for both TCP and UDP, aggregated over a 2 second period. The traffic looks benign at such large timescales <ref type="figure">(Figure 2(b)</ref>), when it is actually very bursty at smaller timescales <ref type="figure">(Fig- ure 2(c)</ref>). Such bursty traffic patterns are not uncommon for many multi-tiered applications <ref type="bibr" target="#b6">[7]</ref>. The fine timescales of interactions places stringent requirement on the reaction times of any mechanism.</p><p>3 Consequences on Design</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Network Design</head><p>Such stringent requirements of providing predictable performance guarantees to tenants do exist for cloud providers. The network design plays a crucial role in dealing with network resource contention within the data center. Since servers' capital and operational costs account for a large fraction (∼85% <ref type="bibr" target="#b11">[12]</ref>) of the total costs of a data center, it is important that the network does not prevent the servers from achieving their full potential <ref type="bibr" target="#b16">[17]</ref>.</p><p>If one is to design a network that offers predictable performance in the presence of unknown and random traffic patterns, the network necessarily needs to have a high, if not full bisection bandwidth. In hindsight, it is not surprising that many recent research efforts <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b13">14]</ref> have focused on how to build such high bandwidth interconnects from cheap commodity hardware. Further, to ensure that the available bisection bandwidth is well utilized, there is a need for intelligent routing mechanisms; this is an area of active research <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b15">16]</ref>. These mechanisms bring us one step closer to realizing the data center network as one giant switching fabric <ref type="bibr" target="#b18">[19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Mechanism design</head><p>If one were to view the data center network as a giant switch, how would a bandwidth arbitration mechanism look? While previous work such as MPTCP <ref type="bibr" target="#b15">[16]</ref> and Hedera <ref type="bibr" target="#b4">[5]</ref> focus on maximizing the total throughput of the data center fabric, we now discuss a possible answer to the above question, where the goal is enforcing fairness across multiple traffic classes. Addressing distributed contention: Algorithms for bandwidth sharing (such as weighted round robin), and their implementations (such as deficit round robin), have been designed with the model of an output queued switch. In this model, bandwidth contention is visible locally, at the output port of a switch, where it can be resolved using packet scheduling algorithms. Hence, switch designs that try to provide Quality of Service guarantees strive to emulate an output queued switch, using a switching fabric that has some speedup over the edge link capacity. For any arrival traffic pattern to the switch, it has been shown that a speedup of about 2 is necessary <ref type="bibr" target="#b7">[8]</ref>, to perfectly emulate an Output Queued Switch. In practice, it has been found that a smaller speedup (between 1.1 and 1.2) usually sufficies <ref type="bibr" target="#b9">[10]</ref> to have the same benefits of an Output Queued Switch. The purpose of speedup is to simultaneously ensure that (a) the fabric is not a bottleneck; and (b) contention is moved to the edge (i.e., the output queue), where it can be detected and resolved locally.</p><p>The above observation guides the design of our mechanism. Viewing the network as a giant switching fabric greatly simplifies a global network contention problem to a local one: contention for transmit and receive bandwidth of the access link. Contention on the transmit side happens first within the end host, which can be resolved by packet scheduling mechanisms at the VSwitch. Unfortunately, contention at the receiver first occurs at the access link, which is inside the network. As shown in <ref type="figure" target="#fig_1">Figure 3</ref>, in-network congestion can cause network demands of a VM to go undetected. It is important that the access link contention be quickly detected. To understand this, consider the example shown in <ref type="figure">Figure 2</ref>. When UDP bursts at 7Gbps, the access link saturates (at short-timescales) leading to packet drops. Since the switch is not tenant aware, it drops both TCP and UDP packets, to which TCP aggressively reacts by exponentially backing-off. This 'elasticity' of TCP hides the true demand for bandwidth, and hence, mechanisms that react at timescales larger than a few RTTs cannot differentiate between two cases: one where there is a genuine lack of demand, and the other, where TCP has backed-off.</p><p>Introducing a small speedup to the network fabric (over the edge links) mitigates contention from the network, moving it completely to the edge, i.e., the VSwitch port inside the hypervisor. This allows the VSwitch to detect impending network congestion, and accurately account for congestion on a per-VM basis. The speedup effectively gives headroom to prevent packet drops in the network, and allows the VSwitch to tease out the true network demand from the underlying TCP flow, without requiring any interaction with the VM's TCP stack. By measuring the rate at which each VM is receiving traffic at the congestion detectors, the VSwitch signals sources that exceed their fair share. Thus, the VSwitch can enforce rich bandwidth sharing policies-such as minimum, maximum, or weighted bandwidth guarantees-in an end-to-end fashion.</p><p>To achieve the effect of speedup, we slow down the end-hosts by detecting congestion when the access link utilization exceeds some fraction γ (less than, but close to 1). This bandwidth headroom of (1 − γ) may seem like a big price to pay, but in some cases, it actually leads to better link utilization (as shown in <ref type="figure">Figure 5</ref>).</p><p>Taming traffic diversity: Our notion of performance isolation translates to providing minimum end-to-end bandwidth guarantees to tenants. Thus, to be agnostic to the type of traffic, we treat packets between sourcedestination pairs as a single meta-flow whose aggregate rate is controlled through end-to-end congestion control, irrespective of the tenants' network stack.</p><p>Embracing timescales: The example shown in <ref type="figure">Fig- ure 2(a)</ref> illustrates the need to react quickly, at timescales of the order of round-trip times. Implementing the endto-end rate control mechanism in a distributed fashion, in the datapath makes it possible to react to congestion in a timely manner, within a few RTTs. sures each VM its (egress) minimum bandwidth guarantee. To ensure that traffic does not congest any receiver, there are multiple per-destination rate limiters. This is analogous to 'Virtual-Output-Queues' in switches; multiple per-destination rate limiters prevent packets to uncongested destinations from head-of-line blocking other packets. These rate limiters vary their sending rate periodically using a control loop similar to TCP's AI/MD process, using feedback generated by the RX datapath.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">EyeQ Architecture</head><p>The RX datapath consists of a number of congestion detectors, one per VM. Each detector is assigned a "fair rate" by the RX-WRR scheduler, and generates feedback whenever the VM exceeds its allotted rate. The congestion detector is clocked by the arrival of packets; if a packet arrives to a VM, and the VM's rate exceeds its share, the congestion detector sends a feedback to the source of the packet. The feedback can be anything: a single bit (such as ECN), or an explicit rate (such as RCP <ref type="bibr" target="#b8">[9]</ref>). The RX-WRR scheduler enforces speedup by splitting a maximum of γ C between the VMs, where C is the physical NIC capacity. The RX datapath works in tandem with the TX datapath to enforce end-to-end flow control.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Discussion and Future Work</head><p>In this paper, we discussed a mechanism for enforcing network performance isolation in a large multi-tenant environment. We have implemented this design as a Linux Kernel Module, and tested it against many adversarial traffic patterns similar to the scenario discussed in <ref type="figure">Fig- ure 2(a)</ref>. We found that EyeQ is able to mitigate the harmful effects of malicious traffic. In particular, Figure 5 shows how EyeQ protects the TCP tenant from bursty UDP traffic, while simultaneously improving the total network utilization from about 4Gbps <ref type="figure">(Figure 2(b)</ref>) to about 8Gbps.</p><p>In-network contention: While high bandwidth network designs present lesser opportunity for in-network contention, it does not eliminate its possibility. EyeQ does not ignore this possibility, but gracefully falls back to per-sender max-min fairness, using tenant agnostic congestion notification mechanisms such as ECN. If the network gets congested on 'large' timescales (such as a few hours), it strongly indicates an unbalanced system design. We believe that the right approach is to invest more on the network, so that it does not "get in the way" of providing customer satisfaction.</p><p>Other Scenarios: The mechanism presented in this paper focuses on a particular kind of traffic pattern, which we call "intra-tenant;" communication between VMs of the same tenant happens over a high speed network interconnect, interfering with similar communication patterns of other tenants. However, cloud networks also host services like memcached clusters, storage, load balancers. These services are usually implemented as tenants, and hence "inter-tenant" communication can also result in performance interference. While we demonstrated EyeQ's ability to enforce minimum bandwidth guarantees on a per-VM basis, EyeQ can directly benefit from techniques such as Distributed Rate Limiting <ref type="bibr" target="#b14">[15]</ref> that enforce a limit on aggregate bandwidth consumption.</p><p>Also, a data center has a lot of network capacity, but typically only has ∼100Gbps uplink bandwidth to the Internet. Since tenants share this uplink, it is important to have automated defense mechanisms to protect this bandwidth that is crucial for the infrastructure. And finally, it is equally important to protect the downlink, and defend against attacks originating from the Internet; this is the holy grail of Internet Quality of Service.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>We presented EyeQ, a platform to enforce network sharing policies at large scale. By viewing the data center network as a giant switch, and by trading off a small fraction of the access link bandwidth, EyeQ is able to assure a guaranteed minimum bandwidth guarantees to VMs in a timely fashion, completely at the edge, with minimum support from the network.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Performance degradation of TCP flow due to bursty UDP traffic. 20.50 20.52 20.54 20.56 20.58 20.60 Time (s) 1G 3G 5G 7G 9G Rate udp (c) ON-OFF traffic pattern at small timescales.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The difficulty of detecting access link contention on the receive path.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Overall system architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 showsFigure 5 :</head><label>45</label><figDesc>Figure 4 shows the high level overview of EyeQ's transmit (TX) and receive (RX) datapaths. The TX datapath consists of rate limiters to enforce admission control. Contention at the transmit side is resolved by using a TX-weighted round robin (WRR) scheduler that as-</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was partly funded by NSF FIA and Google. Mohammad Alizadeh was supported by Caroline and Fabian Pease Stanford Graduate Fellowship, and by Stanford Experimental Data Center Lab.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">5 lessons we&apos;ve learned using AWS</title>
		<ptr target="http://techblog.netflix.com/2010/12/5-lessons-weve-learned-using-aws.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Has Amazon EC2 become over subscribed?</title>
		<ptr target="http://alan.blog-city.com/has_amazon_ec2_become_over_subscribed.htm" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mixpanel-Why</surname></persName>
		</author>
		<ptr target="http://code.mixpanel.com/2011/10/27/why-we-moved-off-the-cloud/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vmware</surname></persName>
		</author>
		<ptr target="http://blogs.vmware.com/rethinkit/2010/09/getting-rid-of-noisy-cloud-neighbors.html" />
		<title level="m">Rethink IT: Getting rid of noisy neighbours</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Hedera: Dynamic flow scheduling for data center networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Al-Fares</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Radhakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ragha-Van</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vahdat</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th USENIX conference on Networked systems design and implementation</title>
		<meeting>the 7th USENIX conference on Networked systems design and implementation</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Towards predictable datacenter networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ballani</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Karagiannis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rowstron</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Understanding data center traffic characteristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Anand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Akella</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM CCR</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Matching output queueing with a combined input/output-queued switch. Selected Areas in Communications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chuang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mckeown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prabhakar</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Journal on</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Rcp-ac: Congestion control to make flows complete quickly in any environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dukkipati</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mckeown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fraser</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Efficient, fully local algorithms for cioq switches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Firoozshahian</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Manshadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prabhakar</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM 2007. 26th IEEE International Conference on Computer Communications</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="2491" to="2495" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greenberg</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kan-Dula</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lahiri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pa-Tel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sengupta</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vl2</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>ACM SIGCOMM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The cost of a cloud: research problems in data center networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greenberg</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Secondnet: A data center network virtualization architecture with bandwidth guarantees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guo</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th International COnference</title>
		<meeting>the 6th International COnference</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Portland: a scalable fault-tolerant layer 2 data center network fabric</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Niranjan Mysore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pamboris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Far-Rington</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Miri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Radhakr-Ishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vahdat</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGCOMM</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Cloud control with distributed rate limiting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raghavan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vishwanath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ramabhad-Ran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yocum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Snoeren</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2007 conference on Applications, technologies, architectures, and protocols for computer communications</title>
		<meeting>the 2007 conference on Applications, technologies, architectures, and protocols for computer communications</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Improving datacenter performance and robustness with multipath tcp</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raiciu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Barre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pluntke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Green-Halgh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wischik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Handley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGCOMM</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Tritonsort: A balanced largescale sorting system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rasmussen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Conley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Madhyastha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mysore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pucher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vahdat</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NSDI</title>
		<meeting>NSDI</meeting>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Sharing the data center network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shieh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kandula</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saha</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NSDI, USENIX</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Your data center is a router: The case for reconfigurable optical circuit switched paths</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kaminsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kozuch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Papagiannaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Glick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mummert</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
