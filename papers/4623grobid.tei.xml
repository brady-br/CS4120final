<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:26+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Inaudible Sound as a Covert Channel in Mobile Devices</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luke</forename><surname>Deshotels</surname></persName>
							<email>alecdeshotels@gmail.com</email>
							<affiliation key="aff0">
								<orgName type="institution">North Carolina State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Inaudible Sound as a Covert Channel in Mobile Devices</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Mobile devices can be protected by a variety of information flow control systems. These systems can prevent Trojans from leaking secrets over network connections. As mobile devices become more secure, attackers will begin to use unconventional methods for exfiltrating data. We propose two sound-based covert channels, ultra-sonic and isolated sound. Speakers on mobile devices can produce frequencies too high for most humans to hear. This ultrasonic sound can be received by a microphone on the same device or on another device. We implemented an ultrasonic modem for Android and found that it could send signals up to 100 feet away. We also determined that this attack is practical with the transmitter inside of a pocket. Android devices with vibrators can produce short vibrations which create isolated sound. These vibrations can be detected by the accelerometer, but they are not loud enough for humans to hear. If performed while the user is not holding the device, the vibrations will not be noticed. Both covert channels can stealthily bypass many information flow control mechanisms. We propose several simple solutions to these vulnerabilities. In order to guarantee information flow control, sound-based channels must be regulated.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Users trust mobile devices with an unprecedented amount of sensitive information. Financial credentials, private photographs, location data, correspondence records, and more can be found on a smartphone. This collection of sensitive data has attracted the attention of government agencies, criminals, and other sophisticated attackers.</p><p>In order to protect user privacy, several security mechanisms have been proposed that enforce information flow policies and restrict network usage. However, many of these do not consider inaudible sound as a method for data exfiltration. This paper focuses on the case where users have taken steps to secure their data, but attackers are willing to use unconventional means to extract it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Inaudible Sound</head><p>Sound can be defined as vibrations in matter. We usually perceive sound as vibrations in air. These vibrations are made up of waves with measurable frequencies.</p><p>Humans with ideal hearing can perceive sound frequencies within the range of 20hz to 20khz. However, sensitivity to high frequencies declines rapidly with age as shown in <ref type="figure" target="#fig_0">Figure 1</ref>. Most humans over 18 years of age cannot hear frequencies above 17khz <ref type="bibr" target="#b2">[4]</ref>. Ultrasonic sounds are those frequencies too high for humans to hear.</p><p>A significant amount of inaudible frequencies can be produced by mobile device speakers. The small speakers on such devices are better at creating high frequencies, so this paper will focus on ultrasonic sound. These inaudible frequencies can also be detected by microphones. Therefore, machines can communicate with sound frequencies that most humans cannot hear.</p><p>Hanspatch and Goetz <ref type="bibr" target="#b6">[9]</ref> presented methods for bypassing security with ultrasonic sounds. They implemented their experiments on laptop computers. Our paper is intended to present and evaluate proofs of concept for mobile devices such as smartphones and tablets. It also discusses abuses and solutions specific to mobile devices. They did not work with vibrators which are primarily available on mobile devices. They also did not test transmissions through fabric.</p><p>The vibrator on many Android devices can produce vibrations that can be felt, but not heard. This is performed by activating the vibrator for a very short amount of time. The vibrations produced can be detected by the accelerometer or microphone of the same device.</p><p>These vibrations are still considered sound although It also references a ring tone used by teenagers to avoid detection by adults in schools <ref type="bibr" target="#b2">[4]</ref>.</p><p>they primarily occur in the device instead of in the air. Some of the vibrations are transferred to the air, but the amplitude is too low for humans to hear them. Therefore, sound produced in this way is also inaudible. Subramanian et al. <ref type="bibr" target="#b13">[15]</ref> explore methods for using non-radio signals for malicious communication in wireless sensor networks. Sound and seismic waves are considered among these methods. However, their implementations are not stealthy and were implemented on wireless sensors. They do not measure the proximity required for transmitting messages via sound. Our paper evaluates the use of inaudible sound to stealthily bypass information flow control on mobile devices. We determine the maximum range at which our implementation can send messages, and we also discuss the implications of this technology for mobile devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Bypassed Security Mechanisms</head><p>We will reference the security mechanisms of Android because of its open source nature and the tools available to extend Android security.</p><p>Android applications are regulated by a permission system that enforces the principle of least privilege. At install time, users are presented with a list of dangerous permissions the application requires to function correctly. These permissions include network access, access to message history, access to contacts, etc. If the user is willing to trust the application with these permissions, they allow the installation to continue. If not, the installation is aborted. Unfortunately, access to the speakers, vibrator, and accelerometer are not considered dangerous actions and do not require explicit permissions. Several third party security extensions have been proposed for Android. Many of them do not prevent sensitive data from being exfiltrated as sound.</p><p>Kirin <ref type="bibr" target="#b5">[8]</ref> allows users to set custom policies that prevent dangerous combinations of permissions. However, as noted previously, these attacks do not require any significant permissions.</p><p>TaintDroid <ref type="bibr" target="#b4">[7]</ref> tracks sensitive data as it moves within and out of Android devices. TaintDroid can prevent secrets from being exported over network connections, but it does not prevent secrets from being broadcast as sound.</p><p>MockDroid <ref type="bibr" target="#b3">[6]</ref> provides false data when sensitive data is requested by an application. It can also make an application believe that network access is unavailable. However, an application may be trusted with real data in order to obtain functionality. It can then export the data as sound instead of using the network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Comparison to Bluetooth</head><p>The attacks performed with ultrasonic sound are similar to those performed with Bluetooth devices because they are both alternatives to conventional internet connections <ref type="bibr">(WiFi, 4G, etc.)</ref>. Therefore, it is worth noting differences between the two mediums. Bluetooth has a significantly more developed and secure infrastructure than sound on mobile devices. For example, Bluetooth access is listed as a dangerous permission on Android that users must explicitly allow. Bluetooth also utilizes a pairing process so that the user must explicitly allow his device to be paired with another Bluetooth enabled machine. Ultrasonic sound does not require a permission and can emit sounds to anything that can hear them regardless of a pairing process. In the context of this paper, the absence of security for sound makes it more interesting than Bluetooth as a network alternative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4">Contributions</head><p>This work provides the following contributions.</p><p>• The identification of inaudible sound as a covert channel that allows applications to bypass existing security measures.</p><p>• A proof of concept implementation of an ultrasonic modem to covertly exfiltrate data on Android devices.</p><p>• Evaluation of the performance of this proof of concept including data on its range, bitrate, and ability to transmit through fabric.</p><p>• Discussion of the potential abuses of and solutions to the problem of inaudible sound on mobile devices.</p><p>The remainder of this paper proceeds as follows. Section 2 presents methods for abusing inaudible sound and preventing detection. Section 3 describes the design of our implementation and experiments. Section 4 evaluates our experiment results. Section 5 discusses observations, assumptions, and future work. Section 6 discusses solutions to the problem of inaudible sound as a covert channel. Section 7 describes related work. Section 8 concludes. Section 9 acknowledges non-authors that contributed directly to this work. Section 10 discusses the availability of our implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Abuses of Sound-Based Channels</head><p>Data exfiltration can be performed with inaudible sound in at least two ways. Assume in each case that application A is trusted with secret data but has been secured such that it cannot exfiltrate this data over a network. This can be achieved with several information flow tools or simply by restricting the privileges of the application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Intra-Device Communication</head><p>The first method is intra-device communication between applications that would otherwise be separated. Application A can not communicate directly with application B because A has secret data. Application B has network access and other privileges, but is never trusted with sensitive data. Application A can transmit the secret as sound and have the colluding application B on the same device receive the message with the microphone. Alternatively, A could use the vibrator to emit inaudible pulses and have B receive the message with the accelerometer. Application B can now access the data and transmit it over the network.</p><p>In using the vibrator, there is a moderate risk of detection. If the user is holding the device or is carrying it in a pocket, they may feel the vibrations and become suspicious.</p><p>It would be ideal to utilize the vibrator while the user is asleep and away from the device. Malware can assume the user is sleeping if the following conditions are met. First, the device is charging. Second, the accelerometer has not recorded any movement for the past hour. Third, the time is between midnight and 5 AM. These conditions could be optimized, and there may be other useful observations to utilize.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Inter-Device Communication</head><p>Second, an agent may compromise a targeted subject's mobile device with a Trojan horse to perform an interdevice attack. However, the subject has secured his device, such that the Trojan cannot exfiltrate data over the network. Instead of using the network, the Trojan can broadcast the data as ultrasonic sound for the attacker to record. The recording device could be carried by the attacker or hidden in areas where the subject normally spends time. Resourceful attackers also have access to long distance listening equipment such as laser microphones.</p><p>The same attack can be applied at a large scale with a popular application A and a network of recording devices. Assume a large corporation or government agency wanted to track security conscious users. This organization could distribute applications that are pre-installed on mobile devices and impossible to uninstall. Such applications are very common and are referred to as bloatware. Users can enhance their privacy with security extensions, but sound based attacks could bypass these. This large organization could also control a wide network of recording devices at various building entrances. These recording devices can pick up sensitive data from users as they pass by and leak data as ultrasonic sound.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Design</head><p>We implemented proofs of concept for both isolated sound and ultrasonic sound. The isolated sound implementation is fairly crude but serves its purpose. The ultrasonic sound implementation is tested to determine the attack's practical limits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Isolated Sound Experiment</head><p>We used two Android devices running third party apps to demonstrate that a device could produce isolated sound. The transmitter was a Samsung Galaxy S4 running the Vibration loop <ref type="bibr">[5]</ref> application. The receiver was a Google Nexus 7 (2013 edition) running the Accelerometer Monitor <ref type="bibr" target="#b0">[1]</ref> application.</p><p>The transmitter was set to vibrate for 1 millisecond, wait 500 milliseconds, and then repeat the pattern. The transmitter was placed on top of the receiver. The receiver displayed the accelerometer data with the Accelerometer Monitor application. The transmitter began the defined vibration pattern. We took the photo shown in <ref type="figure" target="#fig_1">Figure 2</ref>. The hills and valleys shown in the photo demonstrate that the accelerometer is detecting significant changes. These changes could be used to encode sensitive data and share it between applications that should not be allowed to communicate. We could not hear the vibrations being produced unless we held our ears less than one foot from the transmitter.</p><p>While this proof of concept uses multiple devices, it is intended to provide evidence for an intra-device transmission. If this attack works for two touching devices, it is likely to work with a vibrator and accelerometer in the same device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Ultrasonic Sound Experiment</head><p>We implemented an ultrasonic modem on Android devices to test its practical limits for inter-device communication. The transmitter uses frequency shift keying (FSK) to transmit digital data, and the receiver decodes the FSK message to obtain the digital data. This technique was tested to determine its maximum bitrate and distance while remaining stealthy. We also experimented to determine the feasibility of this attack from within a pocket.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Materials</head><p>FSK functions by encoding binary 1's and 0's as two different frequencies. Each frequency must be predetermined. Our experiments use 18khz as the low frequency and 19khz as the high frequency. These 1's and 0's may be referred to as bits or symbols. If the receiver senses a high tone, it receives a 1. If it receives a low tone, it receives a 0. FSK also uses a set amount of time for each symbol to maintain synchronization and detect repeats of the same symbol. An illustration describing FSK is presented in <ref type="figure" target="#fig_2">Figure 3</ref>.</p><p>The frequencies 18khz and 19khz were chosen for various reasons. Lower frequencies should be able to travel farther while maintaining their integrity. These frequencies were still too high for the author and experimenters to hear. Hanspatch and Goetz <ref type="bibr" target="#b6">[9]</ref> used a frequency of 18,600 Hz. We found that error rates were significantly higher when we used 19khz and 20khz. This is likely due to hardware limitations.</p><p>The transmitter software is a Matlab script that creates an audio file in .wav format consisting of three parts. The first is a preliminary tone. This is a consistent tone of a single frequency which helps the receiver roughly identify the signal of interest in a larger recording. We used a preliminary tone consisting of 128 consecutive low frequency (18khz) symbols. The second is a synchronization sequence. This is a complex but predefined pattern of high and low frequency tones. This pattern allows the receiver to pinpoint exactly where the intended message begins. The synchronization pattern was also 128 symbols long. The third is the digital data encoded as a series of high and low frequencies. The digital data is a string of ASCII characters that have been converted to binary symbols. The .wav files produced by this script can be played on arbitrary devices including Android devices.</p><p>The receiver software is an Android application that records arbitrary sounds as an audio file. It then decodes that audio file into digital data. The receiver has a priori knowledge of everything but the message contents. This a priori knowledge includes the frequencies used, the length of the preliminary tone, the synchronization pattern, the bitrate, etc. Once the receiver has pinpointed <ref type="figure">Figure 4</ref>: Example of discontinuity between frequency shifts. These abrupt changes can cause audible clicks. <ref type="bibr">[2]</ref>. the message contents in the audio file, it can decode it as binary bits based on the high and low signals detected. This binary sequence is then converted into ASCII characters and displayed on the Android device screen.</p><p>The .wav files were produced on a PC and exported to be played on a single Nexus 7 (2013). The receiver application was installed on 3 different Nexus 7 (2013) devices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Optimizations</head><p>We also implemented some redundancy in the receiver to make the process more robust. Each audio file recorded is decoded 10 times with a slightly different starting point for each. The starting point is always a point before the preliminary tone begins. Different starting points can affect the decoder's ability to correctly identify the beginning of the message contents. This optimization causes the decoding process to require more time and energy, but it does not affect the transmission cost.</p><p>Our second optimization addresses the problem of audible clicks during phase shifts. Each symbol is represented as a cosine wave, but the waves do not connect seamlessly. When transitioning between symbols, there may be an abrupt change in the wave's phase. This is illustrated in <ref type="figure">Figure 4</ref> and is manifest in the speakers as an audible click. Hanspatch and Goetz <ref type="bibr" target="#b6">[9]</ref> also noted this phenomenon. We were able to mitigate this issue by gradually reducing the amplitude at the beginning and end of each symbol. This caused the clicks to become so quiet that they are inaudible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Calculating Error Rates</head><p>The multiple decoding optimization made calculating error rates non-trivial. Some decoding attempts were significantly more accurate than others and a method for prioritizing them was necessary. We addressed this problem by using a predetermined sequence weaved into the message. A comparison to this predetermined sequence was used to determine the value of each decoding attempt.</p><p>The bit error rate is determined for the decoding attempt with the highest value.</p><p>The message we transmitted is the following character string.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0@1,2^3^4l5Q6n7C8f9W</head><p>The numbers 0 through 9 are expected at every other character position. The other characters were randomly chosen and constitute the data we wish to transmit. For example, the message "strawberry" would be encoded as the following string.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0s1t2r3a4w5b6e7r8r9y</head><p>This "strawberry" example will be used for the remainder of this subsection for simplicity. Note that the actual experiments used the previously listed random ASCII sequence.</p><p>The number of correct, expected characters in each decoding attempt is calculated to select the most valuable result. The expected characters are then removed from the chosen string leaving the arbitrary data. In our example, this could be the message "strawberry" or a result containing bit errors. Let us assume the message "ttrawberry" was produced after removing the expected characters.</p><p>This received message is then converted into its binary ASCII representation and compared to the intended message's binary representation. Comparing the binary code for "strawberry" and "ttrawberry" yields a difference of three bits. These three bit errors out of a possible 80 bits yields a bit error rate of 3.75%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Bitrate Experiment</head><p>We experimented to determine the maximum bitrate our implementation could support at a minimal distance. The minimal distance was obtained by placing two devices back to back without cases.</p><p>Once the two devices were in position, the receiver was set to record, and the transmitter played the encoded .wav file. After the file finished playing, the receiver was set to decode. Once the receiver finished decoding, it displayed its results to the screen.</p><p>This experiment was performed in a computer lab. Some ambient noise may have come from air conditioning vents, computer fans, a refrigerator, and researchers typing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.5">Distance Experiment</head><p>A similar experiment was performed to measure the maximum distance at which messages could be passed and accurately decoded. This experiment used a consistent bitrate of 8.61 bits per second, but the distance between devices was varied.</p><p>In this experiment, the devices were placed in cases that allowed them to be propped up in their tallest orientation. The transmitter's speaker was turned to face the screens of the receiving devices. One Nexus 7 was used to broadcast to three receiving Nexus 7's.</p><p>The frequencies, preliminary tone, synchronization tone, and message were all the same as in the bitrate experiment. The sequence of events (record, play tone, decode, evaluate) was also identical to the bitrate experiments.</p><p>This experiment was performed in a large hallway in a research building. Ambient noise could have been caused by air conditioning, people walking, and use of doors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.6">Transmitter in Pocket Experiment</head><p>Mobile devices spend a significant amount of time in pockets. Therefore, leaking data via ultrasonic sound is much more practical if the signals can pass through fabric.</p><p>In order to test these conditions, we placed the transmitter inside the leg of a pair of denim jeans during transmission. This experiment took place at a distance of 20 feet and under the same conditions as the distance experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head><p>The results obtained by our experiments suggest that transmitting messages with ultrasonic sound on mobile devices is very practical. The bitrates and distances observed allow for several interesting abuses of this covert channel.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Bitrate Experiment Results</head><p>Our bitrate tests revealed an unexpected limit in our ability to remain stealthy. The Nexus 7 devices produced small amounts of noise outside of the desired frequencies. There were also traces of the clicks which we had reduced by adjusting amplitude during frequency shifts. Neither of these phenomena were audible during transmission at bit rates below 345 bits per second. However, at bitrates above 345 bits per second, the clicks and noise began to form audible tones.</p><p>A different Android device using a more sophisticated implementation may be able to achieve higher bitrates. In this implementation, we found the effective bitrate limit of stealthy ultrasonic sound to be 345 bits per second. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Distance Experiment Results</head><p>The distance experiment results suggest a decline in transmission reliability as distance increases. Such a decline is expected. We observed a significant increase in error rates at 100 feet. <ref type="figure" target="#fig_3">Figure 5</ref> illustrates our experiment results. These error rates can be overcome with parity schemes, repeated transmissions, and other solutions. We chose to stop experimenting at 100 feet, but transmission at greater distances with the same hardware may also be possible. Our data formed the following formula when we calculated the quadratic regression.</p><formula xml:id="formula_0">errorRate(x) = 0.00271786x 2 − 0.129543x + 3.862</formula><p>This formula has an adjusted R 2 score of 0.950 for the fit of the data to the regression.</p><p>During experimentation, we encountered a limitation of our character based decoding. Some attempts to decode transmissions produced strings too short to evaluate. We suspect that an end of string character was encountered which caused the rest of the transmission to be omitted. <ref type="figure" target="#fig_4">Figure 6</ref> plots the rates of occurence of this phenomenon. The chart contains an outlier at 60 feet where this error did not occur during experiments. Further testing would likely produce a quadratic regression similar to our bit error rate. This is an implementation specific phenomena, but we still value these results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Pocket Experiment Results</head><p>Our results suggest that transmission from within a pocket is feasible. With the transmitter inside the leg of a pair of denim jeans, the bit error rate for 20 feet was 1.46%. This error rate is lower than the rate we measured without the denim barrier. We suspect that at higher bitrates and greater distances, the barrier would have a more significant effect. However, these results suggest that an infected phone in a pocket can reliably leak data to a receiver at least 20 feet away.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>We were able to make several informal observations during our experiments. We also made several inferences based on our results.</p><p>During experimentation we informally monitored battery use of the tablets. Transmission of the ultrasonic signal did not seem to use a significant amount of power, but decoding messages was resource intensive. An infected device does not need to transmit sound at all times. It could transmit once every few minutes, or a more sophisticated implementation could probe for a receiver before transmitting. With our implementation, the receiver must spend a significant amount of time decoding the transmission it recorded. This leads to more power usage, but the attacker is free to plug in his listening device after recording. For an intra-device attack using ultrasonic sound, power usage of the receiver is more relevant. One solution for intra-device attacks is to perform the transmission and reception while the phone is charging.</p><p>The bit rate we chose for distance experiments, 8.61, is fairly low, but it is still sufficient for leaking sensitive data. IDs, social security numbers, credit card numbers, coordinates of locations visited, passwords, and more could be leaked in less than one minute. Higher bitrates are also feasible, but the recording device would require closer proximity to the transmitter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Assumptions</head><p>We made the following assumptions as conditions of the isolated sound attack being stealthy. First, the device is not on a drum-like object. For example a filing cabinet's thin walls and hollow center will amplify the pulses and make them audible. Second, the device is not touching the user. In this case the user would be able to feel the vibrations. Third, the user's ear is not within 1 foot of the device. Fourth, the user does not have an animal such as a dog that could detect and react to faint sounds. Other similar conditions may exist.</p><p>We made the following assumptions as conditions of the ultrasonic sound attack being stealthy. First, people near the device cannot hear 18khz sounds or higher frequencies. Many humans under 18 years of age and some exceptional adults can hear these frequencies. Second, only the intended frequencies are being produced. The Nexus 7 devices also produced very faint noise at frequencies other than 18khz and 19khz. These sounds were only audible if the experimenters ear was within 6 inches of the device's speaker. This noise is likely due to a limitation of the speakers used. We noted that an iPad Mini with Retina Display did not produce such noise. Third, the user does not have an animal such as a dog that could detect and react to ultrasonic sounds. Other similar conditions may exist.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Future Work</head><p>Researchers could address our assumptions, improve our experiment process, and implement the proposed solutions.</p><p>Two assumptions can be mitigated. First, by using the highest frequencies available on mobile device speakers (about 20khz) the chances of humans detecting the sounds are significantly lower. This is assuming the hardware used can produce pure tones at these frequencies. Our experiments suggested that Nexus 7 tablets were not suitable for using frequencies above 19khz. Second, devices other than Nexus 7 tablets may be able to produce the frequencies required without faint noise on other frequencies. Our iPad Mini with Retina Display seemed to produce high frequency sounds without noise.</p><p>The experiment could be improved by using a more robust, sophisticated transmission protocol. Many techniques exist for wireless communication that could have been applied to the ultrasonic sound implementation. Such techniques include phase shift keying, parity checking, and receivers that respond when messages are received.</p><p>A continuous connection between the device and receiver may yield a more accurate maximum distance for ultrasonic communication. This connection could be established between both devices at a close proximity. The space between the devices could be increased until the connection fails and the distance of this event could be recorded.</p><p>Finally, practical solutions to inaudible sound abuse should be implemented and distributed. The solutions we propose may help, or researchers may develop better ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Solutions</head><p>There are several potential solutions to the ultrasonic sound problem. First, speakers could be installed that can only produce those frequencies that most people can hear. Second, physical filters could be placed over the speakers that block ultrasonic sounds, but not those with wider wavelengths. Third, an indicator that the speakers are in use could be displayed to the user. This would be similar to the lights that often indicate when a camera is currently recording. Fourth, audio files could be filtered before reaching the speakers to remove any ultrasonic frequencies. Fifth, a trusted application could listen for unusual activity in the range of ultrasonic sound and warn the user if such activity is detected. Sixth, an explicit permission to use the speakers could be added to the Android OS. Seventh, existing security tools could begin to monitor sound as a channel that is a potential means of exfiltrating data.</p><p>There are also solutions to isolated sound attacks that use the vibrator. First, the minimum time to use the vibrator could be increased from 1 millisecond to a more audible amount of time. Second, explicit permissions to use the vibrator and accelerometer could be added to the Android OS. Third, the sensitivity of the accelerometer could be reduced so that it cannot detect inaudible vibrations. Fourth, a log of vibrator use might reveal unusual activity upon inspection. Fifth, existing security tools could begin to monitor the vibrator as a channel that is a potential means of exfiltrating data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Related Work</head><p>We have identified three major topics related to this article. These topics are sensory malware, sound-based machine communication, and information flow control on Android.</p><p>Sensory Malware The sound-based attacks we have proposed could be utilized by sensory malware. Sensory malware is any software that abuses the sensors of the infected device.</p><p>PlaceRaider <ref type="bibr" target="#b14">[16]</ref> uses the device camera to create a three-dimensional view of the victim's surroundings. This three-dimensional view is created by combining multiple photographs that were taken stealthily by the malware. This view enhances the attacker's ability to extract sensitive data from the victim's surroundings.</p><p>TapPrints <ref type="bibr" target="#b7">[10]</ref> determines the user's keystrokes by using accelerometer data. Each key being tapped causes a slightly different offset of the device's position depending on the keyboard layout. These patterns can be used to turn the accelerometer into a key logger.</p><p>Soundcomber <ref type="bibr" target="#b12">[14]</ref> stealthily records and exfiltrates sensitive audio data. This data is recorded when the user speaks during a sensitive phone call. The data can then be exfiltrated through several covert channels that they describe.</p><p>Analog to Digital Communication A review of this field is beyond the scope of this paper. Instead, we will list those works most related to our implementation.</p><p>Usselman <ref type="bibr" target="#b15">[17]</ref> patented frequency shift keying in 1949. Frequency shift keying may not be the most effective method for analog to digital modulation, but it is relatively simple. Therefore, it was an excellent choice for our proof of concept implementation.</p><p>Sound is significantly more effective than radio waves in underwater communication. Therefore, audio is the normal method of marine communication. Otnes et al.</p><p>[13] present a survey of digital underwater communication techniques. These techniques may be useful to implement as future work to improve our implementation.</p><p>Information Flow Control on Android As mentioned in the introduction, there are several information flow control tools for Android.</p><p>Aquifer <ref type="bibr" target="#b8">[11]</ref> prevents users from accidentally leaking files through network connections. It is limited to accidental disclosures and does not prevent malicious information leaks.</p><p>Heuser et al. <ref type="bibr" target="#b10">[12]</ref> present Android Security Modules (ASM). ASM is a framework to make the creation of security enhancements for Android more efficient. They also list and describe 15 existing Android security extensions. Many of these tools are information flow control enforcers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>The production of this article has led the authors to three conclusions.</p><p>First, our experiment results suggest that data exfiltration via sound on mobile devices is a practical attack. The ranges supported by our implementation are more than sufficient for an attacker to stealthily record from an infected device. The maximum bitrates we recorded are also sufficient for sharing images and documents in intra-device attacks.</p><p>Second, sound will become a more attractive channel for data exfiltration as network security increases. Users are steadily becoming aware of the value of their sensitive data and the security risks of using a mobile device. This trend and frameworks for security tools on Android will make security enhancements even more common. Attackers may need to use unconventional methods for exfiltration as network connections are more closely monitored.</p><p>Third, many of the sensors and actuators on mobile devices are grossly underestimated in terms of their impact on security. No explicit permission is required to access the accelerometer despite the many potential ways to abuse it. The same can be said for the speakers and vibrator. These features are also underestimated by existing information flow control systems. These systems do not consider them to be useful sources or sinks for sensitive information.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Chart showing hearing ranges by age group. It also references a ring tone used by teenagers to avoid detection by adults in schools [4].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Photo of our isolated sound proof of concept</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Example of a digital signal represented as analog waves in frequency shift keying. [3].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Average bit error rates at 20 foot intervals. The quadratic regression is also plotted.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Occurrence rate of failures to decode due to end of string character. The quadratic regression is also plotted.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Acknowlegements</head><p>We would like to thank those that contributed their knowledge or resources to this paper. Dr. Purush Iyer acted as my official adviser during the design and implementation of this work. Dr. William Enck provided advice and four Nexus 7 devices for testing. Mayank Manjrekar and Santosh Kumar provided us with an FSK modem for Android which we adapted to use ultrasonic frequencies. We also added optimizations and evaluation mechanisms to their implementation. Leia Kagawa and Feifei Wang both assisted with our experiments. This work was funded by the United States Army Research Office (ARO) grant number W911NF-14-1-0117.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Availability</head><p>The source code used in our experiments is available under the GPL version 2 license at https://bitbucket.org/ladeshot/ultrasonicfsk.git.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Accelerometer monitor -android apps on google play</title>
		<idno>accessed: 2014-05-04</idno>
		<ptr target="https://play.google.com/store/apps/details?id=com.lul.accelerometer" />
		<imprint/>
	</monogr>
	<note>Last</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Frequency-shift keying -wikipedia, the free encyclopedia</title>
		<ptr target="http://en.wikipedia.org/wiki/Frequency-shiftkeying" />
		<imprint/>
	</monogr>
	<note>Lastaccessed : 2014 − 05 − 04</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A ring tone meant to fall on deaf ears -new york times</title>
		<idno>Lastaccessed : 2014 − 05 − 04</idno>
		<ptr target="http://www.nytimes.com/2006/06/12/technology/12ring.html?r=2oref=slogin" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Mockdroid: trading privacy for application functionality on smartphones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beresford</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Rice</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Skehin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sohan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th workshop on mobile computing systems and applications</title>
		<meeting>the 12th workshop on mobile computing systems and applications</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="49" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An informationflow tracking system for realtime privacy monitoring on smartphones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enck</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-G</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdaniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sheth</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Taintdroid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">OSDI (2010)</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Mitigating android software misuse before it happens</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enck</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ongtang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mcdaniel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Citeseer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On covert acoustical mesh networks in air</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanspach</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Goetz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Communications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Tapprints: your finger taps have fingerprints</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miluzzo</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Varshavsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Balakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Choudhury</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th international conference on Mobile systems, applications, and services</title>
		<meeting>the 10th international conference on Mobile systems, applications, and services</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="323" to="336" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Preventing accidental data disclosure in modern operating systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nadkarni</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enck</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2013</title>
		<meeting>the 2013</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">ACM SIGSAC conference on Computer &amp; communications security</title>
		<imprint>
			<biblScope unit="page" from="1029" to="1042" />
			<date type="published" when="2013" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Asm: A programmable interface for extending android security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nadkarni</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enck</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">;</forename><surname>Cased / Tu Darmstadt</surname></persName>
		</author>
		<idno>TUD- CS-2014-0063</idno>
	</analytic>
	<monogr>
		<title level="m">Intel CRI-SC at</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
		<respStmt>
			<orgName>TU Darmstadt, North Carolina State University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Underwater acoustic networking techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Otnes</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Asterjadhi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Casari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Goetz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Husøy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nissen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Rimstad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Van Walree</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zorzi</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Soundcomber: A stealthy and context-aware sound trojan for smartphones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schlegel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X.-Y</forename><surname>Intwala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ka-Padia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NDSS</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="17" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Examining the characteristics and implications of sensor side channels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Subramanian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Uluagac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cam</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beyah</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Communications (ICC), 2013 IEEE International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="2205" to="2210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Templeman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Crandall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kapa-Dia</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Placeraider</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1209.5982</idno>
		<title level="m">Virtual theft in physical spaces with smartphones</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Frequency shift keying</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Usselman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">US Patent</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">456</biblScope>
			<date type="published" when="1949-08" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
