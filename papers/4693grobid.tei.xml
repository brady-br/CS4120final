<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">You Snooze, You Lose: Measuring PLC Cycle Times under Attacks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Niedermaier</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Hochschule Augsburg</orgName>
								<address>
									<settlement>Augsburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan-Ole</forename><surname>Malchow</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Florian</forename><surname>Fischer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Hochschule Augsburg</orgName>
								<address>
									<settlement>Augsburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Marzin</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dominik</forename><surname>Merli</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Hochschule Augsburg</orgName>
								<address>
									<settlement>Augsburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volker</forename><surname>Roth</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Freie Universität Berlin</orgName>
								<address>
									<settlement>Berlin</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Von Bodisco</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Hochschule Augsburg</orgName>
								<address>
									<settlement>Augsburg</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">You Snooze, You Lose: Measuring PLC Cycle Times under Attacks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>In this work, we show that the electrical side of a Pro-grammable Logic Controller (PLC), that is, the controlled process, can be influenced by packet flooding. This differs from already known Denial of Service (DoS) attacks as the target is the actual process and not network con-nectivity. We conducted our experiments with 16 devices from six vendors, giving a good overview of the current market. Except for one device, all are susceptible to network flooding attacks. In three cases, an attack even lead to a DoS on the electrical side, completely disrupting any controlled process. In addition, we show that well-known scanning tools have measurable impacts on PLCs. These findings should be taken into consideration by administrators and researchers planning scanning activities.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Programmable Logic Controllers (PLCs) are pervasive in modern societies and form a vital part of modern infrastructure. Nearly all aspects of automation are controlled by them in one way or another. Controlled systems include air-conditioning, traffic lights, factories, and power plants. Security and safety violations in these systems can lead not only to inconveniences but also risks to human lives.</p><p>When PLCs were first introduced, it was uncommon for them to be interconnected on a larger network. Meanwhile, PLCs come with Ethernet interfaces and are increasingly connected to TCP/IP networks due to benefits related to cost and convenience. This makes PLCs vulnerable to network-based intrusion.</p><p>PLCs run control programs that can be thought of as the software implementation of a switching circuit. Control programs use sensor data as input and set outputs to activate actors. In the following, we refer to the sensor and actuator connections as the electrical side of the PLC.</p><p>We focus on the question whether network traffic can influence the electrical side of PLCs. If the electrical side can be influenced, then a controlled process may be disturbed or even stop altogether. Obviously, such a capability can be used in cyberattacks. This question is also relevant when scanning the internet for benign purposes, which is currently a trend in academic research. If scans potentially affect controlled processes, then enhanced precautions are required to assure the safety and security of (largely unknown) scan targets. We are not interested in flooding attacks that seek to saturate a network or a network interface in order to deny service to communicating devices.</p><p>To assess the risks that arise in controlled processes from network traffic, we conducted three types of experiments in a testbed with 16 PLCs from six different vendors. We explored the effects of: 1. SYN flooding, 2. fourteen high-level protocols and 3. three popular scanning tools on the electrical side of PLCs. To this end, we used a control program that switched the outputs of PLCs at the maximum supported rate (e.g. freewheeling task) and measured deviations from that rate. Various settings of lower switching frequencies can be used as a benchmark as well. We decided against this because the maximum rate is conservative and application-neutral.</p><p>We found that all except one PLCs are prone to being influenced by network traffic. Most PLCs were affected by SYN packet floods. The effects of high-level protocols varied for different PLCs. Several PLCs stopped working completely, resulting in a Denial of Service (DoS) condition on the electrical side. However, we also found that data rate-limiting features available on Wago PLCs can reduce the effects.</p><p>The rest of the paper is organized as follows. We begin with a description of related work in § 2. We provide background information on the functions of a PLC and PLC certification in § 3. In item 3.3, we summarize our experimental methods and materials. We report the results of our experiments in § 5 and provide conclusions in § 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>DoS attacks on SCADA/PLC/ICS systems have been a topic in academic research since at least 2005 <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b11">11]</ref>. However, most studies only outline the potential of attacks and do not present evidence derived from experimentation or simulation. In what follows we limit our discussion to the literature that provides at least partial evidence for possible DoS attacks.</p><p>Teixeira et al. <ref type="bibr" target="#b21">[20]</ref> describe a variety of attacks on control systems. They focus on the disruption of communication between sensors/actuators and a PLC but overlook the effects on the electrical side. The authors of <ref type="bibr" target="#b1">[2]</ref> present a formalization of DoS attacks on control systems and derive an 'optimal' attack plan. However, they do not evaluate their attack plan against an actual PLCs. <ref type="bibr" target="#b9">[9]</ref> conducted flooding experiments on an unspecified remote telemetry unit (RTU) based on IP, SYN, and 104APCI packets. In all cases, they measured an impact on the response time of the RTU. However, their report lacks clarity with respect to what exactly caused the effects they measured. The reasons for this may range from RTU resource depletion to the saturation of other components in their test network. The authors of <ref type="bibr" target="#b12">[12]</ref> simulated User Datagram Protocol (UDP) flooding attacks in a Supervisory Control And Data Acquisition (SCADA) network model. They concluded that CPU utilization, packet drop, and traffic delays increased. In <ref type="bibr" target="#b11">[11]</ref>, the impact of DoSs attacks on network-based control is simulated and two countermeasures are proposed. The authors focus on the communication without analysing the behaviours of the devices. A method of testing the communication robustness of industrial devices is introduced in <ref type="bibr" target="#b23">[21]</ref>. However, their article mentions no concrete results. <ref type="bibr" target="#b16">[16]</ref> set up a testbed with an Omron PLC CJ1M-CPU11-ETN and demonstrated DoS attacks on the network interface of the device based on TCP/IP SYNs, UDP, and HTTP traffic. They did not measure effects on the electrical side, nor did they test different PLCs systematically as we did in our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Technical Background</head><p>Programmable Logic Controllers (PLCs) are industrial digital computers designed to control physical processes. A PLC is electrically connected to sensors and actuators. A user-specific program running on the PLC controls the actuators based on the inputs read from the sensors. Since the majority of PLCs operate in a cycle-oriented fashion (see next section for details), we focus on this type of device.</p><p>PLCs are usually part of a larger architecture that includes Enterprise Resource Planing (ERP) and Manufacturing Execution System (MES). The latter systems of- ten have a data exchange time of several hours or days. For SCADA systems, a common requirement is that data transfer time must be in the order of seconds to minutes. This is in contrast to mostly hard real-time processes at the control and field levels, where transmissions must complete in milliseconds. These timings must be ensured in order for the processes to run correctly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">PLC Cycle Time</head><p>The run mode of a cycle-oriented PLC consists of a loop of four phases, as illustrated in <ref type="figure" target="#fig_0">Fig. 1</ref>. In the first phase, inputs such as sensors are read into the internal registers of the PLC. In the second stage, the program execution is performed. The third phase handles internal housekeeping, for example diagnostic functions and communication.</p><p>At the end of the scan cycle, the outputs are written back from internal registers to the electrical circuits. Typical cycle times are between one and 10 milliseconds. In more powerful models, or small programs, cycle times may be in the order of microseconds. There are versions with either fixed or asynchronous cycles. The user program may include branches and conditional calls, resulting in varying execution times. <ref type="figure" target="#fig_1">Fig. 2</ref> shows a simple example application where a PLC controls the filling of a container on a conveyor belt. The sensor reports to the PLC when a container passes it. The PLC then controls the valve that opens and fills the container. This process must have the right timing, or else the liquid would not end up in the container. If the cycle time is too high, the opening or closing of the valve gets delayed and occurs at false container positions <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Controlled Process</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Certification Programs</head><p>There are three certification programs for Industrial Internet of Things (IIoT) components. In the following, we mention three such programs which were previously discussed by <ref type="bibr">Schierholz and McGareth [17]</ref>, and Xie et al. <ref type="bibr" target="#b25">[23]</ref>. Certificates of these three programs communicate an acceptable level of stack robustness. Schierholz and McGareth argue that security-related certificates may send incorrect signals regarding security. This is primarily because not all threat vectors may be covered by a certification program. Our reports support this argument as we found that nearly all PLCs we tested are vulnerable to network flooding attacks. We give a short overview of the mentioned programs with respect to network robustness.</p><p>(i) Achilles Certification 1 -Initially developed by Wurdtech Security Technologies, the Achilles Program was later bought by General Electric. The program relies on a proprietary test device called the 'Achilles Satellite'. Applied tests include protocol fuzzing and packet storms. We are especially interested in the packet storm sub-test. While the Satellite is proprietary, the requirements for a certification are publicly documented. For the level 2 certification of Achilles, the PLC is configured with a period cycle output of 1000ms (500ms high output and 500ms low output) with an acceptable tolerance of 4%.</p><p>(ii) ISASecure EDSA Certification 2 -The EDSA includes CRT Test Requirements for Protocols for Ethernet, ARP, IPv4, ICMPv4, UDP, and TCP. With the exception of Ethernet, the requirements state that the device under test maintains its essential services under high load but can reduce or cease network communication during periods of high load. In all cases, the high load period (maximum supported data rate) must be long enough to allow saturation effects to manifest. of PLC outputs. Wedgbury and Jones <ref type="bibr" target="#b24">[22]</ref>, as well as Cárdens <ref type="bibr" target="#b4">[5]</ref>, already predicted that extra network traffic might affect the process controlled by an Industrial Control System (ICS). However, they did not present evidence for their prediction. Our experiments lend support to their assertion because we found that network traffic can affect user programs running on PLCs.</p><p>The attack surface is a combination of device design and software implementation; more precisely, it is the implementation of the network stack, PLC-specific protocols, and PLC runtime. For example, sharing resources between system tasks and the actual control program can be problematic. If an attacker is able to exhaust the resources available to system tasks, he also succeeds in preventing normal operation of the control program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Attacker Model</head><p>We assume that the attacker is able to send network packets to the target PLC at the maximum rate supported by the device. This may be feasible because the device is connected to the internet, or another device on the same network is compromised by the adversary. The compromised device may well be another PLC <ref type="bibr" target="#b10">[10]</ref>. With regard to the types of attacks we consider, we do not assume that the adversary has or needs specific knowledge about the actual process controlled by the PLC or the program running on the PLC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Materials and Methods</head><p>The basic idea is to measure the changes to the signal captured on the electrical (digital) outputs of PLCs. We conducted three sets of experiments. In the first set ( § 5.1), we focused on the reaction of devices to different loads of SYN packets. In the second set ( § 5.2), we measured the reaction to different protocols including device-specific control protocols. In the final set of experiments ( § 5.3), we assessed the impact of scanning tools. In the remainder of this section, we give an overview of our methods and materials. Regarding the electrical side, we configured the PLCs under test to run on their maximum performance (shortest possible cycle time). This means that an output is switched at the maximum rate. Depending on the actual device, this leads to a more or less periodic reference signal. If an attack is successful, the reference signal will be shifted. <ref type="figure" target="#fig_2">Fig. 3</ref> depicts the reference signal (blue, solid) and the shifted signal under attack (red, dotted). For the attack scenario proposed in this paper, the attacker does not need to know the details of the ICS.</p><p>We expected the impact of attacks on the cycle time of a PLC to differ across devices. This is due to differences in the system design, quality of implementation, and possible safety mechanisms. For example, some manufacturers indirectly tie cycle time to the cost-efficiency of their devices, since the manufacturing process can be operated at a higher speed if the cycle time is shorter. An extreme example is provided by Schneider Electric <ref type="bibr" target="#b2">[3]</ref>, where a reduction in the cycle time from 30ms to 6ms resulted in the gain of two million dollars per year.</p><p>In our experiments, we flooded the device under test with packets for a specific protocol and measure the cycle time of the device. The used protocols are depicted in Tab. 1. We designed and implemented a test set-up for our experiments. The set-up comprises a capture device, an attack machine, and a controller machine (see <ref type="figure" target="#fig_3">Fig. 4</ref>). The capture device can digitize the outputs of the PLCs. The attacker machine generates traffic for the respective protocol under test. The controller device starts and stops the attack traffic, and stores the data sent by the capture device. It has the option to power on and off the Device under Tests (DuTs).</p><p>In the following, we detail our measurement set-up and test cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Capture Device</head><p>The influences of the different test cases are monitored with a capture device that measures one digital output pin of each PLC. We use a BeagleBone Black from Texas Instruments with a custom measurement Printed Circuit Board (PCB) to handle the 24V square wave signal. The PCB consists of a protection circuit and a level shifter Integrated Circuit (IC). The BeagleBone runs a Debian Linux with the BeagleLogic application 4 , which makes use of the AM335x processor's two programmable realtime units. It is possible to analyse up to 14 channels in a continuous mode with a maximum of 100 Mega samples per second (Ms/s). The Ethernet interface (100 Mbps) was used to send the data to a computer for further analysis. We captured on a fixed rate of 1 MHz, which allowed us to calculate the timing without an additional timestamp. We were only interested in the state of the output of the device currently under test. Therefore, a byte per sample was needed to transfer data over the network, leading to a feasible data rate.</p><p>To ensure the validity of our tests, we used a function generator and a Picoscope 2208 5 oscilloscope to measure the capabilities of the BeagleLogic. We used 1 Ms/s on the BeagleLogic, which is also the sample rate in the test set-up. The deviation of the BeagleLogic adapter compared to the function-generator was always below 0.1</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Controller Machine</head><p>The controller machine is a standard PC with two network interfaces. One interface is connected to the capture device and the other to the attacker machine. The controller machine runs a custom experimental server written in Go. The server reads the definition of an experiment defined as a JSON file. An experiment defines the tool to use specific parameters, the target to measure, the channel to capture, and the runtime of the experiment. Based on this definition, the controller configures the capture device and attack server. In addition, the control machine stores the data produced by the capture device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Attacker Machine</head><p>The attacker machine is a default PC with two Gigabit Ethernet network interfaces. One interface is connected to the DuTs, while the other is connected to the controller machine. The attacker machine runs a custom experimental client that connects to the corresponding experimental server on the control machine. The purpose of the client is to start and stop the actual load generating program. The tools used for load generation are listed in Tab. 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Device under Tests (DuTs)</head><p>The DuTs are PLCs from different vendors. We selected a variety of devices in order to get a representative sample of the current market. A summary of the currently deployed PLCs in our testbed <ref type="bibr" target="#b15">[15]</ref> is given in Tab. 2.  We aimed to identify and measure a worst-case scenario. Hence, each PLC was configured to switch a digital output at the maximum rate. This was configured in a cyclic task and only changed if necessary (e.g. freewheeling task). This called for device-specific configurations, especially setting the cycle time to the device-specific minimum if applicable. We emphasize that we used the default settings for all controllers, wherever possible. Of special interest are parameters for communication overhead. For the used Siemens devices, we kept the default at 20 %. Wago allows setting a data rate limit; however, this setting was disabled by default (see § 5.4 for effects of this setting). The used control program was simple; it only switched the value of an output from 0 to 1, and vice versa.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Protocol Implementations</head><p>In Tab. 1, we summarize the used protocols. For most of the protocols, we used off-the-shelf tools. If no standard tool was available, we implemented our own tool. With the off-the-shelf tools, we did not have much control over the sent packets. As a result, we used custom implementations for some protocols. All custom tools were implemented in Go and were capable of saturating the outgoing Gigabit Ethernet link of the attacker machine.  <ref type="bibr" target="#b19">[18]</ref>. snmp spam -Our implementation uses SNMPv1 with a hard-coded community string: 302902010004067075626c6963a01c0204036a5f430 20100020100300e300c06082b060102010101000500.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Methods</head><p>Although the actual procedure differed across the three sets of experiments, the basic procedure remained the same. Prior to each experiment, the DuTs were powered off and on so as to start with a clean system state.</p><p>To make the experiments more convenient, the execution of individual experiments was automatized. To this end, the individual experiments were combined in a single large experiment definition for the experimental server. The gathered data was stored on the control server in a single file per phase and experiment. After all the experiments had been executed, the resulting files were downloaded for analysis. tocols. In the final series, we assessed the impact of scanning tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Increasing SYN Loads</head><p>As a baseline for the communication robustness of the tested devices, we performed a series of tests (hping3 SYN flood) with increasing inter-packet delay. Every hping3 attack lasted 60s followed by a 30s idle phase. The delays between the flooding was created by the wait parameter of hping3 (hping3 -i u&lt;wait for x microseconds&gt; &lt;IP&gt;). Through this, after each packet, hping3 waited x microseconds until the next packet was sent. We used the resulting mean cycle time for comparison. The mean cycle time of each segment was calculated as shown in Equation 1.</p><formula xml:id="formula_0">t = 1 n · n ∑ i=1 t i<label>(1)</label></formula><p>For better comparability, we normalized the results by dividing them by the mean idle time.</p><formula xml:id="formula_1">∆t = t mean t idle<label>(2)</label></formula><p>An overview of the results is given in <ref type="figure" target="#fig_5">Fig. 5</ref>. We found that for some PLCs (5, 8, 9, 10, 14, and 16) a higher network load led to higher cycle times.</p><p>For some controllers (1, 3, and 4), we even observed an 'out-of-operation' state under specific data rates. We defined a device as out of operation if its cycle time was increased by a factor 10 or more.</p><p>Some PLCs (2 and 12) were not influenced at the maximum packet flooding but at lower rates. This shows that it is not always useful to execute a DoS attack at the maximum available data rate.</p><p>During the hping3 measurement, the mean cycle time of the Siemens ET200 (7) somewhat decreased, meaning that the device runs fast at different packet rates.</p><p>Furthermore, four devices <ref type="bibr">(6, 11, 13, and 15</ref>) in the testbed were not influenced by the hping3 flooding attacks. However, most of the PLCs were affected, and further analysis showed that only the Crouzet em4 <ref type="formula" target="#formula_0">(15)</ref> was not influenced at all by our tests.</p><p>Conducting all the experiments summarized in <ref type="figure" target="#fig_5">Fig. 5</ref> took about a month. These experiments show that most devices can be influenced by sending SYN packets at a defined rate. Since SYN packets already have an influence on devices, it can be expected that higher-level protocols such as Hypertext Transfer Protocol (HTTP), Simple Network Management Protocol (SNMP), and ICS-specific protocols will be even more effective. This is due to additional resource consumption at higher levels of the network stack. In the following, we present a more detailed analysis of this phenomenon.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Detailed Analysis of Protocols</head><p>Each experiment in this series consisted of four phases. First, the device to test was powered off and on to guarantee a clean system state. The actual attack phase was flanked by two idle phases. The idle phase prior to the attack served as a reference to determine the impact of the attack. The post-attack idle phase was intended to observe any possible long-term effects of the attack. Each phase lasted for 600 seconds. There was a 60-second break between successive experiments.</p><p>Different impacts on the PLCs cycle time during the attacks could be observed. Due to space constraints, we categorized the impact into six different effect classes. For each class, we only present the worst case observed. The results are detailed in the Appendix A.</p><p>The results of the measurements are shown in a boxplot with calculated arithmetic mean () and median ( ). The quantiles are respectively 25 % and 75 %, with whiskers up to factor 1.5 of the box.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Class 1: PLC 'Stops'</head><p>An extreme behaviour is that the PLC 'stops' during the attack. This means that the outputs are not updated during packet injection. It is worth noticing that an ARP flooding attack can be sent to the whole broadcast domain. Therefore, all devices that can be influenced in a broadcast domain can be affected by this type of attack. However, ARP requests do not cross subnet boundaries, and as such only local adversaries can apply ARP flooding attacks.</p><p>In the example given in § 3.2, the valve remains open if it is opened when the attack has started. Thus, the material will not be filled into the container but next to it. This can obviously lead to all sorts of trouble.</p><p>Devices in this class clearly exceed the requirements for a certification as described in § 3.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Class 2: High Deviation</head><p>During a flooding attack, the cycle time of some controllers increases by several seconds. In the measurement illustrated in <ref type="figure" target="#fig_7">Fig. 7</ref>, the cycle time increases up to 5 seconds. In the example, this influence is achieved through UDP flooding. During the pre-and post-idle phase, the PLC functions as expected and toggles with about 2 ms. Considering the example in § 3.2, the PLC will nearly stop reacting. More precisely, the outputs will remain at the current level (on or off), only being updated every few seconds. This means that, if the valve is opened at this moment, it will remain opened for several seconds, and the convey belt will still move forward, resulting in a similar effect to the one described before.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pre idle</head><p>Devices in this class break the requirements for certification as described in § 3.3. Neither do the devices maintain essential services, nor is the deviation smaller than 4 %.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Class 3: Medium Deviation</head><p>Another effect that can be observed is a 'medium' deviation of the cycle times. Devices in this class show increased cycle times below one second. <ref type="figure" target="#fig_8">Fig. 8</ref> shows an example. The device toggles in idle with about 2 ms. During UDP flooding, the cycle time is up by a factor of about 40.</p><p>The controller processes everything at a slower rate due to this factor. It is possible that a process is still running correctly, but at a much slower pace or imprecisely.</p><p>Considering the example in § 3.2, the container may have already passed the valve when the sensor input is processed. Therefore, the loading could miss the container.</p><p>As for classes 1 and 2, the criteria for certification would not be met. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.4">Class 4: Increased Variance of Cycle Times</head><p>With regard to the results in <ref type="figure">Fig. 9</ref>, the cycle time is only minimally affected by packet flooding attacks. The boxplot as well as the mean value shows a delay of about 25 %. However, the variance is still large under the attack. On some controllers, the boxplots and mean value representations are misleading. In fact, there may be effects which are only viewable in other representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pre idle</head><p>Attack <ref type="table" target="#tab_0">Post idle  0  100  200  300  400  500  600  700  800  900</ref> Cycle time in µs <ref type="figure">Figure 9</ref>: Boxplot, while an attack on a Siemens S7-314 (8) is generating a high network load with the S7Com implementation of zgrab. <ref type="figure" target="#fig_0">Fig. 10</ref> shows the kernel density estimation in a histogram plot. The number of bins is set to 1,000 in order to get a good resolution of the distribution. In this, the cycle time is plotted against their probability (density). With this representation, the influenced cycles are clearly visible.</p><p>The density plot of the cycle time shows two peeks in idle, for the electrical low and high signals. We noticed that the low and high signals do not have the same length. In fact, the high signal is longer than the low signal. During the attack, the cycle time increases and new peeks are formed. The two peeks are shifted by a factor of about 2, which is not obvious in the boxplot but is visible in the density representation. This in turn means that some cycle times are twice as slow. Regarding our example ( § 3.2), the result would be variable filling quantities. For devices in this class, it is not entirely clear if they would fulfil the requirements of the certifications. This is mainly due to the relatively broad definition of our classes. However, for the device we selected as example here, the answer is still clear. For the Siemens S7-314 (8) under test in our study, the maximum communication load was set to 20 %. As such the assurance of the device was exceeded. In addition, the Siemens S7-314 (8) is Achilles level 2-certified, but the findings indicate that the device is still susceptible to network-based attacks on the electrical side of the device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.5">Class 5: Faster Cycle Time</head><p>By considering only the mean cycle time of the PLC, no changes can be determined. However, on a closer look, the cycle time appears to be more spread and some cycles become even faster during an attack. An example under a UDP flooding attack is given in <ref type="figure" target="#fig_0">Fig. 11</ref>. We believe that this effect is caused by a kind of buffer overflow of the network stack and results in packet drop. Furthermore, maybe this is achieved by blocking or crashing the network stack, thereby allowing the Central Processing Unit (CPU) to process the control process faster. In a real-world example, this could make the process unpredictable if it gets faster than usual. In the context of our example ( § 3.2), the container could not be positioned correctly, or the valve could close earlier than expected, leading insufficient filling.</p><p>To the best of our knowledge, the certification programs listed in page 2 do not take into account that PLCs could work faster. As such, devices in this class would meet the requirements while still being prone to attacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.6">Class 6: No Measurable Influence</head><p>Some tests indicated no measurable influence. <ref type="figure" target="#fig_0">Fig. 12</ref> shows an example where the three phases are similar. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.7">CPU Load During Attacks</head><p>In our testbed, most devices are based on Real-Time Operating System (RTOS) and the CPU usage cannot be supervised. However, the Wago 750-8100 is based on Linux (with root access), which allows the measurement of CPU utilization during attacks. The device has a singlecore 600MHz ARM processor with 256MB of RAM. The flooding attack started after 10 ticks and stopped after 20 ticks. <ref type="figure" target="#fig_0">Fig. 13</ref> illustrates the CPU usage during the experiment.</p><p>During the attack, the software Interrupt Request (IRQ), which, for example, handles the network traffic, increases to nearly 100 %. In case of an interrupt, the regular software execution is halted and the interrupt is handled. A high interrupt load seems to affect the control software of the PLC, which influences the continuous execution, resulting in asynchronous cycle times. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Effects of Active Scanning</head><p>In the literature listed in § 2, it is stated that active scans should be avoided. However, this claim is not backed by empirical evidence. Using our testbed, we were able to precisely assess the influences of an active scan. For this comparison, we used a selection of active scanners (Nmap 7.60 6 , PLCScan version 0.1 7 , and RiskViz Search Engine 8 , which uses ZGrab <ref type="bibr" target="#b6">[7]</ref> for application scanning) to analyse the behaviour of ICS components under an active scan. For this measurement, the default configuration of the scanners was used. For this analysis, we selected a control system (Wago 750-880 (3)) which we already knew was influenceable. <ref type="figure" target="#fig_0">Fig. 14</ref>    Our analysis of active scanning in ICS networks shows that there are measurable influences for some devices. On the other hand, it is not known which devices are in a network prior to a scan. The only option, if a scan cannot be avoided, is to keep the data rate as low as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Mitigation and Future Work</head><p>In order to secure assets, systems, machines, and networks against cyber threats, it is necessary to implement and maintain a state-of-the-art industrial security concept <ref type="bibr" target="#b20">[19]</ref>. This includes validation of the communication robustness of single components, for example, with flooding tools and specialized ICS fuzzers <ref type="bibr" target="#b14">[14]</ref>. Our results with these testing tools have shown that there is a lack of secure ICS component architectures. Furthermore, existing tests are not vendor-independent or transparent to the public.</p><p>Data rate limitations on the network provide a possible software solution. This feature is already implemented by controllers from Wago (1,2,3,4). Our measurements show that this option can be an efficient mitigation (see Appendix A). The Wago 750-8100 is not prone to flooding attacks for data rates of 16 MBit/s and below. The effect of flooding is drastically reduced for the remaining devices for data rates of 1 MBit/s and below. Only the longest measured cycle time is increased. There is no change in the mean cycle times. For data rates of 8 MBit/s and above, the effects measured without the feature are still evident. This possibility of rate-limiting indicates that there are other configuration options which could prevent cycle time influences.</p><p>Another software-based solution would be RTOSs with hard real-time scheduling like FreeRTOS <ref type="bibr" target="#b7">[8]</ref>. Such schedulers guarantee a certain task tick time. If mapped to PLCs cycle times, the expected characteristics on the electrical side could be guaranteed.</p><p>Besides software solutions, specific hardware configurations provide another option <ref type="bibr" target="#b13">[13]</ref>. A possible configuration could be a multi-controller set-up, for example, two dedicated controllers, or a System-on-a-Chip (SoC), where one controller process the real-time task and the other controls communication. A challenge in this scenario is to prevent feedback effects between the controllers. A hardware solution is obviously only possible for new products, but it would increase production and integration costs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In this paper, we tested the communication robustness of PLCs under network flooding attacks. Our results show that the electrical side of PLCs is prone to network flooding attacks. Variances in the runtime of control programs can have disastrous effects. This differs from well-known DoS attacks, as in this case physical processes are involved.</p><p>Our analysis shows that most of the PLCs are affected, irrespective of manufacturers. With the exception of one device (Crouzet em4 <ref type="formula" target="#formula_0">(15)</ref>), all the devices in our testbed showed measurable changes during network flooding attacks. Some of the controllers even 'stopped' operating and did not update their outputs for the duration of the attack. Additionally, we have shown that active network scans have a detectable effect on the electrical side of PLCs. These results are relevant as active networks scans are a current trend in academic research. Network scans with high data rates may influence internet facing PLCs accidentally. We recommend taking this possibility into account for the risk assessment of a planned project.</p><p>Apart from casualties, network-based DDoS attacks are another current trend <ref type="bibr" target="#b19">[18]</ref>. This is mainly because network flooding attacks are technically simple. In the presented scenario, an attacker can influence an actual physical process. This increases the thread imposed by DDoS attacks.</p><p>To summarize our research, it can be said that a secure system configuration is of great importance. We were glad to see that Wago offers at least a partial function mitigation feature. However, operators need to learn about and use configuration features to enable a secure operation.</p><p>We plan to extend our analysis with more devices to provide a broader overview. We informed all affected vendors about our findings using an adapted responsible disclosure.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Simplified sequence of a PLC cycle.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Example application where liquid/goods is filled in a container</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>(Figure 3 :</head><label>3</label><figDesc>Figure 3: Electrical view of a PLC toggling an output.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Test set-up for the measurement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>syn spam -This implementation uses hard-coded SYN packets with no additional TCP options set. arp spam -RFC 826 defines multiple variants for ARP requests. The standard uses the following abbreviations: sender protocol address (SPA), sender hardware address (SHA), target protocol address (T PA), and target hardware address (T HA). We implemented the following four ARP request variants: 1. Who has 2. Probe 3. Gratuitous ARP Request T PA = SPA, T HA = 0 4. Gratuitous ARP Reply T PA = SPA, T HA = SHA. gre spam -This implementation uses GRE-encapsulated SYN packets. The SYN packets do not have any addi- tional TCP options. We tested with GRE packets as mod- ern DoS attacks sometimes use such packets</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Controlled attack on PLCs with delays during packets, to achieve different network loads.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6</head><label>6</label><figDesc>Figure 6: Boxplot of a Wago 750-831 (4), where the PLC stops during ARP 3 flooding.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Boxplot of UDP flooding attack on a Wago 750-889 (1), resulting in a high deviation of the cycle time</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Boxplot with medium deviation during UDP flooding with hping3 of the Schneider TM221CE16T (16).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Probability Density Function, to view the distribution during the S7Com flooding of a Siemens S7-314 (8) with zgrab.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: A boxplot representing a shorter cycle time of a Phoenix ILC151 (11) during Modbus/TCP flooding with zgrab.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Example of a boxplot with no measurable influence on the Crouzet em4 (15).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: CPU load during SYN flooding attacks of a Wago 750-8100 (2) with hping3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Influences of active scanners on a Wago 750-880 (3).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig</head><label></label><figDesc>Fig. 15 illustrates the influences of the cycle time of the three network scanners over the 30-second scan time. The data used for the plots in Fig. 14 and Fig. 15 are from the same scan. Our analysis of active scanning in ICS networks shows that there are measurable influences for some devices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 15 :</head><label>15</label><figDesc>Figure 15: Influences of different network scanners on a Wago 750-880 (3) during network scanning</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Overview of programs used, corresponding protocols, and respective parameters</head><label>1</label><figDesc></figDesc><table>Program 
Protocols 

Parameters 

ZGrab 1 
S7comm / HTTP(S) / Modbus/TCP / -s7 --port 102 / --port 80 --http="" / --port 443 --tls 
Ethernet/IP / DNP3 / Bacnet/IP 

--http="" / -modbus --port 502 / -dnp3 --port 20000 / -enip 
--port 44818 

Vegata 2 
HTTP 

attack 

hping3 3 
SYN / UDP 

-c 1 -1 -C 17 / -S -P -U --flood 

syn spam 4 
SYN 

-worker 20 

arp spam 4 
ARP 

-worker 20 

gre spam 4 
GRE 

-worker 20 

snmp spam 4 SNMP 

-worker 20 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Currently deployed devices in our test set-up 

No. Vendor 
Manufacturer number Name 
Firmware 
1 
Wago 
750-889 
Controller KNX IP 
01.07.13(10) 
2 
Wago 
750-8100 
Controller PFC100 
02.05.23(08) 
3 
Wago 
750-880 
Controller ETH. 
01.07.03(10) 
4 
Wago 
750-831 
Controller BACnet/IP 01.02.29(09) 
5 
Siemens 
6ES7211-1AE40-0XB0 Simatic S7-1211  *  
V4.2.0 
6 
Siemens 
6ES7212-1AE31-0XB0 Simatic S7-1212 
V 3.0.2 
7 
Siemens 
6ES7155-6AU00-0AB0 Simatic ET 200SP 
V 3.3.0 
8 
Siemens 
6ES7314-6EH04-0AB0 Simatic S7-314  *  
V 3.3.0 
9 
Siemens 
6ES7516-3FN01-0AB0 Simatic S7-1516F  *  
V 2.0.5 
10 
Siemens 
6ED1052-1CC01-0BA8 Logo! 8  *  
1.81.01 
11 
Phoenix 
2700974 
ILC 151 ETH 
V.4.42.04 
12 
Phoenix 
2985330 
ILC 150 ETH 
V.3.94.03 
13 
Phoenix 
2700975 
ILC 171 ETH 2TX 
V.4.42.04 
14 
ABB 
1SAP120600R0071 
PM554-TP-ETH 
2.5.4.15626 
15 
Crouzet 
88981133 
em4 Ethernet 
1.2.75/1.0.27 
16 
Schneider TM221CE16T 
Modicon M221 
1.5.1.0 
 *  Achilles Level 2 Certified 

</table></figure>

			<note place="foot" n="5"> Experiments, Results, and Discussion In this sections, we present the three series of experiments we conducted. In the first series, we measured reaction of devices under different loads of SYN packets. In the second series, we measured the reaction to different pro-</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The work on network traffic effects on PLC cycle time is part of the RiskViz <ref type="bibr" target="#b0">[1]</ref> research project. It is funded by the Federal Ministry of Education and Research (BMBF), with the aim of creating a risk map of SCADA systems in Germany.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Overview</head><p>The Appendix lists additional measurement results for every PLC in the testbed. The attack with the most influence for each controller is marked with a grey background.    <ref type="table">zgrab modbus  1000  1001  1000  994  1044  945  636  10  498  1363  4227  1338  zgrab http  1000  1000  1000  992  1097  1070  545  624  644  1329  1417  1351  syn  1000  1003  1000  998  1029  1080  642  14  629  1330  4253  1385  snmp  1000  1000  1000  916  1127  910  125  568  160  1404  1465  1337  http  1000  1000  1000  899  1018  971  646  627  626  1368  1340  1336  hping udp flood  1000  1001  1000  882  1012  980  470  31  329  1360  4228  1397  hping S P U flood  1000  1002  1000  1142  1031  934  632  55  550  1423  3186  1385  hping c1 1 C17 flood  1000  1000  1000  1068  926  1142  614  360  595  1387  1365  1409  arp 4  1000  1002  1000  964  1072  854  84  13  519  1374  4231  1426  arp 3  1000  1003  1000  1008  1072  946  702  27  630  1285  4226  1348  arp 2  1000  1003  1000  1011  1063  925  133  18  84  1383  4260  1398  arp 1  1000  1003  1000  873  1056  1056  253  7  568  1400  4238</ref>    <ref type="formula">(14)</ref> zgrab <ref type="table">modbus  1000  1143  1000  1074  1079  1076  908  97  903  1916  3100  1097  zgrab http  1000  1000  1000  926  1072  926  510  903  626  1099  1097  1097  syn  1000  1107  1000  1000  1079  1074  903  895  232  1095  5089  1911  snmp  1000  1000  1000  1074  1074  1076  523  902  904  1916  1095  1097  http  1000  1000  1000  1073  1076  925  905  904  732  1097  1097  1095  hping udp flood  1000  1070  1000  1074  1079  1074  905  662  903  1096  3919  1910  hping S P U flood  1000  1073  1000  925  1078  926  747  231  542  2087  3099  1098  hping c1 1 C17 flood  1000  1000  1000  1073  1074  924  906  903  839  1094  1915</ref>     <ref type="table">2000  7773  2000  2000  4002  2000  1266  48  686  2035  76015  2050  hping c1 1 C17 flood  2000  2000  2000  2000  2000  2000  1964  1317  1951  2051  2051  2051  arp 4  2000  9004  2000  2000  8000  2000  1943  1621  1967  2057  102011  2033  arp 3  2000  9050  2000  2000  8002  2000  1953  1946  1134  2047  97013  2048  arp 2  2000  2628  2000  2001  2002  2000  1968  1935  1798  2033  36006  2033  arp 1  2000  2494  2000  2000  2002  2001  1953  1275  1967  2048  35005  2034</ref> </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">RiskViz -Risk Map of the Industrial IT-Security in Germany</title>
		<ptr target="https://www.riskviz.de/.Accessed" />
		<imprint>
			<biblScope unit="page" from="2018" to="2023" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Safe and Secure Networked Control Systems under Denial-of-Service Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A M I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>C ´ A R D E N A S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>A N D S A S T R Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Hybrid Systems: Computation and Control</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="31" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Productivity Secrets: Don&apos;t Underestimate the Power of PLC Scan Time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B O V I L L E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<idno>Accessed: 2018-05-30</idno>
		<ptr target="https://tinyurl.com/ybrmu3py" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Plan for SCADA Security to Deter DOS Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B O W E N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C L</forename><surname>A N D T H O M A S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Department of Homeland Security: R&amp;D Partnering Conference</title>
		<meeting>the Department of Homeland Security: R&amp;D Partnering Conference</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Research Challenges for the Security of Control Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C ´ A R D E N A S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M I N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>A N D S A S T R Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<editor>HotSec</editor>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C O R P O R At I O N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>Scan Times</surname></persName>
		</author>
		<idno>Accessed: 2018-05-30</idno>
		<ptr target="https://tinyurl.com/yc6jr5e4" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Zmap: Fast internet-wide scanning and its security applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D U R U M E R I C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>W U S T R O W</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>A N D H A L D E R M A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="47" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I N A M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>M ¨ A K I -T U R J A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>S J ¨ O D I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Hard real-time support for hierarchical scheduling in freertos</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B E H N A M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">23rd Euromicro Conference on Real-Time Systems</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="51" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Simulation and Impact Analysis of Denial-ofService Attacks on Power SCADA</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K A L L U R I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>M A H E N D R A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>K U M A R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>A N D P R A S A D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Power Systems Conference (NPSC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Internet-facing PLCs as a Network Backdoor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K L I C K</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>L A U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>M A R Z I N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>M A L C H O W</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J . -O</forename><surname>A N D R O T H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Communications and Network Security (CNS)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="524" to="532" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Denial of Service Attacks on Network-based Control Systems: Impact and Mitigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L O N G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>W U</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C . -H</forename><surname>A N D H U N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Industrial Informatics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="85" to="96" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Analysis of SCADA System Vulnerabilities to DDoS Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>A R K O V I C -P E T R O V I C</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>A N D S T O J A N O V I C</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Telecommunication in Modern Satellite, Cable and Broadcasting Services (TELSIKS), 2013 11th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="591" to="594" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Asymmetric multiprocessing techniques in smart devices: Application in a drone navigation system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N A O</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Pa S S A R O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>G I O I A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>A N D P E T R A C C A</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software, Telecommunications and Computer Networks (SoftCOM), 2017 25th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">PropFuzz -An IT-Security Fuzzing Framework for Proprietary ICS Protocols</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>I E D E R M A I E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>F I S C H E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>A N D V O N B O D I S C O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2017 International Conference on Applied Electronics (AE)</title>
		<meeting><address><addrLine>Pilsen</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">CoRT: A Communication Robustness Testbed for Industrial Control System Components</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>I E D E R M A I E R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>V O N B O D I S C O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>A N D M E R L I</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th International Conference on Event-Based Control, Communication, and Signal Processing EBCCSP 2018</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Internal Security Attacks on SCADA Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ay E G H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>C H E H A B</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E L H A J J</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">H</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A N D K Ay S S I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Communications and Information Technology</title>
		<imprint>
			<publisher>ICCIT</publisher>
			<biblScope unit="page">2013</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<title level="m">Third International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="22" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S C H I E R H O L Z</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>A N D M C G R At H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Security Certification-A Critical Review. ABB Corporate Research</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S E A M A N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<editor>Advisory: Mirai Botnet. Tech. rep., Akamai</editor>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S T O U F F E R</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fa L C O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>A N D S C A R F O N E</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
		<title level="m">Guide to Industrial Control Systems (ICS) Security. NIST special publication</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">800</biblScope>
			<biblScope unit="page">82</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T E I X E I R A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>P ´ E R E Z</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>S A N D B E R G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>A N D J O -</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Attack Models and Scenarios for Networked Control Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H A N S S O N</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st international conference on High Confidence Networked Systems</title>
		<meeting>the 1st international conference on High Confidence Networked Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Assessment and Testing of Industrial Devices Robustness against Cyber Security Attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T I L A R O</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conf. Proc</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Automated Asset Discovery in Industrial Control Systems -Exploring the Problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W E D G B U R Y</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>A N D J O N E S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd International Symposium for ICS &amp; SCADA Cyber Security Research</title>
		<meeting>the 3rd International Symposium for ICS &amp; SCADA Cyber Security Research</meeting>
		<imprint>
			<publisher>British Computer Society</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="73" to="83" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Evaluating Industrial Control Devices Security: Standards, Technologies and Challenges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X I E</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>P E N G</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Z H A O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>G A O</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>A N D H A N</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IFIP International Conference on Computer Information Systems and Industrial Management</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="624" to="635" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
			</analytic>
	<monogr>
		<title level="m">Cycle time in µs during attacks against Wago devices at 64 KBit/s</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
			</analytic>
	<monogr>
		<title level="m">Cycle time in µs during attacks against Wago devices at 16 MBit/s</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
