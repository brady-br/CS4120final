<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:31+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">OCTANE: Open Car Testbed And Network Experiments Bringing Cyber-Physical Security Research to Researchers and Students</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">E</forename><surname>Everett</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">George Mason University</orgName>
								<orgName type="institution" key="instit2">George Mason University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Damon</forename><surname>Mccoy</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution" key="instit1">George Mason University</orgName>
								<orgName type="institution" key="instit2">George Mason University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">OCTANE: Open Car Testbed And Network Experiments Bringing Cyber-Physical Security Research to Researchers and Students</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Security research and teaching using cyber-physical systems (e.g., automotive networks) is challenging because of the need to replicate the interactions between the hardware components and the control software of the systems. These interactions are challenging to replicate because of the dynamic inputs in real-world environments that cause various interactions of the hardware components and control software within the network. In particular , automotive networks are challenging for security research and teaching because although the protocols of the automotive networks are standardized (e.g., CAN, LIN), the implementation details by each automotive manufacturer are not standardized and are generally not publicly available. In this paper we present Open Car Testbed And Network Experiments (OCTANE), which reduces the barrier of entry into the security research and teaching of automotive networks by providing a software package and a hardware framework for the reverse engineering and testing of automotive networks. OCTANE provides a platform for security research and teaching by replicating the interactions between the hardware components and control software of the systems so that the user can focus on the security aspects of the automotive network instead of the tool configuration and setup.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Automotive cyber-physical security research is challenging because of steep barriers to entry due to the fact that there is no open source automotive testbed. In particular, automobile network research presents additional challenges due to the lack of documentation of manufacture specific proprietary protocols built on top of standardized protocols utilized by automotive manufacturers. This forces every research group to build their automotive testbed software from scratch and often times enter into restrictive agreements with automotive manufactures to obtain access to the documentation necessary to build such a testbed, thus preventing the release of their testbed software. We introduce the Open Car Testbed And Network Experiments (OCTANE) framework to facilitate the analysis, understanding, and testing of automotive cyber-physical systems. OCTANE enables researchers and students to rapidly begin to explore automotive cyber-physical systems by providing a platform for reverse-engineering and testing through real-world experimentation of a lab network setup or an automobile.</p><p>In particular, OCTANE is composed of both a software package and hardware framework. The software package supports monitoring and transmitting many of the protocols used by automotive manufacturers (e.g., CAN <ref type="bibr" target="#b4">[6]</ref>, LIN <ref type="bibr" target="#b6">[12]</ref>) and includes many features to enable researchers to more easily reverse-engineer proprietary protocols and create shareable XML schemes that encode these proprietary protocols. Also, OCTANE is designed to be modular and easily extended which allows teachers to share class room experiments they create and researchers to add in support for new automotive network protocols and hardware monitoring devices. As part of the hardware framework, we provide recommendations and guidelines on how to setup different hardware configurations to enable complex security research and more simple hardware configurations for courses. The hardware configurations enable the users to test real-world interactions between parts of an automobile network in the lab network setup and test proposed security operations in a real-world automobile environment. OCTANE will be released under an open source license and made freely available. OCTANE reduces the burden on those interested in exploring automotive cyber-physical security by allowing the them to concentrate on security research and not the minutiae of setting up an automotive testbed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Automotive networks have become more complex in recent years as the number of electronic control units (ECUs) and the number of sub-networks (also referred to as network buses and networks in general) connecting the ECUs have increased <ref type="bibr" target="#b26">[32,</ref><ref type="bibr" target="#b34">40,</ref><ref type="bibr" target="#b35">41]</ref>. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates a simple exemplary automotive network. The automotive network includes a controller area network (CAN) sub-network <ref type="bibr" target="#b4">[6]</ref>, a FlexRay sub-network <ref type="bibr">[8]</ref>, a local interconnect network (LIN) sub-network <ref type="bibr" target="#b6">[12]</ref>, and a media oriented systems transport (MOST) sub-network <ref type="bibr" target="#b28">[34]</ref> 1 . Each sub-network has certain technical details (e.g., bus speed, trigger type) and advantages with respect to the use in different car models (e.g., fast multimedia transfer, low cost, high reliability for safety functions). These technical details and advantages are not described in this paper but are described in numerous other publications (see, e.g., <ref type="bibr" target="#b30">[36,</ref><ref type="bibr" target="#b34">40]</ref>). However, this paper provides a brief overview of the sub-networks with respect to figure 1.</p><p>Turning to figure 1, each sub-network, CAN, FlexRay, LIN, and MOST, is utilized for technical and cost reasons within the automotive network. The CAN sub-network is the backbone of the automotive network and provides an interface for the standardized on-board diagnostic (OBD) port <ref type="bibr" target="#b8">[14]</ref>, which enables emissions testing and hardware testing. The FlexRay sub-network is for highspeed, safety-critical automotive applications (e.g., stability control, back-up detector). The LIN sub-network is for low-speed, low-bandwidth automotive applications (e.g., side mirror control, door lock/unlock). The MOST sub-network is for high-speed, high-bandwidth multimedia automotive applications (e.g., video camera, video streaming). Generally, the cost for the hardware components and the complexity of the corresponding protocol also corresponds to the bandwidth. In other words, each sub-network has particular advantages and disadvantages and can be utilized by automotive manufacturers to decrease the overall manufacturing cost while providing the best network performance.</p><p>In addition to the control and safety of the automo-1 There are many other automotive networks that are currently implemented in production vehicles (e.g., body electronics area network (BEAN) <ref type="bibr" target="#b18">[24]</ref>, audio visual communication -local area network (AVC-LAN) <ref type="bibr" target="#b2">[4]</ref>). There are also many planned automotive networks that are expected to be implemented in vehicles in the next 5-15 years (e.g., ethernet <ref type="bibr" target="#b17">[23]</ref>, time-triggered CAN <ref type="bibr" target="#b26">[32]</ref>). bile, the automotive network enables maintenance of the automobile through the OBD port and telematics control unit (e.g., cellular network updates <ref type="bibr" target="#b13">[19]</ref>). The maintenance can be as simple as reading the error codes of an ECU through the OBD port using a testing tool <ref type="bibr" target="#b7">[13]</ref> or as complicated as re-programming an ECU 2 . Automobile maintenance through the OBD port and telematics control unit is important for the industry to reduce maintenance cost of automobiles.</p><p>Turning back to the various sub-networks, each subnetwork has an industry accepted standard <ref type="bibr" target="#b4">[6,</ref><ref type="bibr">8,</ref><ref type="bibr" target="#b6">12,</ref><ref type="bibr" target="#b28">34]</ref>. In addition to these standards, each automotive manufacturer has an application layer that extends the standard network protocol and implements the standard network protocol in different ways (e.g., GMLAN <ref type="bibr" target="#b15">[21]</ref>). However, these proprietary application layers are generally not publicly available. Instead, automotive manufacturers generally keep their particular implementations as trade secrets as set forth in the AUTOSAR working principle of "Cooperate on standards, compete on implementation" <ref type="bibr" target="#b1">[3]</ref>. The proprietary application layers developed by the automotive manufacturers provide a wealth of knowledge about the network implementation but generally this knowledge has to be reverse-engineered 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>In the automotive security field, a few software packages <ref type="bibr" target="#b21">[27,</ref><ref type="bibr" target="#b23">29,</ref><ref type="bibr" target="#b29">35]</ref>, lab network setups <ref type="bibr" target="#b19">[25,</ref><ref type="bibr" target="#b21">27,</ref><ref type="bibr" target="#b23">29,</ref><ref type="bibr" target="#b31">37]</ref> and real-world test setups <ref type="bibr" target="#b12">[18,</ref><ref type="bibr" target="#b23">29,</ref><ref type="bibr" target="#b31">37]</ref> have been utilized by prior researchers. These testbeds were limited to the specific security testing technique that was being evaluated and based on the publicly available information on these testbeds, these testbeds were not designed for setup and use by other users. OCTANE is designed to enable users to quickly move from a basic understanding of automotive networks <ref type="bibr" target="#b30">[36]</ref> to testing security solutions on automotive networks 4 .</p><p>The prior work provides an overview of the security issues within automobile networks <ref type="bibr" target="#b19">[25,</ref><ref type="bibr" target="#b21">[27]</ref><ref type="bibr" target="#b22">[28]</ref><ref type="bibr" target="#b23">[29]</ref> and proposed solutions to the security issues <ref type="bibr" target="#b21">[27,</ref><ref type="bibr" target="#b33">39]</ref>. The proposed solutions include honeypots <ref type="bibr" target="#b24">[30,</ref><ref type="bibr" target="#b32">38]</ref>, fire-walls <ref type="bibr" target="#b34">[40]</ref>, intrusion detection systems <ref type="bibr" target="#b20">[26,</ref><ref type="bibr" target="#b21">27,</ref><ref type="bibr" target="#b24">30]</ref>, encrypted communication <ref type="bibr" target="#b16">[22,</ref><ref type="bibr" target="#b27">33,</ref><ref type="bibr" target="#b31">37,</ref><ref type="bibr" target="#b34">40,</ref><ref type="bibr" target="#b35">41]</ref>, ECU authentication <ref type="bibr" target="#b34">[40,</ref><ref type="bibr" target="#b35">41]</ref>, and secure communication techniques <ref type="bibr" target="#b25">[31]</ref>. <ref type="bibr">Kleberger et al. [28]</ref> provide a comprehensive overview of the security research in the automotive security field and possible security solutions for automobiles. However, only a few of these overviews implemented security solutions for the security issues on lab network setups or real-world test setups <ref type="bibr" target="#b21">[27]</ref>. OCTANE is designed to enable users to configure and test the proposed solutions to the security issues described in the prior work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Testbed</head><p>Open Car Testbed And Network Experiments (OC-TANE) provides a software package and a hardware framework for the reverse engineering and testing of automotive networks. OCTANE enables reverse engineering by providing a packet monitor with customized packet identification (e.g., identify door lock packet, identify ECU re-programming request packet) and a customized packet transmitter to verify that the monitored packets operate on the network (e.g., the ECU reprogramming request packet actually initiates the ECU re-programming process, the identified lights-on packet actually turns on the lights). The verification that the monitored packets operate on the network enables a researcher to quickly and accurately reverse engineer the proprietary protocols utilized by automotive networks.</p><p>OCTANE enables testing of the automotive network by providing the tools to test proposed security solutions on the network (e.g., firewall to stop ECU re-programming from an unauthorized device, firewall to stop non-tire pressure sensor packets from entering through the tire pressure control). For example, OC-TANE enables a researcher to (i) monitor a CAN bus through an automobile's OBD port, (ii) replay parts of the monitored traffic, and (iii) monitor the CAN bus to determine how the automobile handles the replayed traffic. In this example, the replayed traffic could be a door lock command that the researcher is attempting to replicate. In another example, the replayed traffic could be a ECU re-programming command that the researcher is attempting to replicate to re-program an ECU. In each example, after the researcher verifies that the replayed traffic correctly controls the respective part of the automobile, the researcher can save the replayed traffic in an XML file for future replay or sharing with other researchers. The software and the hardware of OCTANE are discussed below in turn.  <ref type="figure" target="#fig_1">Figure 2</ref> illustrates the architecture of the software package. The architecture includes a GUI layer, a processing layer, a thread layer, a hardware middle layer, and a hardware layer. The software package is divided into the layers to enable flexibility and adaptability in the types and quantities of network data being processed. Each layer is briefly discussed below. Following the brief description of each layer, the different components of the software package, adapters, monitor, custom transmit, XML automation, and transmit, are discussed in turn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Software</head><p>The GUI layer provides the GUIs for the software package. Screenshots of some of the GUIs are provided herein (i.e., <ref type="figure" target="#fig_2">Figures 3 and 4)</ref>. Additional GUIs can be quickly and efficiently added to the software package for new features (e.g., ECU re-programming). The GUI layer connects to the processing layer and the thread layer. The processing layer performs the processing of the data for the software package (e.g., convert user input into CAN message format), logging of messages, and access to XML files for the XML automation described in section 4.1.4. The processing layer off-loads the data processing from the GUI layer to avoid stalling the GUIs.</p><p>The thread layer provides threading mechanisms for the receiving and transmitting of data through the appropriate hardware. The thread layer removes the delay in receiving and transmitting data from the GUI layer so that the GUIs are not stalled during the receiving and transmission process. The thread layer calls the receive and transmit interfaces of the appropriate hardware interfaces in the hardware middle layer. The hardware middle layer is utilized to obfuscate the implementation details of the actual hardware from the other layers of the software package. For example, a new hardware adapter (e.g., new CAN adapter) can be added to the software package by adding in the application programming interface (API) for the new hardware adapter in the hardware middle layer without having to re-code any part of the GUI layer, thread layer, or processing layer. The hardware middle layer calls the appropriate hardware API in the hardware layer. The hardware layer is the API provided for by the hardware device manufacturer or coded for the particular hardware device. The various layers work together to streamline the operation of the software package while allowing for extensions to the architecture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Adapters</head><p>The software package's bus control interface (not shown) controls the operation of the automotive network adapters (i.e., CAN <ref type="bibr" target="#b3">[5,</ref><ref type="bibr" target="#b5">7,</ref><ref type="bibr">11]</ref>, LIN <ref type="bibr">[10]</ref>, FlexRay <ref type="bibr">[9]</ref>). The software package enables a variety of different hardware controllers to be utilized. Other hardware controllers can quickly and efficiently be added to the architecture as described above in section 4.1. The bus control interface enables a user to turn on or off the various hardware controllers for use by the software package and control configuration options for each hardware controller 5 . Overall, the control interface provides user control over the various hardware controllers. <ref type="figure" target="#fig_2">Figure 3</ref>  a network. The bus monitor displays the received packets from the selected Receive Interface. The bus monitor also enables the selection of a filter . The filters are available using the XML file as illustrated in <ref type="figure" target="#fig_1">figure 2</ref> and a user can select a particular car type (e.g., automobile brand, automobile make, automobile year and model). The XML file includes packets, ECUs, and messages. The XML file is shareable among users to facilitate community reverse engineering of the proprietary application layers for automotive manufacturers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Monitor</head><p>The filter selection of a particular car type enables received packets to be identified in <ref type="figure" target="#fig_2">figure 3</ref>. <ref type="figure" target="#fig_2">Figure 3</ref> illustrates a filter identification of a Stop Network Communications packet (the XML for the packet is depicted in table 1) and other packet and ECU identifications.</p><p>As illustrated in <ref type="figure" target="#fig_2">figure 3</ref>, the bus monitor enables a user to quickly and efficiently view the received packets in a human-readable form (i.e., English text readable form versus hexadecimal form) and identify packets upon reverse engineering of the proprietary application layer (e.g., Honda application layer can be defined as a CarType in the XML file). The combined efforts of a community of users, via the sharing of a XML file, could significantly reduce the time required to reverse engineer a proprietary application layer.</p><p>The bus monitor also enables the transmission of any of the received packets via the Transmit Selected Packet button to a selected automotive network selected by the Transmit Interface. The Transmit Selected Packet button functionality enables the user to select a plurality of received packets for transmission to the selected automotive network. The transmission aspects of the bus monitor enable a user to test interactions with the automotive network (e.g., transmit suspected door unlock packets to the automotive network) and test security features of the network (e.g., transmit seed responses to the automotive network in response to a seed request for ECU re-programming). The bus monitor includes other functionality (e.g., copy to clipboard, bit priority, filter) that is not described herein due to space limitations.  <ref type="figure" target="#fig_3">Figure 4</ref> illustrates the package's custom transmit interface. The custom transmit interface lists available filters, such as a particular car or car type, and then the packets associated with the selected car or car type that are available for transmission. The filters and packets are stored in the XML file as illustrated in <ref type="figure" target="#fig_1">figure 2</ref> for efficient editing and sharing. <ref type="table">Table 1</ref> illustrates XML of a packet for transmission using the custom transmit interface. The custom transmit interface enables the transmission of one or more of the selected packets on the selected Transmit Interface. Although CAN messages are illustrated in the screenshot of <ref type="figure" target="#fig_3">figure 4</ref>, any of the other network protocols (e.g., LIN, FlexRay) can be utilized by the custom transmission interface. The custom transmit interface enables a user to build transmission sequences for reverse engineering (e.g., how does the network respond to a certain packet?) and security testing (e.g., does the ECU let me control the engine with a certain packet?). The use of the XML file in the custom transmit interface also reduces reverse engineering and testing time by reducing manual typing of packets, configuration time (e.g., a user can load shared XML files from fellow researchers for testing), and sharing by fellow users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Custom Transmit</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">XML Automation</head><p>The packages's XML editing interface (not shown) enables a user to efficiently add, delete, or modify a car or car type in the XML file. The XML editing interface also enables a user to efficiently add, delete, or modify packets, messages, and ECU IDs for the selected car type. The XML editing interface enables users to quickly and efficiently modify the XML file without having to learn the XML format (see, e.g., table 1) and to share the XML information with other users to facilitate reverse engineering of the proprietary application layer.</p><p>As a future improvement of the software, the XML automation will be extended to accept the following XML extensions:</p><p>• Wildcards (e.g., ID = 64?; ID = 1*; Message = AE1[0-5]); • Packet Sequences (e.g., packet A followed by packet B); • Packet responses (e.g., response with packet D upon receipt of packet C); • Packet Subroutines with sequences and responses (e.g., packets A and B and then response with packet D upon receipt of packet C); and • Calculated Packet Responses based on received packet (e.g., response with packet F upon receipt of packet E, packet F includes ID F = ID E + 1 and message F calculated with a pre-defined function based on the message E ).</p><p>These extensions will provide the user with additional tools for the reverse engineering and testing of automotive networks. The addition of the extensions will enable users to encode and share specific interactions of a proprietary application layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.5">Transmit</head><p>The software package's transmit interface (not shown) enables transmission of one or more packets. The transmit interface enables a user to specify a CAN packet for transmission to the selected Transmit Interface. The various features of the transmit interface (e.g., flags, number of messages, incremented identifiers for a plurality of packets) enable a user to test responses from an automobile network to various packets (e.g., how does the network respond to fuzzed packets?; how does the network respond to the same CAN message with a range of CAN identifiers?). The transmit interface decreases the user time in the setup and configuration of sending packets to the automotive network, thereby enabling the user to focus on reverse engineering and testing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Hardware</head><p>The hardware framework for the testbed includes a lab network setup for testing of particular parts of an automobile network (e.g., window setting, door lock/unlock) and a description of how to setup tests for real-world automobiles. The lab network setup enables users to reverse engineer and test the security for isolated parts of an automobile network in a controlled environment (e.g., undergrad class project of capture the flag for door lock/unlock, research initial testing of firewall implementation on tire pressure control, re-programming of ECU). The real-world test setup enables users to extend the reverse engineering and security testing from the lab network setup to determine how the a complete automo- <ref type="figure">Figure 5</ref>: Exemplary automotive network for a lab network setup. A graduate student can utilize the automotive network to configure proposed security solutions for testing.</p><p>tive network operates and responds to different packets (e.g., an attempt to perform a denial of service on the CAN network using the software package was not successful in a real-work test because the CAN adapter was not able to saturate the network via the OBD port). For the lab network setup and the real-world test setup, we provide the process of setting up each setup instead of a list of actual parts so that the user can choose the optimal setup from a cost (e.g., undergraduate laboratory versus a research laboratory) and automotive network perspective (e.g., a single CAN network versus three different networks). Overall, the combination of both the lab network setup and the real-world test setup provides the foundation for users to reverse engineer and test security solutions on automobile networks. <ref type="figure">Figure 5</ref> illustrates an exemplary lab network setup for users to test automotive networks. The process for setting up the lab network includes the following steps:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Lab Network Setup</head><p>(a) Determine Research Types that the lab network should facilitate (e.g., undergraduate laboratory, security testing); (b) Determine Automotive Networks Types that need to be researched (e.g., CAN, LIN); (c) Identify Automobile Types that include the automotive network types (e.g., BMW, Honda); (d) Identify Adapters that include the automotive network types (e.g., Kvaser, AVR-CAN); (e) Determine Budget for lab network; and (f) Match Automotive Parts to meet the research types, the automotive network types, the automobile types, the adapters, and the budget.</p><p>We selected parts for a 2011 BMW X5. The selection was based on the following decision process: (a) facilitate an undergraduate laboratory, graduate research, and security testing; (b) include a CAN sub-network, a FlexRay sub-network, and a LIN sub-network; (c) certain BMW models included the three automotive network types (e.g., research through web searches <ref type="bibr" target="#b14">[20]</ref> and review of electronic wiring diagrams); (d) Kvaser supported CAN <ref type="bibr">[11]</ref> and LIN <ref type="bibr">[10]</ref> network types and Intrepid Control Systems supported FlexRay network type <ref type="bibr">[9]</ref>; and (e) budget was large enough to support a large network. <ref type="figure">Figure 5</ref> illustrates part of the lab network that we assembled 6 . The computer in <ref type="figure">figure 5</ref> is connected to the Kvaser CAN adapter, which is connected to the OBD port and to the CAN network through the OBD port, and the Kvaser LIN adapter, which can be connected to the LIN network. and (e) Match Automobiles to meet the automotive network types, the automobile types, the adapters, and the access.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Real-World Test Setup</head><p>We utilized the software package to test five real-world automobiles. We tested the following automobiles: (i) 2013 Chevrolet Cruze; (ii) 2012 Chevrolet Cruze; (iii) 2011 Chevrolet HHR; (iv) <ref type="bibr">2010 Toyota Matrix;</ref><ref type="bibr" target="#b32">and (v)</ref> 2006 Toyota Corolla. For each automobile, we obtained the electrical wiring diagrams <ref type="bibr">[2,</ref><ref type="bibr" target="#b10">16]</ref>. We utilized the OBD port to interface with the internal automobile network and utilized the electrical wiring diagram to determine which ECUs are visible via the OBD port.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Research and Teaching Opportunities</head><p>For research opportunities, <ref type="figure">figure 6</ref> illustrates an exemplary automotive network with exemplary security devices. The security devices could be utilized as security solutions for the automotive networks to prevent and stop unauthorized access to the automotive network. The following are some of the security solutions that could be tested using the testbed: <ref type="figure">Figure 6</ref>: Exemplary firewalls and intrusion detection system on an automotive network. The firewalls are positioned at every entry point on the automotive network. The intrusion detection system is positioned on the core CAN network.</p><p>• Firewall to prevent transmission of unauthorized packets into an automotive network <ref type="bibr" target="#b34">[40]</ref>; • Intrusion Detection System to detect anomalies on an automotive network <ref type="bibr" target="#b20">[26,</ref><ref type="bibr" target="#b21">27,</ref><ref type="bibr" target="#b24">30]</ref>; • Packet Encryption to protect the data on an automotive network from easy sniffing and packet insertion <ref type="bibr" target="#b16">[22,</ref><ref type="bibr" target="#b27">33,</ref><ref type="bibr" target="#b31">37,</ref><ref type="bibr" target="#b34">40,</ref><ref type="bibr" target="#b35">41]</ref>; • ECU Authentication to prevent unauthorized ECUs (e.g., ECU inserted by a malicious actor) from interacting with an automotive network <ref type="bibr" target="#b34">[40,</ref><ref type="bibr" target="#b35">41]</ref>; and • ECM Security to detect tampering of ECUs along with authentication tampering <ref type="bibr" target="#b25">[31]</ref>.</p><p>For teaching opportunities, <ref type="figure">figure 5</ref> illustrates an exemplary automotive network for laboratory experiments and testing of proposed security solutions. There are also many teaching uses of the lab network that are not related to automobile security testing (e.g., embedded operating system exercises, networking laboratory exercises). The following are some of the teaching uses of the testbed related to automobile security testing:</p><p>• Undergraduate Laboratory Security Exercise to sniff network activity and attempt to take-over the network (e.g., control the side mirror, lock/unlock the doors); • Undergraduate Laboratory Embedded Programming Exercise to program an AVR-CAN controller to receive and transmit packets on a CAN network <ref type="bibr" target="#b3">[5]</ref>; and • Graduate Security Testing Exercise to implement an intrusion detection system on an AVR-CAN controller for a CAN network <ref type="bibr" target="#b3">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Learning Points</head><p>Automotive security researchers should be aware of the following issues to avoid pitfalls that we encountered during the development of OCTANE.</p><p>• Finding Application Layer information for a particular automobile manufacturer is challenging as described in section 2; • Finding Automotive Parts is challenging without an actual vehicle. The automotive parts infrastructure is designed for repair facilities with access to the actual vehicle being repaired; and • Electrical Diagrams are important for identifying the ECUs that are accessible via the OBD port for the particular automobile under testing 7 as described in section 4.2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Future Work and Conclusion</head><p>Currently, we have plans for several extensions to the software package along with security implementations for testing for automotive networks. The following software package extensions are planned:</p><p>• XML Automation Extensions to enable robust reverse engineering and testing through interactive packet responses and manipulation as described in section 4.1.4; and • Remote Access to enable researchers and students to access OCTANE from locations remote from the lab network setup and the real-world automobiles.</p><p>The following security implementations and testing of the implementations are planned:</p><p>• Firewalls for Incoming Traffic to prevent unexpected incoming traffic from obtaining access to an automotive network as described in section 5; and • ECM Security to prevent re-programming and access by unauthorized devices and persons without the owner's permission as described in section 5.</p><p>In this paper we present OCTANE, which is an intuitive and flexible software and hardware based testbed that reduces the barrier to entry for both researching automotive security and teaching courses on this topic. Our software tools incorporate easy to use GUI's that allow for monitoring and transmitting of messages on many of the standardized automotive networking protocols along with a portable XML scheme for defining and sharing proprietary parts of the application layer APIs and pro-tocols that require time consuming reverse-engineering efforts. It is our hope that OCTANE will be useful for implementing and evaluating existing theoretical automotive network solutions in a standardized environment and provide the research and teaching community with an open source software platform and hardware setup guidelines to enable sharing of information.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Exemplary automotive network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Architecture of software package. The architecture enables the software package to be utilized with additional hardware interfaces by adding the application programming interface to the hardware middle layer without re-coding of the GUI layer or the thread layer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Screenshot of the bus monitor interface of the software package. The bus monitor interface outputs the received packets and allows for transmission of packets back to a network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Screenshot of the custom transmit interface of the software package. The custom transmit interface enables the selection of a filter for a particular car or car type and transmission of packets associated with the selected car or car type.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 1 illustrates</head><label>1</label><figDesc>Figure 1 illustrates part of an exemplary real-world network. The user can utilize a computer with a CAN adapter to access the CAN network via the OBD port. The process for selecting an automobile for real-world tests includes the following steps (similar to the process for a lab network): (a) Determine Automotive Networks Types that need to be researched (e.g., CAN, LIN); (b) Identify Automobile Types that include the automotive network types (e.g., BMW, Honda); (c) Identify Adapters that include the automotive network types (e.g., Kvaser, AVR-CAN); (d) Determine Access to different automobile types; and (e) Match Automobiles to meet the automotive network types, the automobile types, the adapters, and the access.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head></head><label></label><figDesc>illustrates the software package's bus monitor interface. The bus monitor interface outputs the received packets and allows for transmission of packets back to</figDesc><table>&lt;Packet&gt; 
&lt;Name&gt; 
Stop 
Network 
Communications 

&lt;\Name&gt; 

&lt;ID&gt; 
210 
&lt;\ID&gt; 
&lt;DLC&gt; 
2 
&lt;\DLC&gt; 
&lt;Message&gt; 104A 
&lt;\Message&gt; 
&lt;\Packet&gt; 

Table 1: XML example of a packet for transmission and iden-
tification. 

</table></figure>

			<note place="foot" n="2"> The re-programming of ECUs can be done using automotive manufacturer approved tools [1] or through third party tools (e.g., PCLink [15], TunerPro [17]). The re-programming can range from tweaking control parameters (e.g., higher engine idle RPMs) to an updated version of the control software (e.g., new version to fix braking issues). 3 Each of these proprietary application layers includes: (i) ECU access control protocols; (ii) ECU re-programming application program interfaces (APIs); (iii) ECU memory access APIs; (iv) diagnostic APIs; (v) ECU parameter modification APIs; and (vi) network control APIs. 4 OCTANE is not currently designed for autonomously operated automobiles or vehicle-to-vehicle communication and as such, the extensive prior work in these fields are not discussed in section 3.</note>

			<note place="foot" n="5"> The configuration options include bit rate parameter, time between bits parameter, synchronization parameter, and other parameters associated with the various hardware controllers.</note>

			<note place="foot" n="6"> Figure 5 does not show the FlexRay sub-network for the dynamic stability control</note>

			<note place="foot" n="7"> For some automobiles, the entire spectrum of ECUs are accessible through the OBD port (i.e., on the primary CAN network) and for other automobiles, the sub-systems (e.g., door lock, window controls) are in a sub-network (e.g., LIN sub-network, a secondary CAN sub-network) and are not visible via the OBD port (i.e., direct tapping into the subnetwork is required).</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was support in part by National Science Foundation grant NSF CNS-1205453.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Acdelco techconnect -tss -technical support</title>
		<ptr target="http://www.acdelcotechconnect.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Automotive open system architecture</title>
		<ptr target="http://www.autosar.org" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Avc-Lan -Elinux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Org</surname></persName>
		</author>
		<ptr target="http://elinux.org/AVC-LAN" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Avr-Can</surname></persName>
		</author>
		<ptr target="https://www.olimex.com/Products/AVR/Development/AVR-CAN/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Can specification</title>
		<ptr target="http://www.bosch-semiconductors.de/media/pdf_1/canliteratur/can2spec.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Ecom cable -controller area network (can) to usb adapter</title>
		<ptr target="http://www.cancapture.com/ecom.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lin</forename><surname>Subbus</surname></persName>
		</author>
		<ptr target="http://www.lin-subbus.de/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Obdlink sx scan tool -obd interface</title>
		<ptr target="http://www.scantool.net/obdlink-sx.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<ptr target="http://www.epa.gov/obd/" />
		<title level="m">On-board diagnostics (obd) -us epa</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Pclink g4 -link engine management systems -plug-in and wire-in aftermarket</title>
		<ptr target="http://www.linkecu.com/support/downloads/pclink-download/PCLinkG4" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Toyota technical information system</title>
		<ptr target="https://techinfo.toyota.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Tunerpro and tunerpro rt -professional automobile tuning software</title>
		<ptr target="http://www.tunerpro.net" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Comprehensive experimental analyses of automotive attack surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Checkoway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mccoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kantor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koscher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Czeskis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Roesner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kohno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 20th USENIX conference on Security</title>
		<meeting>the 20th USENIX conference on Security<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Autoplug: An automotive test-bed for electronic controller unit testing and verification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Drolia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhenyan</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Pant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mangharam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Transportation Systems (ITSC)</title>
		<imprint>
			<date type="published" when="2011-10" />
			<biblScope unit="page" from="1187" to="1192" />
		</imprint>
	</monogr>
	<note>14th International IEEE Conference on</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Under the hood of the bmw x5</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Frank</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Auto Electronics</title>
		<imprint>
			<biblScope unit="page">18</biblScope>
			<date type="published" when="2007-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Gmw gmw3110: General motors local area network enhanced diagnostic test mode specification</title>
		<ptr target="http://engineers.ihs.com/" />
	</analytic>
	<monogr>
		<title level="m">General Motors Company</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Secure broadcast with one-time signatures in controller area networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Groza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Murvay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Availability, Reliability and Security</title>
		<imprint>
			<publisher>ARES</publisher>
			<date type="published" when="2011-08" />
			<biblScope unit="page" from="371" to="376" />
		</imprint>
	</monogr>
	<note>Sixth International Conference on</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Beyond flexray: Bmw airs ethernet plans. EE Times</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hammerschmidt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Body electronics area network (bean)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Honda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Uehara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sakai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Akatsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Akiyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SAE Technical Paper</title>
		<imprint>
			<biblScope unit="volume">970297</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Security threats to automotive can networks -practical examples and selected short-term countermeasures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kiltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dittmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th international conference on Computer Safety, Reliability, and Security</title>
		<meeting>the 27th international conference on Computer Safety, Reliability, and Security<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="235" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Applying intrusion detection to automotive it-early insights and remaining challenges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kiltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dittmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Information Assurance and Security</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="226" to="235" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
	<note>JIAS)</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Security threats to automotive can networks -practical examples and selected short-term countermeasures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kiltz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dittmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reliability Engineering and System Safety</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page" from="11" to="25" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Security aspects of the in-vehicle network in the connected car</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kleberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Olovsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Jonsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Vehicles Symposium (IV)</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="528" to="533" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Experimental security analysis of a modern automobile</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koscher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Czeskis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Roesner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Patel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kohno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Checkoway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mccoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kantor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shacham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security and Privacy (SP), 2010 IEEE Symposium on</title>
		<imprint>
			<date type="published" when="2010-05" />
			<biblScope unit="page" from="447" to="462" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Securing vehicles against cyber attacks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">E</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename><surname>Nilsson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Formally verifiable features in embedded vehicular security systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Oguma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Yoshioka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shigetomi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Otsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Imai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vehicular Networking Conference (VNC)</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Expanding automotive electronic systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Leen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Heffernan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="88" to="93" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Embedded Security in Cars: Securing Current and Future Automotive IT Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lemke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Springer Publishing Company</publisher>
		</imprint>
	</monogr>
	<note>Incorporated, 1st edition</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<ptr target="http://www.mostcooperation.com/home/index.html" />
	</analytic>
	<monogr>
		<title level="j">MOST Cooperation. Most -home</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">A first simulation of attacks in the automotive network communications protocol flexray</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename><surname>Nilsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">E</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Picasso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Jonsson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="page" from="84" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Multiplexed Networks for Embedded Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Paret</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<publisher>John Wiley and Sons</publisher>
			<pubPlace>Ltd</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Security and privacy for in-vehicle networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schweppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Roudier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vehicular Communications, Sensing, and Computing (VCSC)</title>
		<imprint>
			<date type="published" when="2012-06" />
			<biblScope unit="page" from="12" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An approach to using honeypots in in-vehicle networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Verendel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename><surname>Nilsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">E</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Jonsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vehicular Technology Conference</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1" to="5" />
		</imprint>
	</monogr>
	<note>IEEE 68th</note>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Security Engineering for Vehicular IT Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Vieweg+Teubner</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Security in automotive bus systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weimerskirch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Paar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Embedded Security in Cars (escar)&apos;04</title>
		<meeting>the Workshop on Embedded Security in Cars (escar)&apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">State of the art: Embedding security in vehicles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weimerskirch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wollinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EURASIP Journal of Embedded Systems</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
