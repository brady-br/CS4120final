<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:05+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Collaborative Monitoring Mechanism for Making a Multitenant Platform Accountable</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chen</forename><surname>Wang</surname></persName>
							<email>chen.wang@csiro.au</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">CSIRO ICT Center</orgName>
								<orgName type="department" key="dep2">School of Information Technologies</orgName>
								<orgName type="institution">The University of Sydney</orgName>
								<address>
									<postBox>PO Box 76</postBox>
									<postCode>1710, 2006</postCode>
									<region>NSW, NSW</region>
									<country>Australia, Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ying</forename><surname>Zhou</surname></persName>
							<email>ying.zhou@sydney.edu.au</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">CSIRO ICT Center</orgName>
								<orgName type="department" key="dep2">School of Information Technologies</orgName>
								<orgName type="institution">The University of Sydney</orgName>
								<address>
									<postBox>PO Box 76</postBox>
									<postCode>1710, 2006</postCode>
									<region>NSW, NSW</region>
									<country>Australia, Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Collaborative Monitoring Mechanism for Making a Multitenant Platform Accountable</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Multitenancy becomes common as an increasing amount of applications runs in clouds, however, the certainty of running applications in a fully controlled administrative domain is lost in the move. How to ensure that the data and business logic are handled faithfully becomes an issue. We propose to maintain a state machine outside of a multitenant platform to make the platform accountable in this paper. We give a mechanism to support accountability for a multitenant database with a centralized external service. We also describe how to implement a decentralized virtual accountability service via collaborative monitoring. Finally, we discuss the characteristics of the mechanism through experiments in Amazon EC2.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Technologies such as multitenant database systems and Platform as a Service (PaaS) enable multiple applications to share a platform. This approach can significantly reduce the cost for an organization to maintain dedicated hardware/software resources to run its applications. The success of Force.com <ref type="bibr" target="#b17">[18]</ref> shows the power of this technology. The adoption of the technology represents a trend of moving clients' data and business logic to the cloud. To ensure that the data and business logic are handled correctly, a platform service provider often offers service level agreement (SLA) to its clients. However, few means are provided to clients to make a SLA accountable when problems occur. Clients are often required to furnish evidence all by themselves to be eligible to claim credit for a SLA violation <ref type="bibr" target="#b0">[1]</ref>. However, the existing application design practice does not take into account of evidence collection functionalities for credit claiming purpose. Run-time logs contain information mainly for bug diagnostics, not for SLA compliance check. Supporting evidence collection certainly adds extra burden for the clients of a multitenant platform. In this paper, we propose to use third party services to do the task. This type of services is referred as accountability services in networking services <ref type="bibr" target="#b3">[4]</ref> and service oriented architecture <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b16">17]</ref>. We give a mechanism for clients to authenticate the correctness of the data and the execution of their business logic in a multitenant platform.</p><p>A multitenant platform intends to achieve both flexibility for various tenants and efficiency for itself to manage a variety of data and applications. Metadatadriven architecture is often used for this purpose. In a typical multitenant platform, a client's business logic is represented using tenant-specific metadata and executed through applications generated from the metadata. Web-database systems <ref type="bibr" target="#b6">[7]</ref> fit into such a multitenant platform well as web pages of a tenant application, including both the layout and the content, can be dynamically generated from the tenant-specific data stored in a shared database system. Metadata-driven architecture greatly eases the construction and management of client applications, however, it also restrains the tasks of client application developers to supplying metadata only. The transformation process between metadata and application as well as how the data is accessed are out of the sight from a client's perspective. It is not a trivial task for a client if she attempts to get assurance that the platform handles her data and business logic correctly.</p><p>Accountability is one of the foundations that form real-world trust relationships. The capability of identifying a party that is responsible when things go wrong with undeniable evidences can potentially enhance the trustworthiness of a system. In the business world, one may be reluctant to transact with a total stranger, but a well-known middleman or a group of middlemen can make them contract with each other and resolve possible disputes during their transactions <ref type="bibr" target="#b12">[13]</ref>. In a world where data are managed by outsourced data management systems and business logic is implemented through outsourced platforms, there is a strong need for a third party role to witness and audit the execution of business logic and ensure data correctness.</p><p>The responsibilities of an accountability service for a multitenant platform therefore include the following:</p><p>1. Collecting and managing evidence based on a given SLA. The SLA defines data states of interests and data state transitions triggered by client operations;</p><p>2. Runtime compliance check and problem detection, e.g., the result of a query does not reflect the recent data change under a given consistency protocol.</p><p>Even though an accountability service can play certain role in dealing with malicious attacks, the focus of the paper is on the mechanism of collecting evidence that show things go wrong. The rest of the paper discusses how the responsibilities mentioned above are fulfilled and is organized as follows: Section 2 describes the problem; Section 3 discusses how to use a trusted party to make a multitenant platform accountable; Section 4 discusses how client applications can collaboratively monitor the platform; Section 5 gives evaluation results; Section 6 discusses related work and Section 7 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Description</head><p>We consider a tenant delegates its data management functionality to a multitenant platform provisioned by another party. The tenant has a set of applications (called client application in the following) running on its data stored in the multitenancy environment. These applications provide a set of endpoints for the end-users of the tenant to use its service. We denote the set of endpoints that query or update the data stored in the platform as {ep 0 , ep 1 , ..., ep n−1 }. We assume that the data can only be accessed through the set of endpoints according to a SLA reached between the tenant and the platform provider. We also assume that ep i (0 ≤ i &lt; n) is well-defined in terms that the data state transition it may trigger is specified in the SLA and deterministic.</p><p>There are many ways things can go wrong in this scenario, e.g, a data element is modified without the permission of the data owner (or without going through the specified set of endpoints), or the consistency requirement promised by the platform is broken. A multitenant database often balances the scalability and consistency requirements of client applications and offer different level of consistency <ref type="bibr" target="#b1">[2]</ref>, but currently there is no practical way for a tenant to be sure that it always has the level of data consistency it pays for. From a client's point of view, it is essential that all the functionalities offered by the platform provider are performed with certainty in runtime and the data contains no surprise to the owner applications.</p><p>To make the data and business logic handling accountable in such a multitenancy environment, we introduce a special type of third party provisioned accountability services. The external party offers services to wrap an endpoint ep i , 0 ≤ i &lt; n in an adapter wep i . The wrapper is capable of capturing the input/output from ep i and extracting certain information required by the accountability service from the captured data. We denoted the accountability service as W . The scenario is shown in <ref type="figure" target="#fig_0">Fig. 1</ref>. wep i is in fact an abstraction of existing tools that are capable of logging user activities, such as HttpWatch (http://www.httpwatch.com/), or proxies between end-users and outsourced services. The behaviors of the wrapper provided by an accountability service are verifiable. A tenant trusts the wrapper either through the certification issued by a trusted party or by reviewing its source code. The tenant should also be able to configure the wrapper to anonymize sensitive information to be sent to W . The problem is therefore how to make use of the captured information to create a reliable state machine for authenticating the data managed in a multitenant platform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Preliminary</head><p>Merkle B-tree (MB-tree) <ref type="bibr" target="#b8">[9]</ref> is an effective method for a data owner to authenticate the data stored in an outsourced database. It is a combination of Merkle (hash) tree <ref type="bibr" target="#b11">[12]</ref> and B + -tree. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates the structure of a MB-tree.</p><p>Each MB-tree node is an ordinary B + -tree node with a hash value associated with each entry. The hash value of data entry in a leaf node is the hash of the data entry itself. The hash value of the data entry in an internal node is the hash of the concatenation of the hashes of its children, denoted as h = H(h i |h i+1 |...). The hash of the root is signed by the data owner for authentication purpose. When answering a range query, e.g, as shown in <ref type="figure" target="#fig_1">Fig. 2</ref>, r 4 &lt; k &lt; r 8 , the database system traverses the MB-tree and locates the left-most data entry, which is r 5 , and the right-most data entry, which is r 7 , in the leaf nodes. The hash values of the following entries in each internal node on the two traversal paths are inserted into a verification object (VO): the left siblings of k i , the right siblings of k j ; the left siblings of k 2 , the right siblings of k x . The following items in the leaf nodes are inserted into the VO as well: the data entries in the query range (r 5 , r 6 and r 7 ), the hash values of data entries to the left of r 5 and those to the right of r 7 , and the data entry to the left of r 5 , i.e., r 4 and the data entry to the right of r 7 , i.e., r 8 (this is for completeness verification). A client can then compute the hashes of the sub-tree corresponding to the query result set. By combining the items in the VO, the client can iteratively recalculate the root of the MB-tree. The comparison of the root and the recalculated value will reveal the correctness and completeness of the query result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Supporting Accountability with a Dedicated Service</head><p>In this section, we discuss how the MB-tree can be used to support accountability by a dedicated service. When using a dedicated accountability service, a tenant needs to have an agreement with the service provider on how a call to an application endpoint may affect the data state in the data management service. The data state change can be insertion, updating or deletion of a few tuples. We generalize the operations triggering data state change as update. Similarly, we refer operations that do not trigger data state change as query operations. A query can be composed in a form of point query or range query. We assume an update and a query operation can be uniquely identified by the operation type and a set of sortable attributes of the affected tuples in the database.</p><p>When endpoint ep i is called for updating a data tuple, wep i extracts the summary of the operation and sends it to accountability service W . When endpoint ep j is called for data query, wep j extracts the summary of the result and authenticates the result against the record in W . W maintains a MB-tree to serve these requests. The process is described using pseudocode in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Evidence Collection and Processing</head><p>The logging process inside wep i : Input: Endpoint ep i associated with the specification of the data state transition as a result of the call.</p><p>1: if ep i triggers state change then 2:</p><p>extract the operation signature op: op = {(type, k, h(k|v), t)}, in which type is the operation type; k identifies the affected data; h(k|v) is the hash of the concatenated identifier and the new value of the data; and t is the time when ep i is called. extract query result set rs: rs = {(type, k, h(k|v), t)}, in which t is the time when the result is received.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>10:</head><p>send rs to W for authentication <ref type="bibr">11:</ref> end if The request processing in W side: Input: Request r (either op or rs) from a client.</p><p>1: insert r into a pending request queue 2: sort the requests in the queue based on their timestamps 3: for all request r in the queue do We assume a reliable communication channel between wep i and W , i.e., a message will eventually arrive in W once sent out. All wep i synchronize their clocks with W periodically. When W receives an operation signature from a client, it updates the MB-tree. Upon receiving an authentication request, W traverses the MB-tree for the left and right boundary of the result set. The returned VO is used together with the hashes in the result set to recompute the root in order to check the correctness and completeness of the result set. An alert will be raised if the recomputed root does not match and existing root.</p><p>Note, we do not assume that requests arrive in W in the order of their creating time Algorithm 1. Such an assumption is difficult to satisfy in some cases due to the links between clients and W are likely to be heterogeneous and the processing speed of each wep may vary. Instead, we introduce a queue for request processing in W . The requests in the queue are sorted by the request timestamps. The queue keeps requests arriving in a sliding time window with a pre-defined window size. Requests with timestamps outside of the window are removed from the queue and written into the persistent Btree.The time window size is determined by the maximum delay of passing a log entry from a client to W . An authentication request with timestamp earlier than the starting time of the sliding window can be answered immediately by recomputing the root of the MB-tree. The processing of an authentication request with timestamp fall inside the sliding time window will be postponed till the starting time of the window passes the timestamp. Failed authentication requests are temporarily stored.</p><p>Even though the size of the sliding window is determined by the maximum delay of transferring a log entry from a client to W , exceptions can happen where an update event arrives outside of the window. An alert will be raised in this case. Some manual procedure may be used to resolve the exceptions. The failed authentication requests arriving after this delayed update will be reviewed to check if the update is indeed valid. The frequency of such type of events may trigger the adjustment of the sliding window size.</p><p>It is not difficult to see that the accountability service supports eventual consistency. When there is no new update arrives, the answer to an authentication request will reflect the data state caused by the last update.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">A Collaborative Monitoring Mechanism</head><p>The approach described above requires a centralized accountability service to respond to authentication requests and maintain the authentication data structure. It requires that the service is highly available, trustworthy and scalable when the demand increases. High availability and scalability may be achieved through adding computing and storage resources to the centralized service, but the trustworthiness is better achieved through separating the responsibility to multiple services. We hereby give a distributed approach to reduce the cost of maintaining such a service as well as enhancing the trustworthiness of the accountability service.</p><p>In a distributed setting, the data state of a multitenant database is maintained by a set of data state services. Each service maintains a view of the data state. The set of data state services form a virtual accountability service. They can be co-hosted with the client applications if the host is accessible by other client applications. The scenario is shown in <ref type="figure" target="#fig_4">Fig. 3</ref>. There are two extremes of design choices for supporting a client application to log its update operations and submit authentication requests:</p><p>1. An update log is sent to any of the data state services the client application knows. The service that receives the log propagates the log to other data state services in a synchronous manner, or to enhance trustworthiness, the propagation can be done through the use of a Byzantine fault tolerance protocol, e.g., <ref type="bibr" target="#b4">[5]</ref>, which ensure the data state is correctly maintained even when up to 1/3 data state services become faulty. This approach ensures strong consistency among data state services. As a result, an authentication request can be answered by any data state service. However, the drawback of this approach is that the logging performance can be dragged down, particularly when the number of data services increases.</p><p>2. An update log is sent to any of the data state services and the service receiving the log propagates the log to other nodes asynchronously. The log will be eventually reflected in all data state services, however it is not guaranteed that the answer to a subsequent authentication request will reflect the data state change carried in the log sent from the data state service where the change is initially recorded. In another words, the data state services maintains a weak consistency. This approach gives client applications better logging performance, but also causes uncertainty in answering an authentication request, especially when the inconsistency window is hard to determine or when faults occur.</p><p>Our design is between the two extremes. We partition the whole range of the indexed attribute into a few non-overlapped regions. Each region is mapped to one or more (greater than one in general) data state services. An update to a key falling into certain region will be logged to one of the services that is responsible for the region. The corresponding wep directs the log to the correct service (through a shared encoding and mapping method). Once receiving the log, the data state service synchronizes the new data state with other services that are responsible for the same region, meanwhile it propagates the update to other data services in an asynchronous manner. This approach ensures strong consistency among data state services that are mapped to the same region and enhances the availability of data state services. Faults in a single service is unlikely to make the whole data state uncertain.</p><p>Similarly, an authentication request will be directed to a data state service whose assigned region overlaps most with the data range associated with the request. If the data range in the result set of the request totally falls inside the region of the service, the service can answer the request with certainty; otherwise, it will have to wait for an allowable delay window for the update logs from other involved region to arrive before answering the request, in a similar way as described in Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation</head><p>We evaluate our mechanism through experiments in Amazon EC2. The testing environment consists of a data management service, an accountability service built on top of the authenticated indexed structure library provided by <ref type="bibr" target="#b8">[9]</ref> and a few clients that use the database servers. The data management service consists of a Web service that eventually maps business logic to insert, point query and range query operations, and a database server running MySQL version 14.12 that is capable of supporting multiple such services. The Web services are implemented using gSOAP <ref type="bibr" target="#b15">[16]</ref>. Each party runs on an EC2 small instance created from the same Ubuntu image (Linux version 2.6.21.7-2.fc8xen).</p><p>The data used by client applications and managed by the database server is the "Census Income" dataset from the UCI Machine Learning Repository <ref type="bibr" target="#b2">[3]</ref>. The indexed column is "fnlwgt" in our experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">The Overhead</head><p>We measure the overhead introduced by a centralized accountability service by comparing the average response time for insert operations, point and range queries from the client side. The calls to the data management service and accountability service are both synchronous ones for The average cost of logging operation summary to the accountability service for an insert operation is about 65% of the elapsed time of the transaction that includes calling both data management service and accountability service. For point query, the cost of result authentication is about 70% of the elapsed time. Authenticating the query result incurs higher cost is due to that the additional step of recalculting of VO based on the clientsupplied result set and the hash values retrieved from the MB-tree. Inserting into a MB-tree does not require such a step and the update to the MB-tree is not as expensive when the dataset is not very big. <ref type="figure" target="#fig_6">Fig. 5</ref> shows the overhead of processing range queries changing with the result set size. In our experiment, the range starting points are randomly selected from the whole dataset while the end points are calculated based on the corresponding starting points and the given range sizes.</p><p>It is apparent that the overhead increases along with the result set size from around 55% to above 90%. This can be attributed to the rising cost of transferring the hash values of the result set to the accountability service as well as the increasing cost of calculating the VO. One method for reducing the overall overhead is to reduce the frequency of sending authentication requests of range query results to the accountability service, which requires a mechanism to determine the frequency so that the size of possible window of attacks can be minized while the performance is maintained at a satisfactory level for clients. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Performance Improvement with Multiple Data State Services</head><p>From the above, we can see that a single accountability service faces the scalability problem when the number of client applications of a multitenant platform increases, as the processing of a data state change or an authentication request by an accountability service is slower than the processing of an insert or query operation by a normal data management service. Our collaborative monitoring mechanism addresses the issue effectively. <ref type="figure" target="#fig_7">Fig. 6</ref> shows how the average response time for an authentication request of a point query changes along with the number of available data state services. In this experiment, we setup 3 client applications running on different EC2 instances to continuously send 100 point queries to the data management service and authenticate each result against a randomly selected data state service. The data points in the queries are randomly selected from the dataset. As shown in <ref type="figure" target="#fig_7">Fig. 6</ref>, when the number of available data state services increases, the average response time for authentication a result is significantly reduced compared with the centralized approach, e..g., the reduction is 59% when the number of data state services goes up to 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>Our work is related to research on query authentication. P. T. Devanbu et. al. <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b10">11]</ref> gives a general Merkle tree based data structure to verify the query results of on-line databases. F. Li et.al. <ref type="bibr" target="#b8">[9]</ref> utilizes the data structure to handle the situations where data in an on-line database is periodically updated. H. Pang et. al. <ref type="bibr" target="#b13">[14]</ref> uses different hash method to reduce the size of VO. K. Pavlou  <ref type="bibr" target="#b14">[15]</ref> gives a method for further detecting when and what kind of tampering occurs. Most work on query authentication adopt an architecture where the data owner maintains a master database and authenticates the query results of its clients. In most database as a service scenarios, building such a mater database is too expensive to benefit from the cost-effectiveness of outsourcing data management functionalities. Particularly, when the authentication is required to be done on multiple sortable attributes, a separate tree has to be maintained for each attribute. Our approach separates the MB-tree from the data manager and allows distributed parties to share the burden of maintaining the trees.</p><p>PeerReview <ref type="bibr" target="#b7">[8]</ref> gives a set of protocols for distributed nodes to detect faults and misbehaviors. These nodes collaborate without relying on a centralized coordinator. Our collaborative monitoring mechanism has similarity to PeerReview in terms of decentralization, however, our method has a focus on features such as query result completeness, continuous result authentication and addressing the consistency issues among the distributed state machines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper, we described a mechanism for making a multitenant platform accountable. We gave a centralized and a decentralized model to achieve accountability. The mechanism was developed based on the principle that the involvement of a third party often smooths business transactions between strangers. It enables the state machine of the outsourced data to be maintained outside of the data management service so that the clients know what the data state should be at a certain time. We argue it is an increasingly important type of services to be of-fered in a multitenancy environment. We also discussed technical challenges for maintaining such a state machine and gave some preliminary experimental results. Further work will be done on issues such as modeling the sliding window size and dealing with logging exceptions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Architecture for Supporting Accountability</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Example of Merkle B-tree</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>4: if r.t ≤ current time − sliding window size then 5: if r.type == UPDATE then 6: update the MB-tree with op 7: else 8: authenticate rs 9: end if 10: end if 11: end for</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Distributed Architecture for Supporting Accountability</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Breakdown of the Average Response Time of Insert Operations and Point Queries</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Breakdown of the Average Response Time of Range Queries</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: The Effect of Data State Service Number on the Average Authentication Time of Point Queries</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Amazon EC2 service level agreement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amazon</forename><surname>Inc</surname></persName>
		</author>
		<ptr target="http://aws.amazon.com/ec2-sla/" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">SimpleDB consistency enhancements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amazon</forename><surname>Inc</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">UCI machine learning repository</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Asuncion</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Newman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Accountability as a service</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bender</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Spring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhattacharjee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SRUTI&apos;07: Proceedings of the 3rd USENIX workshop on Steps to reducing unwanted traffic on the internet</title>
		<meeting><address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Practical byzantine fault tolerance and proactive recovery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Castro</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liskov</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="398" to="461" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Authentic third-party data publication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Devanbu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">T</forename><surname>Gertz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Martel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">U</forename><surname>And Stub-Blebine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DBSec</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="101" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive scheduling of web transactions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guirguis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sharaf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Chrysanthis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Labrinidis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pruhs</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="357" to="368" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Peerreview: practical accountability for distributed systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haeberlen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kouznetsov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Druschel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SOSP</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="175" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Dynamic authenticated index structures for outsourced databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hadjieleftheriou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kollios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reyzin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMOD Conference</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="121" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Building accountability middleware to support dependable SOA</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-J</forename><surname>Panahi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="16" to="25" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A general model for authenticated data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">U</forename><surname>Nuckolls</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Devanbu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">T</forename><surname>Gertz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kwong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stubblebine</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="page" from="21" to="41" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A certified digital signature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Merkle</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CRYPTO (1989)</title>
		<imprint>
			<biblScope unit="page" from="218" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Trustworthiness and contract. In Moral Markets: The critical role of values in the economy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O&amp;apos;hara</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename></persName>
		</author>
		<editor>J. Zak</editor>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Princeton University Press</publisher>
			<biblScope unit="page" from="173" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Authenticating query results in edge computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="560" to="571" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Forensic analysis of database tampering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pavlou</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Snodgrass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Database Syst</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page">4</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The gSOAP toolkit for web services and peer-to-peer computing networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Engelen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gallivan</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGRID</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="128" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A contract-based accountability service model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zic</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICWS</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="639" to="646" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The design of the force.com multitenant internet application development platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Weissman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bobrowski</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMOD &apos;09: Proceedings of the 35th SIGMOD international conference on Management of data</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="889" to="896" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
