<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:25+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Augmenting Centralized Password Management with Application-Specific Passwords</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trevor</forename><surname>Smith</surname></persName>
							<email>tsmith@isrl.byu.edu</email>
							<affiliation key="aff0">
								<orgName type="laboratory">MIT Lincoln Laboratory</orgName>
								<orgName type="institution" key="instit1">Brigham Young University</orgName>
								<orgName type="institution" key="instit2">Brigham Young University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Ruoti</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">MIT Lincoln Laboratory</orgName>
								<orgName type="institution" key="instit1">Brigham Young University</orgName>
								<orgName type="institution" key="instit2">Brigham Young University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kent</forename><surname>Seamons</surname></persName>
							<email>seamons@cs.byu.edu</email>
							<affiliation key="aff0">
								<orgName type="laboratory">MIT Lincoln Laboratory</orgName>
								<orgName type="institution" key="instit1">Brigham Young University</orgName>
								<orgName type="institution" key="instit2">Brigham Young University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Augmenting Centralized Password Management with Application-Specific Passwords</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Password authentication is the most prevalent form of authentication; however, passwords have numerous usability issues. For example, due to the large number and high complexity required of passwords, users frequently reuse and choose weak passwords. One way to address these problems is to centralize password management by using a password manager or single sign-on. While this centralizing approach can improve a user&apos;s security, it also magnifies the damage caused by a compromise of the user&apos;s master password. In this paper, we describe a new approach to enhance centralized password management using application-specific passwords. This approach prevents the compromise of a master password from immediately compromising all associated applications and instead, requires the attacker to conduct further online attacks against individual applications. We detail five possible system designs for application-specific passwords and describe our plans for user studies to test the acceptance and usability of this approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Passwords are the most common form of authentication, and their problems are legion. Still, their combination of usability and deployability have made it difficult for more secure alternatives to displace them <ref type="bibr" target="#b6">[11]</ref>.</p><p>Users have a large number of applications, both local and remote, that they authenticate to using a password. Ideally, a user would have a unique password for each application that was secure enough to survive an offline attack. Unfortunately, the sheer number of applications and limitations on human memory makes this ideal intractable. Instead, users commonly choose weak passwords and reuse their passwords across many applications.</p><p>Two common solutions to this problem involve centralizing passwords, either through a password manager or a single sign-on (SSO) system. Password managers (e.g., 1Password, LastPass) generate random passwords and manage those Copyright is held by the author/owner. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee. Who Are You?! Adventures in Authentication <ref type="bibr">(WAY 2017</ref>) <ref type="bibr">July 12, 2017, Santa Clara, California.</ref> passwords for users, only requiring the user to remember a single master password to unlock their password manager. SSO (e.g., Google OAuth 2.0, Facebook Connect) allows a user to authenticate to many different applications using a single global account and its associated password. In both cases, the hope is that if users need to select fewer passwords, then those passwords will be much stronger than the passwords currently selected by users.</p><p>While password managers and SSO both significantly improve the usability of passwords, they introduce a single point of failure where a system compromise has the potential to be much more damaging than the compromise of a singleapplication account. Users are cognizant of this limitation, as demonstrated by a recent usability study of authentication methods conducted by Ruoti et al. <ref type="bibr" target="#b15">[20]</ref>. During the study, users indicated that they liked SSO, but that they were reluctant to trust a single third party (i.e., password manager or SSO identity provider) with information and access to potentially all of their accounts.</p><p>Several users suggested that SSO could be augmented to include an additional application-specific password for high-value applications. The benefit of this augmentation is that even if a user's SSO account is compromised, an attacker does not automatically have access to the user's high-value applications. While the suggestion was made regarding SSO, it is equally applicable to password managers.</p><p>Interestingly, the suggested augmentation represents a middle-of-the-road solution between the extremes of requiring each application to have its own unique, user-memorized password and centralizing all passwords into a single password manager or SSO account.</p><p>In this paper, we describe our attempts to design systems that would augment centralized password management with application-specific passwords. Additionally, we describe our plans for user studies to test the acceptance and usability of this approach. At the workshop, we look forward to feedback and discussion of this approach to authentication, our system designs, and the proposed user study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">BACKGROUND</head><p>In this section, we describe password managers and single sign-on (SSO). We also describe the threat model that motivates our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Password Managers</head><p>Password managers serve three purposes. (1) They help users generate random passwords that satisfy specific password policies while also maximizing entropy. (2) The password manager stores passwords for the user-both generated passwords and those set by the user-in a password vault. This functionality is essential, as it is infeasible for users to memorize many of the randomly generated passwords. To access the passwords in the user's vault, they must input the master password that was used when the vault was created. (3) The password manager can automatically enter the appropriate password into applications the user is authenticating to. All password managers support (2), most support (1), and there is an ongoing debate whether (3) should be supported as it has various security implications <ref type="bibr" target="#b12">[17]</ref>. Many password managers store the password vault in the cloud, allowing users to synchronize this vault to all of their devices. There are many password managers, including password managers built into browsers (e.g., Chrome, Edge, Firefox), browser extensions (e.g., LastPass <ref type="bibr" target="#b3">[7]</ref>), and standalone applications (e.g., LastPass <ref type="bibr" target="#b3">[7]</ref>, 1Password <ref type="bibr">[1]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Single Sign-on (SSO)</head><p>Single sign-on allows users to authenticate to a relying party (RP) by way of an identity provider (IDP). First, a user authenticates to their IDP and then specifies the RP to which they want to prove their identity. Second, the IDP creates a signed attestation of the user's identity-this attestation is time-bounded and specifies the RP it is intended for-and sends it to the user. Third, the user presents the signed attestation to the RP. Finally, the RP validates the attestation using a long-term secret shared between the RP and IDP. There are many SSO systems <ref type="bibr" target="#b0">[2,</ref><ref type="bibr" target="#b2">6,</ref><ref type="bibr">8,</ref><ref type="bibr" target="#b1">3,</ref><ref type="bibr" target="#b5">10,</ref><ref type="bibr" target="#b11">16,</ref><ref type="bibr" target="#b4">9,</ref><ref type="bibr" target="#b10">15]</ref>, with the two most widely-deployed SSO systems being Google OAuth 2.0 <ref type="bibr">[5]</ref> and Facebook Connect <ref type="bibr">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Threat Model</head><p>Our threat model includes four parties: the user, the relying party, an identity provider or cloud-based password manager, and the adversary. The adversary's goal is to impersonate the user to the relying party, without alerting any other party to this impersonation. There are several approaches the adversary can use to accomplish this goal:</p><p>1. The adversary can directly steal one or more of a user's passwords (e.g., phishing).</p><p>2. The adversary can steal the password database from a relying party and conduct an offline attack against the user's password. If password sharing occurs, an attack against one relying party might compromise multiple relying parties.</p><p>3. The adversary can steal the password database from the identity provider or cloud-based password manager and conduct an offline attack against the user's master password.</p><p>In each case, we consider attacks where the attacker has long-term access to the other parties as out of scope (e.g., key logger, insider threat at the identity provider). While centralizing password management mitigates the second attack vector, it potentially magnifies the damage of the first and third attack vectors. Specifically, if the attacker obtains the master password for the password manager or SSO, they will gain access to a multitude of applications. Alternatively, if the identity provider or cloud-based password manager are not fully trusted, it is also possible for these services to impersonate the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">APPLICATION-SPECIFIC PASSWORDS</head><p>If a password manager's password or an account password for SSO-hereafter also referred to as a master password for consistency-is compromised, all of the user's other applications immediately become compromised. 1 This is a natural consequence of consolidating all authentication data into a central party.</p><p>To partially mitigate the damage of a compromised master password, it is possible to decrease the level of centralization, and introduce an additional application-specific password for high-value sites. With application-specific passwords, the compromise of a user's high-value site only occurs when there is a compromise of both the master password and the site's application password. The design of any application-specific password system must ensure that the loss of a master password does not allow an offline attack against the application-specific password. Instead, the attacker will need to perform an online attack, which can be easily detected, or to also compromise the reliant application. Importantly, this means that the application-specific password must be remembered by the user and cannot be stored by a password manager. Also, application-specific passwords should ideally ensure that any loss of data by the central party does not allow an offline attack against the application-specific password.</p><p>Application-specific passwords are a middle-of-the-road approach between fully centralized (Password Managers, SSO) and fully decentralized password management (every website has its own user-generated and remembered password). Application-specific passwords are only intended to augment centralized approaches in order to limit the effect of a compromised central party by requiring additional online attacks to be carried out against the high-value applications. Specifically, these passwords will likely be much shorter than master passwords, with the user's authentication security being predominantly derived from the protection gained from the central party.</p><p>Florêncio et al. <ref type="bibr" target="#b9">[14]</ref> describe the large chasm that exists between the complexity of passwords that are strong enough to resist an online attack compared to those that only need to resist an off-line attack. Our design addresses these differences by requiring the central party to generate strong passwords resistant to offline attacks and relying on the user to select passwords that thwart online attacks. This is less demanding on the user than requiring them to manage numerous strong passwords and does not require that they place inordinate trust in the central party.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">System Designs</head><p>We have identified five possible designs for adding an application-specific password to password managers and/or SSO.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Application Password</head><p>After authenticating to an application using a password manager or SSO, the application itself could present an entry form for the additional application-specific password. While this approach requires changing the application, it does not require changing password managers or SSO systems. This design does provide protections against a stolen master password or a compromised central party. The biggest drawback of this approach is that applications have to self-identify as high-value, and users will likely not have control of which applications offer this feature and which do not.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Password Manager + Hashing</head><p>The password manager could be modified to require users to enter two passwords for high-value applications. These two passwords would then be hashed together, and the resulting hash presented to the application.</p><p>Importantly, the password manager can generate and/or store only one of the two passwords. The user must generate and remember the application-specific password.</p><p>This design requires modifying the password manager, but not the applications. It provides protections against a compromised master password or password vault. If an RP's password database is stolen, it might be possible to perform an offline attack against that specific password if both the password manager-generated and user-generated passwords are weak.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3">Password Manager + User</head><p>Instead of changing the password manager to mix the application password with the vault-stored password, the user could handle this responsibility. When authenticating, the password manager would fill in the application's password as normal, but then the user would append the application-specific password onto the end of the auto-filled password. The user could also adopt a more complex strategy to mix in the application-specific password. This approach has the same properties as Password Manager + Hashing, except that it does not require modifying the password manager. There is the potential for significant usability challenges, as the password manager might attempt to remember the full password (vault-stored password + user-entered password) in order to auto-fill that value in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4">Modified SSO Protocol</head><p>The SSO protocol can be modified to incorporate information about the application-specific password into the SSO signed attestation from the identity provider. The application could then use a verifier stored locally, and not at the SSO, to verify the application-specific part of the signed attestation. This approach requires modifying both the application and the SSO server. This approach provides protection against theft of the master password or compromise of the SSO server. Unlike password manager-based approaches, even if the data stored at the SSO is stolen, it cannot be used by itself to conduct an offline attack against the user's credentials for that application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.5">SSO + Challenge</head><p>The SSO authentication flow could be modified to include an application-specific password entry screen following entry of the SSO password. The identity provider presents the screen and verifies the application-specific password. This approach obviates the need to modify applications. While it does protect against the loss of a master password, compromise of the identity provider makes it possible for an attacker to conduct an offline attack against both the master password and application-specific passwords.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">ANALYSIS</head><p>In this section, we analyze the the security 2 , deployability, and usability of the five design alternatives. <ref type="table" target="#tab_1">Table 1</ref> summarizes the key differences between these approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Security</head><p>All five system designs succeed at preventing a lost master password from immediately compromising high-value applications. In each case, after the compromise of a master password, the attacker will still need to conduct an online attack against the application-specific passwords. The security of the application would then depend on its ability to detect and defend against online attacks.</p><p>Of the five systems, only SSO + Challenge fails to protect high-value sites when the password database is stolen from the SSO. In this case, the stolen password database can be used to perform an offline attack against the applicationspecific passwords. This limitation is a trade-off for this design not requiring modification of applications.</p><p>While outside the threat model, our system designs also help prevent against a malicious central party impersonating the user. In this case, the central party must conduct an online attack against the application-specific passwords (except in the case of SSO + Challenge). Similarly, an attacker with non-administrative access to a user's unlocked device (e.g., laptop left open at a table) cannot access the user's high-value sites because they are protected by an application-specific password that cannot be "remembered" by the system for later use.</p><p>Password manager-based approaches (including existing password managers) have a limitation in that a compromise of a given application is sufficient to allow impersonation to that application. Specifically, an adversary that steals a password database can conduct an offline attack to guess the users' passwords. These stolen passwords can then be used to impersonate users at the previously-compromised application. Password managers still improve on vanilla passwords in that the compromised password will not be used for other applications. Also, in many cases password managers will have generated passwords that can survive most offline brute-force attacks. Regardless, this is weaker than SSO-based approaches which do not rely on the security of individual applications to protect authentication.</p><p>Though centralized authentication systems create a single point of failure, they also provide a single point of entry, meaning that access to the central store is necessary to access any associated account. Security enhancements to the central store necessarily increase the security of all associated accounts. Analyzing the specific effects of centralized security modifications on associated accounts is beyond the scope of this proposal and is left for future investigation. However, we note that mitigating the consequences of a single point of  failure with an application-specific password does not remove the security benefits gained with a single point of entry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Deployability</head><p>One hurdle to deploying application-specific passwords is the need to modify existing systems. The first set of columns in <ref type="table" target="#tab_1">Table 1</ref> demonstrates the different deployability characteristics of each system design.</p><p>The Application Password design can be unilaterally deployed by applications without changing password managers or SSO systems. The password manager designs work with existing applications, and the Password Manager + User design also requires no modification to existing password managers either. This comes with a trade-off that the password manager might try to memorize the application-specific password, a potentially significant usability issue. Finally, the SSO designs require changing SSO, but by relaxing the security guarantees SSO + Challenge can be implemented without a change to existing applications.</p><p>The deployment of both Application Password and Modified SSO Protocol are limited by the need to modify applications. As there are a large number of applications, it is unlikely that all will be modified. Partial deployment limits user choice. Users may be unable to protect all of their high-value sites. Also, some applications may not let users elect to forgo the additional password for less important accounts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Usability</head><p>There are many potential usability hurdles for applicationspecific passwords. For example, while it was users that suggested application-specific passwords, do they find these extra passwords overly burdensome to use on a consistent basis? Alternatively, how do users select their applicationspecific passwords? Are they unique from each other? How much entropy do they provide? We propose several user studies to answer these questions and evaluate their security implications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Attitude and Acceptability Study</head><p>We plan to conduct user interviews that explore user's attitudes towards centralized password management and application-specific passwords. Additionally, we will review the five possible designs with the users, and determine which they find most acceptable. We will also work with users to establish possible UI designs. Finally, we will validate the results from the interviews with a large Mechanical Turk survey.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Laboratory Usability Studies</head><p>We will conduct a laboratory user study to validate that users truly do prefer application-specific passwords to existing systems and to obtain user feedback on prototype implementations of the five designs. These usability studies will leverage the methodology of Ruoti et al. <ref type="bibr" target="#b15">[20]</ref>-multi-round, within-subject evaluations of multiple systems, where systems are compared using the System Usability Scale (SUS) <ref type="bibr" target="#b7">[12]</ref>. In these studies, we will ask post-study questions related specifically to application specific passwords.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.3">Longitudinal Studies</head><p>There is a strong risk that users might enjoy application-specific passwords in a laboratory setting but would not use them in a real-world setting. To evaluate the long-term acceptability of application-specific passwords, we plan to conduct a longitudinal study of the system design rated as most usable in the laboratory studies. We will have participants use the system over the course of a month, measuring how many sites they protect with an application-specific password and how often they authenticate to those sites. During the study, we will ask users to report their experiences in an authentication journal.</p><p>We will also conduct post-study debriefing interviews to gather valuable qualitative feedback.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">RELATED WORK</head><p>Ruoti et al <ref type="bibr" target="#b15">[20]</ref> evaluated several single sign-on systems (Google OAuth 2.0, Facebook Connect, and Mozilla Personas). They found that users preferred these systems to alternative authentication schemes. Still, participants in the study expressed concern that a compromise of the identity provider would result in the immediate compromise of all of their other applications. While participants were willing to accept that for low-value applications, they indicated that they wanted more security for their high-value applications. Earlier, Sun et al. <ref type="bibr" target="#b16">[21]</ref> conducted a user study of OpenID, a single sign-on system. Some participants in that study also expressed concern that the identity provider represents a single point of failure.</p><p>Ross et al. <ref type="bibr" target="#b14">[19]</ref> introduced PwdHash, a password scheme that hashes a user's master password with the domain name, producing a unique password for each domain. To trigger this hashing, users preface their password with "@@". This approach does not prevent offline attacks against the user's password. In contrast, our system design uses a second user-supplied application-specific password, and not a static domain name, to augment the master password.</p><p>Llewellyn-Jones and Rymer <ref type="bibr" target="#b13">[18]</ref> describe an approach to defeating PwdHash's client-side hashing of the user's password and the domain name of the website. Our Password Manager + Hashing system design will need to consider how to prevent a similar attack.</p><p>Chiasson et al. <ref type="bibr" target="#b8">[13]</ref> explored the usability of password managers by conducting a 26-person user study comparing PwdHash and Password Multiplier. The study discovered significant usability issues with both systems even though usability was considered during system design, illustrating the importance of user studies. The goal of our proposed user study is to determine whether our proposed systems have similar usability flaws.</p><p>As indicated by Bonneau et al. <ref type="bibr" target="#b6">[11]</ref>, Two-factor authentication systems offer similar and in many cases stronger security protections; however, two-factor authentication can introduce a non-negligible usability burden on users. One of the driving factors for using an application specific password was to retain as much usability gained by password managers and SSO over traditional passwords. Ultimately, a compromise must be made between usability, deployability, and security. Our proposed systems sacrifice potential security benefits to retain significant usability and deployability characteristics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION</head><p>While the centralization of password management into password managers and single sign-on (SSO) comes with strong benefits, it also magnifies the damage of a user having their remaining password-their master password-compromised (e.g., phishing attack). Enhancing centralized password management with application-specific passwords for high-value applications can mitigate this damage. This approach prevents the loss of a master password from compromising all applications, instead of requiring that the attacker conducts online attacks against individual applications.</p><p>In this paper, we describe five possible system designs for application-specific passwords-Application Password, Password Manager + Hashing, Password Manager + User, Modified SSO Protocol, and SSO + Challenge. We also evaluate the security and deployability trade-offs for each of these designs. Finally, we describe several planned users studies to explore the acceptance and usability of application-specific passwords.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 1 : System Design Comparison</head><label>1</label><figDesc></figDesc><table></table></figure>

			<note place="foot" n="1"> For simplicity, we assume that all accounts are managed by either a password manager or SSO.</note>

			<note place="foot" n="2"> The security analysis assumes adherence to best practices when choosing passwords resilient to online attacks.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cardspace</surname></persName>
		</author>
		<ptr target="http://msdn.microsoft.com/CardSpace" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<ptr target="http://www.jasig.org/cas" />
	</analytic>
	<monogr>
		<title level="j">Central Authentication Service</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Higgins</surname></persName>
		</author>
		<ptr target="http://www.eclipse.org/higgins/" />
		<title level="m">Open Source Identity Framework</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lastpass</surname></persName>
		</author>
		<ptr target="https://www.lastpass.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Openid</surname></persName>
		</author>
		<ptr target="http://openid.net/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shibboleth</surname></persName>
		</author>
		<ptr target="http://shibboleth.internet2.edu/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The quest to replace passwords: A framework for comparative evaluation of web authentication schemes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bonneau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Herley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Van Oorschot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Stajano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Security and Privacy (SP)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">SUS-a quick and dirty usability scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Brooke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Usability Evaluation in Industry</title>
		<meeting><address><addrLine>Boca Raton, FL</addrLine></address></meeting>
		<imprint>
			<publisher>CRC Press</publisher>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A usability study and critique of two password managers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chiasson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Van Oorschot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Biddle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An administrator&apos;s guide to internet password research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Florêncio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Herley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Van Oorschot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">28th Large Installation System Administration Conference (LISA14)</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">The oauth 2.0 authorization protocol. draft-ietf-oauth-v2-18</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hammer-Lahav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Recordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hardt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Ts&apos;o. The Evolution of the Kerberos Authentication Service</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kohl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Neuman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Spring EurOpen Conference</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The emperor&apos;s new password manager: Security analysis of web-based password managers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Akhawe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Cracking pwdhash: A bruteforce attack on client-side password hashing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Llewellyn-Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Rymer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 11th International Conference on Passwords</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Stronger password authentication using browser extensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Miyake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Authentication melee: A usability analysis of seven web authentication systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ruoti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Roberts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Seamons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee</title>
		<meeting>the 24th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">What makes users refuse web single sign-on?: An empirical investigation of OpenID</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-T</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Pospisil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Muslukhov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dindar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hawkey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Beznosov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Usable Privacy and Security</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
