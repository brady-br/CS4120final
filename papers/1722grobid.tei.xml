<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:08+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Lowering the Barriers to Industrial Control System Security with GRFICS</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Formby</surname></persName>
							<email>djformby@gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit1">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit2">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Milad</forename><surname>Rad</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit1">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit2">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raheem</forename><surname>Beyah</surname></persName>
							<email>rbeyah@ece.gatech.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit1">Georgia Institute of Technology and Fortiphyd Logic</orgName>
								<orgName type="institution" key="instit2">Georgia Institute of Technology</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Lowering the Barriers to Industrial Control System Security with GRFICS</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Despite the abundance of free online resources and increased research into innovative educational techniques, the shortage of cybersecurity skills in the workforce continues. The skills gap in the specific area of industrial control system (ICS) security is even more dismal due to the higher barriers to entry raised by the exclusive use of expensive, proprietary hardware and software and the inherent dangers of manipulating real physical processes. To help beginners in ICS security overcome these barriers to entry we developed a graphical realism framework for industrial control simulations (GRFICS). GRFICS virtualizes entire ICS networks, from the operator interface down to realistic simulations of the physical process visualized in a 3D game engine. Using this framework, students can practice exploiting common ICS vulnerabil-ities and vividly see the physical impact in the visualiza-tion of the process. After gaining a better appreciation of the close relationship between the cyber and the physical worlds in ICS networks, students can then practice hardening the network against such attacks. This free and open-source framework can be used as the basis for formal classroom instruction, ICS-specific CTF competitions , or for independent study.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Thanks to the power of virtualization, the barrier to entry for general cybersecurity is lower today than it has ever been. Anyone with a computer and Internet connection can download the intentionally vulnerable Metasploitable <ref type="bibr" target="#b5">[8]</ref> virtual machine (VM), a Kali Linux VM filled with offensive security tools, and begin getting hands-on practice with common security problems all for free. For even more realistic practice and less than $100, multiple companies offer complete online vulnerable networks for students to hone their penetration testing skills. However, until now there has been no equivalent for the area of industrial control system (ICS) security for students to freely learn about the unique challenges faced when attacking and defending ICS networks. In order to get hands-on experience in ICS security, students typically must pay thousands of dollars for on-site training or for purchasing their own equipment and software to practice on. Even after those expenses it is difficult to truly appreciate the relationship between a cyber attack and a potential physical impact since it is too expensive and time-consuming to repeatedly cause kinetic damage to some physical process.</p><p>Therefore, in order to lower these barriers to entry for ICS security, we are releasing the first free and complete virtual ICS network <ref type="bibr" target="#b3">[4]</ref> including every level from the human machine interface (HMI) in the control room, to the programmable logic controller (PLC) controlling the plant, down to a realistic simulation of the physical process itself visualized using the popular Unity 3D game engine.</p><p>The significant contributions of this research include:</p><p>• Conversion of the simplified Tennessee Eastman challenge process simulation into a more portable and accessible format</p><p>• Novel 3D visualization of a dynamic chemical process simulation to increase engagement and realism</p><p>• The most complex and complete virtualization of an ICS network to date, released free and open-source</p><p>• Modular framework for easy expansion or conversion to other physical processes and protocols</p><p>The remainder of this paper is organized as follows. Related work in ICS testbeds and virtualizing ICS networks is reviewed in Section 2 followed by a brief overview of ICS networks and the specific lessons in ICS security this framework intends to help teach in Section 3.1. Section 4 details the various pieces of the framework including the process simulation and visualization, remote I/O modules, virtual PLC, and operator HMI. Finally, example offensive and defensive exercises are walked through in Section 5 followed by conclusions and future work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Most of the related work into ICS testbeds has been focused on building real hardware testbeds primarily for the purpose of conducting high-fidelity research rather than for facilitating education. The most extensive examples have been produced by the Singapore University of Technology and Design where researchers have built a six-stage water treatment facility <ref type="bibr" target="#b20">[27]</ref>, water distribution network, and small scale electric power grid network <ref type="bibr" target="#b6">[11]</ref>. The National SCADA Testbed <ref type="bibr">[9]</ref> developed by the Department of Energy is another example of a large scale physical testbed including full scale electrical substations and transmission lines. Several other smaller physical testbeds have been built as well <ref type="bibr" target="#b16">[23]</ref>,but as useful as these physical testbeds are for research, they suffer from extreme scalability limitations for training new security practitioners. Therefore simulated ICS testbeds are necessary to truly lower the barrier to entry in a scalable manner.</p><p>Unfortunately, most of the research into simulated ICS testbeds has been severely limited in scale and fidelity. Several works <ref type="bibr" target="#b15">[22]</ref> [29] <ref type="bibr" target="#b21">[28]</ref> have simply used Omnet++ to examine basic attacks such as denial of service (DoS) on relatively simple physical processes. Others have implemented more detailed physical simulations <ref type="bibr" target="#b13">[20]</ref>  <ref type="bibr" target="#b18">[25]</ref> and larger scale simulations of the power grid <ref type="bibr" target="#b12">[19]</ref> but still suffer from scalability due to the requirements of proprietary software such as Simulink or cluster computing resource requirements.</p><p>One of the most significant barriers to high fidelity large scale virtualization of ICS networks was the lack of free virtualized alternatives to hardware programmable logic controllers (PLCs). Thankfully, a project began in 2014 to develop an open source PLC that can run on an open source hardware design or in pure software <ref type="bibr" target="#b10">[17]</ref>. Expanding on this project the researchers have also begun developing virtual ICS networks using the OpenPLC <ref type="bibr" target="#b9">[16]</ref>. However, the physical processes used in these virtual networks are still relatively small and require Simulink/Matlab, which limits their usability. Furthermore, the physical processes are only visualized in 2D human machine interfaces (HMIs) and line graphs that are not immersive and convincing. In summary, the work proposed here improves on previous work by providing a realistically complex physical simulation that is convincingly visualized in 3D graphics, provides all the necessary components for students to practice common ICS attacks and defenses, and is available completely </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Background</head><p>To understand the GRFICS framework, we first must provide a brief overview of ICS terminology and basic structure, as well as the most important differences between ICS networks and IT networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview of ICS Networks</head><p>The term "industrial control system" is extremely broad and includes SCADA (supervisory control and data acquisition) systems used in power distribution, DCS (distributed control systems) used in oil refineries, and even building control systems. They all vary slightly in their architecture and specific devices, but they all share the same high-level structure illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>, where a controller or controllers continuously read process measurements from sensors, report the measurements to some kind of human machine interface (HMI), and use the measurements with some combination of user input from the HMI and its own preprogrammed control logic to update the physical actuators, such as a valve or relay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">ICS Security Lessons</head><p>One of the causes for the skills gap in ICS security and the motivation for this work is the number of differences between traditional IT security and ICS security. In traditional security, the order of priorities is always given as confidentiality, integrity, and availability in that order. However, in ICS networks the priorities are essentially reversed. Confidentiality of the process measurements being sent over the local network at a power generation facility is the least of the operators' worries. On the other hand, ensuring that the facility remains available to keep the lights on is their top priority. These differences in priorities influence the design of both ICS devices and network architectures that lead to unique challenges in defending and attacking ICS networks that this framework aims to teach to a broader audience.</p><p>ICS Endpoint Insecurity. In IT security, there is a variety of tools and strategies for securing endpoints including frequent patching, host based firewalls, antivirus software, strong password enforcement, and support for secure communication protocols. In ICS security, due to the focus on availability and high uptime requirements, devices may only be patched once a year, replaced every 10-20 years, and are typically shipped with no passwords enabled by default and no password strength policy enforcement. Furthermore, due to the low powered hardware, devices are incapable of running antivirus software or even supporting authenticated network protocols. As a result, the only defenses a typical ICS endpoint has is the "security through obscurity" gained from running proprietary closed-source software and protocols. The tools provided in this work help teach students these lessons by having them practice exploiting data and command injection against unauthenticated protocols, exploiting buffer overflows in control system protocols, and brute forcing weak passwords.</p><p>Importance of Network Defense. Since the ICS endpoints themselves are essentially "insecure by design" and incapable of being upgraded, the security of an ICS network relies on having strong defense-in-depth built into the network. Specifically, the NIST Guide to ICS Security <ref type="bibr" target="#b24">[31]</ref> stresses the importance of segmenting networks into enclaves, writing strong firewall rules, and using network intrusion detection systems. The framework proposed in this paper helps students learn these lessons by enabling them to practice writing firewall rules to segment the ICS network and writing intrusion detection rules to detect common ICS attacks.</p><p>ICS Cyber Kill Chain. Another important difference between ICS and IT networks is the end goals of the attacker and the number of steps necessary to reach them. In IT networks, the generally accepted "Cyber Kill Chain" involves reconnaissance, weaponization, delivery, exploitation, installation, command and control, and finally actions on the objective <ref type="bibr" target="#b17">[24]</ref>. However, in the ICS world, the steps leading up to actions on the objective are only half the battle. The ICS Cyber Kill Chain <ref type="bibr" target="#b11">[18]</ref> involves two stages, where the first stage closely resembles the original Cyber Kill Chain. However, in Stage 2 the attackers must develop an "exploit" of the physical system as well, on top of the series of exploits used on computing systems. In this physical exploit phase, attackers must understand the physical process at the victim facility, research the built-in safety checks and redundancies specific to that victim, and develop a strategy for bypassing those obstacles and achieving whatever their physical goal is. This paper helps teach this lesson by providing students with a nontrivial physical process simulation that they must study in order to design an attack that causes significant physical damage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">GRFICS</head><p>The Graphical Realism Framework for Industrial Control Simulations (GRFICS) was designed to be modular to allow for easy customization and expansion. The ICS components including the HMI, PLC, and I/O modules are all connected using standard ICS network protocols, allowing for the PLC or HMI to be swapped out with high-fidelity real ICS devices. The physical process simulation is then tied to the 3D visualization and the I/O module layer using an intuitive JSON <ref type="bibr">[5]</ref> based network API, documented in more detail in Section 4.1.2.</p><p>In this initial version of GRFICS, we are virtualizing a chemical process control network with a flat, unsegmented network architecture illustrated in <ref type="figure" target="#fig_1">Figure 2</ref>. <ref type="figure">Figure 3</ref> illustrates how GRFICS virtualizes the whole control network with three virtual machines and allows users to practice common ICS attacks while verifying the physical impact in the 3D visualization. The remainder of this section describes each module in further detail. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Physical Process Simulation</head><p>The physical process simulation comprises the simulation backend, the simulation API, the 3D visualization, and the IO modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Simulation Backend</head><p>The simulation backend provides efficient, high-fidelity calculation of the current state of the simulated process. In this case, the process being simulated is a simplified form of the process control problem proposed by the Eastman Chemical Company in 1992 <ref type="bibr" target="#b14">[21]</ref>. In the original paper, the researchers provided a Fortran code simulation of an industrial chemical process involving two exothermic reactions, two byproduct reactions, a total of 12 control valves to manipulate, and a total of 41 output measurements to monitor. The chemical reactions were nonlinear and optimal control of the process required keeping pressures and temperatures within safe ranges in the presence of disturbances while balancing the competing requirements to minimize costs and maximize efficiency.</p><p>In order to focus on a certain challenging aspect of the process, a researcher at the University of Washington released a simplified version of the process a year later in 1993 <ref type="bibr" target="#b23">[30]</ref>. This version simplified the process into one two-phase chemical reactor/separator illustrated in <ref type="figure" target="#fig_2">Figure 4</ref> that included a total of four control valves to manipulate and ten output measurements to monitor. When designing a control system for this process, the reactor pressure must be kept at a safe level while maximizing the efficiency of the chemical reaction and minimizing the components being wasted through the purge valve. For GRFICS, we converted this simplified simulation from the original Fortran and Matlab into a more portable and standalone C++ program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Simulation API</head><p>The simulation backend needed a simple and efficient way for reporting the process measurements to the 3D visualization and I/O modules, and receiving updates on the control valve positions. To achieve this, GRFICS communicates over TCP port 55555 using a simple, human readable JSON based API that can be extended for use with other process simulations. For the 3D visualization or the I/O modules to obtain the current state of the chemical process, they simply send the JSON read request shown in <ref type="figure" target="#fig_3">Figure 5a</ref>. The simulation server responds with a JSON object <ref type="figure" target="#fig_3">(Figure 5b</ref>) containing the name of the process being simulated and the current values of all the output and state variables in the process. When the I/O modules receive a command to change a valve position, they send a JSON write request illustrated in <ref type="figure" target="#fig_4">Figure 6</ref> to tell the simulation server to update the valve setpoints. The server then responds with another object like <ref type="figure" target="#fig_3">Figure 5b</ref> showing the new state of the process based on the new valve positions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">3D Visualization</head><p>One of the primary weaknesses of all previous work on ICS network virtualization is the lack of engaging realism for the physical process. To date all other attempts have simply used basic line graphs of critical process measurements, or the same human machine interfaces graphics. There was no easy and interesting way for students to see the effects of injecting false data into the network and blinding the operator's HMI or for students to appreciate the physical consequences of their attacks.</p><p>Inspired by the past successes with flight simulators and military training simulators <ref type="bibr" target="#b1">[2]</ref>, the GRFICS framework uses a 3D game engine to visualize the true state of the physical process with more engaging realism. For the simplified Tennessee Eastman challenge process being simulated here, GRFICS uses the Unity 3D game engine, which is used by more mobile game developers than any other third party game engine software <ref type="bibr" target="#b4">[6]</ref>.</p><p>In Unity 3D, developers can easily create games by dragging and dropping 3D objects into the current scene and write C# or Javascript code to describe how the object behaves and is updated each time a frame is rendered. For this version of GRFICS, we purchased premade 3D models of a warehouse environment, industrial reactor, pipes, and valves and used them as building blocks to create a realistic chemical manufacturing facility. The Unity application connects to the simulation backend server, requesting updated measurements for each frame, and displaying them over each component and in a side panel summary.</p><p>As students practice attacking the virtual chemical process control network, they can compare the true state of the process in <ref type="figure">Figure 7</ref> side by side with the HMI screen that the operator at the victim facility would see, discussed in more detail in Section 4.3. When a student </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">I/O Modules</head><p>The I/O modules are the pieces that tie the process simulation to the virtual ICS network. On the same VM as the simulation backend and visualization, simple Modbus servers are created that listen on many different IP address aliases to appear as multiple devices on the network. Each Modbus server continuously polls the simulation backend for current measurements and reports different measurements over Modbus. For example, one Modbus I/O server reports the position of the product valve, the flow rate through it, and accepts Modbus write commands to update the position of the valve.</p><p>Since Modbus, and virtually all other ICS network protocols, are unauthenticated, students can practice injecting commands directly to the I/O modules, launching man-in-the-middle attacks to report false data, and designing firewall rules and intrusion detection rules to protect the insecure-by-design I/O. Due to the low-fidelity simplifications, more advanced attacks like buffer overflows and firmware reverse engineering are not supported at this level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Programmable Logic Controller</head><p>The programmable logic controller (PLC) component of the framework continuously polls the Modbus IO for the current state of the process, executes a simple control logic program to determine necessary control actions, and sends the updated control valve positions to the Modbus IO. Additionally, the PLC accepts control commands from the HMI and responds to read requests for process measurements. In this initial version, we use the Open-PLC project <ref type="bibr" target="#b10">[17]</ref> for the PLC component to keep the en- Additionally, we replace the up-to-date version of the libmodbus library that the PLC uses with an older version vulnerable to buffer overflow attacks. In higher fidelity virtual ICS networks, either hardware PLCs can be used in the loop or proprietary software PLCs running in VMs can be used.</p><p>The PLC program itself implements the multi-loop control strategy proposed in the original paper <ref type="bibr" target="#b23">[30]</ref> using a combination of PID (proportional-integral-derivative) controllers for the different process measurements. To program PLCs in the real world, engineers must develop the PLC program on a separate engineering workstation and then upload the program to the PLC. In this work, we use the PLCOpen Editor software 9 to create the program and then upload the program using OpenPLC's web interface, <ref type="figure" target="#fig_0">Figure 10</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Human Machine Interface</head><p>The last piece of the GRFICS framework is a combined human machine interface (HMI) and engineering workstation. HMIs are typically 2D graphical interfaces for operators of the ICS facility to monitor key measurements of the process and occasionally interact with the process using Start/Stop buttons or updating setpoints. In this version of GRFICS, we used an open-source HMI product under active development called AdvancedHMI <ref type="bibr" target="#b0">[1]</ref>. Using the AdvancedHMI design environment, we developed an HMI <ref type="figure" target="#fig_0">(Figure 11</ref>) for the simplified Tennessee Eastman Chemical process being simulated. Operators can use the Stop button to send the process into a "safe" state, restart it with the "Run" button, and update the product flow setpoint with the text box entry. Note that in real world facilities startup and emergency shutdown procedures are usually more complicated to ensure a safe and gradual change of state.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Example Exercises</head><p>To encourage adoption of GRFICS for learning and teaching ICS security, we now provide a brief overview of suggested offensive and defensive exercises. In these exercises, we use several VirtualBox VMs running Ubuntu Desktop for the simulation VM and HMI VM, and Ubuntu server for the PLC VM. We configured a host-only networking adapter to create a virtual network where all devices can communicate with one another, and the host machine can capture the network traffic for review.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Offense</head><p>For the offensive exercises, we assume the attacker has successfully phished an employee on the corporate network, compromised their machine, and is attempting to use it to pivot into a poorly protected control network to perform reconnaissance and ultimately cause physical damage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Password Cracking</head><p>To allow for easy maintenance on the control system by third party contractors or for remote monitoring of the process, many facilities have remote access enabled to machines on the plant floor. Unfortunately, this is not always securely implemented with two-factor authentication or even strong password policies. To gain the initial foothold on the control system network, students can practice cracking weak SSH passwords on the HMI VM using tools such as Ncrack or Hydra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">ICS Reconnaissance</head><p>Once they have cracked the weak SSH password and gained access to the combined HMI and engineering workstation, students can begin reconnaissance on the physical process of the facility they are attacking. This can include exploring the machine to look for process diagrams <ref type="figure" target="#fig_2">(Figure 4)</ref>, PLC program files <ref type="figure" target="#fig_6">(Figure 9</ref>), and the HMI screen <ref type="figure" target="#fig_0">(Figure 11)</ref>. Students can also perform standard network scans with Nmap <ref type="bibr">[10]</ref> to see how many devices are on the control network, perform man-in-themiddle (MITM) attacks with Ettercap <ref type="bibr" target="#b2">[3]</ref> to study how they are communicating, and examine the devices deeper with free Modbus scanners. Note however that in the real world some legacy devices are so fragile that a standard Nmap scan can overwhelm them with bandwidth and concurrent TCP connections causing them to crash.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Modbus Command Injection</head><p>After students have identified all Modbus devices, gained a basic understanding of the physical process, and determined the mapping between addresses and physical measurements, they can begin attacking the physical process. One of the most straightforward attacks takes advantage of the unauthenticated Modbus protocol and simply sends direct Modbus commands to the IO devices or the PLC. Students can either practice writing their own scripts to send the malicious commands, or simply use an existing tool like QModMaster <ref type="bibr" target="#b7">[13]</ref>.</p><p>However, this simple approach has a few drawbacks. First, injecting commands alone would likely be detected by the operators monitoring the HMI. To be successful the attacker would also need to be performing a MITM attack blinding the HMI and/or the PLC. Second, depending on the safety checks built in to the PLC logic, it may be difficult or impossible to achieve significant damage without also sending false data to the PLC. Finally, these attacks could be easily detected and prevented with basic intrusion detection systems and network segmentation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.4">PLC Program Modifications</head><p>Another approach to achieving a successful physical attack on the system would be to modify the PLC programming, as Stuxnet <ref type="bibr" target="#b19">[26]</ref> and Triton <ref type="bibr" target="#b8">[15]</ref> did. Unfortunately, most PLCs have weak access control with password authentication disabled by default and no password strength policies, making it trivial to log in and reprogram the PLC using the legitimate engineering software. OpenPLC is no exception to this rule, so students can practice modifying the program in the PLCOpen Editor and uploading new malicious programs to the Open-PLC's web interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.5">Modbus Buffer Overflow</head><p>Finally, the abundance of legacy devices and slow patching cycle in ICS networks means there is a high chance of protocol vulnerabilities in the end devices. Buffer overflow vulnerabilities are one of the most common and typically arise from accepting user input strings without proper bounds checking. Attackers crafting an exploit for these vulnerabilities have to ensure that their payload does not contain any bad characters (such as whitespace) that would terminate the string early. However, ICS protocols are primarily machine-to-machine communication and instead of accepting human readable strings they exchange raw binary information, which makes generating malicious payloads even easier.</p><p>Even in the open source community, vulnerabilities can remain unpatched for far too long. For example, a buffer overflow vulnerability was publicly reported in the libmodbus library <ref type="bibr">[7]</ref>, a free open-source Modbus implementation, in September 2011 and was not fixed until two years later. The OpenPLC project uses an updated and patched version of this library, but for GRFICS we reverted the library back to a older vulnerable version, with relevant code snippets of the vulnerability illustrated in <ref type="figure" target="#fig_0">Figure 12</ref>.</p><p>The specific vulnerability stems from the library allocating a fixed amount of memory for every response, and not performing the necessary bounds checking to ensure that it doesn't try to respond with too much data. This means that sending a read request for data longer than 260 bytes would result in the library overflowing the buffer and overwriting the return address with whatever data had been requested. In order for attackers to control this data, and thereby control the return address, they must use a lesser known Modbus function code that first writes arbitrary data to a specific address range and then immediately reads data from a specified address range. With the right combination of write and read address ranges, attackers can craft a reliable exploit that achieves arbitrary code execution. This exercise provides students with a way to practice and learn about buffer overflow vulnerabilities in the context of ICS networks and then use the exploit to attempt to cause physical damage to the process. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Defense</head><p>In this section we provide a brief walkthrough of defenses that can be deployed to prevent and mitigate the attacks explained in the previous section. For these defensive exercises, we assume that the defending facility has an extremely limited budget and can only deploy a single unified threat management(UTM) appliance/router on the control network to implement firewall and intrusion detection rules. Again, to keep GRFICS completely free and open-source we use the OpenWrt project <ref type="bibr">[12]</ref>, an embedded Linux OS for routers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Network Segmentation</head><p>Network segmentation is one of the first recommendations for increasing ICS network security and involves segregating network nodes into zones based on functionality and trust level, only allowing communication between zones or nodes that absolutely need it. This makes it significantly harder for attackers to expand their foothold throughout the network and to make direct attacks on the physical process. For these exercises, students can practice separating the nodes in the GRFICS framework into subnets based on the hierarchies described in the ISA-95 standard and illustrated in <ref type="figure" target="#fig_0">Figure  13</ref>. Firewall rules can be applied using raw iptables rules or OpenWrt's graphical interface to whitelist nodes and protocols.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Intrusion Detection and Prevention</head><p>Network segmentation makes it significantly harder for an attacker to breach the control network, but not impossible. To prevent the attacker from causing any physical harm, defenders need to be able to quickly detect the intrusion and can even implement automated defenses to prevent some of the damage.</p><p>While there are a variety of companies selling ICSspecific intrusion detection (IDS) and prevention systems  <ref type="bibr">[14]</ref> is a popular free and open-source solution for students to practice learning what such systems are capable of. Using Snort, students can write rules to detect the various attacks they practiced in Section 5.1. For example, Snort rules can be written to alert operators of attackers performing reconnaissance by detecting suspected SSH password guessing, network scanning, and Modbus scanning. With a little reverse engineering work, students can also write rules to detect when new programs are uploaded to the PLC and when the PLC is started and stopped. Finally, Snort provides intrusion prevention functionality to actively block certain packets if it matches certain rules. Using Snort's intrusion prevention functionality, students can write rules to block the vulnerable Modbus function code entirely or only block it if an exploitation attempt is detected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions and Future Work</head><p>The shortage of skills in ICS security lags even further behind traditional cybersecurity due to much higher barriers to entry. While there are plenty of options for handson practice with network penetration testing and defense, none of them help teach ICS-specific skills. To address this need, we developed the GRFICS framework for virtualizing entire ICS networks including realistic physical processes simulations, which is visualized using the Unity 3D game engine to increase realism and engagement. We then outlined example exercises students can use to get hands-on experience both attacking and defending ICS networks and physical processes. In future work we will continue developing ICS simulations and visualizations for a broader range of applications, such as water treatment facilities and discrete manufacturing, and expand the virtual network with other common components, including process historians.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: High level structure of ICS network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Network Diagram for Virtualized Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Piping &amp; Instrumentation Diagram (P&amp;ID) for the simplified Tennessee Eastman Challenge Process</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: JSON API Examples</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: JSON API Update Inputs Example</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Pressure Limits Exceeded</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: PLCOpen Editor</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Operator Human Machine Interface (HMI)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Figure 12: Code snippets of libmodbus buffer overflow vulnerability</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Segmented network architecture according to Purdue Reference Model</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Advancedhmi</surname></persName>
		</author>
		<ptr target="https://www.advancedhmi.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>America</surname></persName>
		</author>
		<ptr target="https://www.americasarmy.com/press" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Page</forename><surname>Ettercap Home</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">A graphical realism framework for industrial control simulations</title>
		<ptr target="https://github.com/djformby/GRFICS" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The leading global game industry software</title>
		<ptr target="https://unity3d.com/public-relations" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Metasploitable 2 exploitability guide</title>
		<ptr target="https://metasploit.help.rapid7.com/docs/metasploitable-2-exploitability-guide" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">A one-of-a-kind garden of testbeds</title>
		<ptr target="https://itrust.sutd.edu.sg/testbeds/overview/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Qmodmaster</surname></persName>
		</author>
		<ptr target="https://sourceforge.net/projects/qmodmaster/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<idno>17-352-01</idno>
		<ptr target="https://ics-cert.us-cert.gov/sites/default/files/documents/MAR-17-352-01\%20HatMan\\\%E2\%80\%94Safety\%20System\%20Targeted\%20Malware\_S508C.pdf" />
		<title level="m">hatmansafety system targeted malware</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Virtualization of industrial control system testbeds for cybersecurity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alves</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Morris</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2Nd Annual Industrial Control System Security Workshop</title>
		<meeting>the 2Nd Annual Industrial Control System Security Workshop<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="10" to="14" />
		</imprint>
	</monogr>
	<note>ICSS &apos;16, ACM</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Openplc: An open source alternative to automation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alves</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Buratto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>De Souza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>And Ro-Drigues</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Global Humanitarian Technology Conference</title>
		<imprint>
			<publisher>GHTC</publisher>
			<date type="published" when="2014-10" />
			<biblScope unit="page" from="585" to="589" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">The industrial control system cyber kill chain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Assante</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename></persName>
		</author>
		<ptr target="https://www.sans.org/reading-room/whitepapers/ICS/industrial-control-system-cyber-kill-chain-36297" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The virtual power system testbed and inter-testbed integration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Bergman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nicol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yardley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2Nd Conference on Cyber Security Experimentation and Test</title>
		<meeting>the 2Nd Conference on Cyber Security Experimentation and Test<address><addrLine>Berkeley, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="5" to="5" />
		</imprint>
	</monogr>
	<note>CSET&apos;09, USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Simulation of network attacks on scada systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chabukswar</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sinpoli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Karsai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Giani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Neema</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Davis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In First Workshop on Secure Control Systems</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A plant-wide industrial process control problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Downs</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vogel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Chemical Engineering</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="245" to="255" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
	<note>Industrial challenge problems in process control</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Scada-sst: a scada security testbed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ghaleb</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhioua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Almulhem</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 World Congress on Industrial Control Systems Security (WCICSS)</title>
		<imprint>
			<date type="published" when="2016-12" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Pains, gains and plcs: Ten lessons from building an industrial control systems testbed for security research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Antrobus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Roedig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hutchi-Son</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rashid</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th USENIX Workshop on Cyber Security Experimentation and Test</title>
		<meeting><address><addrLine>Vancouver, BC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
	<note>USENIX Association</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Intelligence-driven computer network defense informed by analysis of adversary campaigns and intrusion kill chains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hutchins</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Clopper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename></persName>
		</author>
		<ptr target="https://www.lockheedmartin.com/\\content/dam/lockheed/data/corporate/documents/LM-White-Paper-Intel-Driven-Defense.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Rocking the pocket book: Hacking chemical plants for competition and extortion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Krotofil</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<ptr target="https://www.energy.gov/sites/prod/files/oeprod/DocumentsandMedia/NSTB_Fact_Sheet_FINAL_09-16-09.pdf" />
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Langner</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
		<ptr target="http://www.langner.com/en/wp-content/uploads/2013/11/To-kill-a-centrifuge.pdf" />
		<imprint>
			<date type="published" when="2013-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Swat: a water treatment testbed for research and training on ics security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mathur</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tippenhauer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">O</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 International Workshop on Cyber-physical Systems for Smart Water Networks (CySWater)</title>
		<imprint>
			<date type="published" when="2016-04" />
			<biblScope unit="page" from="31" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Building a scada security testbed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Queiroz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mahmood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2009 Third International Conference on Network and System Security</title>
		<imprint>
			<date type="published" when="2009-10" />
			<biblScope unit="page" from="357" to="364" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Scadasim:a framework for building scada simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Queiroz</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mahmood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tari</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Smart Grid</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="589" to="597" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Model predictive control of a continuous, nonlinear, two-phase reactor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricker</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Process Control</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="109" to="123" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Guide to industrial control systems (ics) security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stouffer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pillitteri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Lightman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Abrams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hahn</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<ptr target="https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-82r2.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
