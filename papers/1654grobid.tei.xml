<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:06+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Andbot: Towards Advanced Mobile Botnets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cui</forename><surname>Xiang</surname></persName>
							<email>cuixiang@software.ict.ac.cn</email>
							<affiliation key="aff0">
								<orgName type="department">Research Center of Information Security Institute of Computing Technology</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fang</forename><surname>Binxing</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Research Center of Information Security Institute of Computing Technology</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yin</forename><surname>Lihua</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Research Center of Information Security Institute of Computing Technology</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liu</forename><surname>Xiaoyi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Research Center of Information Security Institute of Computing Technology</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zang</forename><surname>Tianning</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Research Center of Information Security Institute of Computing Technology</orgName>
								<orgName type="institution">Chinese Academy of Sciences</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Andbot: Towards Advanced Mobile Botnets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Botnet</term>
					<term>smartphone</term>
					<term>mobile</term>
					<term>C&amp;C</term>
					<term>URL Flux</term>
				</keywords>
			</textClass>
			<abstract>
				<p>With the rapid development of the computing and Internet access (i.e., using WiFi, GPRS and 3G) capabilities of smartphones, constructing practical mobile botnets has become an underlying trend. In this paper, we introduce the design of a mobile botnet called Andbot which exploits a novel command and control (C&amp;C) strategy named URL Flux. The proposed Andbot would have desirable features including being stealthy, resilient and low-cost (i.e., low battery power consumption, low traffic consumption and low money cost) which promise to be appealing for botmasters. To prove the efficacy of our design, we implemented the prototype of Andbot in the most popular open source smartphone platform-Android (Google)-and evaluated it. The preliminary experiment results show that the design of Andbot is suitable for smartphones and hard to defend against. We believe that mobile botnets similar to Andbot will break out in the near future, consequently, security defenders should pay more attention to this kind of advanced mobile botnet in the early stage. The goal of our work is to increase the understanding of mobile botnets which will promote the development of more efficient countermeasures. To conclude our paper, we suggest possible defenses against the emerging threat.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>INTRODUCTION</head><p>The term mobile botnet refers to a group of compromised smartphones that are remotely controlled by botmasters via C&amp;C channels. While PC-based botnets, as common platforms for many Internet attacks, have become one of the most serious threats to Internet, mobile botnets targeted for smartphones are not as popular as their counterparts for a variety of reasons including resource issues, limited battery power, and Internet access constraints, etc. Consequently, both the occurrence of practical mobile botnets and corresponding research on them are very limited. However, this could change with the recent surge in popularity and use of smartphones. Smartphones are now widely used by billions of end users due to their enhanced computing ability and efficient Internet access. Moreover, smartphones always store a large amount of sensitive personal data and are often used in online payment. The emergence of open-source smartphone platforms such as Android and thirdparty applications made available to the public also provides more opportunities for malware creators. Therefore, smartphones have become one of the most attractive targets for hackers. Since the appearance of Cabir, the first mobile worm (which was introduced in 2004), we have witnessed a significant evolution in mobile malware. Although the number of mobile malware has been growing steadily, their functionalities have remained simple until the development of the first mobile botnet in 2009. The mobile botnet, SymbOS.Yxes <ref type="bibr" target="#b0">[1]</ref>, targets Symbian and exploits a simple HTTP-based C&amp;C. Later the same year, Ikee.B <ref type="bibr" target="#b1">[2]</ref>, which targets jailbroken iPhones and has a C&amp;C mechanism similar to SymbOS.Yxes, was released. In December 2010, the first Android botnet, Geinimi, broke out mainly in China, still using similar HTTP-based C&amp;C. Although advanced mobile botnets have not been witnessed in the main population of smartphones, we believe it is just a matter of time. Mobile botnets are presently posing serious threats for both end users and cellular networks <ref type="bibr" target="#b6">[7]</ref>. Consequently, investigations into how mobile botnets work, as well as how they may be developed and stopped, represents an important area of research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Challenges of Constructing a Mobile Botnet</head><p>There are several differences between smartphones and PCs. These differences lead to a number of challenges in the construction of a mobile botnet <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7]</ref>. (1). the battery power is rather limited on smartphones when compared with PCs. If the battery power consumption speed exceeds user expectations, the battery exhaustion is likely to be noticed by the user, leaving the bot open to detection. (2). the cost of smartphones is an extremely sensitive area for many users. If data costs begin to exceed the amount that the user had expected or agreed to pay, the bot could also be detected. (3). if C&amp;C consumes an abnormal amount of network traffic, the abnormity is likely to be noticed. (4). the absence of public IP addresses and a constant change in network connectivity makes the robust P2P-based C&amp;C in PC-based botnets impractical, and potentially impossible, in smartphones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. The Proposed Andbot</head><p>Considering the above challenges faced by botmasters, the design of a practical mobile botnet, from our understanding, should consider the following questions: (1). How to design a stealthy C&amp;C channel to make detection more difficult? <ref type="bibr" target="#b1">(2)</ref>. How to recover the C&amp;C channel in case all critical resources are destroyed (i.e., DNS redirected, rendezvous servers shutdown by defenders)? (3). How can noticeable factors such as monthly charges, traffic, and battery power consumption be decreased to an acceptable degree to prevent detection by infected users? (4). How to prevent (or make it harder) the botnet away from hijacking even if the bot is completely reverse analyzed and all the critical resources are controlled by coordinated defenders.</p><p>By considering all the challenges listed above, in this paper, we present our research on the possible design of an advanced mobile botnet named Andbot on smartphones running the Android operation system. The proposed Andbot has the following features:</p><p>• Stealthy: Using HTTP-based URL Flux protocol, it will only access Internet in background.</p><p>• Resilient: (1). Resistant to most of public known defense strategies such as DNS sinkhole, malicious commands injection, IP blacklist and C&amp;C server shutdown, etc; (2). Recover C&amp;C in an accepted time delay in the case that crucial resources are temporally unavailable.</p><p>• Low-Cost: Low money costs, low traffic and battery power consumption.</p><p>• Commands supported: CallHome, SMS Phishing and Filtering, DDoS, Information Theft, Sleep.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Paper Organization</head><p>The rest of the paper is organized as follows. Section II introduces related studies. Section III introduces the architecture of Andbot. Section IV discusses the C&amp;C design.</p><p>In Section V, we study the effectiveness and efficiency of Andbot. We present possible defenses against Andbot in Section VI. We give a few future plans and conclude the paper in Section VII.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORK</head><p>Botnets have been an active research topic in recent years. Current research on botnets is focused primarily on detection, measurement, tracking, mitigation, and future botnet prediction. Our research belongs to the last category.</p><p>Wang et al. <ref type="bibr" target="#b11">[11]</ref> presented the design of an advanced hybrid peer-to-peer botnet. Vogt et al. <ref type="bibr" target="#b12">[12]</ref> presented a "super-botnet" -that works by inter-connecting many small botnets together in a peer-to-peer fashion. Ralf Hund et al. <ref type="bibr" target="#b13">[13]</ref> introduced the design of an advanced bot called Rambot, developed from the weaknesses they found when tracking a diverse set of botnets. Starnberger et al. <ref type="bibr" target="#b14">[14]</ref> presented Overbot, which uses an existing P2P protocol, Kademlia, to provide a stealth C&amp;C channel. Singh et al. <ref type="bibr" target="#b15">[15]</ref> evaluated the feasibility of exploiting email communication for botnet C&amp;C.</p><p>Nevertheless, few research works have studied how botmasters might design their advanced C&amp;C for smartphonesbased botnets. Singh et al. <ref type="bibr" target="#b4">[5]</ref> evaluated the feasibility of using Bluetooth as a medium for botnet C&amp;C. We believe that this approach could be effective only when the mobile botnet is extremely huge (i.e., more than ten million), therefore, we focus our research on Internet based C&amp;C. Mulliner et al. <ref type="bibr" target="#b2">[3]</ref> proposed a SMS-HTTP hybrid C&amp;C. The main idea of the hybrid schema is to split the communication into a HTTP and a SMS part. The encrypted and signed commands file is uploaded to a website and the corresponding URL is distributed via SMS. Zeng et al. <ref type="bibr" target="#b3">[4]</ref> utilizes a SMS-based C&amp;C with a P2P topology. Our work is complimentary to these approaches in that: (1). The SMS-based C&amp;C (especially P2P topology) will inescapably cause excessive fees to users which leads to detection; and (2). The simple HTTP-based C&amp;C scheme suffers a single-point-failure. As such, our study compliments this existing research, as we have eliminated the single-pointfailure problem to some degree thanks to URL Flux.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. OVERVIEW OF ANDBOT</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. The Command and Control Architecture of Andbot</head><p>Andbot uses a centralized C&amp;C topology, that is, it connects to a fixed number of C&amp;C servers and obtains commands from them. Compared to traditional IRC-and HTTP-based centralized botnets (see <ref type="figure" target="#fig_0">Fig. 1</ref>), it is easy to see that Andbot C&amp;C shown in <ref type="figure">Fig. 2</ref> adds an abundant mechanism -if one username(black cycle) is blocked or fails to register it in Microblog, other usernames(white cycles) could be registered instead, making the C&amp;C more resilient. To obtain the capability described above, Andbot hardcodes a public key, a number of Web 2.0 addresses (i.e., domain names), and a Username Generation Algorithm (UGA). In order to find commands, Andbot first connects to one of the Web 2.0 servers and then tries to visit the users generated by UGA, one by one. If the visited user exists, the most recent messages will be verified using the hard-coded public key. If passed, the messages are convinced to be issued by the authorized botmasters. We have named this kind of C&amp;C technology "URL Flux" (see <ref type="figure">Fig. 2</ref> and <ref type="figure">Fig. 3</ref>), based on the name convention of Domain Flux (see <ref type="figure">Fig. 4</ref>) -a powerful C&amp;C technology used by the Conficker <ref type="bibr" target="#b21">[20]</ref> botnet which targets the Windows operating system. In a Domain Flux scheme, bots must hard-code a public key and a Domain Generation Algorithm (DGA). Bots try to connect to and download a command file from the generated domains one by one, and then authenticate the downloaded command file using the hard-coded public key. The advantage of URL Flux is that it doesn't require publicly available servers and the corresponding domain name to be bought. Moreover, the C&amp;C servers used are always fairly robust and easier to bypass Firewalls.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Low Cost</head><p>A significant rise of the phone bill, traffic, or excessive consumption of battery power will lead to investigation of the cause, and thus may lead to bot detection <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b8">[8]</ref><ref type="bibr" target="#b9">[9]</ref><ref type="bibr" target="#b10">[10]</ref>. Thus, several methods were designed to minimize the consumption of the above resources: IP-only C&amp;C, RSS and GZIP compression, URL Caching, and Sleep command.</p><p>• IP-only C&amp;C: Each step of C&amp;C depends on TCP/IP communication other than SMS or Bluetooth.</p><p>Obviously, Internet access is an essential requirement for Andbot. Luckily, most of current smartphones are easy to access Internet.</p><p>• RSS and GZIP compression: Many Microblogs support browsing messages (such as "tweet" in Twitter) which use RSS and respond using GZIP compression. These capabilities fall squarely within the low traffic consumption requirement of mobile botnets. Our experiments in Section V prove that these methods could reduce traffic consumption significantly.</p><p>• URL Caching: Once one authorized URL, which points to correctly signed commands, is found, Andbot will cache it in its period of validity.</p><p>• Sleep: If a botmaster decides to refrain from publishing new commands for some time, or to minimize the interval between two commands, a Sleep command can order the bots to sleep so as to decrease the consumption of resources in smartphones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Supported Commands</head><p>Andbot implements necessary commands which are different from those of PC counterparts. It is due to these capabilities that mobile botnets pose a more dangerous threat than PC botnets. The implemented commands and associated descriptions are listed in <ref type="table" target="#tab_0">Table.</ref> 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Commands</head><p>Description .CallHome#Channel#Address Call Home to "Address" via "Channel" (i.e., HTTP, Email, and SMS). .SMSDoS#MobileNumber#Num #Random#Content#Len DoS "MobileNumber" by sending Num SMS ether using fixed "Content" or generating "Random" content no longer than "Len".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.SMSSpread#Content#Dest</head><p>Sending SMS with "Content" to either all contacts in address book or special user based on "Dest". The "Content" is usually a phishing message containing a valid URL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.MonitorSMS#MobileNumber# Num#Channel#Address</head><p>Monitoring new coming SMS, recent SMS or special SMS based on "MobileNumber" and send the SMS to botmaster via HTTP, Email, or SMS determined by "Channel" and "Address". .GenSMS#FakeFromNumber# DateTime Generating a fake SMS from "FakeFromNumber" on "DateTime", this is useful for Phishing.</p><p>.DenySMS#FromNumber Intercpting any SMS from "FromNumber". This command is used to filter some warning SMSs from special ISP number (i.e., +8610086).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.RelayCmd#CipherCmd#Num# MobileNumberList</head><p>Relay the "CipherCmd" to "Num" bots in "MobileNumberList". The "CipherCmd" includes both ExpireDate and Cmd. .Sleep#Seconds</p><p>Let the bots sleep for some time. C&amp;C is the most important part of a botnet. Although many advanced C&amp;C strategies designed for PC botnets have been deployed by many successful botnets (such as the Storm, Conficker, Waledac, and Stuxnet), we believe that none will succeed as mobile botnets when faced with the limitation factors associated with smartphones.</p><p>Considering the problems with deploying mobile botnets, we design the C&amp;C of Andbot sensitively and thoroughly. For example, to gain the element of stealth, Andbot connects to Internet only when the smartphones in sleeping state; to gain resiliency, Andbot uses URL Flux rather than a simple HTTPbased C&amp;C; to minimize the consumption of network traffic, Andbot exploits RSS and GZIP compression as opposed to visiting Web 2.0 websites directly; to avoid battery exhaustion attack <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b9">9,</ref><ref type="bibr" target="#b10">10]</ref>, Andbot does not start C&amp;C communication frequently -especially when receiving a Sleep command.</p><p>Like many other botnets <ref type="bibr" target="#b11">[11,</ref><ref type="bibr" target="#b13">13]</ref>, Andbot also uses RSA to authenticate commands, so botnet hijacking is not a major problem. Since the public-key based authentication has been deployed by many current C&amp;C botnets, we won't explain it in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Command and Control Design</head><p>To outline the rough sketch of the complete C&amp;C procedures of Andbot, the following list provides the sequence of operations for both botmaster and Andbot in <ref type="figure" target="#fig_2">Fig. 5</ref>. 񮽙 Botmaster uploads the JPG file to a Blog, then compresses the URL, denoting the shorten URL as J1.</p><p>񮽙 Botmaster combines "StartDate", "ExpireDate" and J1 together, then encrypts, signs, and encodes it.</p><p>񮽙 Botmaster publishes the ciphertext to the homepage of a Microblog user, which is registered in advance, and denoted as U2.</p><p>񮽙 Andbot visits users on Microblog one by one using UGA until finding U2.</p><p>񮽙 Andbot decrypts out J1 based on recent "tweets" of U2.</p><p>񮽙 Andbot downloads JPG based on J1.</p><p>񮽙 Andbot recovers plaintext commands from the JPG.</p><p>񮽙 Executes commands.</p><p>• Prepare a JPG File Containing Encrypted and Signed Commands: In the first step, a botmaster encrypts the commands to be published using RC4 then signs it using her private key which is corresponding to the public key hard-coded in Andbot. Second, the botmaster appends the ciphertext and its length to the end of a JPG file (there is no need to use watermark because the JPG file is very small and recovering the hided information costs complex code).</p><p>Upload the JPG file and compress the URL: After generating the special JPG file, the botmaster uploads it to a public website, such as a blog or picture-hosting site. Considering the maxlength limit in Microblog, the botmaster may compress the raw URL using popular services such as bit.ly and tinyurl.com. In this way, the length of the shortened URL will be more easily controlled.</p><p>• • URL Flux-based C&amp;C: Andbot first connects to several pre-defined Microblogs, and then requests the RSS of special users. If the response is verified successfully using the hard-coded public key and the messages are not expired, Andbot will download the JPG file using the decrypted URL. Again, Andbot will verify the JPG file using the hard-coded public key and decrypted the message using its RC4 symmetric key. Finally, Andbot obtains and executes the plaintext commands. The UGA and URL Flux Algorithm are shown in <ref type="figure">Fig. 6</ref> and parts of the result of UGA are shown in <ref type="figure" target="#fig_3">Fig.7</ref>. There are a number of usernames that could be generated on a monthly or half-yearly basis. URL Flux uses this mechanism to enhance the counterattack capability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Advantage Analysis</head><p>• Stealth: Since all the C&amp;C traffic uses HTTP, which is the most popular Internet traffic, it can be considered rather stealthy in its ability to bypass firewalls. In addition, Andbot only accesses background Internet, bypassing the warning of traffic monitoring softwares.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Resilience:</head><p>The C&amp;C servers are high-performance websites which could serve millions of communications concurrently. Also, the response from Microblog will change given that the "StartDate" and "ExpireDate" are changing, making signature-based detection difficult. In case the username generated by UGA is blocked by Microblog providers, a botmaster could generate and use another username in the same or different Microblog. Furthermore, because the private key is owned only by botmasters, either injecting malicious commands or replay expired commands is impossible.</p><p>• Low Cost: The following factors all contribute to the minimal cost impacts of Andbot: (1). Considering the fact that WIFI is often provided free of charge (while GPRS is expensive), Andbot will preferably select WiFi. Luckily enough in this example, Android will select WiFi automatically if both WiFi and GPRS are available. (2). Andbot will preferably select RSS of Microblog to retrieve the content because RSS produces less traffic. (3). Andbot requests GZIP format to shrink the size of response packets. (4). Andbot uses a URL caching mechanism to save the successfully verified URL until the current time reaches "ExpireDate". Thus, one successful URL Flux addressing result could theoretically be used at the discretion of the botmaster. (5). Botmasters could publish a Sleep command. (6). In SMS-based C&amp;C, the bots will inescapably cost a lot of money when sending a large amount of SMS. In our work, we only use GPRS and WiFi occasionally; thus, the money cost could be controlled in an acceptable scope.</p><p>1.</p><p>2.</p><p>1.</p><p>2.</p><p>3.</p><p>3.  </p><formula xml:id="formula_0">( ) _ ( ) _ _ ( _ ) ()</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. EVALUATION OF ANDBOT</head><p>To evaluate the functions and performance of Andbot, we've conducted preliminary experiments, the results show that Andbot can work properly and has desirable features. The experiments were conducted in a controlled environment, and the propagation function was carefully processed to ensure the bot would be unable to spread to other mobile devices outside of those used for the experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Experiment Environments</head><p>• Four Android-based smartphones were tested: HTC Legend, Motorola xt502, Motorola xt702 and Samsung i5700.</p><p>• Web 2.0 Services: register some Microblog and blog accounts.</p><p>• Web Server: a WAMP 2.0 was deployed to provide MySQL database and Web service.</p><p>• Email: Register one email to recycle SMS.</p><p>Among the four types of smartphones, the first one uses Android 2.2 while the others use Android 2.1. Web 2.0 services which are core resources of C&amp;C. Web server and Email are just used to receive the "stolen" information, such as IMEI, IMSI, OS, Version and SMS, from the "infected" smartphones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Functionality Test</head><p>• Autorun and Bypassing Security Softwares: (1). To be more practical, we hide Andbot inside a popular game named MixedColor. Starting the malicious game manually, it runs correctly and friendly, and Andbot is activated and executes in the background; (2). After rebooting Android, the malicious game can auto-start with activated Andbot functions; (3). We repeated the above operations when installing three kinds of mobile AVs including f-secure, Netkin and 360 safeguard in turn. No warnings appeared, meaning Andbot survived successfully.</p><p>• The Correctness of supported Commands: (1). We carefully processed the address book and SMS inbox in our test smartphones; (2). We combined one or more commands from the supported commands; (3). We issued the above commands to verify their correctness. Although all the commands were executed successfully, many questions raised during the experiments which have proven helpful in revisions of our design. For example, should Andbot only remain active when in sleeping state? The answer is, yes, because some traffic monitor software will show the current network activity. Should Andbot automatically switch to ASN (i.e., from CMWAP to CMNET)? The answer is yes, as well, because CMWAP could not access Internet, and Andbot must switch the network option by itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. The C&amp;C Cost Evaluation</head><p>The traffic cost during C&amp;C is the most important evaluation factor. First, we define the necessary parameters (see <ref type="table" target="#tab_0">Table.</ref> 3) which must be considered in C&amp;C.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Parameters</head><p>Description α</p><p>The interval between two commands requesting β</p><p>The half-year username count γ</p><p>The month username count ω</p><p>The total num of different Microblogs θ The flag that indicates if RSS and GZIP should be used. if θ=1, they will be used, otherwise 0 δ The flag that indicates if bot should keep active only when sleeping, if δ=1, bot will keep active, otherwise 0 <ref type="table" target="#tab_0">Table.</ref> 3 The Parameters of C&amp;C In the experiment, we assigned the parameters α=10mins, β=10, γ=50, ω=2(digu.com and zuosa.com), θ=1, δ=1 and use "hi.baidu.com" (a famous blog in China) to host JPG files. To explain simply and clearly, we only show the real C&amp;C cost results about Digu (see <ref type="table" target="#tab_0">Table.</ref> 4). The result of Zuosa is a little slower than Digu. We can see if a user exists (i.e., for username tk1074939514), the average time from first packet to last packet spends only 2.706 seconds averagely. Andbot needs to send a packet with 164 bytes payload to Microblog server and get a response with 1062 bytes payload. Considering the TCP connection and disconnection traffic, and all the packet headers, the total traffic is 1902 bytes. Remember, when Andbot successfully finds a URL, it will cache it for future use until reaching ExpireDate. So the total traffic is fairly low even after 12 hours.</p><p>In general, β and γ are big while a botmaster could only register a few user accounts, so Andbot will inescapably visit a large amount of non-exist users. Therefore, we need to evaluate the performance when only part of users exists (i.e., 5%, 10% and 50% half-year username exists). The results of time delay and traffic cost are shown in <ref type="table" target="#tab_0">Table.</ref>5. When a few usernames exist, Andbot only consumes several thousand of bytes to find the correctly signed JPG URL. Then, Andbot begins to download the JPG file (see <ref type="table" target="#tab_0">Table.</ref>6).</p><p>From the preliminary results, we can see that Andbot consumed a very small amount of resources, making detection difficult because obvious abnormalities may not be seen by end users. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SubURL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DEFENSE AGAINST ANDBOT</head><p>We introduce possible defense in three ways. First, an internationally coordinated cooperation channel should be set up quickly to identify and defend against this technology; second, we should pay more attention to the management of software publications; third, we should infiltrate mobile botnets to monitor their activities in time.</p><p>• Building International Coordinated Mechanism:</p><p>The C&amp;C of Andbot relies on Web 2.0 Services. For this reason, defenders should focus their defense effort on publicly available Web 2.0 services such as Microblog, blog, Google App Engine, etc. This effort can prevent these services from being abused. In the case that abnormalities are detected, there should be a coordinated channel such as CERT to stop the corresponding services.</p><p>• Monitoring at SMSC side and Verify in Cloud Sandboxes/VMs: In general, current mobile malware mainly spread via social engineering such as sending phishing SMS, or publishing malicious softwares on websites. In the first case, defenders may deploy a worm detection system at SMSC level using a similar algorithm to Autograph <ref type="bibr" target="#b16">[16]</ref>, Early-birds <ref type="bibr" target="#b17">[17]</ref>, etc. After obtaining the suspicious URL embedded in SMS, defenders could download the softwares and verify them inside Cloud Sandboxes or Virtual Machines (VMs). If the softwares are found to be malicious, the signature should be generated automatically, allowing defenders to take some countermeasures. In the second case, defenders should pay more attention to software distribution management, either using Cloud Sandboxes/VMs or using several updated AVs to verify new softwares before they become available to mobile users.</p><p>• Infiltration: Since most bots on smartphones must find commands in an active way, all of them are inescapably vulnerable to an infiltrator <ref type="bibr" target="#b18">[18]</ref>. After a defender's analysis of the C&amp;C of Andbot, an infiltrator can be written using the same URL Flux protocol. In this way, defenders are able to track the botnet activities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. FUTURE WORK AND CONCLUSIONS</head><p>From the defense discussion in previous section, we see that Andbot still has some shortcomings. We plan to make several improvements for Andbot as below.</p><p>• Dynamic UGA: In Andbot, a static UGA is used which can satisfy most cases. However, imagining an extreme case, defenders can register or block all the usernames which could possibly be generated by Andbot, whether now or in the future. With this defense, Andbot will lose control. To prevent this type of attack, a Dynamic UGA (DUGA) should be developed. There are many technologies suitable for DUGA. For example, a DUGA could first query the most active and popular topics from Google, Twitter, etc., and then use the retrieved keywords as the seed of UGA.</p><p>• Time-Space Deviation: <ref type="bibr">BotMiner [19]</ref> detects botnets using the time-space similarity. This is because they believe bots always work in a coordinated way, which leads to time and space similarities in communication content and patterns. Therefore, to avoid this kind of detection, Andbot needs to randomize its C&amp;C communication contents to eliminate space similarity (i.e., injecting packet and flow-level noise), and add a random delay to eliminate time similarity when responding to some interactive commands.</p><p>• Emergency C&amp;C: Andbot has a cache and sleep mechanism which helps it to minimize resource consumption. Nevertheless, some tasks may be urgent for Andbot to perform. As such, there should be an emergency SMS-based C&amp;C channel to issue urgent commands rapidly in a PUSH style. Obviously, the SMS-based C&amp;C should not be used except in emergency situations.</p><p>As smartphones continue to gain more capabilities, they become attractive targets to hackers. To be well prepared for the promise attack, we, as defenders, should study mobile botnets attacking techniques that are likely to be developed by botmasters in the near future. In this paper, we presented the design of a stealthy, resilient, and low cost mobile botnet called Andbot, and evaluated its efficacy thoroughly. Our preliminary results show that the proposed Andbot is feasible and effective. To defend against such a mobile botnet, we suggest several possible countermeasures. In the future, we will invest more research on how to fight against this kind of advanced mobile botnet.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1 IRC/HTTP-based C&amp;C Fig. 2 URL Flux-based C&amp;C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig</head><label></label><figDesc>Fig. 3 URL Flux Fig. 4 Domain Flux</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5</head><label>5</label><figDesc>Fig. 5 The C&amp;C Architecture of Andbot 񮽙 Botmaster encrypts and signs the commands to be issued, then binds the ciphertext with a small JPG file.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7</head><label>7</label><figDesc>Fig. 7 The example output of UGA</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table . 1 The Supported Commands of Andbot IV. BOTNET COMMAND AND CONTROLE DESIGN</head><label>.</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>a StartDate and ExpireDate are indispensible. Only when the current date is later than StartDate and earlier than ExpireDate the</head><label></label><figDesc></figDesc><table>Prepare Microblog Message Containing The JPG 
URL and Time Constraint: The main role of 
Microblog is to publish the URL of the JPG file 
containing the encrypted and signed commands. 
Moreover, in order to countermeasure the replay attack, 
URL is considered to be valid and 
active. We explain the interface among botmaster, 
Andbot, Microblog, and blog in Table. 2. 

Interface 
Description 

StartDate 
The Cmd will become valid from StartDate 
ExpireDate 
The Cmd will expire after ExpireDate 

JPG 
URL 

Shorten 
The shorten URL using bit.ly (i.e., http://bit.ly/esNWwF) 

Input 
StartDate#ExpireDate# Shorten JPG URL (# denote conjunction here, . i.e., 2011011020110201http://bit.ly/esNWwF) 

Output 

Base64 (Sign (Hash (Input))#Encrypt (Input)). i.e. , 
part1=NJ0pU60znHjo5KfDcKS8Rv5OFoPdpfRvTWr59a049pwFC6xpdhu1YZCJ9/UhpBkKK1DSsYKCa2OZ2VYGeoy8S1rm+x 
04JguhbjXAlH8LXpc45jl1GJ 
part2=JW2VLj6bvx6wkRWPYpb2iAymlpvEgXWUs5e5zAfUPVVluG+QYUmMte/wjjXQv+WVH80EOTs6ISePgUYq/pI7EY2v 
KfeTDqr0BQZKO9uxo= 
Microblog Message 
The first Microblog Message is part1 and the next is part2 

Table. 2 The Interface Description with Examples 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Axelle</forename><surname>Apvrille</surname></persName>
		</author>
		<ptr target="http://www.fortiguard.com/papers/EICAR2010_Symbian-Yxes_Towards-Mobile-Botnets.pdf" />
		<title level="m">Symbian worm Yxes Towards mobile botnets</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An Analysis of the iKee.B iPhone Botnet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Porras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Saidi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Yegneswaran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd International ICST Conference on Security and Privacy on Mobile Information and Communications Systems (Mobisec)</title>
		<meeting>the 2nd International ICST Conference on Security and Privacy on Mobile Information and Communications Systems (Mobisec)</meeting>
		<imprint>
			<date type="published" when="2010-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Rise of the iBots: 0wning a telco network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mulliner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Seifertin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Proceedings of the 5th IEEE International Conference on Malicious and Unwanted Software (Malware)</title>
		<meeting><address><addrLine>Nancy, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-10-20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Design of SMS Commandedand-Controlled and P2P-Structured Mobile Botnet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuanyuan</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<pubPlace>Ann Arbor, MI 48109-2121, U.S.A.</pubPlace>
		</imprint>
		<respStmt>
			<orgName>The University of Michigan</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Evaluating Bluetooth as a Medium for Botnet Command and Control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sangal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Jain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Traynor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA)</title>
		<meeting>the International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA)</meeting>
		<imprint>
			<date type="published" when="2010-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Fuzzing the Phone in your Phone</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mulliner</surname></persName>
		</author>
		<ptr target="http://www.mulliner.org/security/sms/feed/smsfuzz_26c3.pdf" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Traynor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ongtang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Jaeger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">La</forename><surname>Porta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">On Cellular Botnets: Measuring the Impact of Malicious Devices on a Cellular Network Core</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mcdaniel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Computer and Communications Security (CCS)</title>
		<imprint>
			<date type="published" when="2009-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">₃ Towards an intrusion detection system for battery exhaustion attacks on mobile computing devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Nash</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Hsiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">₄ in PERCOMW &apos;05: Proceedings of the Third IEEE International Conference on Pervasive Computing and Communications Workshops</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="141" to="145" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Detecting energygreedy anomalies and mobile malware variants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hahnsang</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joshua</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kang</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MobiSys</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Battery-based intrusion detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Global Telecommunications Conference</title>
		<meeting>the Global Telecommunications Conference</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An advanced hybrid peer to peer botnet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sparks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the HotBots&apos;07, First Workshop on Hot Topics in Understanding Botnets</title>
		<meeting>of the HotBots&apos;07, First Workshop on Hot Topics in Understanding Botnets<address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Army of botnets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Vogt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Aycock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jacobson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 14th Annual Network and Distributed System Security Symposium (NDSS&apos;07)</title>
		<meeting>of 14th Annual Network and Distributed System Security Symposium (NDSS&apos;07)</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Towards Next-Generation Botnets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hund</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Holz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the fourth European Conference on Computer Network Defense (EC2ND 08)</title>
		<meeting>of the fourth European Conference on Computer Network Defense (EC2ND 08)</meeting>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Overbot -a botnet protocol based on kademlia</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Starnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kruegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kirda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 4th Int. Conf. on Security and Privacy in Communication Networks</title>
		<meeting>of the 4th Int. Conf. on Security and Privacy in Communication Networks</meeting>
		<imprint>
			<date type="published" when="2008-09" />
		</imprint>
	</monogr>
	<note>SecureComm 08</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Evaluating Email&apos;s Feasibility for Botnet Command and Control // Proceedings of The 38th Annual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kapil</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abhinav</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/IFIP International Conference on Dependable Systems and Networks</title>
		<meeting><address><addrLine>Anchorage, Alaska</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Autograph: toward automated, distributed worm signature detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-A</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Karp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th USENIX Security Symposium</title>
		<meeting>the 13th USENIX Security Symposium</meeting>
		<imprint>
			<date type="published" when="2004-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Automated worm fingerprinting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Estan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Varghese</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th ACM/USENIX Symposium on Operating System Design and Implementation (OSDI)</title>
		<meeting>the 6th ACM/USENIX Symposium on Operating System Design and Implementation (OSDI)</meeting>
		<imprint>
			<date type="published" when="2004-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Enabling active botnet infiltration using automatic protocol reverse-engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Juan</forename><surname>Caballero</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM CCS</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">BotMiner: clustering analysis of network traffic for protocol-and structure-independent botnet detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Perdisct</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th USENIX Security Symposium (Security&apos;08)</title>
		<meeting>the 17th USENIX Security Symposium (Security&apos;08)</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">San</forename><surname>Jose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="139" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A Foray into Conficker&apos;s Logic and Rendezvous Points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Porras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Saidi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Yegneswaran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Workshop on Large-Scale Exploits and Emergent Threats</title>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
