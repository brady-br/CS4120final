<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:30+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Storing Trees on Disk Drives</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Medha</forename><surname>Bhadkamkar</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing and Information Sciences</orgName>
								<orgName type="institution">Florida International University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fernando</forename><surname>Farfan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing and Information Sciences</orgName>
								<orgName type="institution">Florida International University</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vagelis</forename><surname>Hristidis</surname></persName>
							<email>vagelis@cis.fiu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing and Information Sciences</orgName>
								<orgName type="institution">Florida International University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raju</forename><surname>Rangaswami</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing and Information Sciences</orgName>
								<orgName type="institution">Florida International University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Storing Trees on Disk Drives</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Tree-structured data are abundant today, ranging from Bioinformatics suffix-tree alignments, to multi-resolution video, to directory-file hierarchies, to XML. The storage techniques employed by systems that manage tree-structured data greatly affect their performance. Current approaches either map the tree data to an underlying relational database system, or use the abstraction provided by a general-purpose object storage manager, or simply use flat files. These storage schemes, however, ignore the tree structure of the data as well as the characteristics of disk drives. Relational databases are structured tables and flat files are unstructured. On the other hand, disk drives store information in circular tracks that are accessed with mechanical seek and rotational overhead. The performance of disk drives greatly depends on the I/O access pattern (orders of magnitude difference between sequential and random access times). To the best of our knowledge, there exists no data layout strategy that accounts for the structural mismatch between tree-structured data and disk drive storage.</p><p>We propose a new storage technique, tree-structured placement, that explicitly accounts for the mismatch between treestructured data and disk drive characteristics, so that common navigation operations (parent-to-child and node-to-nextsibling) are efficient. This technique uses the recently proposed idea of semi-sequential disk access <ref type="bibr" target="#b1">[2]</ref> to place the tree structure. It also presents optimizations that reduce the on-disk space fragmentation and average random seek-times. Experimental evaluation using the DiskSim disk simulator <ref type="bibr" target="#b0">[1]</ref> suggests as much as 80% reduction in query IO times compared to the default sequential layout of tree-structured data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">TREE-STRUCTURED PLACEMENT</head><p>Using tree-structured placement, tree nodes are placed on the disk starting from the outermost available track. In particular, we first place the root node v of the tree data on the block with the smallest logical-block-number (LBN), on the outermost available track of the disk. Second, we place its children sequentially on the next free track such that accessing the first child u of v after accessing v results in a semi-sequential access Further, accessing a non-first child from a parent node involves a semi-sequential access to reach the first child and a short rotational-delay based on the child index. The children of the first-child of the root node are then placed next using a similar approach, followed by those of the second-child and so on. The remaining nodes of the data tree are placed following a similar approach.</p><p>The above placement strategy, though simple, incurs significant fragmentation in disk space as well as large average random seek-times as a consequence. The optimized tree-structured placement strategy allows placement of the child nodes in nonfree tracks, thereby reducing fragmentation. Second, it allows the first-child node anywhere in a rotationally-optimal track-region 1 relative to the parent rather than requiring it to be place at the rotationally-optimal block. This allows child nodes to be placed closer to the parent node, thereby reducing seek-times. However, the trade-off here is slightly increased average rotational delays. Third, it groups tree nodes into supernodes that map to disk blocks, further reducing the fragmentation within disk blocks. These optimizations make the tree-structured placement significantly superior to the default sequential approach as detailed below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">EVALUATION</head><p>We used tree-structured XML data (benchmark navigational queries (XPath) and benchmark XML databases <ref type="bibr" target="#b2">[3]</ref>) to evaluate our approach. The baseline strategy that we compare our approach against is sequential layout (referred to as default) of the XML file on the disk, as provided by general-purpose filesystems. <ref type="figure" target="#fig_0">Figure 1</ref> shows the average total IO times for 8 benchmark XPath queries for 4 different disk drive models simulated using DiskSim <ref type="bibr" target="#b0">[1]</ref>. Tree-preserving tree-structured placement (TP-TS) groups the XML nodes to supernodes in a way that the tree structure is preserved, whereas Sequential tree-structured placement (Seq-TS) uses the same grouping as default and fits as many nodes as possible into a supernode.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Default</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: IO times for various disk models.</figDesc></figure>

			<note place="foot" n="1"> defined as a fixed-length sequence of blocks starting from the rotationally-optimal block</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The DiskSim Simulation Environment Version 3.0 Reference Manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bucy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ganger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Contributors</forename></persName>
		</author>
		<idno>CMU-CS-03-102</idno>
		<imprint>
			<date type="published" when="2003-01" />
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Atropos: A Disk Array Volume Manager for Orchestrated Use of Disks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schindler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Schlosser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Shao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ailamaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">R</forename><surname>Ganger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Conference on File and Storage Technologies</title>
		<meeting>the USENIX Conference on File and Storage Technologies</meeting>
		<imprint>
			<date type="published" when="2004-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">XMark: A Benchmark for XML Data Management</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Waas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Kersten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Carey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Busse</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>VLDB</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
