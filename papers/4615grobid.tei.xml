<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:26+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cloning Credit Cards: A combined pre-play and downgrade attack on EMV Contactless</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Roland</surname></persName>
							<email>michael.roland@fh-hagenberg.at</email>
							<affiliation key="aff0">
								<orgName type="laboratory">NFC Research Lab Hagenberg University of Applied Sciences Upper</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josef</forename><surname>Langer</surname></persName>
							<email>josef.langer@fh-hagenberg.at</email>
							<affiliation key="aff0">
								<orgName type="laboratory">NFC Research Lab Hagenberg University of Applied Sciences Upper</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Cloning Credit Cards: A combined pre-play and downgrade attack on EMV Contactless</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Recent roll-outs of contactless payment infrastruc-tures-particularly in Austria and Germany-have raised concerns about the security of contactless payment cards and Near Field Communication (NFC). There are well-known attack scenarios like relay attacks and skimming of credit card numbers. However , banks and credit card schemes often mitigate these attacks. They explain that attacks are impractical (e.g. in a relay attack an attacker needs to have RF access to a victim&apos;s card while performing a payment transaction) or even impossible (e.g. skimmed data does not contain the dynamic authorization codes that are normally required to perform a payment transaction). This paper introduces an attack scenario on EMV contactless payment cards that permits an attacker to create functional clones of a card that contain the necessary credit card data as well as pre-played authorization codes. The card clones can then be used to perform a limited number of EMV Mag-Stripe transactions at any EMV contactless payment terminal.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Recent announcements of roll-outs of contactless credit, debit and pre-paid card infrastructures boost the fear among customers about security issues in these contactless payment systems. With contactless payment cards the traditional contact-based smartcard interface is complemented with or replaced by an antenna. The most prominent global contactless payment card standard is the EMV Contactless Specifications for Payment Systems <ref type="bibr" target="#b8">[9]</ref>, which has been adopted by all major credit card brands. This standard is based on the ISO/IEC 14443 standard for proximity integrated circuit cards. The contactless interface between a smartcard terminal and a payment card uses inductive coupling at an operating frequency of 13.56 MHz. The communication technology is compatible to Near Field Communication (NFC) -a technology that is available in many new mobile phones.</p><p>Contactless communication has several benefits. For instance, transactions become more convenient because cards no longer need to be taken out of a user's wallet and inserted into a point-of-sale (POS) terminal. Also the mechanical wear down of both the cards and the terminals is significantly reduced. Above that, the roll-out of contactless credit card terminals for mobile payment use-cases seems to start the global adoption of EMV standards and to finally phase-out magnetic stripe technology <ref type="bibr" target="#b26">[26]</ref>.</p><p>Besides these advantages, this contactless technology comes with several security concerns. In particular eavesdropping, skimming and relay attacks are considered to be potential problems:</p><p>• Eavesdropping refers to a scenario where an attacker picks up the RF signals transmitted between a terminal and a card from a distant location.</p><p>• Skimming refers to a scenario where an attacker captures credit card data and later uses this information in fraudulent payment transactions.</p><p>• Relay attack refers to a scenario where an attacker forwards the communication between a dummy credit card ("proxy") that is used to perform a payment transaction at a credit card terminal and a reader device ("mole") that accesses the real credit card.</p><p>The current trend to include NFC technology into mobile phones significantly simplifies skimming and relay attacks. NFC-enabled mobile phones can be used to access and read data from contactless credit cards as well as to emulate credit cards in a relay attack or based on data previously skimmed from a card.</p><p>In this paper, we present a new attack scenario based on skimming that can be used to create card clones that successfully perform the EMV MagStripe protocol for contactless payment cards defined in the EMV Contactless Kernel 2 specification <ref type="bibr" target="#b7">[8]</ref>. Valid dynamic card verification codes (CVC) which are necessary to authorize these payments are obtained from an original card with a pre-play approach. Further, we observed a second weakness with credit cards from various issuers which allows to downgrade a full EMV credit card to perform a contactless EMV Mag-Stripe transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Haselsteiner and Beitfuß <ref type="bibr" target="#b15">[16]</ref> describe eavesdropping as an important issue of wireless communication technologies. They suggest that, while normal communication distances for ISO/IEC 14443 and NFC are at most 10 centimeters, eavesdropping is possible even if there is a distance of several meters between the attacker and the attacked devices.</p><p>While eavesdropping extracts information from legitimate communication between a credit card and a payment terminal, skimming uses any information that could potentially be used to perform a fraudulent payment transaction. This information could be obtained through directly reading data from a card, through eavesdropping or even through social engineering. Credit card data may range from cardholder names, credit card numbers and card verification codes to digital data extracted from real credit cards. Sufficient information for skimming could be obtained by means as simple as photocopying the plastic card or by harvesting in call centers <ref type="bibr" target="#b17">[18]</ref>. However, already articles from the early 1990s <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref> explain how to decode the magnetic stripe of a credit card and how to encode this information onto a blank card in order to create a functional card clone. Today, these credit card clones are often created by harvesting magnetic stripe data as well as PIN codes at ATMs <ref type="bibr" target="#b13">[14]</ref>. With contactless payment cards, skimming may be possible even without being in physical possession of a card. For instance, Paget <ref type="bibr" target="#b22">[22]</ref> describes how to extract static data from chip-based credit cards to later encode this information onto magnetic stripe cards. Even though that information lacked card verification codes the card clones were accepted by certain merchants.</p><p>Another scenario, the relay attack, was initially described by <ref type="bibr">Conway [3]</ref> as the "Grandmaster Chess Attack" and by Desmedt et al. <ref type="bibr" target="#b4">[5]</ref> as "mafia fraud". This attack simply extends the communication distance between a genuine credit card terminal and a genuine credit card. Thus, a team of two attackers can forward the communication of a credit card terminal (operated by attacker A) to a victim's credit card (operated by attacker B). Hancke <ref type="bibr" target="#b14">[15]</ref> found that the relay attack is particularly useful in combination with contactless smartcards: In that case attacker B does not need to be in physical possession of the relayed credit card but, instead, only needs to place the mole in close proximity to the card-underattack.</p><p>The current trend to include NFC technology into mobile phones significantly simplifies skimming and relay attacks. Francis et al. <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref> propose the use of NFC-enabled mobile phones as platforms for attacks against ISO/IEC 14443 based smartcard systems. NFC-enabled mobile phones can be used in reader/writer mode to access contactless credit cards to extract data for skimming or to relay communication to a proxy in a relay attack (cf. <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>). In card emulation mode, an NFC-enabled mobile phone could be used as a card-clone in a skimming attack or as the proxy in a relay attack (cf. <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13]</ref>).</p><p>Nevertheless, particularly skimming is hindered in modern chip-based credit cards by the use of "strong cryptography". While potentially sensitive information (e.g. the credit card number, the expiry date, and -with older cards -also the cardholder's name <ref type="bibr" target="#b16">[17]</ref>) can be skimmed from contactless credit cards, this information is usually considered insufficient to conduct a fraudulent payment transaction. Though, the static information that is freely readable from the chip would be enough to pay at some online merchants (e.g. Amazon), most merchants would require the card verification code that is written on the back of the card. However, this code is not available on the chip. Instead, the chip authorizes transactions based on a secret key that is securely stored inside the smartcard chip and that cannot be read through smartcard commands.</p><p>Despite their use of secure smartcard technology and state-of-the-art cryptography, even chip-based payment cards have known weaknesses. For instance, there is a well-known issue with the offline PIN verification protocol of EMV's Chip &amp; PIN discovered by Murdoch et al. <ref type="bibr" target="#b20">[21]</ref>. This weakness allows to completely bypass PIN verification on certain cards. A new attack described by Bond et al. <ref type="bibr" target="#b1">[2]</ref> reveals that many EMV terminal implementations trade security for simplicity: Supposedly unpredictable (random) numbers generated by these implementations for use in cryptographic protocols become predictable. As a consequence, the "strong" cryptographic protocols are severely weakened. Due to the weakened cryptographic protocol, an attacker could calculate a series of transaction authorizations with a real credit card in advance. Later, these precalculated authorizations could be used on a card clone to perform actual payment transactions (or to withdraw cash at an ATM).</p><p>Our attack scenario uses an approach similar to that by Bond et al. <ref type="bibr" target="#b1">[2]</ref>. It also aims at abusing weakened cryptographic protocols to perform a preplay attack. While their approach targets specific terminal implementations that have predictable random number generators, our approach targets general limitations of the EMV contactless protocol in Mag-Stripe mode. Compared to the attack by Bond et al. <ref type="bibr" target="#b1">[2]</ref>, our attack does not require the authorized amount to be known during the pre-calculation. Moreover, our attack does not need any specific knowledge about the implementation and the initialization state of the random number generator of the terminal that is later fed with the pre-played data. However, our attack is limited by the maximum amount that can be authorized with a PIN-less contactless transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EMV Contactless Kernel 2</head><p>The EMV Contactless Specifications for Payment Systems <ref type="bibr" target="#b8">[9]</ref> come in four different flavors: Kernel 1, 2, 3, and 4. They are named "kernel" specifications as they primarily target the terminal software implementation for interacting with compliant payment cards. Each kernel specification covers the payment systems of specific credit card brands.</p><p>Our discoveries focus on the Kernel 2 Specification <ref type="bibr" target="#b7">[8]</ref>, though we have not looked for similarities in other kernel specifications. According to the specification document, Kernel 2 covers the protocols required to interact with payment cards supporting the MasterCard PayPass brand or any other payment card that explicitly requests usage of Kernel 2 <ref type="bibr" target="#b7">[8]</ref>.</p><p>The EMV protocol of Kernel 2 supports two different operating modes: emulation of the magnetic stripe system over contactless transactions (MagStripe mode) and the full EMV protocol (EMV mode).</p><p>According to MasterCard's requirement specification for PayPass M/Chip <ref type="bibr" target="#b19">[20]</ref>, a PayPass card using the MasterCard brand must always support contactless Mag-Stripe mode transactions and may optionally support EMV mode transactions. Similarly, that specification requires that MasterCard PayPass terminals must always support contactless Mag-Stripe mode transactions and may optionally support EMV mode transactions. Moreover, MasterCard's rules <ref type="bibr" target="#b18">[19]</ref> suggest that within the Single European Payment Area (SEPA), cards and terminals issued in 2011 and later must support both, PayPass EMV mode and PayPass Mag-Stripe mode. PayPass cards using the Maestro brand, however, must never support contactless Mag-Stripe <ref type="bibr" target="#b19">[20]</ref>.</p><p>In EMV mode, the static data contained in the card is signed by the card issuer. Thus, the payment terminal can verify that the card data is authentic. In addition the card signs the payment transaction using a secret key that is only known to the card and that can usually not be extracted from the card. This can be used to verify that the card itself is authentic. As a consequence, a payment terminal could even verify and store transactions authenticated by a card offline for later processing.</p><p>Compared to processing a classic magnetic stripe transaction, the authorization of EMV mode transactions requires additional interfaces between the payment terminals, the acquiring bank and the card issuer. In order to also use the existing magnetic stripe infrastructure without significant modifications, Kernel 2 supports Mag-Stripe mode.</p><p>In Mag-Stripe mode, the card stores information comparable to the data on a magnetic stripe. Instead of a static authentication code encoded into the Mag-Stripe data (or printed on the back of the card), the card generates dynamic authentication codes to authorize payments. The authentication code (dynamic card verification code, CVC3) authenticates only the card and not the contents of a payment transaction. The codes are calculated from secret key material that is only known to the card and its issuer. Besides the secret key, the dynamic CVC3 is derived from a transaction counter (ATC) that is incremented by the card for each generated code and an unpredictable number (UN) that is provided by the POS terminal. The transaction counter hinders re-use of previously used authentication codes (re-play). The unpredictable number hinders pre-generation of authentication codes on a real card for later use in fraudulent transactions (pre-play).</p><p>A typical Mag-Stripe mode contactless credit card transaction consists of the following smartcard command sequence (a detailed trace can be found in Appendix A):</p><p>1. The POS selects (SELECT command) the Proximity Payment System Environment (PPSE) and the card responds with a list of supported EMV payment applications.</p><p>2. The POS selects (SELECT command) the credit/debit card application and the card responds with application details.</p><p>3. The POS requests the credit card application's processing options (GET PROCESSING OP-TIONS command). The credit card applet responds with the application interchange profile and one or more application file locators. The application interchange profile indicates if the card supports EMV mode in addition to MagStripe mode, what types of data authentication the card supports and if cardholder verification is supported. The application file locators point to files that contain static credit card data (e.g. the Mag-Stripe data which is typically located in record 1 of an elementary file with the short file ID 1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The POS reads (READ RECORDS command)</head><p>the Mag-Stripe data from record 1 of the data file with the short file ID 1. The credit card applet responds with the Mag-Stripe version, track 1 and track 2 data. This data also contains information on how to embed the dynamic CVC3, the ATC and the UN into the track 1 and track 2 discretionary data.</p><p>5. The POS instructs the card to compute the cryptographic checksum (COMPUTE CRYP-TOGRAPHIC CHECKSUM command) for a given unpredictable number (UN). The credit card applet responds with the application transaction counter (ATC) and with the dynamically generated CVC3 for track 1 and track 2.</p><p>Most of the data exchanged in a Mag-Stripe transaction is static for all transactions (e.g. the Mag-Stripe data </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Attack Surface</head><p>During our evaluation of EMV contactless credit/ debit cards, we identified several weaknesses in Kernel 2's Mag-Stripe protocol and in current authorization systems. An attacker could use these weaknesses to create functional card clones from existing contactless payment cards.</p><p>In the first attack scenario, a pre-play attack, the attacker pre-calculates a number of dynamic card verification codes (CVC3) for the Mag-Stripe protocol from a genuine contactless Mag-Stripe card. These pre-played codes are then stored on the functional card clone and used when an authorization code is requested by the POS.</p><p>In the second attack scenario, a downgrade attack, the pre-play attack is extended to modern credit/ debit cards that support both, EMV mode and MagStripe mode by selectively hiding the EMV mode capabilities from the POS terminal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Pre-play Attack</head><p>EMV systems are known for weaknesses related to the unpredictable numbers that are used to prevent pre-play in transactions. For instance, Bond et al. <ref type="bibr" target="#b1">[2]</ref> discovered that the random number generation is weak in several ATM and POS terminal implementations. An attacker could abuse this to predict the random number sequence of a terminal or to even trigger the terminal to use a specific random number. However, their attack requires detailed knowledge of the random number generator implementation of the target terminal and may also require thorough timing of the attack.</p><p>With the Mag-Stripe protocol, the attacker does not need to rely on issues in terminal implementations. The unpredictable numbers used in the COMPUTE CRYPTOGRAPHIC CHECKSUM command are systematically weakened by the protocol design. As a result of this design flaw, the possible range of unpredictable numbers is greatly reduced.</p><p>The "Unpredictable Number (Numeric)" field used in COMPUTE CRYPTOGRAPHIC CHECKSUM is a 4-byte value. Consequently, in theory, the number could range from 0 to 4,294,967,295 (2 32 − 1). However, the EMV Kernel 2 specification <ref type="bibr" target="#b7">[8]</ref> limits the contents of this field to a BCD-encoded numeric value. BCD (binary coded decimal) is an encoding where the digits of a decimal number are used as digits in a hexadecimal number. For instance 1500 d becomes 00001500 h . Thus, each nibble of the 4-byte value can hold one decimal digit. As a result, the unpredictable number can range from 0 to 99,999,999.</p><p>While this is about 43 times less than the full range, it would still not be feasible to pre-compute authorization codes for each possible unpredictable number in that range.</p><p>However, the Mag-Stripe protocol further reduces the size of the unpredictable number to n UN digits:</p><formula xml:id="formula_0">n UN = k TRACK1 − t TRACK1 = k TRACK2 − t TRACK2 ,</formula><p>where k TRACKx is the number of bits set in the "Track x bit map for UN and ATC" (BMAP ATC, UN, TRACKx ) and t TRACKx is the "Track x number of ATC digits". Both values are stored in the card's Mag-Stripe data file.</p><p>BMAP ATC, UN, TRACKx is the bit mask that defines the positions within the discretionary data of track x where the unpredictable number and the application transaction counter will be embedded. Typical values that we encountered during our tests were 00000000FE00 h for track 1 and 1FC0 h for track 2.</p><p>t TRACKx is the size (in digits) of the application transaction counter. A typical value that we encountered during our tests is 04 h .</p><p>Based on these values we can calculate n UN :</p><formula xml:id="formula_1">BMAP ATC, UN, TRACK1 = 00000000FE00 h k TRACK1 = 7 t TRACK1 = 04 h = 4 BMAP ATC, UN, TRACK2 = 1FC0 h k TRACK2 = 7 t TRACK2 = 04 h = 4 n UN = k TRACK1 − t TRACK1 = k TRACK2 − t TRACK2 = 3</formula><p>As a consequence, the unpredictable number may have at most 3 digits. Therefore, it is in the range from 0 to 999 (more than 4,000,000 times less than the maximum possible range). Tests with various cards <ref type="table" target="#tab_1">(Table 1)</ref> revealed that the maximum size of the unpredictable number ranges between 1 and 3 in existing products (see <ref type="table" target="#tab_2">Table 2</ref>). In order to generate dynamic CVC3s, the credit/debit card application must be selected (SE-LECT) and then a sequence of GET PROCESS-ING OPTIONS followed by COMPUTE CRYPTO-GRAPHIC CHECKSUM has to be repeated for every CVC3 (cf. section 3). Using this minimum command sequence, we achieved an average computation speed of 1,000 CVC3s per minute with an Android app running on a Google Galaxy Nexus 1 for 1 We achieved similar results for a Google Nexus S.  cards 1, 2, and 3. Thus, a full set of authorization codes that covers the whole range (0 to 999) of the "Unpredictable Number (Numeric)" field can be pre-calculated in only about a minute. As a consequence, an attacker needs about a minute of communication with an EMV Mag-Stripe card to pre-generate sufficient information for performing a successful payment transaction. Opportunities to conduct such an attack could be a crowded bus or even while customers hand over their card to POS staff operating a credit card terminal.</p><p>However, the usability of this attack is limited by the application transaction counter (ATC). The CVC3 is calculated from the unpredictable number, the card data, the card's secret key and the ATC: CVC3 = f (UN, Card data, Secret card key, ATC).</p><p>The ATC increases monotonically for each transac-tion and, consequently, protects against re-play attacks. Thus, a CVC3 (and its associated ATC) that has been used in one transaction cannot be re-used in another transaction. This is true even if the unpredictable number is the same for both transactions. However, this does not affect our attack scenario as the ATC+CVC3 sets generated during the pre-play attack will not be reused by the original card for legitimate transactions anyways.</p><p>In addition to the re-play protection, the ATC may be used for a second purpose: An issuer could reject all transactions that use an ATC lower than the highest ATC received from that card in a previous transaction. Applied to our pre-play attack, this means that 1. each full set of pre-played authorization codes can only be used for one (worst-case) payment transaction and 2. the pre-played authorization codes become invalid as soon as the original card is used in a payment transaction.</p><p>Therefore, for our attack scenario we assume that issuers would block cards that use ATCs in a nonmonotonic sequence. Consequently, once an attacker uses a certain ATC+CVC3 set, all ATC+CVC3 sets with a lower ATC must be discarded. For instance, if the attacker harvests CVC3 codes for all unpredictable numbers from 0 to 999 (in incremental order), and later uses these ATC+CVC3 sets in response to the unpredictable number "4", the preplayed sets for UN = 0, 1, 2, 3, and 4 cannot be used in another transaction. Therefore, in the worst-case scenario an attacker can only perform one transaction when only one ATC+CVC3 set had been collected for each possible unpredictable number. Moreover, an attacker's "window of opportunity" closes as soon as the legitimate card is used in another transaction as all previously pre-played ATC+CVC3 sets would become invalid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Downgrade Attack</head><p>So far the pre-play attack scenario works only for Mag-Stripe mode. However, MasterCard's rules <ref type="bibr" target="#b18">[19]</ref> state that new PayPass cards and terminals issued within the Single European Payment Area (SEPA) after January 1st, 2011 must support the full PayPass M/Chip protocol (EMV mode and Mag-Stripe mode). If both, the card and the terminal, support EMV mode, they will perform an EMV mode transaction and will not fall back to Mag-Stripe mode. Therefore, a card clone that contains a copy of all static card data and the pre-played list of  <ref type="table" target="#tab_3">Table 3</ref>) revealed that terminals can be tricked into using the Mag-Stripe protocol even though the original card supports EMV mode. The attacker simply needs to change the application interchange profile contained in the response to the GET PRO-CESSING OPTIONS command: While the original application interchange profile would contain a flag that indicates support for EMV mode, the modified application interchange profile would have this flag cleared. To achieve this, the attacker could simply set the new application interchange profile to 0000. This trick works because Mag-Stripe mode does not provide any means to authenticate the data returned in response to the GET PROCESSING OPTIONS command.</p><p>As a result, an attacker could create a functional contactless Mag-Stripe card with pre-played data extracted from a genuine card that supports EMV mode. This extends the pre-play attack scenario to any Kernel-2-compatible contactless EMV card and to acceptance at any payment terminal that implements Kernel 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Mounting the Attack</head><p>We created a proof-of-concept system to verify the combined pre-play and downgrade attack scenario. The system consists of a Java Card application and an Android app. The Java Card application contains a simple Mag-Stripe credit card structure that can be filled with the contents of the Mag-Stripe data file and with a list of pre-play data. The Android app runs on a Google Galaxy Nexus (or any other NFCenabled Android device). The app collects static data (Mag-Stripe data file) and pre-play data (dynamic CVC3 codes) from a genuine credit card and stores that information in a table. The app can later transfer the collected information onto a smartcard that contains our Java Card application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Collecting Pre-play Data</head><p>In order to collect the pre-play data, the Android app accesses the genuine credit card through its contactless interface. The data is retrieved with the same command sequence that is used for regular payment transactions:</p><p>1. SELECT the Proximity Payment System Environment (PPSE).</p><p>2. SELECT the first credit/debit card application listed in the PPSE.</p><p>3. GET PROCESSING OPTIONS and extract the location of the Mag-Stripe data. </p><formula xml:id="formula_2">n UN = k TRACK1 − t TRACK1 = 7 − 4 = 3.</formula><p>6. For every possible unpredictable number (in this case for every number in the range from 0 to 999), the app issues a COMPUTE CRYPTO-GRAPHIC CHECKSUM command followed by a fresh GET PROCESSING OPTIONS command to prepare for the next CVC3 computation.</p><p>7. The result of COMPUTE CRYPTOGRAPH-IC CHECKSUM is stored in a table (cf. Table 4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Creating a Clone-Card</head><p>The card clone Java Card application runs on an NXP JCOP card and provides a rudimentary contactless EMV Mag-Stripe interface and a second interface ("CloneCard interface") to copy pre-play data onto the card. The EMV Mag-Stripe interface responds with static data structures extracted from the transaction analysis in Appendix A for the commands SELECT PPSE, SELECT credit/debit application, and GET PROCESSING OPTIONS. By using the application interchange profile of a Mag-Stripe card in response to the GET PROCESS-ING OPTIONS command, the card clone automatically performs the downgrade attack as it does not advertise EMV mode capabilities.</p><p>In response to the READ RECORDS command for the Mag-Stripe data (record 1 of the elementary file with the short file ID 1), the card clone responds with a byte array that can be customized through the CloneCard interface. The CloneCard interface provides a command SET MAGSTRIPE DATA for this purpose.</p><p>In response to COMPUTE CRYPTOGRAPHIC CHECKSUM, the card clone looks up the random number received from the POS terminal in a list of available UN+ATC+CVC3 sets and returns the ATC and the CVC3 codes. If no UN+ATC+CVC3 set is available for the given unpredictable number, the card returns the error code 6F00. The list of UN+ATC+CVC3 sets can be loaded into the card through the CloneCard interface's command SET MAGSTRIPE AUTH.</p><p>After collecting the pre-play data from a real credit card, the Android app expects the user to tap a second card with the CloneCard interface. The Android app first stores the collected MagStripe data onto the card clone with the SET MAG-STRIPE DATA command. Then, the app stores all collected UN+ATC+CVC3 sets onto the card clone using the SET MAGSTRIPE AUTH command.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Recording a Transaction Log</head><p>For every transaction, the card clone records the used unpredictable number (and whether a UN+ATC+CVC3 set was found or an error was returned) in a list. The list can be read through the CloneCard interface's command GET MAG-STRIPE HISTORY. This information is later used to analyze which unpredictable numbers were tried by the POS terminal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Improving the Attack</head><p>During our evaluation of the attack scenario, we found two ways to improve the attack:</p><p>1. It is possible to further reduce the pool of unpredictable numbers for some cards.</p><p>2. One of the POS terminals we used for our tests permits to reject a limited number of unpredictable numbers without interrupting the payment transaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Further Reducing n UN</head><p>In the Mag-Stripe protocol, the size of the unpredictable number is defined by the card with the values k TRACKx and t TRACKx :</p><formula xml:id="formula_3">n UN = k TRACKx − t TRACKx .</formula><p>As a consequence, by clearing the bits reserved for the unpredictable number in the "Track x bit map for UN and ATC" (BMAP ATC, UN, TRACKx ), k TRACKx can be reduced to t TRACKx . Therefore, n UN becomes zero. In addition, it may be necessary to set all digits of the "Track x discretionary data" that are supposed to be filled by the unpredictable number to "0". If, for example, the following data has been extracted from the Mag-Stripe data record:</p><p>• Track 1 bit map for UN and ATC:</p><p>9F63 06 00000000FE00 The POS terminal will then always use 0 as the unpredictable number. As a result, the attacker only needs to pre-play ATC+CVC3 sets for UN = 0. We found that this improvement is possible with some cards while it does not work with other cards. Specifically, the attack with UN limited to 0 worked with all cards issued by LBBW but did not work with cards issued by RBI AG. The reason is that (according to <ref type="bibr" target="#b7">[8]</ref>) n UN is sent to the card issuer as the least significant digit in the "Track x discretionary data". Therefore, an issuer has a means to detect and prevent this type of improved attack by checking if the expected n UN has been used for a transaction. Nevertheless, some issuers obviously do not have such security checks in place.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.2">Abusing Terminal-specific Weaknesses</head><p>We identified a weakness in one of the POS terminals (POS 1, see <ref type="table" target="#tab_3">Table 3</ref>) that we used for our tests of the attack: When the card returns an error code (6F00) in response to the COMPUTE CRYP-TOGRAPHIC CHECKSUM command, the terminal waits a few seconds and then retries to perform the payment transaction using a different unpredictable number. The terminal gives up only after approximately six unsuccessful tries. As a result, the card can choose between up to six unpredictable numbers. This means that the attacker does not need to pre-compute authentication codes for every possible unpredictable number. Consequently, this might be used to speed up the pre-play attack. However, we found that other POS terminals (POS 2 and 3) do not have this weakness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>We tested the attack with POS 1, 2, and 3 (see <ref type="table" target="#tab_3">Ta- ble 3</ref>) and cards 1, 2, and 3 (see <ref type="table" target="#tab_1">Table 1</ref>). Cards 2 and 3 were downgraded from full EMV mode to Mag-Stripe mode only. We were able to successfully use the improved attack with UN forced to zero for cards 1 and 2 (both issued by LBBW) on all three terminals. We tried both, the improved attack and the regular pre-play attack for card 3 (issued by RBI AG). While the regular pre-play attack was successful with all tested terminals, the improved attack for card 3 failed at all of them. <ref type="figure" target="#fig_0">Figure 1</ref> shows the resulting merchant receipts of POS 1. The tests with POS 2 and 3 had comparable results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Possible Workarounds</head><p>Our analysis of the protocols involved in transactions with EMV Contactless Kernel 2 lead to several possible workarounds to mitigate some of the above attack scenarios.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Mag-Stripe vs. EMV Mode</head><p>MasterCard's requirement specification for PayPass M/Chip <ref type="bibr" target="#b19">[20]</ref> defines that acquirers must include the following data into authorization request messages for PayPass (i.e. MasterCard contactless) transactions:</p><p>• A "POS Entry Mode" data element that indicates if the transaction has been performed using contactless EMV mode or contactless MagStripe mode.</p><p>• A "POS Terminal Device Input Capabilities" data element that indicates if the transaction has been performed at a terminal that supports both contactless EMV mode and contactless Mag-Stripe mode or at a terminal that only supports contactless Mag-Stripe mode.</p><p>The same specification demands that the issuer host is capable of understanding this information in received authorization messages. Therefore, an issuer is capable of detecting the following transaction types:</p><p>• A contactless Mag-Stripe mode transaction has been performed at a terminal that supports only contactless Mag-Stripe mode.</p><p>• A contactless Mag-Stripe mode transaction has been performed at a terminal that supports both contactless EMV mode and contactless Mag-Stripe mode.</p><p>• A contactless EMV mode transaction has been performed at a terminal that supports both contactless EMV mode and contactless Mag-Stripe mode.</p><p>In addition to that information an issuer should know if an issued card has support for the full contactless EMV protocol (including EMV mode) or if it only supports contactless Mag-Stripe mode.</p><p>As a consequence, an issuer should be capable of detecting the fraudulent case where an EMV mode capable card was used in a Mag-Stripe mode transaction at a terminal that supports EMV mode. If the issuer rejects that case, the pre-play attack can only be used if either the card or the terminal supports only Mag-Stripe mode. A condition that, for instance, should never be the case for new cards and terminals within the Single European Payment Area (SEPA). However, our tests revealed that issuers do not currently perform such checks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Inhibiting the Improved Attack</head><p>During our analysis we found that some cards (or more specifically one of the involved issuers) accepts transactions even if the unpredictable number is forced to zero. This would significantly improve the pre-play attack as the pre-calculation of authorization codes would be much faster. However, the EMV specification <ref type="bibr" target="#b7">[8]</ref> implemented a counter measure: n UN is sent to the issuer as the last digit in the "Track x discretionary data". Thus, an issuer has a means to detect this type of attack. Nevertheless, not all issuers have such checks in place.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Maximizing n UN</head><p>The current Mag-Stripe protocol seems to be very limited in the size of the unpredictable number. The origin of this limitation seems to be the limited number of characters/digits of the discretionary data of tracks 1 and 2. Therefore, it seems to be difficult (or even impossible) to use the full range of a 4-byte unpredictable number while staying backwards compatible. Nevertheless, our tests revealed that some issuers use a very low value for n UN . With n UN = 3, our application needs about a minute to pre-compute all UN+ATC+CVC3 sets. Incrementing n UN by one would increase the pre-computation time by a factor of 10. Thus, for n UN = 4 the precomputation would already take approximately 10 minutes. Therefore, we suggest that issuers use the maximum possible size for the unpredictable number that fits into the discretionary data of tracks 1 and 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion</head><p>In this paper we discussed a new attack scenario on contactless EMV payment cards that permits to create functional clones of such cards. Our attack uses contactless skimming to transfer data from the original card to the clone. EMV's contactless Mag-Stripe mode implements dynamic authorization codes based on random challenges sent by the point-of-sale terminal to prevent skimming. However, using an NFC-enabled smartphone and a typical credit/debit card it only takes about a minute to pre-play enough authorization codes to answer any possible challenge sent by a point-of-sale terminal. Even though, many new credit cards and terminals use the improved contactless EMV mode protocol, we found that such cards can be downgraded to the vulnerable contactless Mag-Stripe mode protocol.</p><p>We created a smartcard application that implements a basic contactless Mag-Stripe card and that can be filled with data collected from genuine credit cards. We also created an Android application that extracts the data from genuine credit cards and transfers this information onto our card clone. We verified the attack scenario by creating clones of various credit/debit cards and by successfully paying with these clones at real point-of-sale terminals. While our tests were performed under lab conditions, we used real POS terminals backed by an acquirer operating in Austria that did not differ from those used in regular roll-outs around Austria.</p><p>An analysis of the protocols involved in these payment transactions revealed that there are already several mechanisms available to partially mitigate such attacks. However, these counter measures are currently not implemented by the issuers of our cards.</p><p>We reported our findings to MasterCard. They quickly acknowledged these vulnerabilities. Nevertheless, they pointed out that their protocols and requirement documents already provide sophisticated countermeasures. Thus, it seems to be left to each card issuer to implement these measures. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Resulting merchant receipts for payment transactions using the pre-play attack. (a) is the result of card clone 1 with UN forced to 0 (ATC = 38FE, CVC3 = F940/4535). (b) is the result of card clone 2 with UN forced to 0 (ATC = 0015, CVC3 = 5F7F/1A95). (c) is the result of card clone 3 with UN forced to 0 (ATC = 2E3B, CVC3 = 74F8/ACA4). (d) is the result of card clone 3 with regular pre-play (UN = 00000676, ATC = 32DE, CVC3 = 10EB/817C).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>5 .</head><label>5</label><figDesc>POS → Card: The POS requests the credit card application's processing options (GET PROCESSING OPTIONS command): 80 A8 0000 02 8300 00 6. Card → POS: The credit card applet responds with the application interchange profile and one or more application file locators: 77 0A (Response message template) 82 02 0000 (Application interchange profile: Mag- Stripe mode only, online transactions only, no cardholder verification, etc.) 94 04 08 01 01 00 (Application file locator: Mag-Stripe data file, short file ID = 1, first record = 1, last record = 1) 9000 (Status: Success) 7. POS → Card: The POS reads (READ REC- ORDS command) the Mag-Stripe data from record 1 of the data file with the short file ID 1: 00 B2 010C 00 8. Card → POS: The credit card applet responds with the Mag-Stripe version, track 1 and track 2 information: 70 75 (Non inter-industry nested data object tem- plate) 9F6C 02 0001 (Mag-Stripe application version: Version 1) 9F62 06 000000000038 (Track 1 bit map for CVC3: The bits set in this bit map mark the positions within the track 1 discretionary data where the POS terminal should embed the obtained track 1 CVC3. Consequently, only three digits of the track 1 CVC3 are used.) 9F63 06 00000000FE00 (Track 1 bit map for UN and ATC: The bits set in this bit map mark the positions within the track 1 discretionary data where the POS terminal should embed the unpre- dictable number and the application trans- action counter. Consequently, a total of 7 digits of UN and ATC can be embedded.) 56 34 (Track 1 data) 42 (ISO/IEC 7813 structure "B" format) 3533xxxx xxxxxxxx xxxxxxxx xxxxxxxx (PAN "53xx xxxx xxxx xxxx") 5E (Field separator "ˆ") 202F (empty cardholder name " /") 5E (Field separator "ˆ") 31323132 (Expiry date "12"/"12") 313231 (Service code "121") 31393138 38323231 30303030 30303032 32313030 30303030 (Track 1 discretionary data) 9F64 01 04 (Track 1 number of ATC digits: The appli- cation transaction counter has 4 digits. As UN and ATC have 7 digits in total, the UN must be a 3 digit number.) 9F65 02 0038 (Track 2 bit map for CVC3: The bits set in this bit map mark the positions within the track 2 discretionary data where the POS terminal should embed the obtained track 2 CVC3. Consequently, only three digits of the track 2 CVC3 are used.) 9F66 02 1FC0 (Track 2 bit map for UN and ATC: The bits set in this bit map mark the positions within the track 2 discretionary data where the POS terminal should embed the unpre- dictable number and the application trans- action counter. Consequently, a total of 7 digits of UN and ATC can be embedded.) 9F6B 13 (Track 2 data) 53xx xxxx xxxx xxxx (PAN) D (Field separator) 1212 (Expiry date) 121 (Service code) 0000000000000 (Track 2 discretionary data) F (Padding) 9F67 01 04 (Track 2 number of ATC digits: The appli- cation transaction counter has 4 digits. As UN and ATC have 7 digits in total, the UN must be a 3 digit number.) 9000 (Status: Success) 9. POS → Card: The POS instructs the card to compute the cryptographic checksum for a given unpredictable number nnnnnnnn (COM- PUTE CRYPTOGRAPHIC CHECKSUM command): 80 2A 8E80 04 nnnnnnnn 00 10. Card → POS: The credit card applet responds with the application transaction counter (xxxx) and with the dynamically generated CVC3 for track 1 (yyyy) and track 2 (zzzz): 77 0F (Response message template) 9F61 02 zzzz (CVC3 Track 2) 9F60 02 yyyy (CVC3 Track 1) 9F36 02 xxxx (ATC) 9000 (Status: Success)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 1 : Tested payment cardsLBBW: Landesbank Baden-Württemberg c RBI AG: Raiffeisen Bank International AG d Bancorp: The Bancorp Bank e Vincento: Vincento Payment Solutions Limited f We</head><label>1</label><figDesc>did not use cards 4, 5, and 6 for any payment transactions or any tests that could change the internal state of the cards because the cardholders did not want their cards to be used for any activities that might get their cards blocked for abuse.</figDesc><table>Card Issuer 
Product a 
Protocol 

1 
LBBW b 
MobileTag, debit, 
Mag-Stripe 
reloadable 
only 

2 
LBBW b 
debit, reloadable 
M/Chip 

3 
RBI AG c 
PRELOAD, debit, M/Chip 
non-reloadable 

4 f 
RBI AG c 
GOLD, credit 
M/Chip 

5 f 
Bancorp d 
Google Wallet 
Mag-Stripe 
Prepaid, debit, 
only 
reloadable 

6 f 
Vincento e 
Kalixa watch2pay, 
M/Chip 
debit, reloadable 

a All cards were MasterCard PayPass cards 
compatible to EMV Contactless Kernel 2. 
b </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 : n UN , k and t for various cards</head><label>2</label><figDesc></figDesc><table>Card nUN 
kTR.1 
tTR.1 
kTR.2 
tTR.2 

1 
3 
7 
4 
7 
4 

2 
3 
7 
4 
7 
4 

3 
3 
8 
5 
8 
5 

4 
3 
8 
5 
8 
5 

5 
2 
6 
4 
6 
4 

6 
1 
6 
5 
4 
3 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><head>Table 3 : Tested POS terminals</head><label>3</label><figDesc></figDesc><table>POS Model 

1 
Hypercom Artema Hybrid 
with ViVOpay 5000 contactless 

2 
VeriFone Vx680 GPRS CTLS 

3 
Ingenico iCT250 

UN+ATC+CVC3 sets will cause a terminal to per-
form an EMV mode transaction which is not sup-
ported by that simple card clone. As a consequence, 
the pre-play attack for such a card would only work 
for terminals that support only Kernel 2's Mag-
Stripe mode. 
Nevertheless, tests with several POS terminals 
(see </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><head>Table 4 : Storage of pre-play data sets</head><label>4</label><figDesc></figDesc><table>CVC3 
UN 
ATC Track 1 Track 2 

00000000 001B 
1FE4 
2AB2 

00000001 001C 
EF32 
C91F 

· · · 

00000998 0402 
BAFD 
E01B 

00000999 
0403 
149B 
01A3 

</table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work is part of the project "High Speed RFID" within the EU program "Regionale Wettbewerbsfä-higkeit O ¨ O 2007-2013 (Regio 13)" funded by the European regional development fund (ERDF) and the Province of Upper Austria (Land Oberösterreich).</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix A Mag-Stripe Mode</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Position Statement in RFID S&amp;P Panel: RFID and the Middleman</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Financial Cryptography and Data Security</title>
		<imprint>
			<biblScope unit="volume">4886</biblScope>
			<biblScope unit="page" from="46" to="49" />
			<date type="published" when="2007" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
	<note>LNCS</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Chip and Skim: cloning EMV cards with the pre-play attack</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Choudary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Murdoch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Skorobogatov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anderson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
		<idno type="arXiv">arXiv:1209.2531[cs.CY]</idno>
	</analytic>
	<monogr>
		<title level="m">Computing Research Repository (CoRR)</title>
		<imprint>
			<date type="published" when="2012-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">On Numbers and Games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Conway</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Count</forename><surname>Zero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Card-O-Rama</surname></persName>
		</author>
		<title level="m">Magnetic Stripe Technology and Beyond. In Phrack</title>
		<imprint>
			<date type="published" when="1992-11" />
			<biblScope unit="volume">37</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Special Uses and Abuses of the Fiat-Shamir Passport Protocol (extended abstract)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Desmedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Goutier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bengio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -CRYPTO &apos;87</title>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1988" />
			<biblScope unit="volume">293</biblScope>
			<biblScope unit="page" from="21" to="39" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mabuse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Magneetkaarten</surname></persName>
		</author>
		<title level="m">Hack-Tic</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Magneetkaarten deel II</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mabuse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hack-Tic</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Contactless Specifications for Payment Systems -Book C-2: Kernel 2 Specification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Emvco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Emv</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<title level="m">Contactless Specifications for Payment Systems (Books A-D)</title>
		<imprint>
			<date type="published" when="2011-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Potential misuse of NFC enabled mobile phones with embedded security elements as contactless attack platforms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Markantonakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Workshop on RFID Security and Cryptography (RISC&apos;09</title>
		<meeting>the 1st International Workshop on RFID Security and Cryptography (RISC&apos;09<address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On the security issues of NFC enabled mobile phones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Markantonakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Int. J. Internet Technology and Secured Transactions</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="336" to="356" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Practical NFC Peer-to-Peer Relay Attack Using Mobile Phones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Markantonakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Radio Frequency Identification: Security and Privacy Issues</title>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010" />
			<biblScope unit="volume">6370</biblScope>
			<biblScope unit="page" from="35" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Practical Relay Attack on Contactless Transactions by Using NFC Mobile Phones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Markantonakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cryptology ePrint Archive</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
<note type="report_type">Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Automated robbery: how card skimmers (still) steal millions from banks. Ars Technica</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gallagher</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A Practical Relay Attack on ISO 14443 Proximity Cards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Hancke</surname></persName>
		</author>
		<ptr target="http://www.rfidblog.org.uk/hancke-rfidrelay.pdf" />
		<imprint>
			<date type="published" when="2005-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Security in Near Field Communication (NFC) -Strengths and Weaknesses</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Haselsteiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Breitfuß</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on RFID Security</title>
		<meeting><address><addrLine>Graz, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006-07" />
		</imprint>
	</monogr>
	<note>RFIDsec 06</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Vulnerabilities in First-Generation RFID-enabled Credit Cards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Heydt-Benjamin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">V</forename><surname>Bailey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hare</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Financial Cryptography and Data Security</title>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007" />
			<biblScope unit="volume">4886</biblScope>
			<biblScope unit="page" from="2" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Overseas credit card scam exposed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Little</surname></persName>
		</author>
		<ptr target="http://news.bbc.co.uk/2/hi/uk_news/7953401.stm" />
		<imprint>
			<date type="published" when="2009-03" />
		</imprint>
	</monogr>
<note type="report_type">BBC News</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">MasterCard Rules</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mastercard</forename><surname>Worldwide</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">PayPass -M/Chip Requirements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mastercard</forename><surname>Worldwide</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Chip and PIN is Broken</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Murdoch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Drimer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bond</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Security and Privacy (S&amp;P)</title>
		<meeting>the IEEE Symposium on Security and Privacy (S&amp;P)</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ieee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Oakland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Usa</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2010-05" />
			<biblScope unit="page" from="433" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Credit Card Fraud -The Contactless Generation. Presentation at ShmooCon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Paget</surname></persName>
		</author>
		<ptr target="http://www.shmoocon.org/2012/presentations/Paget_shmoocon2012-credit-cards.pdf" />
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Applying recent secure element relay attack scenarios to the real world</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roland</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1209.0875[cs.CR]</idno>
	</analytic>
	<monogr>
		<title level="m">Google Wallet Relay Attack. Computing Research Repository (CoRR)</title>
		<imprint>
			<date type="published" when="2012-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Department of Computational Perception</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013-01" />
		</imprint>
		<respStmt>
			<orgName>Johannes Kepler University Linz</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
	<note>Security Issues in Mobile NFC Devices</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Applying Relay Attacks to Google Wallet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Langer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scharinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth International Workshop on Near Field Communication (NFC 2013</title>
		<meeting>the Fifth International Workshop on Near Field Communication (NFC 2013<address><addrLine>Zurich, Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">The Long Life and Imminent Death of the Mag-Stripe Card</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Svigals</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Spectrum</title>
		<imprint>
			<date type="published" when="2012-06" />
			<biblScope unit="volume">49</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
