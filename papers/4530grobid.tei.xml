<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:24+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Composition and Substitution in Provenance and Workflows</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Buneman</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Edinburgh</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<orgName type="institution" key="instit3">University of Edinburgh</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Adrì</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Edinburgh</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<orgName type="institution" key="instit3">University of Edinburgh</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gascón</forename></persName>
							<email>agascon@inf.ed.ac.uk</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Edinburgh</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<orgName type="institution" key="instit3">University of Edinburgh</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dave</forename><surname>Murray-Rust</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Edinburgh</orgName>
								<orgName type="institution" key="instit2">University of Edinburgh</orgName>
								<orgName type="institution" key="instit3">University of Edinburgh</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Composition and Substitution in Provenance and Workflows</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>provenance</term>
					<term>composition</term>
					<term>substitution</term>
					<term>abstraction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>It is generally accepted that any comprehensive provenance model must allow one to describe provenance at various levels of gran-ularity. For example, if we have a provenance graph of a process which has nodes to describe subprocesses, we need a method of expanding these nodes to obtain a more detailed provenance graph. To date, most of the work that has attempted to formalize this notion has adopted a descriptive approach to this issue: for example, given two provenance graphs under what conditions is one &quot;finer grained&quot; than another. In this paper we take an operational approach. For example, given two provenance graphs of interacting processes, what does it mean to compose those graphs? Also, given a provenance graph of a process and a provenance graph of one of its subprocesses, what is the operation of substitution that allows us to expand the graph into a finer-grained graph? As well as provenance graphs, these questions also apply to workflow graphs and other process models that occur in computer science. We propose a model and operations that addresses these problems. While it is only one of a number of possible solutions, it does indicate that a basic adjustment to provenance models is needed if they are properly to accommodate such an operational approach to composition and substitution.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>One of the long-standing issues in the study of provenance is what it means to view provenance at various levels of granularity. From a practical perspective, it is important to have a systematic way of representing data at an appropriate level of abstraction. For example, in ), an abstraction mechanism called abstraction by grouping, is proposed for PROV ( <ref type="bibr" target="#b10">Moreau and Missier 2013)</ref> graphs. Broadly speaking, it consists of replacing a set of nodes in a PROV graph by a new node while preserving certain type constraints that guarantee that the result of the abstraction is again a PROV graph. The motivation is twofold: simplifying provenance data for an intended audience, and hiding sensitive data. From another perspective, provenance data abstraction shows up in attempts to reconcile workflow provenance and data provenance <ref type="bibr">(Amster- damer et al. 2011</ref>).</p><p>Now one of the advantages of the PROV model (Moreau and Missier 2013; Moreau and Groth 2013) is its claimed support Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.  f (x, y) = <ref type="figure">Figure 1</ref>. An attempt to specify graph abstraction for various levels of granularity or for "subactivities" 1 , and while the cited research formalizes what it means for one graph to be a coarser-grained representation of another graph, we would like this form of abstraction to be invertible: how do we synthesize a finer-grained version of provenance graph from a coarser-grained one? <ref type="figure">Figure 1</ref> loosely illustrates this. There is a graph G1 with three similar subgraphs which differ only by a label at one of the nodes. One could imagine generating these subgraphs with a function f (x) where x is the label, and then representing the whole graph by G2 with nodes -activities in PROV parlance-represented by applications of f . However, when it comes to inverting this transformation, we immediately see that there is a "plumbing" problem. How do we establish the relationship between the inputs to f (x) and the edges in the graph G2? We are asking for some graph-theoretic model of abstraction that could apply, for example, both to workflow and to provenance graphs. One can also see this as a form of compression that works, say, on PROV graphs in such a way that the compressed graphs are also PROV graphs. In that case, one would certainly want such an inversion. Even if we ignore issues concerning granularity or compression, there are certainly non-commutative operations for which we should surely record the order of inputs, such as in the confusing use of subtraction in <ref type="figure">Figure 1</ref>. There is a related problem of provenance composition: suppose we have recorded provenance for two processes that are somehow related -perhaps they are processes that have communicated with each other. How do we record this communication and how do we compose the two graphs into a unified provenance record? This issue has been addressed in systems that support decentralized prove-nance ( <ref type="bibr" target="#b7">Gehani et al. 2010</ref>). We are interested in a formal approach to the problem, which requires identifying the key properties of a suitable data model, query language, and, more concretely, a notion of composition. We believe that our model presented in Section 2 is a step forward towards that goal.</p><p>Graph substitution and composition do not look like particularly new problems to computer science and there is certainly related work. Although graph rewriting (Rozenberg 1997) does not directly address this problem, ( <ref type="bibr" target="#b6">Drewes et al. 1997;</ref><ref type="bibr">Engelfriet 1997</ref>) use hypergraphs to address an issue similar to the one we are discussing. The hypergraph edges contained labeled sets of nodes. If one interchanges the rôles of edges and nodes, one arrives at a model with some similarity to the model we exploit. Recursive state machines ( <ref type="bibr" target="#b0">Alur et al. 2005</ref>) require a model in which a state of one automaton can be expanded into another automaton. Although finite state machines are very different beasts from workflows and provenance models, op cit asks questions about reachability, which might be relevant to people interested in provenance. Closely related to this and to what we propose is the use of graph grammars ( <ref type="bibr" target="#b3">Bao et al. 2012</ref>) to describe substitution in the context of hierarchical workflow models. The model is used to good effect in a system that describes how much provenance can be revealed without compromising privacy, ( ) use a model in which nodes have labeled input and output ports.</p><p>Following these ideas, we investigate a model in which the basic components are boxes with labeled input and output ports, and the operations that combine networks built out of such boxes. We show some simple properties of the operations, describe a real scenario in which one needs to combine provenance. In contrast to ( <ref type="bibr" target="#b3">Bao et al. 2012</ref>) we investigate some more basic operations from which substitution can be derived. These operations also apply to non-disjoint representations, which we believe to be important for manipulating provenance graphs. We briefly discuss the relationship between this work and PROV.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">The model</head><p>Before going into formalism, and in order to motivate it, consider <ref type="figure" target="#fig_2">Figure 2</ref> which illustrates the substitution of the contents of the dotted box a in view 2 of network N , for the box f in network N . This is a simple operation in which we connect the edges pointing at the two ports at the bottom edge of a to the outgoing edges from the corresponding ports of f . Symmetrically, the edges emanating from the boundary port at the top of a to the single input edge to f . The boxes a and f disappear leaving the result N [f → N ] of the substitution.</p><p>Unfortunately this process requires two kinds of box (dotted and not dotted). What happens if we assume only one kind of box? We can achieve this by "everting" dotted box a in view 2 of network N by moving its contents to the outside. What one might have termed the output ports of the dotted box have become the input ports of the solid box and vice versa but if we take "input to" to mean "pointing at the boundary of" the diagrams are the same. Our substitution operation now becomes a symmetrical operation: join edges to the input ports of f to the corresponding output ports of a and vice versa. Let us formulate this operation and look at some of its properties.</p><p>In this and subsequent diagrams we use the convention that for any non-dotted box: the input ports are on top, the output ports are on the bottom, and the ports are numbered from left to right. Also the symbols a, b, c, . . . in <ref type="figure" target="#fig_2">Figure 2</ref> are box identifiers (members of B) not labels. For example, the various boxes with c in them are all pictures of the same member of B.</p><p>We shall assume a context of a set B of boxes together with functions O : B → N and I : B → N, which give the number of output and input ports for each box. We will be at liberty to add new boxes to B but when we do so we must fix the values of O and I on that box.</p><p>If b is a box with m inputs and n outputs, i.e., b ∈ N with O(b) = m and I(b) = n, we shall refer to b as an (m, n)-box. We shall write the i th output port of b as b →i , for 1 ≤ i ≤ O(b), and its j th input port as b ←j , for 1 ≤ j ≤ I(b). If B ⊆ B is a set of boxes, we shall use B → = {b →i | b ∈ B ∧ (1 ≤ i ≤ O(b)} for the set of all output ports of B , and similarly use B ← for all of its input ports.</p><p>Edges connect output ports to input ports, so we can define a network as a pair (B, E) where B ⊆ B and E ⊆ B → × B ← . For reasons that will emerge we can usually define a network simply by its edges and assume the boxes are those that have at least one port with an incident edge in that set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Network join</head><p>We start by defining an operation which, given a set of edges and a pair of output and input ports (p, q), produces a new set of edges where p and q are not connected and containing the edge (t, r), for every pair of ports r, t such that r is a successor of p and t is a predecessor of q. This has the effect of "bypassing" q and p in the resulting set of edges.</p><p>Defn 1. Let E be a set of edges with output port p and an input port q . The excision of (p, q) from E, exc(E, p, q) is the set of edges:</p><formula xml:id="formula_0">E \ ({(p, r) | (p, r) ∈ E} ∪ {(t, q) | (t, q) ∈ E}) ∪ {(t, r) | (p, r) ∈ E ∧ (t, q) ∈ E}</formula><p>If (p, q) and (p , q ) are both pairs of input and output ports in a network N with p = p and q = q then exc(exc <ref type="figure">(N, p, q)</ref>, p , q ) = exc(exc <ref type="figure">(N, p , q )</ref>, p, q). This commutativity means that we can extend the definition of excision to a set S of pairwise disjoint pairs of output and input ports as follows: exc(N, S) = N if S = ∅, and exc(N, S) = exc(exc(N, p, q), S ) if S = S {(p, q)}.</p><p>We are now in a position to define a join.</p><p>Defn 2. If N1 = (B1, E1) and N2 = (B2, E2) are networks with b1 a (n, m)-box in B1 and b2 a (m, n)-box in B2, define the join N1[b1; b2]N2 as the network (B1 ∪ B2, E) where E is given by:</p><formula xml:id="formula_1">exc(E1 ∪ E2, {(p, q) | (p, b ←i 1 ) ∈ E1 ∧ (b →i 2 , q) ∈ E2 ∧ 1 ≤ i ≤ n} ∪ {(p, q) | (p, b ←i 2 ) ∈ E2 ∧ (b →i 1 , q) ∈ E1 ∧ 1 ≤ i ≤ m})</formula><p>This formalizes the intuition from <ref type="figure" target="#fig_2">Figure 2</ref> that join connects the inputs of b1 to the corresponding outputs of b2 and vice versa. Note that the networks N1, N2 do not have to be disjoint, and this definition deals with self-loops, i.e. edges of the form (b →i , b ←j ), on boxes.</p><p>One of the immediate consequences of this definition is that it allows us to group any collection of boxes into a single box. If N = (B, E) and B1 ⊆ B, define an induced subnetwork N | B1 of N on B1 in the usual way. Prop 1. Let N = (B, E) and B1 ⊆ B. We can construct boxes b1, b2 and edge sets E1, E2 such that N1 = (B1 ∪ {b1}, E1) and N2 = ((B \ B1) ∪ {b2}, E2) are networks, N = N1[b1; b2]N2, N1 = N | B1 and N2 = N | (B \ B1).</p><p>In other words the subnetwork N1 can be represented as a single box, b2 within N2, and the whole network recovered with a join. We believe this to be important for provenance graphs where we understand that it should be possible to treat an arbitrary set of activities as a single activity. We remark that there is a more general version of this result in which subnetwork N1 is not required to be induced.</p><p>The join operation enjoys several other properties. The importance of this result is that we usually want to work with full networks; and in such networks, the boxes are prescribed by the set of edges. Networks that are not 1-output-bounded have redundant boxes, and we probably do not want to create such networks; however, (n, 0)-and (0, n)-boxes can be useful in the construction of networks from simpler components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Substitution</head><p>In order to define substitution following <ref type="figure" target="#fig_2">Figure 2</ref>, we need first to designate which of the boxes in the network N is going to serve as the dotted box. We therefore define an interfaced network as a triple (B, E, a), where (B, E) is a network and a ∈ B. Given I = (B, E, a) and a network N , it one naturally defines substitution via join, N [f → I] = N [f ; a]I. However this is not correct as it would substitute the same network everywhere; we need to create copies of B. In addition, to deal with the kind of substitution we want to achieve in <ref type="figure">Figure 1</ref>, we need to add labels to boxes. These can be achieved, using the hierarchical identifier scheme used in ( <ref type="bibr" target="#b0">Alur et al. 2005</ref>). We do not have the space to describe details.</p><p>It is also tempting to define N as finer-grained than N if N can be obtained from N by a series of substitutions. Consider the interfaced network I = ({a}, {(a →1 , a ←1 ), (a →1 , a ←2 )}, a). the substitution N [f → I], which should be finer-grained than N contains fewer boxes than N . One might accept this; one might ban boxes with loops such as (p →1 , p ←1 ) or one might require substitution to leave some other kind of trace (provenance of provenance). Again our discussion is limited by space.</p><p>Although we have not given a complete description of granularity, we believe that substitution and join provide the machinery for constructing a hierarchy of provenance representations. Relevant problems for provenance, such as reachability, have efficient algorithms in this setting ( <ref type="bibr" target="#b0">Alur et al. 2005;</ref><ref type="bibr" target="#b3">Bao et al. 2012</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Provenance in distributed architectures</head><p>There is what appears to be a common situation which the authors have encountered in connection with research analyses of biological and clinical data when one has distributed processing and one wants to maintain an accurate provenance record. It is of interest because it calls for the use of join rather than substitution. Consider two long-running processes A and B communicating with each  <ref type="figure">Figure 3</ref>. Provenance of communicating processes other while recording individual provenance. Hence, processes A and B maintain local provenance graphs, and A represents B as an (external) activity VB and B represents A as VA, as illustrated in <ref type="figure">Figure 3</ref>.</p><p>One such situation is where we have a scientific research team, that requires, for example, clinical data to be fed into some workflow. The provider of such data could be a hospital, which performs patient anonymization, data cleaning and preliminary aggregation before delivering it to the research team. Both parties keep a provenance record: A for the research team and B for the provider, but for obvious reasons, neither side wants to reveal their provenance record to the other party so they respectively represent each other as "black box" activities VB and VA. Now the research team detects that there may be a patient at risk. To determine that patient someone needs to combine the provenance records of A and B.</p><p>In another application one could think of A as a database server and B as a client program. To be able to diagnose a problem found in the results of a series of queries from B by analysing its provenance, one should be able to query the provenance of the server side A, which requires a representation of the joint provenance of A and B.</p><p>From both these examples, it is clear that the operation we need for forming the combined provenance is the join A[VB; VA]B. Moreover we do not want (as in substitution) to copy any boxes. Suppose A also includes a box WC that represents its interaction with a provenance graph C which includes a corresponding box WA. It is entirely possible that B and C share common substructures and we would want this to be represented in the combined provenance (A[VB; VA]B)[WC , WA]C.</p><p>From a high-level perspective, we believe that a minimal solution for representing the provenance of communicating processes should provide: (a) a representation of messages to which each party has access -together with the relationship between the message and its content; (b) a representation, within each individual provenance graph, of the processes with which it communicates; (c) a way of attributing ownership of each component of the result to the parties involved in the communication; and (d) formal guaran- <ref type="figure">Figure 4</ref>. Serial composition tees that the result of provenance composition accurately captures the full provenance of the distributed system. The representation we have proposed goes some way towards satisfying these.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Parallel and serial composition</head><p>Although we motivated the technical development with the practical need for both a substitution and a join operation, we should now confess that we do not believe that join is a fundamental operation. There are more fundamental operations of serial and parallel composition of boxes. To summarise: serial composition takes an (m, n)-box and a (l, m)-box and combines them into a (l, n)-box; serial composition combines a (m1, n1)-box and a (m2, n2)-box to produce a (m1 + m2, n1 + n2)-box. Intuitively, parallel and serial composition respectively stack boxes vertically and horizontally. <ref type="figure">Figure 4</ref> shows the serial composition of p, a (2, 3)-box, with q a (1, 2)-box to produce a (1, 3)-box, which we have identfied by p • q.</p><p>These definitions have some intriguing consequences. First, join can be implemented "on the nose" (preserving box identities) using serial composition. Second any network can be constructed, to within isomorphism, using parallel and serial composition and the basic building blocks of the form ({p, q}, {(p →1 , q ←1 )}). Compare this with series-parallel graphs which are highly restricted. It has been observed ( <ref type="bibr" target="#b2">Bao et al. 2009;</ref><ref type="bibr" target="#b4">Cohen-Boulakia et al. 2014</ref>) that series-parallel graphs are useful in the practical analysis of workflows. It is an intriguing possibility that this research could be applied, with greater effect, to more general networks as we have described them. We hope to report on both of these in the future.</p><p>Finally, while it is a simple mattter to introduce box labels, edge labels may also be needed, and they are more challenging. If edge labels represent data, as they do in ( ) then maybe we want a condition in Defn. 1 that the excision fails if the labels do not agree. However, if as is suggested by some provenance work, edge labels may be composed, we may need some kind of algebra in determining the edge labels introduced by excision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusions</head><p>We have put forward a model of networks that allows for the synthesis of provenance and workflow representations from simpler components. In addition to investigating the use of serial and parallel composition, as we have just indicated, there is the obvious question of how we can incorporate these ideas into PROV. This is something we are currently investigating in the hope that we can produce a simple recipe for combining the PROV graphs as we have suggested in Section 3. The problem is non-trivial because our current proposal is "bare bones" and, to relate it to schema of PROV requires, among other things, encoding port identifiers. Although PROV nodes do not have ports, we should note that the PROV model allows for arbitrary key-value pairs to be attached to edge relations, so it is possible to represent this information in PROV, though this may not be the most natural solution.</p><p>Representation on PROV is but one of a number of open issues. Nevertheless we hope that we have made a convincing argument that in order fully to understand granularity and in order to make better use of provenance records, we need combinatory operations on provenance graphs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>TaPP 2016 ,</head><label>2016</label><figDesc>June 8-9, 2016, Washington, DC. Copyright remains with the owner/author(s).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. A join of two networks</figDesc></figure>

			<note place="foot" n="1"> https://www.w3.org/2001/sw/wiki/PROV-FAQ, 2016-03-07.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Analysis of recursive state machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Benedikt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Etessami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Godefroid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Reps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yannakakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="786" to="818" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Putting lipstick on pig: Enabling database-style workflow provenance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">B</forename><surname>Amsterdamer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Deutch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Milo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Stoyanovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tannen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the VLDB Endowment</title>
		<meeting>the VLDB Endowment</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="346" to="357" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Differencing provenance in scientific workflows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">B</forename><surname>Cohen-Boulakia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eyal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Khanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Engineering, 2009. ICDE&apos;09. IEEE 25th International Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="808" to="819" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Labeling workflow views with fine-grained dependencies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">B</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Milo</surname></persName>
		</author>
		<idno type="doi">2150-8097.doi:10.14778/2350229.2350240</idno>
	</analytic>
	<monogr>
		<title level="j">Proc. VLDB Endow</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1208" to="1219" />
			<date type="published" when="2012-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Distilling structure in taverna scientific workflows: a refactoring approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cohen-Boulakia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Missier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Goble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Froidevaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Provenance views for module privacy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">B</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Khanna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Milo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Panigrahi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 30th ACM PODS 2011</title>
		<meeting>the 30th ACM PODS 2011</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="175" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Hyperedge replacement, graph grammars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Drewes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kreowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Habel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Graph Grammars</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag New York, Inc</publisher>
			<date type="published" when="1997" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="125" to="213" />
		</imprint>
	</monogr>
	<note>chapter Context-free Graph Grammars</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Efficient querying of distributed provenance stores</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gehani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th ACM International Symposium on High Performance Distributed Computing</title>
		<meeting>the 19th ACM International Symposium on High Performance Distributed Computing</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="613" to="621" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">ProvAbs: model, policy, and tooling for abstracting PROV graphs. CoRR, abs/1406</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Missier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bryans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Gamble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Curcin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mercaderes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Provenance: An Introduction to PROV. Synthesis Lectures on the Semantic Web: Theory and Technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Moreau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">T</forename><surname>Groth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
			<publisher>Morgan &amp; Claypool Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Moreau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Missier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Prov-Dm</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/prov-dm/" />
		<title level="m">The PROV Data Model</title>
		<imprint>
			<date type="published" when="2013-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Handbook of Graph Grammars and Computing by Graph Transformations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Rozenberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>World Scientific</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
