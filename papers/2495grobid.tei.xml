<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Adaptive Control of Apache Web Server</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erik</forename><surname>Reed</surname></persName>
							<email>erikreed@cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit3">Carnegie Mellon University Moffett Field</orgName>
								<address>
									<postCode>94035, 94035, 94035</postCode>
									<region>CA, CA, CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abe</forename><surname>Ishihara</surname></persName>
							<email>abe.ishihara@sv.cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit3">Carnegie Mellon University Moffett Field</orgName>
								<address>
									<postCode>94035, 94035, 94035</postCode>
									<region>CA, CA, CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ole</forename><forename type="middle">J</forename><surname>Mengshoel</surname></persName>
							<email>ole.mengshoel@sv.cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit2">Carnegie Mellon University Moffett Field</orgName>
								<orgName type="institution" key="instit3">Carnegie Mellon University Moffett Field</orgName>
								<address>
									<postCode>94035, 94035, 94035</postCode>
									<region>CA, CA, CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Adaptive Control of Apache Web Server</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Traffic to a Web site can vary dramatically. At the same time it is highly desirable that a Web site is reactive. To provide crisp interaction on thin clients, 150 milliseconds has been suggested as an upper bound on response time. Unfortunately, the popular Apache Web server is limited in its capabilities to be reactive under varying traffic. To address this problem, we design in this paper an adaptive controller for the Apache Web server. A modified recursive least squares algorithm is used to identify system dynamics and a minimum degree pole placement controller is implemented to adjust the maximum number of concurrent connections. Experimentally, we show that the controller effectively regulates the reply time of HTTP connection requests, and hence provides reactive response, by limiting the maximum number of connections accepted by an Apache Web server. 1 Background Abrupt spikes in the usage of certain phrases (&quot;lipstick on a pig,&quot; &quot;our entire economy is in danger,&quot; &quot;who is the real Barack Obama&quot;) in the daily news cycle have been observed [14]. Corresponding to such spikes, as well as other time-varying phenomena, traffic to a Web site can vary dramatically. In spite of such varying traffic, it is highly desirable that a Web site is reactive. To provide a crisp interactive experience on thin Web clients, 150 milliseconds has been recommended as an upper bound on response time [22]. In fact, quick and reasonably predictable user response is essential in all computer systems , not only Web services. One way to ensure quick and predictable user response is through load balancing [7]. A single server&apos;s ability to service clients is bound by multiple factors, including CPU utilization, memory capacity, bandwidth capacity , and I/O rate. Load balancing at the cluster level allows connections to be distributed to servers with the least load. Typical implementations of load balancing deal with round robin balancing for domain name service (DNS) [7]. Much of existing frameworks and previous research deal with inter-server connections and balancing , with little or no focus on dynamic parameter adjustment of individual servers. Focusing on an individual Web server rather than a cluster of machines, we investigate in this paper an alternative approach to ensuring quick and predictable user response, namely feedback control and specifically Minimum Degree Pole Placement control [5]. This can be in an environment where inter-server load balancing is already in place, or when a single server is handling Web traffic. Our interest is in the ability to manipulate parameters online to control server load in order to maximize the efficiency of each server individually under varied and changing conditions. This paper uses the Apache Web server, 1 a popular open source package [13]. Apache consists of a structured pool of workers, each its own process. 2 A master process, the Apache daemon, listens for requests and delegates HTTP communications to the worker processes. To control the rate of incoming connections, an Apache server administrator can adjust two primary settings: MaxClients (MC) and KeepAlive (KA). Depending on server load and Web activity, the Apache daemon maintains up to MC worker processes, which can in one of three states at any time: busy, idle, or thinking. Busy workers are currently processing a request and awaiting a reply; thinking workers are waiting for an HTTP request after an established connection; and idle workers are waiting for a new connection request. The KA parameter determines how long workers maintain their current connection with a client before terminating the connection (i.e. changing their state from thinking to idle). Apache 2.2 has default settings of MC = 150 worker processes and KA = 5 seconds. 1 http://httpd.apache.org/ 2 This is on a Unix-based system. Apache on Windows, which we do not investigate here, is different.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Background</head><p>Abrupt spikes in the usage of certain phrases ("lipstick on a pig," "our entire economy is in danger," "who is the real Barack Obama") in the daily news cycle have been observed <ref type="bibr" target="#b13">[14]</ref>. Corresponding to such spikes, as well as other time-varying phenomena, traffic to a Web site can vary dramatically. In spite of such varying traffic, it is highly desirable that a Web site is reactive. To provide a crisp interactive experience on thin Web clients, 150 milliseconds has been recommended as an upper bound on response time <ref type="bibr" target="#b21">[22]</ref>. In fact, quick and reasonably predictable user response is essential in all computer systems, not only Web services.</p><p>One way to ensure quick and predictable user response is through load balancing <ref type="bibr" target="#b6">[7]</ref>. A single server's ability to service clients is bound by multiple factors, including CPU utilization, memory capacity, bandwidth capacity, and I/O rate. Load balancing at the cluster level allows connections to be distributed to servers with the least load. Typical implementations of load balancing deal with round robin balancing for domain name service (DNS) <ref type="bibr" target="#b6">[7]</ref>. Much of existing frameworks and previous research deal with inter-server connections and balancing, with little or no focus on dynamic parameter adjustment of individual servers.</p><p>Focusing on an individual Web server rather than a cluster of machines, we investigate in this paper an alternative approach to ensuring quick and predictable user response, namely feedback control and specifically Minimum Degree Pole Placement control <ref type="bibr" target="#b4">[5]</ref>. This can be in an environment where inter-server load balancing is already in place, or when a single server is handling Web traffic. Our interest is in the ability to manipulate parameters online to control server load in order to maximize the efficiency of each server individually under varied and changing conditions. This paper uses the Apache Web server, 1 a popular open source package <ref type="bibr" target="#b12">[13]</ref>.</p><p>Apache consists of a structured pool of workers, each its own process. <ref type="bibr" target="#b1">2</ref> A master process, the Apache daemon, listens for requests and delegates HTTP communications to the worker processes. To control the rate of incoming connections, an Apache server administrator can adjust two primary settings: MaxClients (MC) and KeepAlive (KA). Depending on server load and Web activity, the Apache daemon maintains up to MC worker processes, which can in one of three states at any time: busy, idle, or thinking. Busy workers are currently processing a request and awaiting a reply; thinking workers are waiting for an HTTP request after an established connection; and idle workers are waiting for a new connection request. The KA parameter determines how long workers maintain their current connection with a client before terminating the connection (i.e. changing their state from thinking to idle). Apache 2.2 has default settings of MC = 150 worker processes and KA = 5 seconds. This paper uses performance from the user's perspective as a metric and input to the controller, rather than CPU-and memory-based metrics. In contrast to previous research (Section 2), our experiments include metrics such as time to connect, reply time, and requests per second. With these in mind, we derive a model in real-time and adaptive controller (Section 3). We then perform preliminary server benchmarking, an open loop simulation, and lastly test the controller using mean HTTP reply time as a setpoint (Section 4). While we use reply time as the output modeled by the system, this approach can be applied using any other metric collected by the server, such as throughput, connection error frequency, or mean time until a connection is established.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Apache Web server load has previously been modeled as a linear multiple-input multiple-output (MIMO) system <ref type="bibr" target="#b7">[8]</ref>, using input parameters KA and MC and output parameters memory and CPU usage. This MIMO model expands on previous work of single-input single-output (SISO) controllers in computing systems -in particular for congestion control <ref type="bibr" target="#b9">[10]</ref> and controlling Web server delay <ref type="bibr" target="#b15">[16]</ref>. Robertsson et al. used a PI controller and nonlinear model with simulations using Matlab <ref type="bibr" target="#b19">[20]</ref>. Abdelzaher et al. explored average requests delay as a setpoint using a feedforward predictor <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref>.</p><p>Another SISO controller using KA and MC as parameters has been researched <ref type="bibr" target="#b10">[11]</ref>. Notably, the authors concluded that SISO is insufficient to obtain accurate models for CPU, as KA and MC are not independent. The use of CPU, memory, KA , and MC was further investigated by Hellerstein and Diao, along with a queueing model to predict server response time <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b11">12]</ref>. They proposed a MIMO implementation able to capture the interactions of KA and MC for modeling memory and CPU usage <ref type="bibr" target="#b10">[11]</ref>. To control KA and MC, multiple SISO controllers (with separate controls loops for both KA and MC) were very effective when compared to a single MIMO controller. Also of interest is their averaging of data points over time before performing controller calculations.</p><p>A simple, first order linear time invariant MIMO model was created <ref type="bibr" target="#b7">[8]</ref> using inputs KA, MC and outputs CPU, MEM:</p><formula xml:id="formula_0">CPU k+1 MEM k+1 = A CPU k MEM k + B KA k MC k ,<label>(1)</label></formula><p>where A, B ∈ R 2×2 were estimated via least squares regression and k represents a discrete time interval. Various methods of traffic generation for testing performance of Web servers have also been previously researched. A closed source traffic generator termed WAGON (Web Traffic Generator and Benchmark) <ref type="bibr" target="#b14">[15]</ref> was used to simulate user generated traffic and varying amounts of I/O, memory, and CPU intensive traffic <ref type="bibr" target="#b7">[8]</ref>. Open source Web traffic generators include Apache Benchmark and Httperf. Httperf, which we adopt, has been shown to be effective in measuring Web server performance as well as mimicking user behavior <ref type="bibr" target="#b17">[18]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Algorithms and Analysis</head><p>The underlying control approach taken is the minimum degree pole placement (MDPP) control design proposed by Astrom <ref type="bibr" target="#b4">[5]</ref>. In this approach, feed-forward and feedback controllers are designed to force the open-loop system to follow a reference model. In the ideal case, model following is achieved perfectly. However, due to parametric uncertainty, this is not achieved in practice. This is the motivation to introduce reconfiguration to the control problem. During a change in plant dynamics, the control effectiveness changes, requiring a larger or smaller actuator signal to maintain desired performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Plant Modeling</head><p>There are several approaches to the modeling of computation for control applications. Here, we use linear Auto-Regressive modeling with eXogenous input or linear ARX. Nonlinear approaches, such as discrete time neural networks, may also be used. Nonlinear modeling is more complex yet may be able to capture inherent nonlinear behavior otherwise unaccounted for in ARX modeling. On the other hand, linear modeling is generally simpler to understand and implement.</p><p>We will assume a finite class of plants P (i) for i ∈ <ref type="bibr">[1, M]</ref>; the integer i denotes a specific plant or device, such as a particular server type or configuration. Suppose the plant is described by an ARX model with an additive noise term. For simplicity, we assume Gaussian noise. Denote P (i) , y (i) (k), u(k), and η(k), the plant operator, scalar output, input, and noise at sample time k, respectively.</p><p>The relationship between these quantities is given by:</p><formula xml:id="formula_1">y (i) (k) = P (i) u(k) = φ T (k − d)θ (i) + η(k)<label>(2)</label></formula><p>where φ T (k − d) denotes the regression vector and consists of a tapped delay line of input and output measurements, and θ (i) denotes a vector of parameters corresponding to the ith plant. A number of methods exist to estimate θ (i) in both batch and on-line modes. Similar ARX models have been used in modeling a number of digital processes <ref type="bibr" target="#b10">[11]</ref>. In the following we will drop the superscript (i) from the plant parameter vector. The purpose of the superscript was to indicate that there exists a family of (unknown) parameter vectors that adequately model various plant scenarios described above. The purpose of the system identification algorithm described below is to track and identify these parameter vectors that may change gradually or abruptly during online control. The reconfigurable control approach estimates θ online and then uses the estimates to update a control law (see Section 3.2) below. To estimate θ , it is typical to use the recursive least squares (RLS) method, in which we minimize the cost function</p><formula xml:id="formula_2">J = N ∑ k=1 λ N−k e 2 (k),<label>(3)</label></formula><p>where e(k) is the error between the true and estimated outputs, and λ ∈ (0, 1] is the forgetting factor. The RLS method can lead to two problems when attempting to track varying parameters. First, a small forgetting factor, needed to track fast or abrupt parameter variations can cause a large covariance matrix which could lead to covariance "blow up". Second, as the forgetting factor is decreased, the size of the data window gets smaller and it is more likely that there will exist data collinearities within the data window. The modified sequential least squares (MSLS) algorithm, which prevents singularities in the covariance matrix <ref type="bibr" target="#b16">[17]</ref>, has been proposed to deal with this issue. This is due to the reformulation of the least squares problem. The cost function to be minimized includes additional penalties on changes in the parameter values in the form of temporal and spatial constraints. Weighting matrices are included to adjust the extent of penalization on each parameter variation. For this case, we will define the cost function as</p><formula xml:id="formula_3">J = t ∑ k=1 y(k) − x T (k)θ (t) 2 λ t−k + mθ (t) − θ (t − 1) 2</formula><p>where θ (t) corresponds to the parameter estimates at time t. 3 Setting dJ dθ = 0, we get the solution</p><formula xml:id="formula_4">θ (t) = X T ˜ X + mI −1 mθ (t − 1) + ˜ X T y(t) ,</formula><p>where</p><formula xml:id="formula_5">X T = x(1) x(2) . . . x(t) ˜ X T = x(1)λ t−1 x(2)λ t−2 . . . x(t) y T (t) = y(1) y(2) . . . y(t) .</formula><p>The covariance matrix in this algorithm is now</p><formula xml:id="formula_6">P(t) = X T ˜ X + mI −1 .</formula><p>A recursive version, derived by Bodson <ref type="bibr" target="#b5">[6]</ref>, is given as</p><formula xml:id="formula_7">θ (t + 1) = θ (t) + P(t + 1)x(t + 1) y(t + 1) − x T (t + 1)θ (t) +mλ P(t + 1) (θ (t) − θ (t − 1)) .</formula><p>In conventional RLS with forgetting factor, it is typical to use the Matrix Inversion Lemma (MIL) to calculate P(t + 1). However, due to the additional penalty term, the MIL leads to the inversion of a (1 + m) × (1 + m) matrix, where m is the number of unknown parameters. Thus, the MIL does not help in this case, and hence, we opt to directly take the inverse of P(t + 1). <ref type="bibr" target="#b3">4</ref> Upon a system or configuration change we would like to adapt our controller when the parameter estimates converge. The convergence time may vary depending on factors such as input excitation. We decide to monitor the posterior prediction error</p><formula xml:id="formula_8">Prediction Error = y(t) − x T (t)θ (t − 1) .<label>(4)</label></formula><p>A tolerance is defined, and we adapt our controller when Prediction Error &gt; Tolerance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Minimum Degree Pole Placement</head><p>We base our minimum degree pole placement (MDPP) controller on previous work <ref type="bibr" target="#b4">[5]</ref>. For MDPP, let H(q) be the transfer function of the plant, where q is the forward shift operator, and A m (q), B m (q) be the reference model denominator and numerator respectively:</p><formula xml:id="formula_9">H(q) = b 0 q + b 1 q 2 + a 1 q + a 2 .</formula><p>The steady state is given by:</p><formula xml:id="formula_10">B m (1) A m (1) = B m (b 0 + b 1 ) 1 + a m 1 + a m 2 = 1 B m = 1 + a m 1 + a m 2 b 0 + b 1 ,</formula><p>where A m 1 and A m 2 are chosen parameters. Denote A, R, S, T and B = B + B − to be polynomials in q where B + is a monic polynomial with stable zeros and B − corresponds to the unstable factors. The Diophantine equation, or closed-loop characteristic polynomial, is defined by AR + B − S = A 0 A m .</p><p>Let R = R B + = R. Then,  Deriving our controller u, we have:</p><formula xml:id="formula_11">(q 2 + a 1 q + a 2 )R + (b 0 q + b 1 )S = A 0 (q 2 + A m 1 q + A m 2 ).</formula><formula xml:id="formula_12">R = q + r 1 = R (5) S = s 0 q + s 1 (6) A 0 = q + a 0 (q 2 + a 1 q + a 2 )(q + r 1 ) + (b 0 q + b 1 )(s 0 q + s 1 ) = A 0 (q 2 + a m 1 q + a m 2 )</formula><p>Lastly, we can compute T :</p><formula xml:id="formula_13">T = A 0 B m = (q + a 0 )B m<label>(7)</label></formula><p>Using Eq. 5, 6, and 7 to calculate R, T , we can now compute: u = T R u c − S R y, the control signal from our control law. A more thorough derivation of Eq. 7 and this specific controller with equivalent zero cancellation is given by Reed et al. <ref type="bibr" target="#b18">[19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiments</head><p>These experiments will measure the Apache Web server under varying numbers of connections, introduce an ARX model, and test an adaptive MDPP controller for setting the maximum number of concurrent connections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Simulation Setup and Procedure</head><p>In our simulations, we used Apache v2.2 (the latest stable release at the time of writing) running on a Linux kernel 3.0.0-14 x64 workstation with a dual core Intel T2400 and 2GB of RAM. This workstation acted as the server and hosted PHP code simulating an active blog. The Apache Web server parameters were kept at their default settings. A second workstation of similar hardware specifications, the client, sent HTTP requests concurrently to the server to simulate Web traffic. The client resided on the same LAN as the server. <ref type="figure" target="#fig_1">Figure 1</ref> shows the interactions between the client and the server. For a single HTTP request to the server (e.g. fetching index.html), we collected the following statistics: time until initial TCP connection established (T c ), time until request response (T R ), time for the request transfer/reply (T T ), as well as several other metrics not shown here due to space. To generate HTTP traffic and simulate a simple user interaction with the client, we used Httperf.</p><p>The client proceeded to generate Web traffic by queueing a list of α TCP connection requests to the server. After a connection was established, the client sent k HTTP requests to a random HTML, Javascript, or stylesheet (CSS) resource, each with probability 1 3 . A single HTTP request typically resulted in a 80KB reply by the server (80KB being the mean size of the three potentially requested resources). Since a single connection cannot handle concurrent HTTP requests, the k HTTP requests were performed sequentially; immediately after a resource was received by the client, the next resource was requested. After the connection's k requests completed, the connection was terminated by the client. Up to α connections were created concurrently by the client. Requesting multiple resources per connection leverages a persistent TCP connection depending on the request frequency and KA setting. On the server side, we denote c(t) to be the number of concurrent connections at time t and n c to be the maximum number of concurrent connections set by the server. When n c connections are active in the server, all additional connection requests were ignored until c(t) decreases. In this case, the client waited indefinitely until the server had capacity, i.e. c(t) &lt; n c (rather than terminate the connection request after a certain amount of time). Once a connection was established, a connection failure could occur if there was a TCP socket timeout (a constant supplied by the operating system), which was 20 seconds for our version of Linux.</p><p>We approximate the output y(t), the total time for an HTTP reply by the Web server (T R + T T ), withˆywithˆ withˆy(t). To model the server, we used a 2nd order SISO model defined by</p><formula xml:id="formula_14">ˆ y(t) = −a 1 ˆ y(t − 2) − a 2 ˆ y(t − 1) + b 1 u(t − 2) + b 2 u(t − 1).<label>(8)</label></formula><p>The parameter tuned by the controller, u(t), is the maximum number of concurrent connections (n c ). The parameters a 1 , a 2 , b 1 , b 2 were learned offline via least squares and online via MSLS (Section 4.3, 4.4). As with previous work <ref type="bibr" target="#b7">[8]</ref>, we define t = 10 (seconds) as an interval during which data is collected. We used the mean reply time during this interval to measure y(t).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Varying Concurrent Connections</head><p>Here we test the effect of number of concurrent connections on various metrics. On the client we set α = 1000 and k = 5; on the server n c ∈ <ref type="bibr" target="#b0">[1,</ref><ref type="bibr">25]</ref>. First we note that increasing the number of concurrent connections was beneficial to the server's throughput, measured by replies per second (RPS), up until a certain point <ref type="figure" target="#fig_0">(Figure 2a</ref>).</p><p>There was a sharp drop in RPS at n c = 10, while n c = 9 yielded peak RPS. Additionally, the standard deviation of the measurements increased substantially for n c ≥ 10. The increase in standard deviation is a result of the server hardware limits being met; the server was unable to effectively address all the HTTP requests, resulting in connection drops or timeouts. <ref type="figure" target="#fig_0">Figure 2b</ref> shows successful connection requests per second and connection errors. Connection requests per second is different from RPS in that replies are made when the connection has already been established, versus connection requests which start new TCP connections (i.e. no HTTP packet data has been sent yet). A value of n c = 9 also resulted in the peak number of successful connection requests per second (30). Since 30 connections were established per second, this means that many connections were able to complete their k = 5 HTTP requests in less than a second.</p><p>Next, <ref type="figure" target="#fig_0">Figure 2c</ref> shows the HTTP reply response (T R ) and transfer (T T ) times. Both response and transfer times increased as the number of concurrent connections increased. At n c = 7, the mean time to complete an HTTP reply (T c + T T ) was larger than one second. Interestingly, as seen in <ref type="figure" target="#fig_0">Figure 2a</ref>, the RPS is still increasing at n c = 7.</p><p>Using these measurements, we envision two scenario types that a server administrator may optimize for using a model and controller:</p><p>• Maximizing overall throughput (RPS) when quick HTTP replies are not necessary (such as when downloading large files or executing analytics Javascript).</p><p>• Ensuring that HTTP reply time is low enough to keep the user engaged; 150ms has been suggested as an upper bound for crisp user interaction <ref type="bibr" target="#b21">[22]</ref>. In Section 4.4, we recreate the latter scenario by setting a target reply time and controlling n c .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">System Identification</head><p>In this section we perform an open-loop simulation with least squares (LS) and MSLS models. To sufficiently excite the server response, we use a sinusoidal input u c (t) ∈ <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b16">17]</ref> for the max number of connections (n c ). We set α = 1000 and k = 15. After the simulation, we train the model parameters a 1 , a 2 , b 1 , b 2 of Eq. 8 using LS and MSLS (see <ref type="figure" target="#fig_2">Figure 3a)</ref>. For MSLS, we use a forgetting factor of λ = .92 and a noise reducing coefficient of m = .2. Recall that y(t) is the mean reply time over a time interval of 10 seconds. We denote y LS to be the LS estimator and y MSLS to be the MSLS estimator. Note that we use batch LS rather than RLS; that is, the parameter learning is done after all the data is known and the parameters are constant through the simulation. In contrast, the MSLS parameters are learned online and are adaptive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Adaptive MDPP Controller</head><p>This section describes two closed-loop simulations using an MSLS model for tracking y(t) and MDPP control of u(t). We denote y c (t) to the be setpoint, or target y(t) in which the controller tunes u(t) to minimize the error function e(t) = |y MSLS (t) − y c (t)| (see Eq. 8 forˆyforˆ forˆy(t)). As with Section 4.3, each timestep is 10 seconds and model parameters were set to λ = .92 and m = .2. We used load generation parameters α = 100 and k = 15. The first simulation used a setpoint of y c (t) = 100 for t &lt; 150 and y c (t) = 50 for t ≥ 150 (see <ref type="figure" target="#fig_3">Figure 4)</ref>. The measurements of y(t) are noisy, increasingly so when the setpoint is changed. At t = 150, there is an immediate shift in u(t), then the model parameters begin to relax. The volatility of the a 1 , a 2 parameters is a consequence of noise; this could likely be reduced with a greater forgetting factor λ and a greater m.</p><p>Next we performed a simulation in a high noise environment by raising the setpoint y c (t) = 1000 at timestep 150. For t &lt; 150, y c (t) was again kept at 100. We anticipated noise based off of our findings in Section 4.2. Furthermore, we adjust α to be 200 instead of 100 at t ≥ 150, doubling the load in order to simulate a spike in user activity (i.e. a change in the plant dynamics). The load parameter α was also adjusted to increase the number of effects the model parameters must adapt for. This simulation is shown in <ref type="figure" target="#fig_4">Figure 5</ref>. There was an immediate spike in y(t) at t = 150 as the controller adjusted u(t) to compensate (overestimating u(t)). The parameters took 10 timesteps to converge to a stable set of values, even with the increased y(t) noise. The parameter values and u(t) are not shown here due to space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>We have shown a Web server can be modeled and controlled to enforce metrics that affect the user experience of a client machine (e.g. HTTP reply time). Model parameters were learned real-time, and adaptive performance was strong and ostensibly resilient to noise.</p><p>In future work, we would like to include additional metrics in both the model and the controller. There are many parameters to adjust within the Apache Web server, including those in Apache modules (like amount of compression, encryption levels, caching, etc) <ref type="bibr" target="#b3">[4]</ref>. Additionally, metrics like disk I/O (which can cause significant latency in sites with large amounts of data <ref type="bibr" target="#b20">[21]</ref>) and bandwidth may be useful in creating a more effective model.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The effect of increasing the number of connections, for the Apache Web server, on its performance. (a) shows the RPS increasing until 9 concurrent connections, at which point the standard deviation increases and mean RPS decreases. The connection errors are shown in (b) and steadily rise after 9 concurrent connections. The effect of concurrent connections on mean HTTP request response (T R ) and transfer (T T ) times are shown in (c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The procedure for generating load and limiting the number of concurrent connections c(t). In this example, α = 5 and n c = c(t) = 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: (a) Model tracking of y(t) for least squares (LS) and MSLS (top), model error (middle), and the open-loop, sinusoid input for max number of connections u c (t) (bottom). (b) Learned parameter values over time for the MSLS model during an open-loop simulation (see Eq. 8).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Setpoint tracking with a change of reply time y c (t) = 100 to y c (t) = 50 at timestep 150 (top) and MDPP controller value for max connections u(t) (bottom). Note that y c (t) is shown in milliseconds.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Setpoint tracking with a simultaneous setpoint change of y c (t) = 100 to y c (t) = 1000 and load generation parameter change of α = 100 to α = 200 at t = 150.</figDesc></figure>

			<note place="foot" n="1"> http://httpd.apache.org/ 2 This is on a Unix-based system. Apache on Windows, which we do not investigate here, is different.</note>

			<note place="foot" n="3"> Here, t replaces N in (3) to indicate that there is a moving window associated with the parameter estimates. The control system at time t uses the latest parameter estimates given by θ (t).</note>

			<note place="foot" n="4"> For higher order systems, this approach may not be acceptable. Ways to reduce the order of this computation have been proposed [6].</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Web server QoS management by adaptive content delivery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdelzaher</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bhatti</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Seventh International Workshop on Quality of Service</title>
		<meeting>Seventh International Workshop on Quality of Service</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="216" to="225" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Practical application of control theory to Web services</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdelzaher</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And Hen-Riksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2004 American Control Conference</title>
		<meeting>of the 2004 American Control Conference</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1992" to="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Feedback performance control in software services</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abdelzaher</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Control Systems</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="74" to="90" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Improving the performance of Apache Web server</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abhari</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Serbinski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gusic</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2007 spring simulaiton multiconference</title>
		<meeting>of the 2007 spring simulaiton multiconference</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="166" to="169" />
		</imprint>
	</monogr>
	<note>Society for Computer Simulation International</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Adaptive control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Astrom</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wittenmark</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An adaptive algorithm with informationdependent data forgetting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bodson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 1995 American Control Conference</title>
		<meeting>of the 1995 American Control Conference</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="3485" to="3489" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Dynamic load balancing on web-server systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cardellini</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Colajanni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Internet Computing</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="28" to="39" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Using MIMO feedback control to enforce policies for interrelated metrics with application to the Apache web server</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gandhi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Parekh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tilbury</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/IFIP Network Operations and Management Symposium</title>
		<meeting>of IEEE/IFIP Network Operations and Management Symposium</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="219" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Optimizing quality of service using fuzzy control. In Management Technologies for E-Commerce and E-Business Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diao</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Parekh</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="42" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Random early detection gateways for congestion avoidance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Floyd</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jacobson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Transactions on Networking</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="397" to="413" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hellerstein</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Diao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Parekh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tilbury</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Feedback control of computing systems</title>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Control engineering for computing systems -industry experience and research challenges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hellerstein</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Diao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Parekh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tilbury</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Control Systems</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="56" to="68" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Measurement, analysis and performance improvement of the Apache Web server</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Nanda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE International Performance, Computing and Communications Conference</title>
		<meeting>of IEEE International Performance, Computing and Communications Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="261" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Meme-tracking and the dynamics of the news cycle</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leskovec</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Backstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kleinberg</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="497" to="506" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Traffic model and performance evaluation of web servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liu</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Niclausse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jalpa-Villanueva</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Performance Evaluation</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="77" to="100" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A feedback control approach for guaranteeing relative delays in Web servers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">U</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Abdelzaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Stankovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Son</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Seventh IEEE Real-Time Technology and Applications Symposium</title>
		<meeting>of Seventh IEEE Real-Time Technology and Applications Symposium</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="51" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Implementation and flight test assessment of an adaptive, reconfigurable flight control system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Monaco</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Barron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bird</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the AIAA Guidance Navigation and Control Conference</title>
		<meeting>of the AIAA Guidance Navigation and Control Conference</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="page">3738</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Httperf -a tool for measuring web server performance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mosberger</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGMETRICS Performance Evaluation Review</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="31" to="37" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Adaptive control of Bayesian network computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reed</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ishihara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mengshoel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium of Resilient Control Systems</title>
		<meeting>the International Symposium of Resilient Control Systems</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Design and evaluation of load control in Web server systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robertsson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wittenmark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kihl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andersson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2004 American Control Conference</title>
		<meeting>of the 2004 American Control Conference</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1980" to="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Understanding and addressing blocking-induced network server latency</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pai</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the USENIX Annual Technical Conference</title>
		<meeting>of the USENIX Annual Technical Conference</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="143" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Quantifying interactive user experience on thin clients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tolia</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">And</forename><surname>Satya-Narayanan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="46" to="52" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
