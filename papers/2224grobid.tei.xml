<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:32+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Bridging the Data Gap: Data Related Challenges in Evaluating Large Scale Collaborative Security Systems *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Sonchack</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Pennsylvania β Swarthmore College</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><forename type="middle">J</forename><surname>Aviv</surname></persName>
							<email>aviv@cs.swarthmore.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Pennsylvania β Swarthmore College</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Pennsylvania β Swarthmore College</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Bridging the Data Gap: Data Related Challenges in Evaluating Large Scale Collaborative Security Systems *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Data-sharing approaches such as collaborative security have been successfully applied to systems addressing multiple classes of cyber security threats. In spite of these results, scale presents a major challenge to further advances: collaborative security systems are designed to operate at a large scale (Internet-or ISP-scale), and obtaining and sharing traces suitable for experimentation is difficult. We illustrate these challenges via an analysis of recently proposed collaborative systems. We argue for the development of simulation techniques designed specifically to address these challenges and sketch one such technique , parameterized trace scaling, which expands small traces to generate realistic large scale traces sufficient for analyzing collaborative security systems.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The technique of collaborative security, where information is shared to enhance defenses, has been applied to several classes of cyber security systems such as anomaly detectors <ref type="bibr" target="#b8">[11]</ref>, blacklist generators <ref type="bibr" target="#b28">[31]</ref>, and worm signature generators <ref type="bibr" target="#b13">[16]</ref>, as well as more generally in other domains <ref type="bibr" target="#b16">[19,</ref><ref type="bibr" target="#b27">30]</ref>. The promise of such systems is great: with a broader view of network threats, more targeted defenses can be utilized. Further, networks similar to those previously attacked can preemptively install appropriate IDS or firewall rules for proactive defense, limiting and isolating incursions before they are observed locally.</p><p>The results from such systems show the high potential of collaborative security, and further advancements should be sought. Unfortunately, significant challenges exist to broad access of adequate experimental resources for evaluating collaborative security systems. Collaborative systems are designed for large-scale deployment, either at Internet or large-ISP scale. Effectively evaluating a system of this size requires access to large scale network traces, or data equivalent to such traces. Further, these traces must also contain active threats so that the security components of the system can be exercised. * This work was supported by ONR Grant N00014-12-1-0757.</p><p>Obtaining (or collecting) suitable traces can be extremely difficult. Once obtained, disseminating them broadly across the research community is nearly impossible, due to the sensitivity of real network traces. The difficulty of obtaining suitable traces effectively locks out many interested researchers from evaluating new collaborative systems, while the limitations on sharing underlying experimental data hinders the scientific process and slows the advancement of collaborative security techniques. It is important to bridge the data gap to working with large scale network traces.</p><p>We begin by illustrating the challenges to research progress in collaborative security by laying out properties of an "ideal world" for the experimental and scientific process. We use this as a baseline against which we analyze three case studies of the data challenges faced in the evaluations of proposed collaborative security systems <ref type="bibr" target="#b28">[31,</ref><ref type="bibr" target="#b13">16,</ref><ref type="bibr" target="#b25">28]</ref>. We do not argue that the proposed systems or their evaluations are flawed; on the contrary, the results are encouraging and positive. Rather, the goal of this analysis is to demonstrate the barriers to evaluation and testing, and thus to research progress.</p><p>Based on this analysis, we argue that designing simulators specifically for evaluating collaborative security systems would help solve the data gap. Current simulation tools are not well-suited for this domain, such as virtual testbeds <ref type="bibr" target="#b20">[23,</ref><ref type="bibr" target="#b14">17]</ref> or traffic generators <ref type="bibr" target="#b26">[29]</ref> because they do not provide direct control over the factors that are important to collaborative security systems, and have complex configurations that are difficult to validate against reality. The contribution we make, in addition to analyzing the underlying data issues and arguing for a simulation based solution, is the proposal of a new simulation technique that would take a first step towards overcoming the data gap. The parameterized trace scaling technique uses small traces as the basis for generating realistic, large scale simulations that can be highly parameterized to match different network settings. Such a simulator can offer many benefits, and could be used to validate and extend previous results as well as to evaluate new systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Experimental Ideals</head><p>In this section, we discuss four scientific ideals that we believe are important for experimental procedures in the collaborative security domain: (1) experimental reproducibility, (2) experimental control, (3) ground truth, and (4) experimentation at scale. As ideals, these goals are difficult to achieve, particularly in the context of large-scale security experimentation. The goal of this section is to provide a discussion of both the ideals and the challenges associated with them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Reproducibility</head><p>A key component of the scientific process is reproducibility, which enables future research to build off of previous results by reproducing them using the same procedures and input parameters. Reproducibility is particularly challenging to achieve in collaborative security research because of the sensitivity of underlying experimental data, especially network traces. First, it is difficult to acquire network traces because network operators are reluctant to share network traces for experimentation, as they may contain customer information. Second, even if data is acquired, it is difficult to receive permission to redistribute the traces.</p><p>Privacy concerns are the major reason for operator reluctance because network traces may contain records of private communications. The proper scrubbing and anonymizing of network traces is a delicate and challenging procedure <ref type="bibr" target="#b17">[20]</ref> that does not always sufficiently protect network and end-user privacy. It has been shown that releasing anonymized data still presents risks <ref type="bibr" target="#b9">[12]</ref> as well as possible legal challenges <ref type="bibr" target="#b24">[27]</ref>.</p><p>There are two viable alternatives for researchers pursuing network data that allow for easy experimental reproduction. First, researchers could perform experiments using data from publicly accessible repositories such as CAIDA <ref type="bibr" target="#b0">[1]</ref>, DShield <ref type="bibr" target="#b2">[3]</ref>, or PREDICT <ref type="bibr">[7]</ref>; however, such repositories generally contain only anonymized and scrubbed data, which limits certain evaluations, such as those of techniques that perform payload inspection. Second, researchers could use virtual testbeds such as NS <ref type="bibr" target="#b20">[23]</ref> or Mininet <ref type="bibr" target="#b14">[17]</ref>; however, traffic generated on such systems may not be realistic because they require exact, userdefined network connectivity information on a per device level that is difficult to validate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Experimental Control</head><p>Collaborative security systems operate in complex environments where there are many factors that can affect performance. The heterogeneity of a typical network environment necessitate experiments that consider the effects of varied factors on the results, which requires careful experimental control, or the ability for an experimenter to minimize the effects of factors aside from those being measured. Experimenting with traces gathered from real networks limits experimental control in two ways. First, a trace only provides a sample of the network environment from a single vantage point at a single moment, which limits the ability of researchers to generalize their results, particularly in large scale settings. Second, security factors, such as whether a host is infected when it generates certain packets, are difficult to identify using only traces, and thus even harder to control.</p><p>A common technique for increasing experimental control is trace synthesis <ref type="bibr" target="#b10">[13,</ref><ref type="bibr" target="#b11">14,</ref><ref type="bibr" target="#b16">19]</ref>, in which a background trace is mixed with a trace of malicious traffic, such as from a honeypot <ref type="bibr" target="#b6">[9,</ref><ref type="bibr" target="#b19">22]</ref>. This technique fails because synthesized traces may contain unintended artifacts. For example, network traces of a worm or botnet collected in a testbed may not be the same as a trace collected in a live network infection. These artifacts would render the malicious traffic easier to detect in synthesized traces.</p><p>An alternative to trace synthesis is network simulation; however, existing simulation tools are not wellsuited for evaluating collaborative security systems. Virtual testbeds <ref type="bibr" target="#b20">[23,</ref><ref type="bibr" target="#b14">17]</ref> allow users to control low level factors such as network link properties and the code executed on devices, but not higher level factors which are important to collaborative security, such as inter-network correlation. Traffic generating tools <ref type="bibr" target="#b26">[29]</ref> provide control over statistical properties of packet, such as packet interarrivals, but do not generate packet payloads, which are necessary to experiment with many collaborative cyber security systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Ground Truth</head><p>The goal of many collaborative security systems is to identify malicious traffic, and the evaluation metrics used, such as detection rate (the percentage of threats identified) and false positive rate (the percentage of non threats identified as threats), require detailed knowledge of what is and what is not malicious traffic. Measuring accuracy with such metrics requires ground truth: knowledge of which evaluation traffic is malicious.</p><p>Determining ground truth for network traffic is difficult even with access to the end host. In most cases researchers do not have direct access to the end hosts in a trace because the network domains are outside the researchers' control. Further, many publicly available traces are not current, and network configurations may have changed, even if end host access was reasonable. Most publicly available traces are also incomplete for privacy reasons and have payloads removed, source addresses anonymized, or are sampled, which makes determining ground truth even more of a challenge.</p><p>Due to the challenges of determining ground truth, many evaluations use metrics that are not based upon it, focusing instead on measurements such as response time or the volume of traffic detected <ref type="bibr" target="#b28">[31]</ref>. These metrics are useful but cannot measure detection accuracy. Alternately, some evaluations use an existing detection technique to determine ground truth <ref type="bibr" target="#b13">[16]</ref> and then measure performance of the new system based on a comparison. Unfortunately, the accuracy of such partial ground truth depends on the secondary detection system, which may have both false positives and true negatives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Experimentation at Scale</head><p>Collaborative security systems are designed to leverage information gathered from multiple networks. The scale, or the total number and size of the participating networks, can greatly affect the results, and important questions about collaborative security systems can only be answered by experimentation at scale. That is, the experimentation should use a data set that is large enough to reflect the scale for which the system or technique was designed.</p><p>Experimenting at scale compounds the challenges of the previously discussed ideals. Reproducibility is now particularly difficult to achieve because multiple networks would need to release data. Experimental control and ground truth continue to be problematic because network data at this scale is harder to analyze thoroughly. There are publicly available data sets and simulation techniques that are applicable for large scale experimentation; however, as previously described, there are serious drawbacks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Case Studies</head><p>In this section, we analyze the practical challenges of collaborative security experimentation. We present three case studies that examine proposed collaborative security systems: Highly Predictive Blacklisting <ref type="bibr" target="#b28">[31]</ref>, Autograph <ref type="bibr" target="#b13">[16]</ref>, and an Internet scale detection technique <ref type="bibr" target="#b25">[28]</ref>. These systems are promising, and their evaluations show the potential for collaboration as a network security technique. However, there are common data related challenges to meeting experimental ideals in the evaluations of these systems. We examine how well each evaluation meets the experimental ideals and identify the underlying data related challenges. We summarize the results of our analysis in <ref type="table">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Highly Predictive Blacklisting</head><p>Collaborative blacklisting systems generate IP address blacklists by analyzing logs submitted by participating networks. Highly Predictive Blacklisting <ref type="bibr" target="#b28">[31]</ref> computes a relevance and severity score for each IP address that appears in submitted logs, and then combines these scores to generate a blacklist specific to each collaborator. This approach to blacklist generation is based on the observation that attackers tend to target small, stable sets of networks <ref type="bibr" target="#b12">[15]</ref>. Therefore, generating effective blacklists depends not only on determining which IP addresses are malicious, but also who they are likely to attack.</p><p>The evaluation of this system used a set of over 700 million log entries from intrusion detection system (IDS) submitted to DShield <ref type="bibr" target="#b2">[3]</ref> by more than 1500 networks over a two month period of time. System performance was measured primarily on hit count: the number of IP addresses blocked by the blacklist. With respect to this metric, the evaluation showed that the Highly Predictive Blacklisting system produced much better blacklists than other common heuristics for blacklist generation. Reproducibility: The data used to evaluate the Highly Predictive Blacklisting system was provided by DShield <ref type="bibr" target="#b2">[3]</ref>, a community-based IDS log correlation system. DShield allows researchers to obtain data for non-commercial purposes, provided they agree to certain standards, such as protecting the data from improper disclosure <ref type="bibr" target="#b3">[5]</ref>. Since most researchers can obtain data similar to that used in the original evaluation, the results are likely reproducible. Experimental Control: The evaluation controlled for two factors: time and network perspective. The dynamics of the Internet dictate that the alerts submitted to the blacklist system will vary over time. To control for temporal changes, the evaluation splits the 60 days of experimental data set into 12 intervals and shows that system performance is consistent across the intervals.</p><p>Internet traffic is also heterogeneous across networks. A large academic network, for example, is likely to carry different traffic and generate different IDS alerts than a corporate network. The performance of blacklists generated should depend on the participating network. The evaluation controls this factor by analyzing the distribution of blacklist performance across contributing networks.</p><p>However, an important factor that is not controlled in this evaluation is attacker behavior. Highly Predictive Blacklisting is motivated by the observation that attackers target small, stable groups of networks <ref type="bibr" target="#b12">[15]</ref>. Without control for attacker behavior, it is difficult to determine whether the system accurately models this phenomenon. Controlling for this factor requires an understanding of the attacker behaviors present in the underlying data. It is difficult enough to determine which records correspond to attacks (see below), let alone accurately track specific behaviors. Ground Truth: Unfortunately, there is no ground truth in the data used in experimentation because it cannot be determined directly if an IP on a blacklist is truly malicious. Ground truth is required to measure blacklist accuracy with metrics like detection rate and false positive rate. Without ground truth, these standard accuracy metrics cannot be measured, and instead, the evaluation focuses on hit count, a metric that does not reflect accuracy.</p><p>The lack of ground truth in this evaluation can be entirely attributed to the data set used, which consists of over 700 million IDS logs. An IDS alert does not necessarily imply a malicious event as false alerts are common, and it is impossible to investigate an alert further without, at the very least, access to the traffic that triggered it. Evaluation at Scale: All experiments in this evaluation are done using a very large scale data set containing logs from over 1500 networks. The authors of this system even went beyond the ideal of evaluation at scale, by implementing and deploying a prototype system that is still accessible today <ref type="bibr">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Autograph</head><p>Autograph <ref type="bibr" target="#b13">[16]</ref> generates signatures that an IDS can use to detect worm traffic. The system operates in two phases: a suspicious flow collection phase that gathers network flows from hosts suspected of propagating worms, and a signature generation phase that automatically derives IDS signatures from the collected flow payloads. Autograph deployments collaborate by sharing the IP addresses of hosts suspected to be infected, which enables faster responses to outbreaks.</p><p>Autograph is evaluated in two parts. The first part analyzes the quality of signatures generated by Autograph using network traces collected from large lab networks. The second part of the evaluation analyzes the benefit of collaboration in Autograph using a simulation based on models found in <ref type="bibr" target="#b15">[18]</ref>. Reproducibility: The evaluation of Autograph's automatic IDS signature generation is difficult to reproduce. The network traces used to evaluate the signature generator were collected on a large laboratory network with full packet payloads. The traces used in these experiments were not made publicly available, and due to the dynamic nature of the Internet, it is unclear that even a similarly acquired network trace would have the same characteristics as the original analysis. As noted previously, just collecting a trace of this scale, regardless of network characteristics, is challenging in its own right. Unfortunately, evaluations of systems like Autograph that require inspection of packet payloads are extremely difficult to reproduce. The original data is too sensitive for public release; already publicly available data sets are insufficient due to a lack of payloads; and, simulated traffic generators do not produce reasonable payloads.</p><p>The collaborative side of Autograph is evaluated using a worm propagation model, which is reproducible with well-specified parameters. The simulation only models the probing characteristics of a worm outbreak and not the packet level characteristics. Thus, the performance of the system, in total, depends on both the ability to generate IDS rules and properly distribute them, which the reproducible simulation alone cannot provide.</p><p>Experimental Control: The IDS rule generator will be directly affected by worm behavior; however, only one aspect of worm behavior was controlled, the amount of randomization in worm exploit code. Other worm propagation behavior, such as probing targets, infection vectors and infection rate, were not part of the experimental control, which is understandable given the challenge of collecting live traffic with security threats. Even still, the evaluation presents strong evidence that Autograph can generate effective signatures for several worm varieties, but without proper controls it is difficult to determine if there are kinds of worm behavior that Autograph performs well (or poorly) against.</p><p>The second part of the evaluation, which analyzed the benefit of collaboration for decreasing response time to a worm outbreak, had more experimental controls. These experiments were done using a model based simulation, and so all of the factors that affected system performance were directly controlled as input to the model. Ground Truth: Autograph used a partial ground truth to evaluate the detection rate of the system. The partial ground truth was provided by replaying the collected traces through the Bro <ref type="bibr" target="#b18">[21]</ref> IDS; that is, if Bro with its signatures declared a network flow as malicious, it was considered as part of the ground truth in the evaluation of Autograph. Unfortunately, this method of determining ground truth is insufficient as the false positive rate of an IDS is already relatively high, and the authors of Autograph even mentioned several false alerts.</p><p>The primary limitation of partial ground truth is that it changes the meaning of accuracy metrics. Instead of being absolute measures of performance, they become measures of performance relative to a reference system. For example, detection rate measured using partial ground truth does not illustrate how many threats a system can detect, but rather how many threats a system can detect out of the threats detectable by the reference system. However, for evaluations such as this, which analyze a system's performance across millions of flows previously collected at multiple networks, the choice is not between partial ground truth and absolute ground truth, but rather between partial ground truth and no ground truth. Between these two choices, it is understandable to choose a partial ground truth, which provides some accuracy metrics rather than none. Evaluation at Scale: The collaborative aspect of Autograph is designed to share the IP addresses of hosts that independent deployments believe are infected. This is evaluated using a simulation that models the outbreak of a worm across 338, 652 vulnerable hosts. Unfortunately, this simulation is significantly less detailed than the traces used to evaluate the quality of generated signatures. Whereas those traces contained both malicious and innocuous traffic, this simulation only generates records for malicious events relating to worm scanning and propagation. It does not model any innocuous communications, which can affect the response time of the system, nor does it contain payloads, which means that the IDS rule generation aspect of Autograph is not evaluated at scale.</p><p>Although the simulation used in the evaluation limits experimental results, there are currently no other reasonable options for evaluating a system like Autograph at scale. It is almost impossible to collect traces from a large number of networks, publicly available traces do not contain the packet payloads needed for experimentation with signature quality, and there are no models for simulating innocuous events.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Internet Scale Detection</head><p>The effects of worm outbreaks, DDoS attacks, and other large scale network events can be felt across the Internet. Wagner et al. proposed a technique <ref type="bibr" target="#b25">[28]</ref> for detecting such events by analyzing Internet scale traffic patterns. Based on the observations that large scale Internet events skew traffic features, the proposed technique attempts to correlate the actions of thousands of hosts distributed across many networks, and would be ideal for a collaborative extension. Wagner et al. use entropy to quantify the skewness of an event; for example, the outbreak of the Blaster worm <ref type="bibr" target="#b7">[10]</ref> greatly increased the percentage of Internet traffic involving port 135, which in turn decreased the entropy of the frequency distribution of destination ports.</p><p>Wagner et al. evaluate their technique by detecting the outbreaks of the Blaster <ref type="bibr" target="#b7">[10]</ref> and Witty <ref type="bibr" target="#b23">[26]</ref> worms. They experimented on flow traces collected during the actual outbreak of these worms. All traces were collected from the SWITCH (Swiss Academic and Research Network) network, a medium-sized Swiss Internet backbone, which carries around 5% of all Swiss Internet traffic. Reproducibility: Reproducing this evaluation is clearly difficult because it requires the actual traces used for experimentation, or new traces collected at this scale that coincide with a major worm outbreak. There are a few public data sets of similar scale and detail available to researchers in the PREDICT <ref type="bibr">[7]</ref> and CAIDA <ref type="bibr" target="#b0">[1]</ref> repositories. However, we currently know of no large scale publicly available data sets from an ISP size network that contain a large scale worm outbreak. The lack of reproducibility is particularly problematic for this evaluation because Wagner et al. are advocating an approach to anomaly detection rather than a system, which presents further challenges to independent researchers advancing the proposed technique in prototype systems.</p><p>Releasing the underlying traces is likely infeasible and outside the control of the researchers. The traces were from a large ISP, and contained over 60 million flows per hour. Thus, there are significant privacy and security concerns about releasing such data, for both the ISP and its customers. Experimental Control: In order to control for worm behavior, the evaluation is broken into two sets of experiments performed on traces collected during the outbreak of different worms, the Blaster and Witty worm. The Blaster worm attacked vulnerabilities on TCP port 135 of hosts running Microsoft operating systems and infected about 200,000-500,000 hosts. The Witty worm, on the other hand, attacked firewall software over UDP, choosing target ports randomly, and only infected about 15,000 hosts. By including one set of experiments for each outbreak, the evaluation controlled for the effects of these different characteristics on the performance of the anomaly detection technique.</p><p>However, there are other important factors that were not controlled. The traces both came from the same ISP, so there was no control for vantage point, limiting the ability to analyze whether this approach would be applicable for anomaly detection at other, perhaps smaller, networks. Temporal changes in traffic are also not controlled: each set of experiments was only performed once, over the 24 hour period of time surrounding the worm outbreaks. While these controls would be ideal, it would be unreasonable to ask researchers to control for these factors because collecting just a single large scale trace with a worm outbreak is very challenging, collecting traces from multiple vantage points across federated network during a worm outbreak is even more challenging.</p><p>Ground Truth: The evaluation traces were collected during the outbreak of two quickly propagating worms that affected much of the Internet. These worms were already widely studied and easily identifiable. Thus, the ground truth of the traces is known.</p><p>Evaluation at Scale: The evaluation traces were collected at an ISP and contain a large volume of traffic from many different sources and destinations. Traffic observed at the interior of the network can differ significantly from the traffic generated at its edge due to network effects, such as routing asymmetry <ref type="bibr" target="#b4">[6]</ref>. Although the traces are <ref type="table">Table 1</ref>: How well each evaluation meets experimental ideals, and how well an evaluation could meet experimental ideals using parameterized trace scaling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Original Evaluations</head><p>Reproducibility Experimental Control Ground Truth Evaluation at Scale Highly Predictive Blacklisting Autograph Internet Scale Detection Parameterized Trace Scaling Legend: : evaluation does not meet ideal. : evaluation partially meets ideal. : evaluation meets ideal.</p><p>large scale with respect to volume, they may not accurately represent the many distinct vantage points of the Internet. This would be required to extend the technique with collaborative elements that account for varied network perspectives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Other Systems</head><p>The systems studied in this section demonstrate the benefits of collaboration in large scale security systems. Testing and advancing such collaborative techniques should be feasible for interested researchers, especially since these proposals are several years old. Some collaborative systems have been proposed more recently, such as Botgrep <ref type="bibr" target="#b16">[19]</ref>, which analyzes inter-host communication patterns to find botnets, and a web server anomaly detector <ref type="bibr" target="#b8">[11]</ref> that correlates anomalies from different domains to reduce false positive rates. Unfortunately, collaborative systems remain uncommon and the evaluations of these newer systems face similar data related challenges and limitation, illustrating that experimentation with collaborative techniques has not become more accessible or ideal since the systems studied here were proposed.</p><p>Data challenges in large scale security experimentation are not limited to the collaborative domain. Others have detailed these difficulties in evaluating several classes of network security systems: Aviv et al. <ref type="bibr" target="#b5">[8]</ref> discussed the challenges of experimenting with botnet detection systems, Rossow et al. <ref type="bibr" target="#b22">[25]</ref> outlined prudent practices for designing experiments based on malware execution, and Ringberg et al. <ref type="bibr" target="#b21">[24]</ref> argued that experimental techniques based only on network traces are insufficient for evaluating anomaly detection systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Collaborative Security Simulator</head><p>Unfortunately, many of the ideals outlined in Section 2 are not feasible given the current realities of computer security research. The public release of network traces will always be a privacy concern, and when such data is released, it is often insufficient for the task of evaluating large scale security systems. A ready solution to this issue is beyond the scope of this paper. The challenge of working with simulators, however, is more tractable.</p><p>The challenge lies in the fact that existing simulation tools are not well-suited to this style of security research, and, instead, have been designed for network protocol, routing, and congestion control experimentation. A different simulation approach for security related problems should be taken, where the simulator is specifically designed for experimentation with collaborative security.</p><p>In this section, we propose a simulation technique, parameterized trace scaling that takes a first step towards the goal of designing simulators specifically for collaborative security system research. Our technique extracts flow payloads from a small scale input trace, and then replays the flows between simulated hosts in an event driven simulation, where the events are generated using statistical models of network factors relevant to collaborative security systems. In this section, we describe the motivation for our technique and discuss its the potential benefits, limitations, and applications for collaborative security research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Trace Scaling</head><p>Security techniques that rely on content filters often require examining full packet payloads, e.g., via deep packet inspection, and it is known that these techniques can facilitate faster and more precise defenses <ref type="bibr" target="#b15">[18]</ref>. Thus, it is important that a cyber-security simulator is capable of generating traffic that contains full payloads to match the needs of these techniques.</p><p>One approach for generating payloads is simulating the individual network applications and protocols, as done by NS <ref type="bibr" target="#b20">[23]</ref>. Unfortunately, this approach is problematic because even simulating a small network would require modeling a realistic set of application level protocols. Furthermore, due to the diversity and complexity of network applications, simulated applications may not generate reasonable payloads, which would introduce artifacts that could skew results.</p><p>Instead of generating payloads using functions that simulate network connected applications, we propose to re-use the payloads from an input trace. Flows from a small scale input trace could be classified based on the application that generated them; then, when a simulated host is configured to run a certain application, it could replay flows from that application's class. Such a trace scaling technique would be easier to configure, since users would no longer have to provide code to generate traffic Frequency of payloads from each application occurring in events Payload Inter-network Correlation Frequency of hosts occurring as the source of events at each network Source for each application. It would also provide the guarantee that payloads are realistic because they have actually been observed in real traffic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Parameterization</head><p>Other factors besides payloads affect collaborative security systems, such as inter-network correlations, traffic diversity, and threat characteristics. Existing event driven simulators allow users to configure network devices, but do not allow them to tune simulations with respect to such factors. A simulator designed to analyze collaborative security systems should provide more direct control over factors important to collaborative security systems. We propose to achieve this by computing the attribute values of simulation events based on statistical models of network and Internet factors. <ref type="table" target="#tab_0">Table 2</ref> provides examples of factors important to collaborative security systems, interpretations of the factors that allow them to be modeled with statistical distributions, and event attributes that could be calculated using these distributions. Users would configure a parameterized trace scaling simulator by providing the distributions or distribution parameters that modeled desired factors. In turn, the simulator would use the distributions to generate events and produce simulations with the desired properties. Configuration of such a simulator would be simpler than that of existing simulators, and allow for a direct investigation of how collaborative system performance varies with gradual changes to statistically modeled network factors. Furthermore, configurations would be verifiable against reality: distributions and parameters can be measured from live networks as well as tested and validated independently. Validation could even be done using traces that are not directly useful in collaborative security experimentation because of, for example, anonymization or payload removal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Benefits and Limitations</head><p>Parameterized trace scaling would take a first step towards addressing the data related challenges in collaborative security system experimentation. It would facilitate reproducibility by enabling researchers to scale up small traces in a way that simulates much larger (and harder to obtain) traces underlying previous systems' evaluations. A more accurate ground truth would also be achievable because researchers could expand locally collected traces from networks under their control, and thus have access to the host level details required for determining ground truth. Experimental control would also be more straightforward due to simple parameterization. However, evaluations at scale would continue to depend on the network diversity of the input traces, and smaller network traces often contain less traffic diversity, which cannot be accounted for in the scaling technique. We summarize the benefits and limitations of parameterized traces scaling in <ref type="table">Table 1</ref>, below we demonstrate how limitations in the previous evaluations outlined in Section 3 could benefit from this simulation technique.</p><p>Highly Predictive Blacklisting:</p><p>The biggest data related challenge with the Highly Predictive Blacklisting system is a lack of ground truth, which limited the authors from reporting an accuracy metric. With the proposed simulator, this analysis could be extended using publicly available data sets where a ground truth is known. For example, the DARPA IDS evaluation data set <ref type="bibr" target="#b1">[2]</ref> could be scaled up to simulate input for the blacklisting system to not only confirm previous results but also allow the researchers to report an accuracy metric since ground truth is known in the DARPA IDS trace.</p><p>Autograph:</p><p>The data related challenges of Autograph are all due to the use of large scale traces, particularly the use of traces that require payloads. This limits reproducibility, experimental control, and ground truth. While some of these challenges were partially overcome by using a reference system to find partial ground truth and a propagation model to simulate a controlled worm outbreak, the use of parameterized trace scaling could fill these gaps further. The proposed technique will properly simulate traffic with both malicious and innocuous payloads, overcoming the large data trace challenges generally, and allowing the evaluation to broaden its experimentation to include an analysis of IDS rule generation with the worm outbreak modeling. However, issues of evaluating at scale will remain challenging because the trace scaling technique is still dependent on the traffic diversity of the input trace.</p><p>Internet Scale Detection:</p><p>The primary data challenge of the Internet Scale Detection technique is the difficulty of collecting traces that coincide with Internet scale events. This limits reproducibility and hinders experiments with respect to issues of scale, such as controlling for large malicious events and evaluating the system's effectiveness at diverse network perspectives. Parameter-ized trace scaling would enable researchers to design reproducible experiments with Internet-scale events, which would in turn enable new prototyping of the detection technique, but, again, the proposed trace scaling technique is limited in providing a broad network perspective without already diverse input traces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion and Future Work</head><p>Collaborative security systems have broad applicability and great potential for addressing large scale network security threats, as demonstrated by several recently proposed systems <ref type="bibr" target="#b28">[31,</ref><ref type="bibr" target="#b13">16,</ref><ref type="bibr" target="#b25">28]</ref>. Unfortunately, scientific progress in this area is stymied by a data gap where the requisite data to extend previously proposed systems and evaluate new systems is inaccessible to the broader research community. Acquiring, analyzing, and disseminating scale-appropriate traces is often difficult or impossible. This locks out many interested researchers and obstructs ideal experimentation. To address these issues, we argue that new simulators are needed that are specifically designed for the evaluation of security systems of this scale. We believe that parameterized trace scaling simulators would offer a solution through the process of scaling up smaller, obtainable network traces to simulate large scale traces, while also providing strong parameterized control over important environmental factors.</p><p>To this end, we have developed a small prototype of a parameterized trace scaling simulator, and, in preliminary experimentation, we have observed some of this technique's potential as a tool for collaborative security experimentation. We were able to reproduce and extend results from several of the systems analyzed in this paper using a scaled up version of the publicly available DARPA IDS evaluation trace <ref type="bibr" target="#b1">[2]</ref>. These results suggest that parameterized trace scaling is a viable option for furthering cyber-security evaluation, allowing researchers to validate results, compare systems, and build on existing analysis without the need of collecting large scale traces.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 2 : Network factors can be modeled by calculating event attribute values using statistical distributions.</head><label>2</label><figDesc></figDesc><table>Factor 
Statistical Interpretation 
Event Attribute 
Threat Prolificness 
Frequency of hosts occurring as the source of malicious events 
Source 
Traffic Diversity 
</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Caida Data</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Overview</surname></persName>
		</author>
		<ptr target="http://www.caida.org/data/overview/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Darpa ids evaluation data set</title>
		<ptr target="http://www.ll.mit.edu/mission/communications/cyber/CSTcorpora/ideval/data/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dshield</surname></persName>
		</author>
		<ptr target="http://www.dshield.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Isc Research Feed</surname></persName>
		</author>
		<ptr target="https://isc.sans.edu/researchfeed.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Observing routing asymmetry in internet traffic</title>
		<ptr target="http://www.caida.org/research/traffic-analysis/asymmetry/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Challenges in experimenting with botnet detection systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Adam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Aviv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Haeberlen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX 4th CSET Workshop</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The nepenthes platform: An efficient approach to collect malware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Baecher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Koetter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thorsten</forename><surname>Holz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maximillian</forename><surname>Dornseif</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Freiling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RAID&apos;06</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="165" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The blaster worm: Then and now</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Bailey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Evan</forename><surname>Cooke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Farnam</forename><surname>Jahanian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jose</forename><surname>Nazario</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="26" to="31" />
			<date type="published" when="2005" />
			<publisher>Security &amp; Privacy</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cross-domain collaborative anomaly detection: so far yet so close</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nathaniel</forename><surname>Boggs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sharath</forename><surname>Hiremagalore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Angelos</forename><surname>Stavrou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Salvatore</forename><forename type="middle">J</forename><surname>Stolfo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">RAID&apos;11</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="142" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Playing devil&apos;s advocate: Inferring sensitive information from anonymized network traces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Coull</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabian</forename><surname>Monrose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">K</forename><surname>Reiter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NDSS&apos;07</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="35" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Rishi: Identify bot contaminated hosts by irc nickname evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Goebel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thorsten</forename><surname>Holz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the first conference on First Workshop on Hot Topics in Understanding Botnets</title>
		<meeting>the first conference on First Workshop on Hot Topics in Understanding Botnets<address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="8" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Botminer: clustering analysis of network traffic for protocol-and structure-independent botnet detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guofei</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Perdisci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junjie</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wenke</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th conference on Security symposium</title>
		<meeting>the 17th conference on Security symposium</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="139" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Collaborating against common enemies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sachin</forename><surname>Katti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balachander</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dina</forename><surname>Katabi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM IMC</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Autograph: Toward automated, distributed worm signature detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ah</forename><surname>Hyang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brad</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Karp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th USENIX Security Symposium</title>
		<meeting>the 13th USENIX Security Symposium</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="271" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A network in a laptop: rapid prototyping for software-defined networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bob</forename><surname>Lantz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brandon</forename><surname>Heller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nick</forename><surname>Mckeown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM SIGCOMM Workshop on Hot Topics in Networks</title>
		<meeting>the 9th ACM SIGCOMM Workshop on Hot Topics in Networks</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page">19</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Internet quarantine: Requirements for containing self-propagating code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Moore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Colleen</forename><surname>Shannon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><forename type="middle">M</forename><surname>Voelker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Savage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOCOM 2003. Twenty-Second Annual Joint Conference of the IEEE Computer and Communications</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1901" to="1910" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Botgrep: finding p2p bots with structured graph analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shishir</forename><surname>Nagaraja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prateek</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chi-Yao</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Caesar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nikita</forename><surname>Borisov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th USENIX conference on Security</title>
		<meeting>the 19th USENIX conference on Security</meeting>
		<imprint>
			<publisher>USENIX Association</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="7" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">The devil and packet trace anonymization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruoming</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Allman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vern</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="38" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Bro: a system for detecting network intruders in real-time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vern</forename><surname>Paxson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer networks</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">23</biblScope>
			<biblScope unit="page" from="2435" to="2463" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Honeyd-a virtual honeypot daemon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Niels</forename><surname>Provos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th DFN-CERT Workshop</title>
		<meeting><address><addrLine>Hamburg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The georgia tech network simulator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>George F Riley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGCOMM workshop on Models, methods and tools for reproducible network research</title>
		<meeting>the ACM SIGCOMM workshop on Models, methods and tools for reproducible network research</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="5" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The need for simulation in evaluating anomaly detectors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haakon</forename><surname>Ringberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Roughan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jennifer</forename><surname>Rexford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="55" to="59" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Prudent practices for designing malware experiments: Status quo and outlook</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Rossow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Christian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Dietrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Grier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vern</forename><surname>Kreibich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Norbert</forename><surname>Paxson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Pohlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maarten</forename><surname>Bos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Steen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Security and Privacy (SP), 2012 IEEE Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="65" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The spread of the witty worm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Colleen</forename><surname>Shannon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Moore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Security &amp; Privacy</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="46" to="50" />
			<date type="published" when="2004" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Legal issues surrounding monitoring during network research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Douglas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Sicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dirk</forename><surname>Ohm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Grunwald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM SIG-COMM conference on Internet measurement</title>
		<meeting>the 7th ACM SIG-COMM conference on Internet measurement</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Entropy based worm and anomaly detection in fast ip networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arno</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernhard</forename><surname>Plattner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Enabling Technologies: Infrastructure for Collaborative Enterprise</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="172" to="177" />
		</imprint>
	</monogr>
	<note>14th IEEE International Workshops on</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Tmix: a tool for generating realistic tcp application workloads in ns-2</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prashanth</forename><surname>Michele C Weigle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Félix</forename><surname>Adurthi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Hernández-Campos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F Donelson</forename><surname>Jeffay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Communication Review</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="65" to="76" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Global intrusion detection in the domino overlay system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinod</forename><surname>Yegneswaran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Barford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Somesh</forename><surname>Jha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of NDSS</title>
		<meeting>NDSS<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Highly predictive blacklisting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Phillip</forename><surname>Porras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johannes</forename><surname>Ullrich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="107" to="122" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
