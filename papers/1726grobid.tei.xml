<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T02:08+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Git-based CTF: A Simple and Effective Approach to Organizing In-Course Attack-and-Defense Security Competition</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seongil</forename><surname>Wi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">KAIST</orgName>
								<orgName type="institution" key="instit2">KAIST</orgName>
								<address>
									<addrLine>Sang Kil Cha KAIST</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaeseung</forename><surname>Choi</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">KAIST</orgName>
								<orgName type="institution" key="instit2">KAIST</orgName>
								<address>
									<addrLine>Sang Kil Cha KAIST</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Git-based CTF: A Simple and Effective Approach to Organizing In-Course Attack-and-Defense Security Competition</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Security competitions, a.k.a., CTFs, have never been easy to run for a classroom teacher despite there being considerable body of research on these events. It is often frustrating for teachers to organize and administer such an event as doing so requires significant time and human resource investments. Creating new problems for every CTF is challenging as there are many factors to consider while developing a CTF problem such as the difficulty level of each challenge. In this paper, we propose a simple , but effective approach that we refer to as Git-based CTF to hosting an in-class attack-and-defense CTF contest while minimizing the operational costs for teachers. We share our experience and lessons learned by organizing a Git-based CTF in KAIST.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Capture The Flag (CTF), a competition that provides a legal way for the participants to demonstrate hands-on hacking skills, is gaining its momentum as a pedagogical tool in security education due to its substantial learning outcomes <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b13">14]</ref>. Since 2013, PicoCTF <ref type="bibr" target="#b10">[11]</ref> has been encouraging high school students to study computer systems in an adversarial perspective. The University of Maryland recently ran a MOOC (Massive Online Open Courseware) course <ref type="bibr" target="#b30">[31]</ref>, which aims to teach students how to build a secure software system <ref type="bibr" target="#b24">[25]</ref>.</p><p>Unfortunately, however, organizing an in-course CTF competition has never been an easy task for teachers due to the following practical challenges. C1 (Interactivity Challenge): To be realistic and educationally effective, CTF events should involve continuous interaction between attackers and defenders. However, many public CTF frameworks do not support interactivity in their designs.</p><p>C2 (Configuration Challenge): Configuring a CTF environment requires a significant amount of time and considerable skills. Especially, less experienced educators such as high school teachers can suffer from this issue.</p><p>C3 (Monitoring Challenge): There should be someone, potentially a teaching assistant, who can continually monitor and administer the CTF while it is running. Typically, a CTF lasts for days, and administering the entire event requires substantial human resources.</p><p>C4 (Contents Creation Challenge): Teachers need to invent new problems every time they run a competition as it can be trivial for students to reuse the exploitation scripts or flags used in previous competitions. Note there are typically ten to fifty problems in a CTF depending on the size of the competition. Furthermore, teachers should consider the difficulty level as well as the diversity of each problem when they create a new one.</p><p>Although there is surging research interest in tackling the above mentioned challenges, we remain unaware of any practical solution that meets all of the requirements. <ref type="table" target="#tab_0">Table 1</ref> presents a comparison between our approach and other existing CTF platforms. For instance, there are several CTF frameworks <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b28">29]</ref> that aim to ease the configuration challenge (C2), but none of the works addressed neither C3 nor C4. AutoCTF <ref type="bibr" target="#b16">[17]</ref> specifically tackles C4 by employing an automatic bug injection system called LAVA <ref type="bibr" target="#b15">[16]</ref>. However, their approach does not consider the interactivity challenge (C1), and the vulnerability pattern is fixed across problems.</p><p>Notably, BIBIFI <ref type="bibr" target="#b24">[25]</ref> mitigates the contents creation challenge (C4) by employing a so-called "build-it" phase during a competition. It divides participants into two types: (1) build-it players; who write an application given a specification written by the teacher, and (2) break-it players; who try to attack the newly created applications. Therefore, the teacher's load is reduced from creating dozens of CTF problems to simply writing a specification for an application. However, their design choice does not allow students to engage in real-time attack and defense exercises (C1). Furthermore, as noted by the authors, the teacher should manually check every submitted fix to determine whether or not it addresses a single defect at the end of the competition. That is, BIB-IFI is also associated with a monitoring challenge (C3).</p><p>In this paper, we propose a simple and powerful pedagogical framework that we call Git-based CTF with which to organize an in-course attack-and-defense CTF competition. Our approach is mainly inspired by the design of BIBIFI, but it enables regular teachers easily to host an attack-and-defense CTF as class homework by minimizing the configuration and monitoring burden. Furthermore, the content creation in Git-based CTF is at least as easy as it is with BIBIFI. That is, Git-based CTF tackles each of the aforementioned challenges (C1-C4).</p><p>First, students of Git-based CTF play the role of both attacker and defender unlike in BIBIFI. Therefore, attackers and defenders can interact with each other in real time as in typical attack-and-defense CTFs. Given that real-time attack and defense exercises can be overwhelming to students who have less experience in security <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b23">24]</ref>, we devise a means of providing direct guidance to novices for a subset of the problems in Git-based CTF ( ยง3.2).</p><p>Second, setting up a competition environment in Gitbased CTF is inexpensive and fully distributed. Students use Docker containers to run the service applications of their opponents and to develop an exploit. Although they work on their own machines, they can communicate with each other through Git and GitHub <ref type="bibr" target="#b1">[2]</ref>. Specifically, an attack in Git-based CTF involves submitting an issue to the target team's repository. The content of the issue is encrypted and only visible to the target team and the instructor(s). Since the entire attack history is stored in GitHub, the instructors can later fetch the history and verify the submitted attacks on their own machines.</p><p>Third, Git-based CTF significantly reduces the monitoring effort of the instructors. Unlike BIBIFI, we ask every student to inject vulnerabilities into a network application they prepared. By having the injection phase, we can easily check which of the injected vulnerabilities can be exploited by an attack: we can simply run the attack against both a patched and a vulnerable version of the target application. As a result, teachers can run the CTF for weeks as in a typical class homework assignment without monitoring the CTF servers.</p><p>Finally, Git-based CTF shifts the contents creation burden to students as in BIBIFI <ref type="bibr" target="#b24">[25]</ref>. However, students in Git-based CTF are naturally motivated to check the quality of the fixes of other teams in order to break them again, as each student experiences the role of both an Git-based CTF (ours)</p><p>BIBIFI <ref type="bibr" target="#b24">[25]</ref> iCTF <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b31">32]</ref> NIZKCTF <ref type="bibr" target="#b19">[20]</ref> PicoCTF <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b10">11]</ref> InCTF <ref type="bibr" target="#b23">[24]</ref> CTFd <ref type="bibr" target="#b12">[13]</ref> SecGen <ref type="bibr" target="#b26">[27]</ref> Catalyst <ref type="bibr" target="#b28">[29]</ref> Backman <ref type="bibr" target="#b3">[4]</ref> CCTF <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22]</ref> CyTrOne <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b22">23]</ref> AutoCTF <ref type="bibr" target="#b16">[17]</ref> VM-based Framework <ref type="bibr" target="#b11">[12]</ref> KYPO <ref type="bibr" target="#b33">[34]</ref> attacker and a defender. We also note that injected vulnerabilities from students typically reflect the skills and experiences of each of them. Therefore, the difficulty levels of CTF challenges are likely to be well-distributed ( ยง4).</p><p>We ran a preliminary in-course CTF with the proposed idea as part of a course activity during the Spring 2018 semester at KAIST in Korea. We ran the CTF for about two weeks, and found that the administrative cost for running the event is significantly lower than that associated with a classic attack-and-defense CTF that we ran in 2017 for the same course. We observed various kinds of vulnerabilities with a range of difficulty levels introduced by students. The students discovered 14 unintended vulnerabilities during the competition. Such unintended vulnerabilities provided the motivation for highly experienced students to become more engaged in the CTF.</p><p>Overall, this paper makes the following contributions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>CTF is a competition that involves capturing a flag as a proof of solving challenges. There are mainly two categories: (1) jeopardy style and (2) attack-and-defense style. Jeopardy-style CTFs consist of a set of problems to solve. For each problem, there is a specifically configured server that stores a flag, which is a secret string used by participants as a proof of successfully attacking the corresponding server. Jeopardy-style CTFs typically do not involve any defensive exercises: they are mostly attack-only. On the other hand, in an attack-and-defense CTF, each participant manages a server that runs a set of service applications. The participants should find vulnerabilities in the applications in order to obtain flags from the other servers, and should patch their own applications to protect their flags. Since every team should be connected to each other, it is more difficult to host an attack-and-defense CTF than a jeopardy-style one. CTFs provide participants a chance to exercise hands-on security skills, and its pedagogical value is gaining more attention recently <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b29">30]</ref>. <ref type="table" target="#tab_0">Table 1</ref> presents the comparison between existing CTF platforms with regards to the challenges we addressed in ยง1. Note that CTF platforms that focus on C1 tend to miss C3, which shows the difficulty of administering attack-and-defense CTFs over a long period as in a regular class homework or project. This paper presents a novel way to host an attack-and-defense-style CTF as a course activity while not suffering from such challenges.</p><p>GitHub <ref type="bibr" target="#b1">[2]</ref> has become an essential platform for managing open-source software. <ref type="bibr">Zagalsky et al. [36]</ref> show GitHub's collaborative features such as issue tracker and pull requests can benefit software education. There have been several attempts in security education that leverage GitHub in a CTF competition <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b24">25]</ref>. Git-based CTF follows the similar approach, but we use PGP encryption <ref type="bibr" target="#b18">[19]</ref> to securely store exploits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Git-based CTF</head><p>In this section, we describe the design of Git-based CTF. Git-based CTF consists of three phases: (1) preparation, (2) injection and (3) exercise. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates the overall flow of Git-based CTF. First, each team should prepare a network service application ( ยง3.1). Next, players inject vulnerabilities into their team's service ( ยง3.2). Lastly, players analyze other teams' services and exploit them in the exercise phase ( ยง3.3). In each phase, we adequately utilize Git <ref type="bibr" target="#b0">[1]</ref> and GitHub <ref type="bibr" target="#b1">[2]</ref> to fulfill the goal of minimizing instructors' manual effort.</p><p>Configuration. To setup a Git-based CTF, instructors first need to create and assign one GitHub repository for each team. The instructors then create a PGP key pair <ref type="bibr" target="#b18">[19]</ref> and securely share the private key among them. Each team maintains their service application in the assigned repository. This repository also serves as an interface in which attacks are submitted. Each team should create their own PGP key pair. All the public keys along with the instructor's public key will be shared across the teams. The instructors can run a script to fetch the submitted attacks and evaluate them automatically ( ยง3.3). Note that instructors in Git-based CTF do not have to prepare a separate server to run a CTF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Preparation Phase</head><p>In this step, each team is required to prepare a network service application that binds to a port number specified by the instructor. When the application is running, a client should be able to connect to the service through a network. Each team prepares their own application in one of the following two scenarios.</p><p>Hands-on Development. In this scenario, we follow the same strategy as in the build-it phase of BIB-IFI <ref type="bibr" target="#b24">[25]</ref>. We first provide a specification about the service, and each team develops their own service according to the specification. We also prepare a set of test cases that the service application should pass in order to prove its functionality. With this approach, students have a chance to exercise secure coding practices.</p><p>Importing Open-source Software. Instead of making every team develop the same kind of application, instructors can give freedom to each team to import an arbitrary open-source software of their choice. Note that teams can take a non-network application and convert it to a network service if they want. Also, the instructors may encourage students to investigate the imported source code and check whether their service application is really safe to run. In this scenario, students can learn source code auditing methods and skills.</p><p>When a service application is ready, each team pushes their code to their own GitHub repository. In this phase, each repository is private and only visible to the team members and the instructors. By the end of this phase, the repository should contain a Dockerfile that will automatically install packages required by the application as well as a Makefile that automatically builds the application.  contains a random string generated by the instructors, and copies the flag file into /var/ctf/ directory inside the container. Since the instructors may want to confirm that each repository successfully builds the service application, we provide a simple script <ref type="bibr" target="#b27">[28]</ref> that can automatically check the health of each repository by running a series of commands such as git clone, docker build and make. We note that the applications prepared in this phase may contain unintended vulnerabilities. Such vulnerabilities can exist regardless of whether the students developed the services by themselves, or they imported an open-source software. Although open-source software is likely to have less vulnerabilities than the software developed by the students within a short period, they can still be vulnerable to zero-day attacks. In the rest of the paper, we will refer to such vulnerabilities as unintended vulnerabilities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Injection Phase</head><p>Now that all the teams have prepared an application in their own repository, they inject N distinct vulnerabilities into their service application <ref type="bibr" target="#b0">1</ref> . Here, N is chosen by the instructor depending on the classroom circumstances, e.g., based on the number of students. Each team creates N separate branches in their service repository, and in-troduces a vulnerability per each branch. We will refer to these injected vulnerabilities as intended vulnerabilities, to distinguish them from unintended vulnerabilities that may exist even before the injection.</p><p>After injecting vulnerabilities into the application, each team should create an exploit for each of the vulnerabilities in order to prove their exploitability. An exploit in Git-based CTF is a program that runs in a Docker container, which takes in a target IP address as input, and prints out the content of the flag stored in the service Docker container to the standard output assuming that the target service is running at the given IP address. An exploit as well as the corresponding Dockerfile is signed and encrypted with PGP keys <ref type="bibr" target="#b18">[19]</ref> before they get pushed to the repository. To make the exploit content only visible to the instructors, it should be encrypted with the public key of the instructors. Note that exploits created in this phase can be considered as a solution for each intended vulnerability, and other team members should not be able to access them when the repository becomes public in the next phase.</p><p>Automated Exploit Verification. At this point, we can check the exploitability of each intended vulnerability by simply running the corresponding exploit against the service application. We first launch the vulnerable application within a Docker container with a randomly generated flag.txt file. We then run another Docker container that runs the corresponding exploit, and verify whether it returns a valid flag string, i.e., the random string stored in the flag file. If and only if the exploit is successful, it will show the valid flag string. The same automated technique is used to evaluate submitted attacks ( ยง3.3).</p><p>Contents Creation. In the injection phase, instructors obtain vulnerable services that can be used as a CTF problem for free. Furthermore, attacks against such problems can be automatically checked and evaluated. One potential concern, however, is whether we can obtain a set of challenges that are diverse and interesting enough. According to our experimental study ( ยง4), we found that students tend to inject vulnerabilities based on their skill level. As a result, CTF challenges produced by students were diverse in terms of both vulnerability kinds and difficulty levels.</p><p>Low Barriers to Entry. Since commits in each branch show what changes had made to the original program, it will serve as a useful hint for CTF beginners in the next phase, where players have to analyze and exploit vulnerabilities of the applications. In Git-based CTF, even an unexperienced student can easily spot a vulnerable point of a target program by simply invoking diff. We note that this is one of the key aspect of Git-based CTF because we assume that students can have various different backgrounds, and an attack-and-defense CTF should be playable for them too.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Exercise Phase</head><p>The primary goal of the final phase is to exercise attacks and defenses. Each team analyzes other teams' service applications, finds vulnerabilities, and exploits them. In this phase, we make all the service repositories public so that the participants can access the source code. There are two ways to play the competition: (1) analyzing the commits made in the injection phase and figuring out the intended vulnerabilities, or (2) seeking for unintended vulnerabilities in the service. As we discussed earlier, CTF novices can choose to follow the first way by consulting the commits made for each vulnerable branch to spot vulnerable points.</p><p>When players identify a vulnerability from one of the services run by other teams, they should write an exploit for it. Recall from ยง3.2, an exploit in Git-based CTF is a program that runs in a Docker container that can connect to a victim service running in another Docker container. An exploit should be able to retrieve a flag stored in the container. For exploits in this phase, every player should encrypt their exploits with public keys of both the instructors and the team that maintains the vulnerable service. Players will create GitHub issues in target application's repository to submit their encrypted exploits. We provide each student a simple command-line tool that helps create an issue in a target repository. We also provide instructors a command-line tool for fetching the submitted issues and verifying their exploitability as in the injection phase.</p><p>Defense in Git-based CTF. To defend against attacks from others, each team can fix unintended vulnerabilities in their own service application. Since intended vulnerabilities already have a fix, i.e., the original code, the defense in Git-based CTF should always be about unintended vulnerabilities, but not about intended ones. Whenever an unintended vulnerability is found in a service, the team that owns the application can fix it and push the modification to the master branch of the repository. Every patch can be monitored by other teams because the repository is public. This means if a patch is wrong or incomplete, other teams can attack the same unintended vulnerability again. We also periodically award points to participants who have successfully exploited an unintended vulnerability until it is fixed by the defending team. Therefore, every participant should monitor patches unlike BIBIFI <ref type="bibr" target="#b24">[25]</ref> where each fix should be verified by the instructor.</p><p>Automated Scoring System. Our design of Git-based CTF enables automated scoring. Suppose students have injected k intended vulnerabilities v 1 , v 2 , ยท ยท ยท , v k into a program p, and let p i be a modified version of the program, which has only one intended vulnerability v i . To evaluate an attack against intended vulnerabilities, we run the attack against p 1 , p 2 , ยท ยท ยท , p k as well as the original program p. We then observe in which version the attack returns a valid flag. If the exploit works only on one of the modified programs, we can immediately identify which vulnerability has been attacked by the exploit. If the exploit works only on the original program, we consider it as an attack against an unintended vulnerability. Whenever there is an attack for an unintended vulnerability, we deduct points of the victim for every M minutes, where M is a configurable parameter. This is to encourage students to patch their programs. In order to preserve the interactivity between attackers and defenders, we do not differentiate between two distinct unintended vulnerabilities of the same application unless one of the vulnerabilities is fixed in the master branch. For every attack, i.e., a GitHub issue, we always fetch the latest version committed before the attack, and consider the version of the program as p. This way, participants can experience real-time interactions as both an attacker and a defender as in typical attack-and-defense CTFs.</p><p>We note that Git-based CTF has the characteristics of both jeopardy and attack-and-defense style: it is similar to jeopardy-style CTFs in terms of the attack-only nature of intended vulnerabilities, but it is also an attack-anddefense CTF with respect to unintended vulnerabilities. Scoreboard. Git-based CTF is a fully distributed CTF framework, which does not have a dedicated web server for displaying scores. Instead, students as well as instructors can run our script <ref type="bibr" target="#b27">[28]</ref> to see the current scoreboard. The script fetches the attack log and automatically populates an HTML file that shows a graph representing score over time for each team as in typical CTF events.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation</head><p>We ran a Git-based CTF in 2018 as part of a graduatelevel course in KAIST, Korea <ref type="bibr" target="#b17">[18]</ref>. Most students of the course were information security major who have various different backgrounds including cryptography and mathematics. Among 21 students, 11 of them had no experience in a security competition. We first divided them into 6 teams and asked them to develop a simple secure messaging application in about three weeks. We gave a precise specification that describes the behavior of the messaging application, and we forced them to use either C or C++ in order to increase the chance of having more interesting vulnerabilities. After the first phase, we asked each student to inject at least one vulnerability into their own application. In total, the students introduced 28 vulnerabilities in the 6 distinct applications developed in the previous phase. Although it was a preliminary event, we obtained several meaningful lessons and results from our postmortem analysis. We enumerate them in the rest of this section.</p><p>Diversity of Injected Vulnerabilities. We observed various types of injected vulnerabilities including logic errors and classic memory corruption errors. The most common one was a logic error that involves an incorrect program logic. For example, about a half of the logic errors were due to protocol design flaws. We also saw a variety of memory corruption vulnerabilities such as buffer overflow, buffer overread, use-after-free as well as type-confusion vulnerabilities. <ref type="figure" target="#fig_1">Figure 2</ref> summarizes the result. The result shows that Git-based CTF helps the instructors prepare a diverse set of CTF challenges without the burden of creating contents.</p><p>Difficulty Levels. We further analyzed each of the injected vulnerabilities, and found that there is a meaningful correlation between the experience level of students and the difficulty level of injected vulnerabilities. That is, students tend to inject vulnerabilities based on their skill level. <ref type="figure" target="#fig_2">Figure 3</ref> presents such a correlation. For simplicity, if a student had participated in at least one CTF event, we considered that the student is "experienced". Note that unexperienced students tend to focus on logic errors because they are not comfortable about memory exploitation techniques. Indeed all the cryptographers in the course injected logic errors. However, students who have advanced knowledge about hacking techniques injected more complex vulnerabilities. Four of them injected multiple vulnerabilities, e.g., memory leaks as well as corruption, that should be chained altogether in order to successfully bypass defenses, e.g., ASLR and DEP, and spawn a remote shell. This naturally leads us to have a set of CTF challenges of moderately distributed difficulty levels for the students.</p><p>Unintended Vulnerabilities. The students participated in Git-based CTF found unintended vulnerabilities as well as intended ones. In total, 14 vulnerabilities and 18 functionality bugs were reported during the activity. It turns out that each team had at least one unintended vulnerability. The students fixed 12 bugs in total, and in took about 10 hours on average to fix a bug. The longest time took for fixing a bug was 24 hours. We note that unintended vulnerabilities are found mostly by students who have a strong background on security and hacking. Therefore, we believe it is important to have mixed groups with different levels of experience. Since Gitbased CTF provides an obvious hint for each intended challenges, less experienced students in a team may work on them while more experienced students try to find unintended vulnerabilities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion</head><p>Diverse Challenges. Recall from ยง3.1, teams in Gitbased CTF can prepare their applications either by developing their own, or by importing an existing project.</p><p>In our preliminary study, we only performed the former. We believe by employing the second approach, we may observe more various challenges for a competition. For example, each team may have different kinds of applications, and if some teams prepared a web application, we could have observed web-based attacks such as SQL injection, XSS, and CSRF attacks.</p><p>Unintended Scoring. Recall from ยง3.3, Git-based CTF can automatically identify which intended vulnerability is exploited by an attack. However, suppose an attacker who found an unintended vulnerability crafts an exploit that can identify the version of the target program, and outputs a flag only when a specific version of the program is detected. For example, suppose a program p has one intended vulnerability v 1 , and an attacker crafted an exploit that prints out a flag only when the target program is p 1 . In this case, the attack is considered as a valid exploit for v 1 , and our system will give a point to the attacker even though she did not exploit v 1 . We believe such unintended scoring is not a concern for two reasons. First, exploiting unintended vulnerabilities is more difficult than exploiting intended ones. Therefore, unintended scoring may be considered as extra points for the participants who managed to exploit harder challenges. Second, in Git-based CTF, participants can have only a fixed amount of score for intended vulnerabilities, whereas they can get unlimited score for unintended ones unless they are fixed. Therefore, the amount of score they can obtain from unintended vulnerabilities is much larger than the one from intended vulnerabilities anyways.</p><p>Cheating. Collusion is possible in Git-based CTF as students may want to share their exploit code. However, instructors in Git-based CTF can always download all the exploit code and run a traditional plagiarism detection tool such as MOSS <ref type="bibr" target="#b25">[26]</ref>. This is different from traditional CTFs where the organizers do not possess any exploit code. We leave it as future work to combine existing anti-cheating CTF solutions such as <ref type="bibr" target="#b11">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Related Work</head><p>There have been numerous attempts to improve CTFbased education. This section summarize some of them.</p><p>Addressing Administration Challenge. CTFd <ref type="bibr" target="#b12">[13]</ref> lowers the cost of configuring and running a CTF by providing a ready-made CTF web page, which includes a convenient and customizable administrative panel for organizers as well as a graphical scoreboard. Although CTFd reduces the administration costs of running a CTF, it only supports a jeopardy style CTF. The iCTF framework <ref type="bibr" target="#b31">[32]</ref> provides a customizable attack-and-defensestyle CTF framework. Each team in iCTF has its own Virtual Machine (VM), which must be set up by itself, and the VMs are connected to each other to form a virtual private network. However, configuring and managing the network environment requires significant human effort as well as HW resource. Raj et al. <ref type="bibr" target="#b23">[24]</ref> propose a container-based CTF framework, called InCTF, to reduce the HW burden. Theoretically, InCTF allows an organizer to run a CTF event with a single server without having a complex network setup. The ShellWePlayAGame (SWPAG) framework <ref type="bibr" target="#b29">[30]</ref> further reduces the configuration costs by providing an easy-to-use website. With the SWPAG, one can easily create an environment for a CTF competition in a few clicks. However, because of its interactive characteristics, teachers need to continuously monitor and care about whether the competition is running normally. We note that Git-based CTF inherently does not require any environmental setup and monitoring effort, and it utilizes free-of-charge services such as GitHub <ref type="bibr" target="#b1">[2]</ref> and BitBucket <ref type="bibr" target="#b2">[3]</ref>.</p><p>Security of CTF Platforms. Since CTF platforms themselves can be vulnerable, several studies have attempted to mitigate this concern. In BIBIFI <ref type="bibr" target="#b24">[25]</ref>, the authors wrote their web application in Haskell in order to prevent potential vulnerabilities such as memory corruption, XSS, CSRF, and SQL injection with the help of strong type system of Haskell. NIZKCTF <ref type="bibr" target="#b19">[20]</ref> removes the flags from the scoring server in order to handle this challenge. Specifically, teams in NIZKCTF do not submit a flag, but a non-interactive zero-knowledge proof <ref type="bibr" target="#b5">[6]</ref> to the organizer. Each team has its own unique proof that is public to anyone. Therefore, it is impossible for team A to impersonate team B to submit a flag on behalf of B to harm another team C. The idea is specifically useful in attack-and-defense-style CTFs as attacked teams can have points deducted. We note that Git-based CTF also supports the same level of security against the impersonation attack with PGP <ref type="bibr" target="#b18">[19]</ref>. On the other hand, NIZKCTF suffers from the contents creation challenge as they do not use Git repositories for building and maintaining software. Our approach can naturally help students learn open-source software development process as well as secure coding practice.</p><p>Security of Flags. Burket et al. <ref type="bibr" target="#b7">[8]</ref> present an Automatic Program Generator (APG) where CTF platforms can automatically generate problem instances for a given problem. This way, participants who observe different problem instances cannot share their flags. Similarly, <ref type="bibr">Chothia et al. [12]</ref> propose an offline-style CTF competition where each participant runs a VM locally on their own machine. Each VM has a unique flag, thus it is unlikely for participants to share their flags. Although this is a powerful mitigation against collusion, their approach does not support hosting attack-and-defense-style CTFs. Both the ideas are complementary to our approach, and they can be adapted to Git-based CTF to prevent collusion between students.</p><p>Entry Barrier. There are several approaches considering the entry barrier of CTF competitions. The PicoCTF <ref type="bibr" target="#b10">[11]</ref> is a CTF platform that employs a storybased game making it easier for pre-collegiate students to get interested in computer security. The KYPO cyber range <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b34">35]</ref> is also designed to help encourage novices by dividing a CTF challenge into a sequence of small phases of different difficulty levels. <ref type="bibr">Burns et al. [9]</ref> collect a set of challenges from 160 CTF competitions, and summarizes what kind of security knowledge is required for beginners to solve the challenges. Mirkovic et al. <ref type="bibr" target="#b21">[22]</ref> discuss several lessons learned by organizing CCTF which has participants from various different backgrounds. <ref type="bibr">Backman et al.</ref> [4] present a small-scale attack-and-defense CTF for undergraduate students. Specifically, it keeps the number of teams to be as small as possible while making the duration of each CTF round to be one hour. By giving enough time for each round, it tries to lower the bar for beginners.</p><p>Content Creation Challenge. There are several works on automatically generating CTF challenges and scenarios. SecGen <ref type="bibr" target="#b26">[27]</ref> is a framework that can automatically build a security scenario by randomly selecting sequence of modules, which include CTF challenges, and insecure OS, and so forth. Each module in the scenario corresponds to a sole CTF problem. However, each participant can have a unique experience by combining different problems together. <ref type="bibr">Hulin et al. present</ref> AutoCTF, which uses automatically generated vulnerable programs as CTF challenges. The authors extend the automatic bug injection tool called LAVA, and use it to inject exploitable bugs into a program. However, the types and patterns of the injected vulnerabilities are fixed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper, we present Git-based CTF, a novel attackand-defense CTF platform that can be easily hosted as an in-course activity. We addressed four major challenges that current CTF platforms have, and showed that Gitbased CTF can effectively handle all the addressed challenges. The source code for running Git-based CTF is publicly available at GitHub <ref type="bibr" target="#b27">[28]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Git-based CTF workflow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: The distribution of different kinds of injected vulnerabilities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: The number of students by vulnerability type and level of experience.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 : Comparison between Git-based CTF and other existing CTF frameworks.</head><label>1</label><figDesc></figDesc><table>Framework Name 
C1 
C2 
C3 
C4 

</table></figure>

			<note place="foot" n="1"> For simplicity, we assume here that a single vulnerability is enough to hijack the control flow of the target service. In reality, however, students may inject a series of related vulnerabilities altogether. For instance, an exploit may involve a memory leak vulnerability to bypass ASLR, as well as a buffer overflow vulnerability to initiate a ROP.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgements</head><p>We thank GitHub for providing unlimited free plan for organizing classes. We also thank HyungSeok Han and anonymous reviewers for their constructive feedback. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Git</surname></persName>
		</author>
		<ptr target="https://git-scm.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Github</surname></persName>
		</author>
		<ptr target="https://github.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Atlassian</forename><surname>Bitbucket</surname></persName>
		</author>
		<ptr target="https://bitbucket.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Facilitating a battle between hackers: Computer security outside of the classroom</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Backman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Technical Symposium on Computing Science Education</title>
		<meeting>the ACM Technical Symposium on Computing Science Education</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="603" to="608" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">CyTrONE: An integrated cybersecurity training framework</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beuran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ichi Chinen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shinoda</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Information Systems Security and Privacy</title>
		<meeting>the International Conference on Information Systems Security and Privacy</meeting>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Non-interactive zero-knowledge and its applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Blum</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Micali</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Annual ACM Symposium on Theory of Computing</title>
		<meeting>the Annual ACM Symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="103" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">What hackers learn that the rest of us don&apos;t: Notes on hacker curriculum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bratus</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Security Privacy</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="72" to="75" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Automatic problem generation for capture-theflag competitions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Burket</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chapman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ganas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brumley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Analysis and exercises for engaging beginners in online CTF competitions for security education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Burns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Rios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jordan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Un-Derwood</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Using ctfs for an undergraduate cyber education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlisle</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chiaramonte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Caswell</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">PicoCTF: A game-based computer security competition for high school students</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chapman</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Burket</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brumley</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An offline capture the flagstyle virtual machine and an assessment of its value for cybersecurity education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chothia</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Novakovic</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Lowering the barriers to capture the flag administration and participation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chung</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Hacking competitions and their untapped potential for security education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Conti</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Babbitt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Security Privacy</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="56" to="59" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The fun and future of CTF</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Davis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Leek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Zhivich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gwinnup</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonard</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">LAVA: Large-scale automated vulnerability addition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dolan-Gavitt</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kirda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Leek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mam-Bretti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Whelan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Security and Privacy</title>
		<meeting>the IEEE Symposium on Security and Privacy</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="110" to="121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">AutoCTF: Creating diverse pwnables via automated bug injection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hulin</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sridhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fasano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gal-Lagher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sedlacek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Leek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>And Dolan-Gavitt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Offensive Technologies</title>
		<meeting>the USENIX Workshop on Offensive Technologies</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Information security laboratory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaist</forename></persName>
		</author>
		<ptr target="https://kaist-is521.github.io/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lucas</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">W</forename><surname>Pgp &amp;amp; Gpg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Email for the Practical Paranoid. No Starch Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">NIZKCTF: A non-interactive zero-knowledge capture the flag platform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matias</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barbosa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cardoso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mariano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aranha</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<idno>CoRR abs/1708.05844</idno>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Class capture-the-flag exercises</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mirkovic</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peterson</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Engaging novices in cybersecurity competitions: A vision and lessons learned at ACM Tapia</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mirkovic</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tabor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pusey</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">CyRIS: A cyber range instantiation system for facilitating security training</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pham</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chinen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-I</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beuran</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Information and Communication Technology</title>
		<meeting>the Symposium on Information and Communication Technology</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="251" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Scalable and lightweight CTF infrastructures using application containers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raj</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Alangot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Prabhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Achuthan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Build it, break it, fix it: Contesting secure development</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruef</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hicks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mazurek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mardziel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Conference on Computer and Communications Security</title>
		<meeting>the ACM Conference on Computer and Communications Security</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="690" to="703" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Winnowing: Local algorithms for document fingerprinting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schleimer</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wilkerson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aiken</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGMOD International Conference on Management of Data</title>
		<meeting>the ACM SIGMOD International Conference on Management of Data</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="76" to="85" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Security scenario generator (secgen): A framework for generating randomly vulnerable rich-scenario VMs for learning computer security and hosting CTF events</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Schreuders</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">C</forename><surname>Shaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Shan-A-Khuda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ravichandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Keighley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ordean</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Git-based CTF</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Softsec</forename><surname>Kaist</surname></persName>
		</author>
		<ptr target="https://github.com/SoftSec-KAIST/GitCTF" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">CTF: State-of-the-art and building the next generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taylor</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Arias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Klopchic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Matarazzo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dube</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Shell we play a game? CTF-as-a-service for security education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trickel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Disperati</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Gustafson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kalantari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Mabey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tiwari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Safaei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Doupรฉdoupยดdoupรฉ</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vigna</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Cybersecurity specialization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">University</forename><surname>Of Maryland</surname></persName>
		</author>
		<ptr target="https://www.coursera.org/specializations/cyber-security" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Ten years of iCTF: The good, the bad, and the ugly</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vigna</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Borgolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Corbetta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Doupรฉdoupยดdoupรฉ</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fratantonio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Invernizzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kirat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shoshi-Taishvili</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Summit on Gaming, Games, and Gamification in Security Education</title>
		<meeting>the USENIX Summit on Gaming, Games, and Gamification in Security Education</meeting>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">On the design of security games: From frustrating to engaging learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vykopal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bartยดak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the USENIX Workshop on Advances in Security Education</title>
		<meeting>the USENIX Workshop on Advances in Security Education</meeting>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">KYPO cyber range: Design and use cases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vykopal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Slejลกekslejหslejลกek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Celeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Vizvary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>And Tovaล N ยด Ak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Software Technologies</title>
		<meeting>the International Conference on Software Technologies</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Lessons learned from complex hands-on defence exercises in a cyber range</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vykopal</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vizvยดaryvizvยด Vizvยดary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Oslejsek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Celeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tovarnak</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE</title>
		<meeting>the IEEE</meeting>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">The emergence of github as a collaborative platform for education</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zagalsky</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Feliciano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Storey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-A</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>And</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Conference on Computer Supported Cooperative Work &amp; Social Computing</title>
		<meeting>the ACM Conference on Computer Supported Cooperative Work &amp; Social Computing</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1906" to="1917" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
