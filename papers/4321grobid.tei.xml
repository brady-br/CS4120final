<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /Users/atharsefid/Desktop/grobid-0.5.3/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.3" ident="GROBID" when="2020-09-29T04:13+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Estonian Electronic Identity Card: Security Flaws in Key Management Estonian Electronic Identity Card: Security Flaws in Key Management</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>August 12-14, 2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnis</forename><surname>Parsovs</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnis</forename><surname>Parsovs</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">Software Technology and Applications Competence Center</orgName>
								<address>
									<country key="EE">Estonia</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Tartu</orgName>
								<address>
									<country key="EE">Estonia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Software Technology and Applications Competence Center</orgName>
								<orgName type="institution">University of Tartu</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Estonian Electronic Identity Card: Security Flaws in Key Management Estonian Electronic Identity Card: Security Flaws in Key Management</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 29th USENIX Security Symposium</title>
						<meeting>the 29th USENIX Security Symposium						</meeting>
						<imprint>
							<date type="published">August 12-14, 2020</date>
						</imprint>
					</monogr>
					<note>This paper is included in the Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>The Estonian electronic identity card (ID card) is considered to be one of the most successful deployments of smart card-based national ID card systems in the world. The public-key cryptography and private keys stored on the card enable Estonian ID card holders to access e-services, give legally binding digital signatures and even cast an i-vote in national elections. In this paper, we describe several security flaws found in the ID card manufacturing process. The flaws have been discovered by analyzing public-key certificates that have been collected from the public ID card certificate repository. In particular, we find that in some cases, contrary to the security requirements, the ID card manufacturer has generated private keys outside the chip. In several cases, copies of the same private key have been imported in the ID cards of different cardholders, allowing them to impersonate each other. In addition, as a result of a separate flaw in the manufacturing process, corrupted RSA public key moduli have been included in the certificates, which in one case led to the full recovery of the corresponding private key. This paper describes the discovery process of these findings and the incident response taken by the authorities.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Estonia issues several types of credit card-sized identity documents (hereinafter -ID cards) that contain a smart card chip. The cryptographic functionality embedded in the chip enables secure authentication over the Internet and creation of legally binding digital signatures. The Estonian ID card roll-out started in 2002 and is considered to be one of the most successful in the world in respect to dissemination and active use. From the 1.3 million Estonian residents, 67% have used the ID card electronically at least once in the second half of 2018 <ref type="bibr">[1]</ref>.</p><p>The security of this electronic identity scheme depends on the secrecy of a cardholder's private keys. It is crucial for private keys to be generated in a secure manner and to be accessible only to the corresponding cardholder. In the Estonian ID card scheme, similarly as in many other countries, the key management (key generation, certificate issuance) is delegated to the ID card manufacturer. It is therefore essential to ensure that the manufacturer generates keys of good quality and does not store copies of the generated keys. Unfortunately, there are no effective controls to verify that the manufacturer is trustworthy and handles the key management correctly. The industry response to these concerns has been that manufacturers are in the business of trust and therefore they would never risk their reputation by engaging in sloppy security practices or malicious behavior.</p><p>Our contribution in this work is to show, by example of the Estonian ID card, that this trust model does not always work. We show that the ID card manufacturer has engaged in sloppy security practices, ignoring repeated signs of faults in the key management process, and has intentionally breached the ID card manufacturing contract in some cases creating copies of cardholders' private keys. While these findings have resulted in open litigation against ID card manufacturer Gemalto <ref type="bibr" target="#b1">[2]</ref>, there is no evidence that this loss of trust would have an impact on Gemalto's reputation or its business value and hence would have served as a deterring factor for such misbehavior.</p><p>Our findings are based on the analysis of the ID card publickey certificates collected over the years from the public ID card certificate repository. The findings are presented as three separate studies performed over different periods of time. For each study we present the context and describe the process of how the flaws were identified and handled.</p><p>First, we discovered that several ID card certificates shared the same RSA public keys. After further investigation we found that the affected ID cards also shared the same private keys. The discovery of duplicate private keys suggested that contrary to the security requirements, the ID card manufacturer had generated keys outside of the card. We obtained convincing evidence that most of the ID card keys had been generated in the card, while a specific set of keys produced in the ID card renewal process had been generated outside the card. Our conclusion is that this violation was likely motivated by performance reasons.</p><p>We also found a separate fault in the ID card manufacturing process that resulted in corrupted RSA public key moduli being included in the certificates. In one instance we were able to fully factorize the affected key demonstrating the security impact of the fault. We analyzed the possible causes for the corruption and discussed prevention and detection measures.</p><p>The rest of the paper is organized as follows. Section 2 introduces the Estonian ID card ecosystem and smart card chip platforms used over the years. Section 3 gives an overview of related security flaws the Estonian ID card has experienced. The next three sections describe the main findings of this paper. Finally, Section 7 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Estonian ID card</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Cryptographic functionality</head><p>From its introduction in 2002 until now, the core cryptographic functionality provided by the Estonian ID card has stayed the same. The ID card contains two asymmetric (RSA or ECC) keys with the corresponding X.509 public-key certificates, and symmetric keys to perform card management operations with the card.</p><p>Authentication key. The authentication key is used to log into e-services by providing a signature in the TLS client certificate authentication process <ref type="bibr" target="#b2">[3]</ref>. This key can also be used to decrypt documents encrypted for the cardholder <ref type="bibr" target="#b3">[4]</ref>. Signature and decryption operations with this key have to be authorized using the 4-digit PIN1 code.</p><p>Digital signature key. The digital signature key is used to give legally binding digital signatures that under eIDAS <ref type="bibr" target="#b4">[5]</ref> are recognized as qualified electronic signatures. Each signature operation with the key has to be authorized using the 5-digit PIN2 code.</p><p>Card management operations. The cards are preloaded with symmetric keys that can be used by the manufacturer to perform various card management operations in the postissuance phase. This allows to reset PIN codes in case the cardholder forgets them, generate new keys, write new certificates, and even reinstall the whole smart card applet if needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Parties involved</head><p>ID cards are identity documents issued by the state. The Police and Border Guard Board (Politsei-ja Piirivalveamet -PPA) is the authority responsible for procurement of ID card manufacturing services and the issuance of identity documents.</p><p>From the introduction of ID cards in 2002, the manufacturing and personalization of cards was performed by Trüb Baltic AS. In February 2015, Trüb Baltic AS with their parent company Trüb AG was acquired by Gemalto. As of the end of 2018, the ID cards have been manufactured by Oberthur (now known as IDEMIA).</p><p>The ID card certificates are issued by the privately-owned Estonian Certificate Authority (CA) SK ID Solutions AS (hereinafter -SK). According to eIDAS terminology, SK is a qualified trust service provider issuing qualified certificates. SK is a subcontractor of the card manufacturer.</p><p>The Estonian Information System Authority (Riigi Infosüsteemi Amet -RIA) is the state agency responsible for coordination and development of electronic identity and cyber security. Among other tasks, RIA organizes the development of ID card client-side software.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Chip platforms and document types</head><p>In this section, we chronologically introduce smart card platforms used over the years and the corresponding identity document types. We use the generic term ID card to refer to all identity document types covered. The SIM card-based digital identity card, in a Mobile-ID format, is not covered in this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1">MICARDO</head><p>In 2002, Estonia introduced the identity card, a mandatory identity document for all Estonian residents aged 15 and above. The electronic functionality of the card was implemented on top of smart card operating system MICARDO Public 2.1 <ref type="bibr" target="#b5">[6]</ref>. The smart card interface is documented in the EstEID specification <ref type="bibr" target="#b6">[7]</ref>, which later became a national standard <ref type="bibr" target="#b7">[8]</ref>. MICARDO-powered ID cards were issued from 2002 to 2011 <ref type="figure" target="#fig_0">(Figure 1</ref>). The platform is limited to 1024-bit RSA keys. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">MULTOS</head><p>In October 2010, a digital identity card was introduced. Since this document can only be used electronically, it can be personalized in PPA customer service points and issued instantly. The purpose of the digital identity card is to provide a backup solution in the event the cardholder's identity card cannot be used. The card is powered by MULTOS I4E platform by KeyCorp <ref type="bibr" target="#b9">[10]</ref>. The MULTOS applet has been developed to mimic the MICARDO interface described in the EstEID specification. MULTOS-powered cards were issued until December 2014 ( <ref type="figure" target="#fig_1">Figure 2</ref>). The platform is limited to 1024-bit RSA keys. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">jTOP SLE66</head><p>In 2011, the manufacturing of identity cards switched to a new chip platform implemented on top of Infineon's product JCLX80jTOP20ID masked on a SLE66CX800PE chip <ref type="bibr" target="#b10">[11]</ref> ( <ref type="figure" target="#fig_2">Figure 3</ref>). The card runs jTOP (Java Trusted Open Platform) JavaCard operating system developed by Trusted Logic. The EstEID functionality is implemented in the JavaCard applet. The platform uses 2048-bit RSA keys. With the introduction of the jTOP SLE66 platform, the residence permit card was introduced <ref type="figure">(Figure 4</ref>). This card is issued to non-EU third-country nationals residing in Estonia. The jTOP SLE66-powered ID cards were issued until the end of 2014. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.4">jTOP SLE78</head><p>At the end of 2014, the production of identity cards, residence permit cards and digital identity cards switched to jTOP SLE78 platform. The visual design of identity cards and residence permit cards stayed the same <ref type="figure" target="#fig_2">(Figure 3 and 4)</ref>, however, the visual appearance of digital identity cards became a bit more colorful (see <ref type="figure" target="#fig_3">Figure 5</ref>). The EstEID functionality was implemented in a JavaCard applet on top of Infineon's product SLJ52GCA080CL <ref type="bibr">[12]</ref> masked on the SLE78CLX800P chip <ref type="bibr" target="#b11">[13]</ref> that runs the jTOP JavaCard operating system developed by Trusted Logic. With the switch to jTOP SLE78 platform, the e-resident's digital identity card was introduced ( <ref type="figure" target="#fig_3">Figure 5</ref>). This card is issued through the e-Residency program <ref type="bibr" target="#b12">[14]</ref> to persons who are not residents of Estonia. In the beginning of 2017, the diplomatic identity card was introduced ( <ref type="figure">Figure 6</ref>). This card is issued to persons with diplomatic status. Initially, the jTOP SLE78 platform used 2048-bit RSA keys, but due to the ROCA flaw (see Section 3), at the end of 2017, the switch to ECC keys using curve P-384 was made. The jTOP SLE78-powered ID cards were issued until the end of 2018. ID cards manufactured currently are powered by the chip platform supplied by IDEMIA (not covered in this work).  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Certificate repository</head><p>All valid ID card certificates issued by SK are available in the public LDAP directory ldap://ldap.sk.ee <ref type="bibr" target="#b14">[16]</ref>. The publication of certificates is motivated by the document encryption use case, providing convenient means for senders to obtain public keys of recipients.</p><p>ID card certificates contain the cardholder's full name and personal identification code (personal ID code). The personal ID code is a unique 11-digit number that generally remains fixed for the lifetime of the person and therefore is widely used in public and private databases to identify persons. The validity period of the certificate usually corresponds to the validity period of the identity document in which the corresponding private key resides.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Certificates analyzed in this work</head><p>Over the years, we have collected more than 7 million ID card certificates published in LDAP certificate repository. The certificate search in the repository is restricted to the personal ID code. However, since the search space for all possible personal ID codes is relatively small, over time certificates of all possible personal ID code holders could be crawled. Our certificate dataset is not complete, but we believe that it contains a representative sample of ID card certificates issued throughout the years. <ref type="figure">Figure 7</ref> shows the distribution of ID card certificates in our dataset by issuance month (based on the certificate's notBefore field 1 ) for different ID card platforms. The corresponding platforms have been determined by the certificate fields and properties of the public keys. Due to the crawling process, the dataset lacks certificates issued from 2002 to 2007 and certificates which have been valid for a short period of time. Therefore, in general, our findings provide only a lower bound for the number of affected certificates.</p><p>We also collected certificate revocation information accumulated in publicly available CRLs <ref type="bibr" target="#b15">[17]</ref>. The information in <ref type="bibr">1</ref> The notBefore field represents the time at which the certificate starts to be valid and usually corresponds to the time when the certificate was issued.</p><p>CRLs can be used to deduce the time when the cardholder visited the document issuer to receive their new ID card and the old one was revoked. This information and also some other peculiarities of the ecosystem allowed us to deduce many important insights for this study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related work</head><p>Over the 17 years of the Estonian ID card history, several ID card-related security flaws have been publicly disclosed.</p><p>More than 700 000 ID cards powered by the jTOP SLE78 platform were affected by Infineon's RSA key generation flaw (the ROCA flaw) <ref type="bibr" target="#b16">[18]</ref>. The vulnerability in Infineon's proprietary RSA key generation algorithm allowed the factoring of 2048-bit RSA key in only 140.8 CPU-years. The discovery of this flaw in 2017 started the so-called Estonian ID card crisis, which was mitigated by switching to the ECC algorithm implemented by the platform and revoking vulnerable RSA certificates <ref type="bibr" target="#b17">[19]</ref>.</p><p>Publicly less noticed was a flaw in the jTOP SLE66 ID cards issued in 2011. Due to a publicly undisclosed flaw in EstEID JavaCard applet developed by the ID card manufacturer, 120 000 ID cards issued in 2011 were recalled <ref type="bibr" target="#b18">[20]</ref>. While the authorities claimed that the card is secure and all transactions made with the card are fully reliable <ref type="bibr" target="#b18">[20]</ref>, later after the ROCA flaw broke out, it was disclosed in the media that the flaw in the 2011 ID cards was exploitable by having access to the card <ref type="bibr" target="#b19">[21]</ref>. The context indicates that this may have been a type of PIN bypass flaw.</p><p>In 2002, it was discovered that PIN codes were printed in too dark, allowing for them to be seen through the PIN envelope <ref type="bibr" target="#b20">[22]</ref>. Ironically, the same flaw in PIN envelopes was reintroduced by IDEMIA in 2018 after taking over the manufacturing of ID cards <ref type="bibr" target="#b21">[23]</ref>.</p><p>There have been incidents of including duplicate email addresses in certificates <ref type="bibr" target="#b22">[24]</ref>, issuing certificates with incorrectly encoded public keys <ref type="bibr" target="#b23">[25]</ref>, failing to revoke certificates of deceased persons <ref type="bibr" target="#b24">[26]</ref> and others. Detailed analysis of these and other flaws related to the Estonian ID card are covered in <ref type="bibr" target="#b17">[19]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Certificates with duplicate RSA public keys</head><p>In spring 2013, we discovered several certificate pairs in our dataset containing the same RSA public key. In most cases the public keys were shared between the authentication and digital signature certificates of the same ID card, however, in two occasions the same public key was shared between two different cardholders. The occurrence of such a fault could only have happened through a deep violation of the production processes, since each key pair is required to be unique even for the keys on the same ID card.</p><p>The set of 10 identified certificate pairs containing duplicate public key is listed in <ref type="table">Table 1</ref>. All certificates have been issued for jTOP SLE66-powered ID cards. For each pair, the certificate issuance times have just a few seconds difference, indicating that the certificates were issued in parallel or close to each other. In most of the cases, the duplicate public keys were the result of the ID card renewal process, performed in the PPA customer service points, to replace the vulnerable applet for ID cards issued in 2011 (see Section 3). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Possible cause and impact</head><p>One explanation for these duplicate keys could be a poor source of randomness used in the on-card key generation process. However, we would expect such a failure to manifest randomly, independently of the time when the key is generated, since the ID card chip has no built-in time source that could be, for example, used to seed a pseudo-random number generator. Since the keys for the affected ID cards have been generated within an interval of a few seconds, this hypothesis can be safely rejected. The close timing of the certificate issuance suggests that due to some software bug (such as race condition) a wrong public key was included in the certificate, i.e., the same public key was sent as a part of certificate signing request twice. This, however, would result in at least one of the certificates from the pair not being usable electronically, as the actual private key residing on the ID card would not correspond to the public key included in the certificate.</p><p>In the cases where the same public key is shared between the digital signature and authentication certificates of the same ID card, the risk is that the knowledge of only one PIN (PIN1 or PIN2 depending on which slot contains the corresponding private key) allows the card to be used for both purposes.</p><p>A more serious risk occurs in the two cases where the same public key is shared between different cardholders. For example, in case of pair 1, depending on whose ID card contains the corresponding private key, either Toivo can sign on behalf of Ülle, or Ülle can use her digital signature key to authenticate electronically as Toivo and decrypt files encrypted for Toivo (these use cases, however, would require the modification of the software).</p><p>It could not be excluded that the ID cards actually do contain duplicate private keys. However, if this was the case, the only credible explanation would be that contrary to the security requirements, the manufacturer had generated the keys outside the card and due to a flaw in the personalization process the same key was imported in two different ID cards/key slots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Proof that ID cards share the same keys</head><p>Since we had a suspicion that private keys might be generated outside the ID card, we decided to investigate the shared public keys of the digital signature certificate of Ülle and authentication certificate of Toivo (pair 1).</p><p>In summer 2013, we were able to get in contact with Toivo, who informed us that his ID card was renewed in a PPA customer service point in Viljandi. He provided us cryptographic proof that both private keys in his ID card correspond to the public keys specified in the certificates. To demonstrate that Toivo's authentication private key can be successfully used to forge a digital signature of Ülle, with the assistance from Toivo 2 , we created a proof-of-concept digital signature container in the name of Ülle (see <ref type="figure" target="#fig_5">Figure 8</ref>).</p><p>We did not manage to get in contact with Ülle to obtain a similar cryptographic proof from her ID card. In October 2014, we learned that the manufacturer had discovered the incident, since Toivo was invited to replace his ID card with a new one issued under warranty. The certificates of Ülle's ID card, however, remained valid. In spring 2015, we obtained confirmation from an Estonian service provider that Ülle had used the ID card for both authentication and signing in the e-service of the service provider. While this convinced us that her ID card contained the same private key, we still hoped to obtain cryptographic proof of that. In summer 2016, we managed to get in contact with Ülle's daughter who informed us that her mother used the card daily to sign banking transactions online, however, attempts to get in touch with Ülle herself did not succeed. Later we learned that her ID card was renewed in a PPA customer service point in Tallinn. The ability to successfully use both certificates involved in the duplicate certificate pair shows that the affected ID cards/key slots do share the same private keys that were apparently imported due to an error (e.g., race condition) in the ID card renewal process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Incident response</head><p>In October 2014, at the latest, the manufacturer learned of the anomaly of duplicate keys. On 2014-10-09 a new ID card was produced for Toivo and on 2014-10-10 Toivo received an invitation from PPA to replace his ID card with a new one under warranty. The email stated that the ID card renewal on 2012-11-06 was unsuccessful and the card could not be used electronically (which actually was not true). For other cardholders the replacement cards were issued on 2014-10-09, 2014-12-22 and 2015-01-06 (the last column in <ref type="table">Table 1</ref>). For unknown reasons the duplicate keys on the ID card of Sandra (pair 3) were missed, as for her the replacement ID card was not issued. Apparently, the cause of the flaw was not fully fixed and detection mechanisms were not implemented. As a result, a similar fault occured later again with the ID card of Siim (pair 10).</p><p>It is crucial to note that the incident was not handled as a security issue. The affected certificates were not revoked until the cardholders visited a PPA customer service point to receive the replacement card. Ülle was able to use her ID card until shortly before its expiration where it was then replaced. Liis informed us that the invitation from PPA did not reach her, therefore she kept using her ID card until its expiration.</p><p>In a meeting on 2017-02-06, we informed RIA about the case of Toivo and Ülle and the most likely explanation of keys being generated outside the ID card. At that time, we did not exclude the possibility that RIA and PPA may be well aware of the true reasons behind the flaw.</p><p>When approached by the authorities, the manufacturer responded that this was the old case already investigated in 2014 and that the mistake only occured with public keys. At the end of 2017, RIA ordered a follow-up study to determine whether any further evidence of key generation outside the ID card could be found <ref type="bibr" target="#b25">[27]</ref>. Using statistical methods, strong evidence was found, that in the renewal process in PPA customer service points the keys were generated outside the ID card (see Section 5).</p><p>As we see in <ref type="table">Table 1</ref>, the certificates with duplicate public keys were also found in 3 pairs of initially issued ID cards. These cases could be the result of a separate personalization fault where the cards actually do not contain duplicate keys. We urged RIA and PPA to investigate this, by using the database of OCSP certificate validity responses maintained by SK, to see whether the relying parties had requested validity confirmation of the involved certificates. From this it would be possible to infer whether the ID cards had been used successfully hence containing the keys specified in the certificates. We are not aware if this has been investigated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Private keys generated outside the ID card</head><p>At the end of 2013, in the context of Snowden revelations, an opinion piece was published in Estonia <ref type="bibr" target="#b26">[28]</ref> expressing concerns about authorities having copies of ID card private keys. The authorities rebutted the concerns <ref type="bibr" target="#b27">[29]</ref>, claiming that the recording of private keys is ruled out by the technological scheme used, i.e., the keys are generated inside the chip and the ID card is designed so that the private key itself never leaves the card.</p><p>Indeed, the security requirement of ID card key generation inside the chip has already been present in the ID card concept <ref type="bibr" target="#b28">[30]</ref>, has been documented in the EstEID technical specification (Section 4.1.5 in <ref type="bibr" target="#b6">[7]</ref>), has been specified in SK certification policy according to which the CA is audited (Section 6.1.2 in <ref type="bibr" target="#b29">[31]</ref>), and has also been present in the ID card manufacturing contract between the manufacturer and the state.</p><p>The rationale behind this requirement is that key generation inside the chip provides higher security. It is easier to ensure that copies are not created, rather than to make sure that all the copies have been irreversibly destroyed to eliminate potential misuse. For example, the Mobile-ID technology comes with extra risks, since it is documented that the keys for Mobile-ID are generated outside the chip (Section 6.1.1.3 in <ref type="bibr" target="#b30">[32]</ref>).</p><p>In this section we describe our efforts to establish the true origins of the ID card private keys on each ID card platform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Finding the evidence</head><p>In 2016, Svenda et al. in their paper "The Million-Key Question -Investigating the Origins of RSA Public Keys" <ref type="bibr" target="#b31">[33]</ref> described a method which can be used to infer from the RSA public key modulus some details about the algorithm used to generate the key. In particular, it was found that the most significant byte (MSB) of modulus N allows to establish the range from which primes p and q were selected. This range turned out to be different for different implementations of the RSA key generation algorithm. We used this and other techniques to verify whether the properties in the RSA keys from the ID card certificates match the properties of the key generation algorithm implemented by the ID card platform. To obtain reference keys, we generated and exported thousands of keys from each ID card platform (when it was possible), simultaneously measuring the time taken by the on-card key generation process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">MICARDO</head><p>We found a configuration flaw in all MICARDO-powered ID cards that allowed us to perform card management operations with PIN2, without knowing the manufacturer's symmetric card management keys <ref type="bibr" target="#b17">[19]</ref>. We used this to generate and export over a million 1024-bit RSA key pairs generated by the platform.</p><p>The MICARDO platform does not allow setting the value of the public exponent e. For each key the platform chooses a random public exponent e, either 2, 3 or 4 bytes in length, depending on the configuration. This peculiarity is visible in the certificates -for all, more than one million MICARDOpowered ID card certificates in our dataset, the public exponent value is random, no single value being over-represented.  As we see in <ref type="figure" target="#fig_7">Figure 9</ref>, the distribution of the MSB of N from the keys generated by the MICARDO platform closely matches the keys from MICARDO-powered ID card certificates. Since the distribution of the MSB of N from the keys generated by MICARDO platform shows a unique pattern not observed in keys generated by any known software library (see <ref type="figure" target="#fig_0">Figure 12</ref> in <ref type="bibr" target="#b31">[33]</ref>), we can conclude that the keys in MICARDO-powered ID cards have been generated by the platform. We note, however, that our dataset does not have enough certificates issued in the period from 2002 to 2007 to draw definite conclusions about the keys generated in this period.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">MULTOS</head><p>We did not have access to a non-personalized MULTOS platform, therefore we could not generate reference keys. In our dataset we have 29 262 certificates issued for MULTOSpowered ID cards. <ref type="figure" target="#fig_0">Figure 10</ref> shows the distribution of the MSB values of these keys. The public keys have a random 4-byte public exponent, mimicking the non-standard behavior of MICARDO.</p><p>We cannot make conclusions about the origins of these keys. However, we see that these keys have not been generated by OpenSSL (non-FIPS), since moduli are not always congruent to 1 modulo 3 (see Section 4.2 in <ref type="bibr" target="#b31">[33]</ref>). To export a million keys generated by jTOP SLE66 platform, we used blank jTOP SLE66 JavaCards. Since RSA key generation is implemented on the level of the JavaCard platform, access to the manufacturer's proprietary EstEID JavaCard applet was not required. We observed that this CC certified <ref type="bibr">[34]</ref> JavaCard platform has a functional bug. When asked to generate a 2048-bit RSA key, in 38% of the cases a 2047-bit key is returned. This is close to the theoretical ratio of 38.6294% when p and q are chosen uniformly from the distribution of 1024-bit primes. In order to generate an RSA modulus of required length, usually either the rejection sampling method is used to regenerate primes until their product is of the required length, or the primes are sampled making sure that k-bit prime is larger than √ 2 · 2 k−1 (see Section 3.2 in <ref type="bibr" target="#b31">[33]</ref>). The distribution of the MSB of N from the keys generated by jTOP SLE66 platform is shown in <ref type="figure" target="#fig_0">Figure 11</ref>. The jTOP SLE66-powered ID cards were issued from 2011 until the end of 2014. All the certificates for initially issued ID cards contain public keys with random 4-byte public exponents, mimicking the non-standard behavior of MICARDO. JavaCard specification requires implementations to support arbitrary public exponent values for at least up to 4 bytes in length. We verified that jTOP SLE66 platform accepts and is able to generate RSA key pairs with any odd value e up to 4 bytes in length, therefore the keys from the certificates could have been generated by the platform.</p><p>We see that for ID cards issued in 2014 the distribution of the MSB matches the distribution as generated by the platform <ref type="figure" target="#fig_0">(Figure 12b)</ref>. However, the ID cards issued before 2014 are missing the 2047-bit RSA keys (the MSB values smaller than 128) <ref type="figure" target="#fig_0">(Figure 12a</ref>). The exceptions are 3 cardholders who have been issued a certificate with a 2047-bit key in October 2013. These are two employees of SK and a person related to the manufacturer. We hypothesize that these cards were issued to test the changes in the manufacturing process before going into production. Since the generation of 2047-bit RSA keys is an anomaly peculiar only to the jTOP SLE66 platform, we can conclude that for the ID cards issued in 2014 the keys have been generated by the platform.</p><p>By analyzing the time difference between the notBefore fields of the authentication and digital signature certificates, we found convincing evidence that both the keys for the ID cards issued before 2014 and for the ID cards issued in 2014 have been generated by the platform (see Section 5.2).</p><p>Apparently, the ID card manufacturing process before 2014 rejected 2047-bit keys to ensure that the certificates contained standards-compliant 2048-bit keys. Such a rejection of 2047-bit keys increased the key generation time by a factor of 1.63, hence increasing the average time of key generation (in case of random e) from 87 to 141 seconds. The slower key generation time may have been the cause for ending the practice of 2047-bit key rejection in 2014.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.4">jTOP SLE66 (PPA renewal)</head><p>To fix the flaw in 2011 ID cards (see Section 3), the ID card manufacturer introduced the ID card renewal procedure which can be performed in the PPA customer service points. In the renewal process the old EstEID JavaCard applet was removed and a new applet with new keys and certificates was installed. The renewal was reused later in 2015 to fix an incident with duplicate email addresses specified in the certificates and in 2016 to fix certificates with incorrectly encoded public keys (see Section 3). The renewal of jTOP SLE66-powered ID cards was terminated on 2017-07-01. In total, more than 74 000 jTOP SLE66-powered ID cards were renewed in PPA customer service points.</p><p>In contrast to initially issued ID cards, the keys renewed in PPA customer service points have public exponent e set to 65537. These keys show an MSB distribution that is completely different from the keys generated by jTOP SLE66 platform (see <ref type="figure" target="#fig_0">Figure 13)</ref>. Such a distribution is the result of setting the two most significant bits of p and q to 11 2 (see Section 3.2.2 in <ref type="bibr" target="#b31">[33]</ref>). In theory, the EstEID applet version installed in the PPA customer service points could have regenerated the keys until the two most significant bits of p and q were 11 2 . This, however, would have increased the key generation time by a factor of 4, increasing the average time of key generation (in case of e = 65537) from 33 to 132 seconds. We see no legitimate explanation why this would be done, hence we conclude that these keys were generated outside the smart card. This was likely done to increase the key generation speed and hence the throughput of the PPA renewal service. In fact, the authorities could verify this by looking at the average time that was required to renew jTOP SLE66-powered ID card in PPA customer service point.</p><p>According to <ref type="table">Table 7</ref> in <ref type="bibr" target="#b31">[33]</ref>, there are several software libraries which generate keys by setting the two most significant bits of p and q to 11 2 . These are: Botan 1.11.29, cryptlib 3.4.3, GPG Libgcrypt 1.6.5, LibTomCrypt 1.17, Nettle 3.2, OpenSSL FIPS 2.0.12, PGP SDK 4 and WolfSSL 3.9.0. OpenSSL 1.0.2g is excluded as the moduli generated by OpenSSL (non-FIPS) are always congruent to 1 modulo 3, which is not the case for the moduli observed in the certificates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.5">jTOP SLE78</head><p>Since the jTOP SLE78 platform was affected by the ROCA flaw (Section 3), it is possible to use the method published in <ref type="bibr" target="#b16">[18]</ref> to verify whether the certificates issued for jTOP SLE78-powered ID cards contain keys affected by the ROCA flaw. The method has no false negatives, and the rate of false positives for 2048-bit RSA key is negligible <ref type="figure" target="#fig_0">(1 in 2 713 )</ref>.</p><p>Verification showed that the RSA keys have indeed been generated by the platform. This includes all keys -initially issued, remotely renewed and the keys renewed in PPA customer service points. There were, however, 23 keys that did not have the structure of the vulnerable keys. The possible causes for these anomalous keys are analyzed in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Inferring key generation time from certificate issuance time</head><p>While modern computers are able to generate 2048-bit RSA keys in less than a second, RSA key generation in smart card chips requires tens of seconds on average. Since the time spent for key generation can be used to deduce whether the keys have been generated by the slow on-card key generation process, we decided to investigate whether the time spent to generate the keys can be observed from the timing of the certificate issuance. During the ID card personalization process, if the certificate signing request is submitted to the CA right after the particular (authentication or digital signature) key pair is generated, the time difference between the notBefore field of the first and the second ID card certificate will include the time spent on the generation of the second key pair. On the other hand, if in the personalization process the certificate signing requests are submitted together after both key pairs have been generated, the difference in the notBefore dates of the certificates will not include the key generation time. To our knowledge this is the first work proposing the use of certificate validity dates as a side-channel to infer key generation time.</p><p>We grouped the certificates into pairs belonging to the same ID card if they were issued to the same cardholder in a 24-hour window for the same type of identity document, and looked at the distribution of time differences in notBefore validity date.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">MICARDO</head><p>For all initially issued MICARDO certificates the time part of the notBefore validity date in the certificates is set to '00:00:00'. For certificates issued in the certificate renewal process, the notBefore field contains different values which seem to correspond to the actual time when the certificates were issued by the CA. The generation of a 1024-bit RSA key on MICARDO platform takes around 15 seconds on average. However, the average time difference between certificate issuance in each month is below 4 seconds. This is, however, expected as certificates are issued after both key pairs have been generated in the MICARDO certificate renewal process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">MULTOS</head><p>All certificates for MULTOS-powered ID cards have different values in the notBefore field, which likely correspond to the time the certificates were issued. However, the time difference between certificate issuance is a few seconds at best. This is expected because the MULTOS platform was used solely for digital identity cards, which are distributed to PPA customer service points with the keys pre-generated (see Section 6.1.2.1 in <ref type="bibr" target="#b33">[35]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">jTOP SLE66 (initially issued)</head><p>For the jTOP SLE66-powered ID cards issued up to 2011-07-09 the time part of the notBefore validity date in the certificates is set to '00:00:00'. However, starting from 2011-07-11, the notBefore date contains different time values which seem to correspond to the time the certificates were issued.</p><p>The ID cards with a certificate issuance time difference larger than 2 hours were excluded from the analysis. There were less than 0.32% of such ID cards in each month. These cases are possibly the result of an interrupted card personalization process that was completed at a later time.</p><p>The distributions of time differences between issuance of the first and the second certificate grouped by month are shown in <ref type="figure" target="#fig_0">Figure 14a</ref> (the outliers in the box plots cover &lt; 5% and &gt; 95% percentiles). Before 2011-10-06, the time difference between certificate issuance is minimal with the authentication certificate being the first issued certificate close to half of the time. Starting from 2011-10-06, the authentication certificate is the first issued certificate at least 99.88% of the time and the average time difference between the certificate issuance increases significantly.</p><p>We see that the distribution of time differences very closely matches the key generation time distribution of the jTOP SLE66 on-card key generation. That is, the distributions observed from November 2011 to January 2014 match the distribution of the RSA on-card key generation when a random public exponent e is used and the key is regenerated when the produced modulus is 2047 bits long (average time 141 seconds). The distributions observed from January 2014 in turn match the distribution of the RSA on-card key generation when a random public exponent e is used, but no rejection sampling method is applied (average time 87 seconds).</p><p>The timing observed supports the hypothesis that the keys on the ID cards issued before 2014 and in 2014 have been generated by the jTOP SLE66 platform. The small time differences observed before 2011-10-06 do not allow us to make definitive conclusions about the origins of these keys, however, as the properties of these keys match the properties of keys issued after 2011-10-06, we are inclined to conclude that these keys have also been generated by the platform. In Section 5.1.4 we already found that the keys for jTOP SLE66-powered ID cards renewed in PPA were not generated by the card. However, to not disregard any possible counterevidence, we also looked at the timing between the authentication and digital signature certificate issuance also for these ID cards (see <ref type="figure" target="#fig_0">Figure 14b</ref>). We see that the time difference between the issuance of the first and the second certificate varies only slightly. We see that in 2013-02, 2015-08 and 2016-07, some changes were introduced in the PPA renewal process which caused a change in the certificate issuance time differences. Since the time difference is not close to zero and the authentication certificate is the first issued certificate 99.79% of the time, we tend to conclude that the time differences observed include the time spent on key generation and import, and possibly certificate loading in the ID card.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>USENIX Association 29th USENIX Security Symposium 1793 2 0 1 1 -0 7 2 0 1 1 -0 8 2 0 1 1 -0 9 2 0 1 1 -1 0 2 0 1 1 -1 1 2 0 1 1 -1 2 2 0 1 2 -0 1 2 0 1 2 -0 2 2 0 1 2 -0 3 2 0 1 2 -0 4 2 0 1 2 -0 5 2 0 1 2 -0 6 2 0 1 2 -0 7 2 0 1 2 -0 8 2 0 1 2 -0 9 2 0 1 2 -1 0 2 0 1 2 -1 1 2 0 1 2 -1 2 2 0 1 3 -0 1 2 0 1 3 -0 2 2 0 1 3 -0 3 2 0 1 3 -0 4 2 0 1 3 -0 5 2 0 1 3 -0 6 2 0 1 3 -0 7 2 0 1 3 -0 8 2 0 1 3 -0 9 2 0 1 3 -1 0 2 0 1 3 -1 1 2 0 1 3 -</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.5">jTOP SLE78</head><p>The timing between the authentication and digital signature certificate issuance for jTOP SLE78-powered ID cards is shown in <ref type="figure" target="#fig_0">Figure 14c</ref>. The digital identity card certificates were excluded from the analysis. We see that the timing of certificate issuance matches the distribution of key generation time by jTOP SLE78 platform when e = 65537 (average time 13 seconds). This confirms the findings of Section 5.1.5. The average time below 13 seconds, starting from 2016-06, is explained by the introduction of remote ID card renewal on 2016-06-22. In the remote renewal process the certificates are issued after both key pairs have been generated by the card.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Discussion</head><p>The illicit practice of key importing in jTOP SLE66-powered ID card renewals could not have been accident. The EstEID applet had to be specially programmed to implement such a key import functionality. The fact that the ID card manufacturer was able to use this forbidden feature without it being discovered for years, leads us to the corollary that in an analogous manner the manufacturer could have used the key export feature, retrieving the private keys after they were generated by the chip. It is not clear to what extent the strict industry rules could have been violated.</p><p>Large scale abuse of signature keys would be hard to keep secret, while abuse of decryption keys would not. We hope that the intent of the manufacturer was not malicious, and this illicit practice was motivated only by the need to increase the throughput of the PPA renewal service.</p><p>It is not clear whether the manufacturer initially understood that generating keys with a random public exponent increases the average key generation time from 33 to 87 seconds (see <ref type="figure" target="#fig_0">Figure 15</ref> for distribution). The increase is due to the candidate primes p and q having a larger probability of not being suitable, since a randomly selected public exponent e is likely to have small prime divisors. The rejection of 2047-bit RSA keys increased the average key generation time even more -to 141 seconds. The generation of both ID card key pairs alone, would have extended the renewal process by approximately five minutes on average, and, in worst-case scenarios, even more time as shown in <ref type="figure" target="#fig_0">Figure 15b</ref>.</p><p>For the jTOP SLE78-powered ID cards the worthless practice of using a random public exponent was ended. The average time of 13 seconds (see <ref type="figure" target="#fig_0">Figure 16</ref> for distribution) was deemed to be acceptable in the initial key generation process as well as for ID card renewal in PPA customer service points. Later, the switch to ECC using curve P-384 decreased the on-card key generation time to 0.37 seconds on average.</p><p>The fact that the same key was imported in two different ID cards renewed in different PPA customer service points suggests that the keys were generated in the manufacturer's backend and imported in the ID card over the Internet. Even if the keys were sent over an end-to-end encrypted channel, the logs and the symmetric card management keys could be used by the manufacturer to recover imported private keys.</p><p>The manufacturer's unauthorized modification of the EstEID applet also has far-reaching implications on the validity of digital signatures made with the affected platform. Since this modified version of the EstEID applet never passed the secure-signature-creation device (SSCD) conformity assessment as required by the eSignature Directive 1999/93/EC <ref type="bibr" target="#b34">[36]</ref>, this ID card platform never had the SSCD status, which is the legal prerequisite for a digital signature to have handwritten signature status. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Incident response</head><p>After receiving our analysis, the authorities decided to recall the jTOP SLE66-powered ID cards renewed in PPA customer service points. From more than 74 000 renewed ID cards, only 12 500 were still valid.</p><p>On 2018-05-17, PPA went public announcing that 12 500 ID cards did not meet the security requirements, because their private keys had been generated outside the chip. These cards would be replaced under warranty and on 2018-06-01 the affected certificates would be revoked. <ref type="bibr" target="#b35">[37]</ref> On the same day, the affected cardholders received email notification to apply for the replacement. The cardholders had to respond, specifying the PPA customer service point where they would collect the new card. As a replacement, the cardholders received jTOP SLE78-powered ID cards with the same expiration date as the original. The replacement card, however, was not issued if the original expiration date was in less than three months. <ref type="bibr" target="#b35">[37,</ref><ref type="bibr" target="#b36">38]</ref> On 2018-06-01, the certificates of 11 100 non-replaced ID cards were revoked, with 3 300 cardholders waiting to receive the replacement card <ref type="bibr" target="#b37">[39]</ref>. The legal basis for certificate revocation was the EITSETA act <ref type="bibr" target="#b38">[40]</ref>, clause 19 <ref type="formula">(4) 2)</ref>: "a possibility of using the private key corresponding to a public key contained in the certificate without the consent of the certificate holder" <ref type="bibr" target="#b39">[41]</ref>.</p><p>We note that even if the authorities had not considered this to be a security issue, there was a non-compliance issue, and hence the certificates could also have been revoked based on the EITSETA act clause 19 (4) 12): "appearance of an error in the certificate or in the data entered in the certificate", as the certificates had not been issued in accordance with the CA's certificate policy referenced in the certificate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Claim against the manufacturer</head><p>According to PPA, in the internal audit it was found that the state had not asked and was not aware that Gemalto was generating keys outside the card <ref type="bibr" target="#b39">[41]</ref>. After receiving our initial analysis, PPA submitted a claim to Gemalto. A response from Gemalto denying violation, however, was only received the night before the announcement for the ID card recall <ref type="bibr" target="#b40">[42]</ref>.</p><p>On 2018-05-18, the day after PPA's announcement, Gemalto announced that PPA's statements were a surprise, and that it had fulfilled the ID card contract and the obligations agreed therein <ref type="bibr" target="#b40">[42]</ref>. The state was then put in an unfortunate situation. It was evident that the ID card manufacturer could not be trusted, but contractually they had to produce ID cards until the end of 2018, when the new manufacturer IDEMIA would take over.</p><p>On 2018-09-26, after failing to reach an agreement, PPA brought Gemalto to court demanding a contractual penalty in the amount of 152 million EUR for generating keys outside the chip <ref type="bibr" target="#b1">[2]</ref>. This claim, however, has to be viewed in context with other ongoing litigations with Gemalto -the PPA's claim of 300 000 EUR from Gemalto for their failure to inform the state about the ROCA flaw <ref type="bibr" target="#b41">[43]</ref> and Gemalto's appeal about the results of ID card procurement <ref type="bibr" target="#b42">[44]</ref>. The court decisions on these cases are yet to be seen.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Certificates with corrupted RSA public keys</head><p>In 2012, Heninger et al. <ref type="bibr" target="#b43">[45]</ref> published an efficient method for testing RSA public keys for shared prime factors. This method was used to find that 103 RSA keys from Taiwan's Citizen Digital Certificates share prime factors <ref type="bibr" target="#b44">[46]</ref>. We used the same method to test the RSA public keys from Estonian ID card certificates for shared prime factors and found several small common factors (e.g., 3, 5, 7) in the output of pairwise GCD computation. By using trial division with small primes we found 14 certificates whose public key moduli could be divided by one or several small factors. Since the public key modulus of 2048-bit RSA is generated by multiplying two distinct random 1024-bit primes, the public key moduli included in the certificates evidently had been corrupted. This corruption seemed to only affect the jTOP SLE78 platform, as all the certificates with the corrupted moduli had been issued for ID cards powered by the jTOP SLE78 platform.</p><p>We used the software utility YAFU <ref type="bibr" target="#b45">[47]</ref> with the GMP-ECM implementation of the elliptic curve method (ECM) to test all RSA keys in our dataset for small factors. The keys were tested up to t-level 3 t20. This, however, did not find any additional corrupted keys. Two of the corrupted keys had an obvious anomaly -the length of the modulus was 2040 bits. We found one more anomalous 2040-bit modulus in our dataset and by applying more ECM testing to it (about t40) we were able to find a 132-bit prime factor. Later, when Nemec et al. <ref type="bibr" target="#b16">[18]</ref> published a method to detect moduli generated by the vulnerable Infineon's key generation algorithm, we were able to identify 8 more presumably corrupted moduli. These were discovered when we observed that these certificates, which according to the certificate revocation date, had been revoked due to the ROCA flaw and hence had been issued for jTOP SLE78-powered ID cards, did not have the structure of ROCA keys. The full set of 23 identified certificates is listed in <ref type="table">Table 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Full factorization</head><p>The issuance of ID card certificates with corrupted public key moduli means that the cardholders of these ID cards will not be able to use the cryptographic functionality, since the private key that resides in their ID card does not correspond to the public key in the certificate. The corruption of the public key, however, also has critical security consequences. By recovering all the prime factors from the corrupted modulus, it is possible to calculate the corresponding private exponent and perform private key operations with the key. If the modulus has 2048 bits, we can expect to factorize the corrupted modulus efficiently with a probability of 12 -22% for an arbitrary corruption <ref type="bibr" target="#b46">[48]</ref>. <ref type="table">Table 2</ref>: Corrupted public keys from jTOP SLE78-powered ID card certificates. N: modulus length in bits. Work: amount of work done to factorize modulus. N-res: residual length of modulus after known factors removed. Factors: number of factors found and length of minimal / maximal factor found.</p><p>We were able to fully factorize one of these corrupted public keys -the key issued in digital signature certificate to Svetlana B. The modulus consisted of 7 factors (9-bit, 15-bit, 21-bit, 39-bit, 53-bit, 153-bit and 1762-bit). The probabilistic YAFU ECM factorization process took 60 hours (work t40.80) on a Core i5-6260U@1.8GHz CPU using 2 cores. We calculated the private exponent d in the RSA multi-prime setting and, as a proof-of-concept, successfully forged a digital signature on an empty file. The digital signature, as expected, passed validation by the state-provided digital signature verification software (see <ref type="figure" target="#fig_0">Figure 17</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Incident response</head><p>We informed RIA about the corrupted public keys and the successful factorization of Svetlana's key in the meeting on 2017-02-06. At that time, 8 out of 15 initially identified certificates were already revoked, possibly because the cardholders found that the cryptographic functionality did not work and applied for a new card.</p><p>On 2017-02-22, the certificates of Svetlana's ID card were suspended. In the meantime, RIA performed computations using their resources to verify our findings and to identify more corrupted keys in the full certificate database.</p><p>Only on 2017-06-09, the certificates of affected ID cards (including those of Svetlana) were revoked and PPA, under warranty, issued the cardholders new ID cards. Since the defect in the chip could not be excluded, the replacement ID card was also issued to Lennart, who on 2016-07-01, in a PPA customer service point, had already successfully renewed his keys using the renewal procedure intended for replacement of certificates with incorrectly encoded public keys.</p><p>Since the source of the corruption was not known, as a measure, trial division with small primes was implemented to discover corrupted moduli in the ID card production process. Unfortunately, as the corrupted key of Raja shows, the smallest factor of the corrupted key can be quite large and hence cannot be discovered by this method.</p><p>The risk was finally mitigated on 2017-11-03, when all RSA keys of jTOP SLE78-powered ID cards were revoked due to the discovery of the ROCA flaw, and manufacturing of jTOP SLE78-powered ID cards switched to ECC keys. A similar corruption cannot also be excluded for ECC keys, however, we have verified that all ECC keys in our dataset have EC points that are on the curve, and a random corruption resulting in the EC point that is on the curve will not provide advantage in deriving the corresponding private key.</p><p>It is important to note that the anomaly of 2040-bit RSA moduli had already been discovered by the manufacturer in August 2015, as new ID cards, with the expiration date of the original cards, were produced for 2 out of the 3 cardholders (Raja and Svetlana S.) on 2015-08-24 and 2015-09-04. For unknown reasons the case of Raisa was missed by the manufacturer. For her, the replacement ID card was only issued on 2017-06-09 after we informed the authorities of the corrupted public keys.</p><p>In 2015 the case was not handled as a security issue, since the certificates containing the corrupted keys were revoked only after the cardholders visited PPA to obtain the replacement card. This is yet another example of a serious anomaly in the ID card production process being mitigated by simply issuing a replacement ID card, without finding the root cause and without analyzing its scale and security impact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Cause of data corruption</head><p>After Nemec et al. <ref type="bibr" target="#b16">[18]</ref> published a method to detect moduli vulnerable to the ROCA attack, we tried to recover the corrupted moduli by modifying the modulus until the ROCA key detection test returned a positive result. We were able to successfully recover the corruption for 13 keys. We found that in the case of 2040-bit RSA moduli, the byte 0x81 (10000001 2 ) was missing in different positions for each modulus. In the case of 2048-bit RSA moduli, the byte 0x80 (10000000 2 ) in different positions for each modulus, was replaced with byte 0x00 (00000000 2 ). We did an exhaustive search modifying up to 4 bits in any bit position and modifying up to 3 bytes in any byte position, but were not able to recover corruption for any additional keys.</p><p>The corruption of the public key could have occured at any point up to its inclusion in the certificate. The corruption could have also occured due to a fault in the chip, for example, the chip failing to generate or correctly store the generated key under some specific operational conditions (such as temperature or voltage). We note, however, that these security chips are claimed to implement a set of measures to detect and prevent corruption even when the chip is under hostile environmental conditions <ref type="bibr" target="#b47">[49]</ref>.</p><p>We contacted Lennart, the owner of the affected ID card, who then shared a screenshot he had sent to the ID card customer support on 2016-01-15, showing a Mozilla Firefox 43.0.4 error message "Peer reports failure of signature verification or key exchange (SSL_ERROR_DECRYPT_ERROR_ALERT)" that appeared after trying to perform TLS client certificate authentication to a server. This error means that the ID card was able to produce a signature, but the server failed to verify the signature using the corrupted public key from the authentication certificate.</p><p>The signature was likely created using a valid private key, since the private key operations in CRT form do not use the modulus, but p and q. Had p or q been corrupted, the modulus (which is the product of p and q) would be more severely corrupted than a single bit change as we found above. The existence of valid RSA private keys on these cards does not exclude the possibility that the corruption of the modulus occured while the modulus was being read or written in the memory. The lost byte in the 2040-bit moduli case, however, is difficult to explain by memory corruption inside the chip.</p><p>In summer 2018, we contacted Infineon to ask whether they had heard of similar incidents with the product, and if not, would they completely rule out the possibility that the corruption could have ocurred due to a fault in the chip. To cite Infineon: "We are not aware of any process within our system (neither software nor hardware) that could result in such a change." <ref type="bibr" target="#b48">[50]</ref>.</p><p>Without any additional evidence available, we put forward the hypothesis that the corruption occured in the manufacturer's personalization line during the communication between the card and the reader. The lost byte in the case of 2040-bit moduli could be explained by retransmission failure of an incorrectly received byte in the APDU transmission over byte-oriented T=0 protocol. For 4 out of the 13 moduli, for which the corruption was recovered, we see that the 254th byte (the second most significant byte) of the moduli had been corrupted. In case of T=0 protocol, this would correspond to the second character transmitted after the procedure byte, assuming that a 256-byte modulus was returned by the chip in a single APDU response. Since the manufacturer's personalization line uses special-purpose hardware, such faults cannot be ruled out.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Prevention and detection measures</head><p>In traditional PKI deployments, the risk of including a corrupted public key in the certificate is mitigated by employing the PKCS#10 <ref type="bibr" target="#b49">[51]</ref> standard that requires the certificate signing request (CSR) to be signed using the corresponding private key. In this case, the CA considered this requirement un-necessary, relying on publicly undocumented organizational measures, which the manufacturer is required to implement to ensure the manufacturer's possession of the corresponding private key (Section 3.2.1.1 in <ref type="bibr" target="#b30">[32]</ref>). As we now see, these unknown organizational measures, in practice, proved to be insufficient to provide the assurance a signed CSR would have provided.</p><p>Regardless of whether the moduli were corrupted inside the chip or in the transmission from the chip, the lesson here is that even for personalization performed in a trusted environment, the integrity of critical APDU data should be protected by transmitting it over a MAC-protected secure channel. Had this been the case, the source of the corruption would have been located with cryptographic precision.</p><p>To avoid this and other personalization faults where a wrong certificate or a certificate with an incorrect public key is loaded into the card, the card should perform an internal signverify sanity check to verify that the public key in the loaded certificate corresponds to the private key the card stores.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Valid RSA moduli from unknown source</head><p>We put forward the hypothesis that the 4 certificates issued for the ID cards of Vladislav and Pirgit, actually do contain valid RSA keys, but these keys have not been generated by the corresponding ID cards.</p><p>We base this hypothesis on the fact that contrary to all other certificates from <ref type="table">Table 2</ref>, these certificates have been issued in the certificate renewal process in a PPA customer service point and not in the initial ID card personalization process. We see that 3 of these keys have MSBs of modulus that are not in the range 144-168 generated by jTOP SLE78 platform, but all 4 are in the range 144-255, which corresponds to the range for RSA keys generated by the manufacturer outside the ID card (Section 5.1.4).</p><p>It seems that due to some unknown failure, for these ID cards, the manufacturer's backend performed the renewal process assuming that they are powered by the jTOP SLE66 platform. The keys were generated and corresponding certificates were activated without detecting that the renewal process (including the key import) was not successful. Without any other evidence available, we will only be able to prove or disprove this hypothesis once factorization of these moduli becomes feasible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Discussion and conclusions</head><p>All the issues, except for the manufacturer's decision to breach the security requirements by generating keys outside the ID card, could have been avoided by improved security engineering practices. While the flaws of duplicate public keys and corrupted public keys were discovered by the manufacturer, they were not sufficiently investigated and led to repeated incidents.</p><p>In the context of eIDAS, key management is the responsibility of the CA. The fact that the manufacturer's malpractice was not discovered in the internal and external audits of the CA shows the limited level of assurance these audits provide.</p><p>Compliance violations are also frequent issues among web browser CAs <ref type="bibr" target="#b50">[52]</ref>. The browser vendors, however, require CAs to publish detailed reports of discovered violations thereby forcing CAs to investigate the incidents and improve their practices <ref type="bibr" target="#b51">[53,</ref><ref type="bibr" target="#b52">54]</ref>. In the event CAs show lack of trustworthiness, they can be distrusted by the browsers <ref type="bibr" target="#b53">[55]</ref>.</p><p>Similarly, the EU member states are required to establish supervisory bodies exercising state supervision over trust service providers' compliance to the requirements of eIDAS. In the case of the Estonian ID card, applying coercive measures might be hindered by the fact that the ID card manufacturer (and hence the CA) is the government's contractual partner on which the state is dependent until at least the 5-year ID card manufacturing contract expires. Nevertheless, the findings of this work show that the state cannot rely on the security guarantees provided in the ID card manufacturing contract and instead should seek effective means of oversight, either through public policy or the terms of ID card manufacturing contract.</p><p>Overall, the findings of this paper provide yet another example (see <ref type="bibr" target="#b16">[18,</ref><ref type="bibr" target="#b44">46]</ref> for others) that it is not sustainable to blindly trust the security of the manufacturing process. From the technical perspective, we suggest looking for fault-tolerant designs, for example, those involving threshold cryptography <ref type="bibr" target="#b54">[56]</ref><ref type="bibr" target="#b55">[57]</ref><ref type="bibr" target="#b56">[58]</ref>. These designs should seek to provide effective means to prevent accidental failures and ensure that intentional malice would require higher conspiracy from the manufacturer and hence increase the risk of detection and attribution.</p><p>Unfortunately, we have not seen fundamental changes in the organization and execution of the Estonian ID card manufacturing process, therefore incidents like these, in one form or another, are destined to happen again. We hope, however, that the public knowledge of these incidents have changed the perception of the ID card as being infallible. This should now allow the construction of better security systems and legal rules which are able to deal with potential security failures of the ID card.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: MICARDO-powered identity card issued from 2002-01-01 to 2010-12-31 [9]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: MULTOS-powered digital identity card issued from 2010-10-01 to 2014-11-30 [9]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: jTOP SLE66/SLE78-powered identity card issued from 2011-01-01 [9]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: jTOP SLE78-powered digital identity card and eresident's digital identity card issued from 2014-12-01 [9]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Figure 6: jTOP SLE78-powered diplomatic identity card issued from 2017 [15]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :</head><label>8</label><figDesc>Figure 8: Digital signature of Ülle forged using the authentication key of Toivo</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>(a) From the keys generated by the platform</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Figure 9: MICARDO: distribution of the MSB of N</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Figure 10: Distribution of the MSB of N from the MULTOSpowered ID card certificates</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 :</head><label>11</label><figDesc>Figure 11: Distribution of the MSB of N for keys generated by jTOP SLE66 platform</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: Distribution of the MSB of N from initially issued jTOP SLE66-powered ID cards</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 13 :</head><label>13</label><figDesc>Figure 13: Distribution of the MSB of N from jTOP SLE66-powered ID cards renewed in PPA customer service points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 14 :</head><label>14</label><figDesc>Figure 14: Certificate issuance time differences for certificates from the same ID card (by month)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 15 :Figure 16 :</head><label>1516</label><figDesc>Figure 15: jTOP SLE66: time distribution of 2048-bit RSA key generation (CRT form)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 17 :</head><label>17</label><figDesc>Figure 17: Digital signature forged using factorized key of Svetlana B.</figDesc></figure>

			<note place="foot" n="2"> Toivo was informed about the proof-of-concept signature forgery experiment, but not the nature of the flaw being exploited.</note>

			<note place="foot" n="3"> T-level is the terminology used to express how much ECM testing the number has received. For instance, the work of t20 implies that the probability of a 20-digit factor being missed by ECM is about exp(−1) = 37%.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We thank Arne Ansper for the idea to use ROCA vulnerable moduli detection tests to recover the corrupted public keys, Alex Halderman for the initial ID card certificate dataset (December 2012), owners of the affected ID cards who provided information and participated in the experiments, and those persons who provided comments and feedback for this paper. This research was supported by the European Regional Development Fund through the Estonian Centre of Excellence in ICT Research under grant number EU48684.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">11 auth Liis PPA renewal 2016-05-06 expired 2014-12-22 2013-04-15 09:16:28 sign 10 2014-10-08 12:01:16 auth Siim initial 2019-10-07 2017-10-03 not issued 2014-10-08 12:04:31 sign No Date of cert issuance Cardholder (cert type) N Work N-res Factors (min / max) Date of revocation Corruption of N 1 2014-12-30 08:41:14 Toomas (auth)</title>
		<idno>2-bit / 124-bit) 2017-06-09 14:54:41 128th byte changed 20 2017-06-16 14:13:04 Vladislav (auth) 2048 t45.76 2048 0 2017-11-03 23:59:59 MSB as a minimum 21 2017-06-16 14:13:26 Vladislav (sign) 2048 t45.99 2048 0 2017-11-03 23:59:59 ? 22 2017-06-16 16:28:30 Pirgit (auth) 2048 t45.86 2048 0 2017-11-03 23:59:59 MSB as a minimum 23 2017-06-16 16:28:55</idno>
	</analytic>
	<monogr>
		<title level="m">Imre (sign) 2048 t54.86 1757</title>
		<imprint>
			<date type="published" when="1937" />
			<biblScope unit="volume">16</biblScope>
		</imprint>
	</monogr>
	<note>Erki (sign) 2048 t54. Pirgit (sign) 2048 t45.73 2048 0 2017-11-03 23:59:59 MSB as a minimum References [1] Estonian Information System Authority. ID card usage statistics inferred from queries to OCSP service</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Police claim 152 million from ID card producer Gemalto</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Err</forename><surname>News</surname></persName>
		</author>
		<ptr target="https://news.err.ee/864523/police-claim-152-million-from-id-card-producer-gemalto" />
		<imprint>
			<date type="published" when="2018-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Practical Issues with TLS Client Certificate Authentication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnis</forename><surname>Parsovs</surname></persName>
		</author>
		<idno type="doi">10.14722/ndss.2014.23036</idno>
		<ptr target="http://dx.doi.org/10.14722/ndss.2014.23036" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Network and Distributed System Security Symposium (NDSS)</title>
		<meeting>the Network and Distributed System Security Symposium (NDSS)<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2014-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">I&apos;ve received encrypted document, how can I decrypt it?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Id Help Centre</surname></persName>
		</author>
		<ptr target="https://www.id.ee/index.php?id=38893" />
		<imprint>
			<date type="published" when="2018-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Regulation 910/2014 on electronic identification and trust services for electronic transactions in the internal market and repealing Directive 1999/93/EC</title>
		<idno>uriserv:OJ.L_.2014.257.01.0073.01.ENG</idno>
		<ptr target="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
	<note>The European Parliament and the Council of the European Union</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">MICARDO Public Chip Card Operating System Version 2.1 User Manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gmbh</forename><surname>Orga Kartensysteme</surname></persName>
		</author>
		<ptr target="https://cybersec.ee/storage/mic21_druck.pdf" />
		<imprint>
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">EstEID card specification v2.01 (in Estonian)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Id Süsteemide</surname></persName>
		</author>
		<ptr target="http://www.id.ee/public/EstEID_Spetsifikatsioon_v2.01.pdf" />
		<imprint>
			<date type="published" when="2002-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Security chip -Application and interface</title>
		<ptr target="https://www.evs.ee/products/evs-827-2004" />
	</analytic>
	<monogr>
		<title level="j">Estonian Centre for Standardisation. EVS</title>
		<imprint>
			<biblScope unit="volume">827</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Document descriptions issued by Police and Border Guard Board</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Estonian</forename><surname>Police</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Border Guard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Board</surname></persName>
		</author>
		<ptr target="https://www2.politsei.ee/en/nouanded/dokumentide-naidised/" />
		<imprint>
			<date type="published" when="2017-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Implementation Reports: Multos International I4E</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Multos</forename><surname>Multos</surname></persName>
		</author>
		<ptr target="https://www.multos.com/products/approved_platforms/MIR/multos_international/i4e" />
		<imprint>
			<date type="published" when="2017-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Java Card TM platform for government ID projects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Infineon</surname></persName>
		</author>
		<ptr target="https://www.infineon.com/dgdl/Infineon-jTOP_ID_on_SLE78-PB-v04_17-EN.pdf?fileId=5546d4624cb7f111014d4d1cfb004279" />
	</analytic>
	<monogr>
		<title level="m">Product Brief: JCLX80JTOP20ID: Java Card TM Open Platform for Identification</title>
		<imprint>
			<date type="published" when="2008-04" />
			<biblScope unit="volume">78</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">SLE 78CLX800P: Dual-interface and contactless security cryptocontroller</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Infineon</surname></persName>
		</author>
		<ptr target="https://cybersec.ee/storage/SPO_SLE%2078CLX800P_2012-07.pdf" />
		<imprint>
			<date type="published" when="2012-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Republic Of Estonia</surname></persName>
		</author>
		<ptr target="https://e-resident.gov.ee/" />
		<imprint>
			<date type="published" when="2019-05" />
		</imprint>
	</monogr>
	<note>e-Residency</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Update of model cards issued by the Ministries of Foreign Affairs of Member States to accredited members of diplomatic missions and consular representations and members of their families</title>
		<idno>uriserv:OJ.C_.2017.279.01.0005.01.ENG</idno>
		<ptr target="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=" />
		<imprint>
			<date type="published" when="2017-08" />
		</imprint>
		<respStmt>
			<orgName>Official Journal of the European Union</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">LDAP directory service</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Id Solutions</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename></persName>
		</author>
		<ptr target="https://www.sk.ee/en/repository/ldap/" />
		<imprint>
			<date type="published" when="2019-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<ptr target="https://www.sk.ee/en/repository/CRL/" />
	</analytic>
	<monogr>
		<title level="j">SK ID Solutions AS. Certificate Revocation Lists</title>
		<imprint>
			<date type="published" when="2019-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The Return of Coppersmith&apos;s Attack: Practical Factorization of Widely Used RSA Moduli</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matus</forename><surname>Nemec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marek</forename><surname>Sys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Petr</forename><surname>Svenda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dusan</forename><surname>Klinec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vashek</forename><surname>Matyas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, CCS &apos;17</title>
		<meeting>the 2017 ACM SIGSAC Conference on Computer and Communications Security, CCS &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1631" to="1648" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Estonian Electronic Identity Card and its Security Challenges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnis</forename><surname>Parsovs</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020" />
		</imprint>
		<respStmt>
			<orgName>University of Tartu</orgName>
		</respStmt>
	</monogr>
<note type="report_type">PhD thesis</note>
	<note>to be completed</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">The Police and Border Guard Board is renewing ID-Cards issued in 2011</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Border Guard</forename><surname>Police</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Board</surname></persName>
		</author>
		<ptr target="http://www.id.ee/index.php?id=35927" />
		<imprint>
			<date type="published" when="2012-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Estonia&apos;s largest PR operation: Saving the ID card</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Delfi</surname></persName>
		</author>
		<ptr target="https://ekspress.delfi.ee/kuum/eesti-suurim-pr-operatsioon-id-kaardi-paastmine?id=79478038" />
		<imprint>
			<date type="published" when="2017-09" />
		</imprint>
	</monogr>
	<note>in Estonian</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Security hole found in ID-card</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Delfi</surname></persName>
		</author>
		<ptr target="http://epl.delfi.ee/news/eesti/id-kaardis-leiti-turvaauk?id=50922213" />
		<imprint>
			<date type="published" when="2002-05" />
		</imprint>
	</monogr>
	<note>in Estonian</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">New ID card issue: Codes can be read using torch, without opening envelope</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Err</forename><surname>News</surname></persName>
		</author>
		<ptr target="https://news.err.ee/886313/new-id-card-issue-codes-can-be-read-using-torch-without-opening-envelope" />
		<imprint>
			<date type="published" when="2018-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Eesti.ee email addresses of four thousand documents must be renewed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Border Guard</forename><surname>Police</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Board</surname></persName>
		</author>
		<ptr target="https://sk.ee/uudised/neljal-tuhandel-dokumendil-tuleb-uuendada-eestiee-meiliaadressi" />
		<imprint>
			<date type="published" when="2015-09" />
		</imprint>
	</monogr>
	<note>in Estonian</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
				<ptr target="https://news.err.ee/116849/250-000-estonian-id-cards-could-be-faulty" />
		<title level="m">ERR News. 250,000 Estonian ID cards could be faulty</title>
		<imprint>
			<date type="published" when="2015-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">The police discovered 15,000 faulty ID cards, over 300 have been used</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Geenius</surname></persName>
		</author>
		<ptr target="https://digi.geenius.ee/rubriik/uudis/politsei-avastas-15-000-veaga-id-kaarti-ule-300-on-kasutatud/" />
		<imprint>
			<date type="published" when="2019-06" />
		</imprint>
	</monogr>
	<note>in Estonian</note>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">New ID-card fault could have been intentional</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Postimees</surname></persName>
		</author>
		<ptr target="https://news.postimees.ee/4491312/new-id-card-fault-could-have-been-intentional" />
		<imprint>
			<date type="published" when="2018-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">The Flaw in the Estonian ID Card</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Voogd</forename><surname>Otto De</surname></persName>
		</author>
		<ptr target="https://news.err.ee/108556/the-flaw-in-the-estonian-id-card" />
		<imprint>
			<date type="published" when="2013-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Rebuttal: Estonian ID Card Secure, Says Rep</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Agu</forename><surname>Kivimägi</surname></persName>
		</author>
		<ptr target="https://news.err.ee/108797/rebuttal-estonian-id-card-secure-says-rep" />
		<imprint>
			<date type="published" when="2013-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<ptr target="https://www.id.ee/public/The_Estonian_ID_Card_and_Digital_Signature_Concept.pdf" />
	</analytic>
	<monogr>
		<title level="j">AS Sertifitseerimiskeskus. The Estonian ID Card and Digital Signature Concept: Principles and Solutions</title>
		<imprint>
			<date type="published" when="2003-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title/>
		<idno>Version 5.0</idno>
		<ptr target="https://sk.ee/upload/files/SK-CP-ESTEID-20160125v5_0_en.pdf" />
	</analytic>
	<monogr>
		<title level="j">AS Sertifitseerimiskeskus. ESTEID Card Certification Policy</title>
		<imprint>
			<date type="published" when="2016-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">ESTEID-SK Certification Practice Statement, Version 1.0, November</title>
		<ptr target="https://sk.ee/upload/files/SK-CPS-ESTEID-EN-v1_0_20161101.pdf" />
	</analytic>
	<monogr>
		<title level="j">AS Sertifitseerimiskeskus</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The Million-Key Question -Investigating the Origins of RSA Public Keys</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Petr</forename><surname>Svenda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matus</forename><surname>Nemec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Sekan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rudolf</forename><surname>Kvasnovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Formanek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Komarek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vashek</forename><surname>Matyas</surname></persName>
		</author>
		<idno>FIMU-RS-2016-03</idno>
		<ptr target="https://crocs.fi.muni.cz/_media/public/papers/usenixsec16_1mrsakeys_trfimu_201603.pdf" />
	</analytic>
	<monogr>
		<title level="m">FI MU Report Series</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1" to="83" />
		</imprint>
		<respStmt>
			<orgName>Masaryk University ; National Cybersecurity Agency of France (ANSSI</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anssi-Cc-</forename></persName>
		</author>
		<ptr target="https://www.ssi.gouv.fr/certification_cc/carte-a-puce-jclx80jtop20id-java-trusted-open-platform-ifxv42-avec-patch-en-version-2-0-masquee-sur-composants-sle66clx800pe-et-sle66clx360pe/" />
		<title level="m">CC Certified Product: JCLX80jTOP20ID : Java Trusted Open Platform IFX#v42, with patch version 2.0, emedded on SLE66CLX800PE or SLE66CLX360PE</title>
		<imprint>
			<date type="published" when="2009-10" />
			<biblScope unit="volume">34</biblScope>
		</imprint>
	</monogr>
	<note>in French</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title/>
		<ptr target="https://sk.ee/upload/files/SK-CP-ESTEID-20120901v3_3_en.pdf" />
	</analytic>
	<monogr>
		<title level="j">AS Sertifitseerimiskeskus. ESTEID Card Certification Policy</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2012-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">The European Parliament and the Council of the European Union. Directive 1999/93/EC of the European Parliament and of the Council of 13 December 1999 on a Community framework for electronic signatures</title>
		<ptr target="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=celex:31999L0093" />
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Estonian Information System Authority. The Police and Border Guard Board will replace nearly 12,500 ID-cards which do not meet the security requirements</title>
		<ptr target="https://www.ria.ee/en/news/police-and-border-guard-board-will-replace-nearly-12500-id-cards-which-do-not-meet-security.html" />
		<imprint>
			<date type="published" when="2018-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">Email notification from id@politsei.ee: Important information for ID card user</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Border Guard</forename><surname>Police</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Board</surname></persName>
		</author>
		<ptr target="https://cybersec.ee/storage/20180517_PPA_notification.txt" />
		<imprint>
			<date type="published" when="2018-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Estonia cancels security certificates of 11,100 electronic ID-cards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Postimees</surname></persName>
		</author>
		<ptr target="https://news.postimees.ee/4498133/estonia-cancels-security-certificates-of-11-100-electronic-id-cards" />
		<imprint>
			<date type="published" when="2018-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Electronic Identification and Trust Services for Electronic Transactions Act -RT I, 25.10.2016, 1. English translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Riigi</forename><surname>Teataja</surname></persName>
		</author>
		<ptr target="https://www.riigiteataja.ee/en/eli/ee/527102016001" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">FAQ: ID cards not corresponding to security requirements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Border Guard</forename><surname>Police</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Board</surname></persName>
		</author>
		<ptr target="http://web.archive.org/web/20180517170408/https://www.id.ee/?id=38558" />
	</analytic>
	<monogr>
		<title level="m">Estonian)</title>
		<imprint>
			<date type="published" when="2018-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Gemalto denies breach of contract (in Estonian)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Postimees</surname></persName>
		</author>
		<ptr target="https://tehnika.postimees.ee/4490902/gemalto-eitab-lepingu-rikkumist" />
		<imprint>
			<date type="published" when="2018-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">PPA seeking EUR 300,000 from Gemalto</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Err</forename><surname>News</surname></persName>
		</author>
		<ptr target="https://news.err.ee/874973/ppa-seeking-300-000-from-gemalto" />
		<imprint>
			<date type="published" when="2018-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<title level="m" type="main">Gemalto and PPA are carrying tens of millions after the war</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Postimees</surname></persName>
		</author>
		<ptr target="https://tehnika.postimees.ee/4432811/gemalto-ja-eesti-politsei-veavad-kumnete-miljonite-parast-vagikaigast" />
		<imprint>
			<date type="published" when="2018-03" />
		</imprint>
	</monogr>
	<note>in Estonian</note>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nadia</forename><surname>Heninger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zakir</forename><surname>Durumeric</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Wustrow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Alex</forename><surname>Halderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Presented as part of the 21st USENIX Security Symposium (USENIX Security 12)</title>
		<meeting><address><addrLine>Bellevue, WA</addrLine></address></meeting>
		<imprint>
			<publisher>USENIX</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="205" to="220" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Factoring RSA Keys from Certified Smart Cards: Coppersmith in the Wild</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yun-An</forename><surname>Bernstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chen-Mou</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li-Ping</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nadia</forename><surname>Chou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tanja</forename><surname>Heninger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicko</forename><surname>Lange</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Someren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -ASI-ACRYPT 2013</title>
		<meeting><address><addrLine>Berlin, Heidelberg; Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="341" to="360" />
		</imprint>
	</monogr>
	<note>Kazue Sako and Palash Sarkar</note>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Buhrow</surname></persName>
		</author>
		<ptr target="http://yafu.sourceforge.net/" />
		<title level="m">Yet Another Factorization Utility (YAFU)</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Flip Feng Shui: Hammering a Needle in the Software Stack</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kaveh</forename><surname>Razavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Gras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erik</forename><surname>Bosman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bart</forename><surname>Preneel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cristiano</forename><surname>Giuffrida</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Bos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">25th USENIX Security Symposium (USENIX Security 16)</title>
		<meeting><address><addrLine>Austin, TX</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2016-08" />
			<biblScope unit="page" from="1" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
				<ptr target="https://www.commoncriteriaportal.org/files/epfiles/0829b_pdf.pdf" />
		<title level="m">Infineon Technologies AG. Security Target M7820 A11 and M11 including optional Software Libraries RSA -EC -SHA-2 -Toolbox</title>
		<imprint>
			<date type="published" when="2012-08" />
		</imprint>
	</monogr>
	<note>Version 1.6</note>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Infineon Technologies AG. Personal communication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wieland</forename><surname>Fischer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">PKCS #10: Certification Request Syntax Specification Version 1.7. RFC 2986 (Proposed Standard)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nystrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kaliski</surname></persName>
		</author>
		<ptr target="http://www.ietf.org/rfc/rfc2986.txt" />
		<imprint>
			<date type="published" when="2000-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<monogr>
		<title level="m" type="main">A Complete Study of P.K.I. (PKI&apos;s Known Incidents)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicolas</forename><surname>Serrano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hilda</forename><surname>Hadan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">Jean</forename><surname>Camp</surname></persName>
		</author>
		<idno type="doi">10.2139/ssrn.3425554</idno>
		<ptr target="http://dx.doi.org/10.2139/ssrn.3425554" />
		<imprint>
			<date type="published" when="2019-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<monogr>
		<title level="m" type="main">Responding To An Incident</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mozilla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ca</surname></persName>
		</author>
		<ptr target="https://wiki.mozilla.org/CA/Responding_To_An_Incident" />
		<imprint>
			<date type="published" when="2019-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<title level="m" type="main">Root Certificate Policy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chromium</surname></persName>
		</author>
		<ptr target="https://www.chromium.org/Home/chromium-security/root-ca-policy" />
		<imprint>
			<date type="published" when="2019-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<monogr>
		<title level="m" type="main">Distrust of Symantec TLS Certificates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mozilla</surname></persName>
		</author>
		<ptr target="https://blog.mozilla.org/security/2018/03/12/distrust-symantec-tls-certificates/" />
		<imprint>
			<date type="published" when="2018-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">A Touch of Evil: High-Assurance Cryptographic Hardware from Untrusted Components</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vasilios</forename><surname>Mavroudis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Cerulli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Petr</forename><surname>Svenda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><surname>Cvrcek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dusan</forename><surname>Klinec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Danezis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">24th ACM Conference on Computer and Communications Security (CCS&apos;2017)</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1583" to="1600" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Server-Supported RSA Signatures for Mobile Devices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ahto</forename><surname>Buldas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aivo</forename><surname>Kalu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peeter</forename><surname>Laud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mart</forename><surname>Oruaas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Security -ESORICS 2017</title>
		<editor>Simon N. Foley, Dieter Gollmann, and Einar Snekkenes</editor>
		<meeting><address><addrLine>Cham</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="315" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<monogr>
		<title level="m" type="main">Identity Card Key Generation in the Malicious Card Issuer Model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arnis</forename><surname>Parsovs</surname></persName>
		</author>
		<ptr target="https://courses.cs.ut.ee/MTAT.07.022/2014_" />
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
